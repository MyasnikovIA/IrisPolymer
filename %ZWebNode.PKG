<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="%ZWebNode.Lib.Polymer.Components">
<Description><![CDATA[
Подключение компонентов на CSP странице
<script type="module" src="/%ZWebNode.Lib.Polymer.Components.cls"></script>]]></Description>
<Super>%CSP.Page</Super>
<TimeCreated>65261,67950.105854</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {    if $L(Code)>0 { x " w """", "_Code}    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":template"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""    continue:FragOnPageInd=1  q:FragOnPageInd=@gl     d ..ExecFrag(@gl@(FragOnPageInd),"#(",")#")     w $c(13,10)  }
   q ""
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
  ; s %response.CharSet="CP1251"
  ; s %response.CharSet="UTF-8"
  Do %response.SetHeader("Content-Type","application/javascript")   
  q 1
]]></Implementation>
</Method>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    /// Вычитываем тело POST запроса
	if $isobject(%request.Content){
 	   d ..ExecPostQuery() 
	   q 1
	}
    d ..CreatePolymerComponents()
    Quit $$$OK
]]></Implementation>
</Method>

<Method name="ReplaceFragVar">
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End="",AddCode="",ClassName=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
      q:SrcCode="" ""   q:Beg="" SrcCode     q:End="" SrcCode
      if $l(SrcCode,Beg)=1   q SrcCode
      s ResultText=""
      s html=SrcCode
      for {
          s HtmlFrag=$e(SrcCode,1,$l($p(SrcCode,Beg,1)) ) 
          s ResultText=ResultText_HtmlFrag
          s SrcCode=$e(SrcCode,$l(HtmlFrag)+1+$l(Beg),$l(SrcCode) ) 
          s CodeFrag=$e(SrcCode,1, $l($p(SrcCode,End,1)) ) 
          s SrcCode=$e(SrcCode,$l(CodeFrag)+1+$l(End),$l(SrcCode) ) 
          if $l(CodeFrag)>0{
	         s ResultText=ResultText_..ParseServerFun(CodeFrag,AddCode,ClassName) 
          }
        q:SrcCode=""
      }
      q ResultText
]]></Implementation>
</Method>

<Method name="ParseServerFun">
<Description>
Заменить содержимое #server( )# или #call( )#  на JS  функцию</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>CodeFrag="",JsFunName="cspHttpServerMethod",ClassName=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s res=""
	S funName=$p(CodeFrag,"(",1)
    s args=$e(CodeFrag,$l(funName)+2,$l(CodeFrag)-1)
    if $d(%session){
	   if $e(funName,1,2)="..",$l(ClassName)>0 {
 		  s funName=ClassName_$e(funName,2,$l(funName))
 	   }
       s funName=$$$cspEncode(%session.Key,$zu(5)_":"_funName) 
    }             
    if $l(args)>0 {
	   s res= JsFunName_"('"_funName_"',"_args_")"
    }else{
	   s res= JsFunName_"('"_funName_"')"
    }
	q res
]]></Implementation>
</Method>

<Method name="ParseServer">
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",ClassName</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	 s Beg1="#(",End1=")#"
	 if $l(SrcCode,Beg1)=1 q SrcCode
	 s res=""
	 for ExecFragInd1=1:1:$l(SrcCode,End1){
        s tmp=$p(SrcCode,End1,ExecFragInd1)  
        s Html=$p(tmp,Beg1,1)   
        s Code=$p(tmp,Beg1,2)  
        s res=res_Html   
        if $l(Code)>0{
	       TRY { 
	          XECUTE ("(out) SET out="_Code, .resOut)
	       } CATCH ErrorHandle {  
	           s resOut=ErrorHandle  
	       }
           s res=res_resOut
        }
	 }        
	 q res
]]></Implementation>
</Method>

<Method name="CreatePolymerComponents">
<Description>
Поиск классов , которые будут интерпритированный в Polymer компоненты</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
     s %ClassName=##this 
          d ..readJSFunctionFromCacheClass(##this,"sendserver",0,1)

       &html<
import { PolymerElement, html } from "/%ZWebNode.Lib.Polymer.v3.polymer.element.cls";
import "/%ZWebNode.Lib.Polymer.v3.iron.icons.cls";
>
	 s ClassName=""
	 for {
	   s ClassName=$o(^oddDEF(ClassName))
	   q:ClassName=""
	   if $d(^oddDEF(ClassName,"x","template")){
		   if $d(^oddDEF(ClassName,"p","TagName")),$d( ^oddDEF(ClassName,"p","TagName",22)){
		       s %TagName=^oddDEF(ClassName,"p","TagName",22)
		       s %ClassNameJS=$zcvt($tr($replace(ClassName,".",""),"%",""),"L")
			   s isExistConstructor=0 
			   s isExistObservObject=0
               w !  
               w "class "_%ClassNameJS_" extends PolymerElement {",!
               w "  static get template() {",!
               w "    return html`" d ..DrawXdata(ClassName_":template")  w "`;",!
               w "  }",!
               // https://polymer-library.polymer-project.org/3.0/docs/devguide/properties
			   w "    static get is() { return '"_%TagName_"' }",!
			   if $d(^oddDEF(ClassName,"a")){
	     		   w "    static get properties() { ",!
	               w "       return {",!
	               /// Пример объявления переменной
	               /// Property NewProperty1 As %String [ ClientName = ObserverFun, InitialExpression = {$ZDT($H)} ];
	               s ProperCount=0
	       		   s ProperName=""
	       		   for {
		       		     s ProperName=$o(^oddDEF(ClassName,"a",ProperName))
		       		     Q:ProperName=""
		       		     s ProperCount=ProperCount+1 
		       		     W "         "
		       		     if ProperCount'=1 w ","
		       		     w ProperName_" : { ",!
		       		     if $d(^oddDEF(ClassName,"a",ProperName,5)){
			       		      s typ=^oddDEF(ClassName,"a",ProperName,5)
			       		      s typ=$p(typ,".",$l(typ,"."))
			       		      s typ=$tr(typ,"%","")
			       		      w "             type: "_typ,!
		       		     }
		       		     if $d(^oddDEF(ClassName,"a",ProperName,26)){ // ClientName
		       		         s ObserverFun=^oddDEF(ClassName,"a",ProperName,26)
		       		         s staticObserv=0
		       		         s:$l(ObserverFun,".*")>1 staticObserv=1
		       		         s:$l(ObserverFun,".length)")>1 staticObserv=1
		       		     	 s:$l(ObserverFun,".splices)")>1 staticObserv=1
		       		     	 if staticObserv=1{
		       		     	   s isExistObservObject=isExistObservObject+1
		       		     	   s isExistObservObject(isExistObservObject)=ObserverFun
		       		         }else{
		       		            w "             , observer: '"_ObserverFun_"'",!
		       		         }
		       		     }
		       		     if $d(^oddDEF(ClassName,"a",ProperName,31)){ // InitialExpression
		       		        s value=^oddDEF(ClassName,"a",ProperName,31)
		       		        d ..ConvertValueCodePage(value)
		       		     }else{
		       		        w "             , value: null ",!
		       		     }  
		       		     W "           }",!
	       		   }
	       		   w "         }",!
	     		   w "     }",!
	     	   }            
               
                //// Пример объявления функции
	     	    ///      ClientMethod MyMessage(tes = 1, test2 = 3) [ Language = javascript, WebMethod ]
	     	    ///      ClassMethod MyMessage2(arg1 = "", arg2 = "") As %String [ Language = cache, WebMethod ]
               if $d(^oddDEF(ClassName,"m")){
	              s MethodName="" 
	              for  {
		              s MethodName=$o(^oddDEF(ClassName,"m",MethodName))
		              q:MethodName=""
		              
		              if $d(^oddDEF(ClassName,"m",MethodName,51)),^oddDEF(ClassName,"m",MethodName,51)=1{
			              s:MethodName="constructor" isExistConstructor=1
			              s static=""  
				          if $d(^oddDEF(ClassName,"m",MethodName,23)){
					           s static="static"  
				          }
 						  s args=""
				          if $d(^oddDEF(ClassName,"m",MethodName,27)){
					          s argstmp=^oddDEF(ClassName,"m",MethodName,27)
					          for sp=1:1:$l(argstmp,","){
						        s args=args_$p($p(argstmp,",",sp),"=",1)
						        if $l(argstmp,",")>1,sp'=$l(argstmp,",")  s args=args_","
					           }
				          }				          
			              if $d(^oddDEF(ClassName,"m",MethodName,70)),^oddDEF(ClassName,"m",MethodName,70)=1{
				              w "   "_static_" "_MethodName_"("_args_") { ",!
				                s ind=""
				                for {
				                  s ind=$o(^oddDEF(ClassName,"m",MethodName,30,ind))
				                  q:ind=""
				                  s line=^oddDEF(ClassName,"m",MethodName,30,ind)
				                  s line=..ParseServer(line,ClassName)
				                  s line=..ReplaceFragVar(line,"#server(",")#","sendserver",ClassName)
				                  w line
				                  w $c(10)
				                }
				              w "    }",!
	                     }
	                     
	                     if $d(^oddDEF(ClassName,"m",MethodName,32)),^oddDEF(ClassName,"m",MethodName,32)'="javascript"{
		                    w "     "_MethodName_"("_args_") { ",!
		                    s ^||WEVENT=$$$cspEncode(%session.Key,$zu(5)_":"_ClassName_"."_MethodName) 
		                   
		                    if $d(^oddDEF(ClassName,"m",MethodName,42)) {
			                   w "       try {  "
			                   w "return sendserver('"_^||WEVENT_"' "
                               if $l(args)>0 w ","_args
		                       w ");} catch (e) { return e ; } ",!
		                    }else{
			                   w " var resFunColBack= function(THIS,txt){ if(txt!=''){  try {  eval(txt); } catch (e) {  console.log('Error',e); console.log('Command:',txt);   }  } }  ",!
			                   w " sendserver('"_^||WEVENT_"',this,resFunColBack "
                               if $l(args)>0 w ","_args
		                       w ")"  
		                    }
		                    w "     }",!   
	                     }
		              }
		              
	              }
               } 
               
               if (+isExistObservObject'=0){
	               w "    static get observers() { return [   ",!
                   s subObs=""
                   for {
                      s subObs=$o(isExistObservObject(subObs))
                      q:subObs=""
                      w:subObs>1 ","
                      w "     '"_isExistObservObject(subObs)_"'",!
                   }
                   w "    ]}"
               }
               &html<
               

    'EditUserObject(userObject.*)'
  
               >
               
               if isExistConstructor=0 {
	               w !
	               w "    constructor() { ",!
	               w "       super();",!
	               w "    }",!
               }
               
               w "}",!
               w "customElements.define('"_%TagName_"', "_%ClassNameJS_");",!
               
		   	}
	     }
}
]]></Implementation>
</Method>

<Method name="ConvertValueCodePage">
<ClassMethod>1</ClassMethod>
<FormalSpec>value=""</FormalSpec>
<Implementation><![CDATA[
	  ; Русские буквы в Chrome
	  ; s value=$zcvt(value,"o","UTF8")
	  ; s value=$zcvt(value,"I","CP1251")
	  
      TRY { 
	     XECUTE ("(out) SET out="_value, .valueOut)
      } CATCH ErrorHandle {  
	     s valueOut=ErrorHandle  
      }
      // Усли значение начинается с символов "[" или "{" , тогдавыводим значение без изменений (как объект)
	  if (($e(valueOut,1,1)="{") || ($e(valueOut,1,1)="[")) {
	     w "             , value: "_valueOut_" ",!
	  }else{
	     w "             , value: '"_$zcvt(valueOut,"o","JS")_"'",!
	  }
]]></Implementation>
</Method>

<Method name="readJSFunctionFromCacheClass">
<Description><![CDATA[
<pre>

Варианты параметров классов 
 1) [ Language = cache, WebMethod ]
 2) [ Language = javascript, WebMethod ]

Пример классов , которые будут интерпритированы в JS функции:
    ClassMethod test2()as %String [ Language = cache, WebMethod ]{ zw  q ""}
    ClientMethod test3() [ Language = javascript, WebMethod ]{    alert('test3()');}
    Property cspXMLHttp As %String [ ServerOnly = 1 ];
    Property cspUseGetMethod As %Boolean [ InitialExpression = 0, ServerOnly = 1 ];
    Property cspMozilla As %Boolean [ InitialExpression = "nill", ServerOnly = 1 ];
   
</pre>
 <h2>Переписать  %Library.ClassDefinition на  <h2>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ParentClassName="",MethodName="",DrawDescript=1,isVar=1</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
     s onEventFun=",onblur,onerror,onfocus,onload,onresize,onscroll,onbeforeunload,onhashchange,onlanguagechange,onmessage,onoffline,ononline,onpagehide,onpageshow,onpopstate,onrejectionhandled,onstorage,onunhandledrejection,onunload,onabort,oncancel,oncanplay,oncanplaythrough,onchange,onclick,onclose,oncontextmenu,oncuechange,ondblclick,ondrag,ondragend,ondragenter,ondragleave,ondragover,ondragstart,ondrop,ondurationchange,onemptied,onended,oninput,oninvalid,onkeydown,onkeypress,onkeyup,onloadeddata,onloadedmetadata,onloadstart,onmousedown,onmouseenter,onmouseleave,onmousemove,onmouseout,onmouseover,onmouseup,onmousewheel,onpause,onplay,onplaying,onprogress,onratechange,onreset,onseeked,onseeking,onselect,onshow,onstalled,onsubmit,onsuspend,ontimeupdate,ontoggle,onvolumechange,onwaiting,onauxclick,ongotpointercapture,onlostpointercapture,onpointercancel,onpointerdown,onpointerenter,onpointerleave,onpointermove,onpointerout,onpointerover,onpointerup,onbeforecopy,onbeforecut,onbeforepaste,oncopy,oncut,onpaste,onsearch,onselectstart,onwheel,onwebkitfullscreenchange,onwebkitfullscreenerror"
     if $d(%NameSpaceDefault){
	     &js</*  %NameSpaceDefault: #(%NameSpaceDefault)#   */>
     }
     if $zObjClassMethod("%CompiledClass","%ExistsId",ParentClassName)'=1 {
	  &js</*
         Класс #(ParentClassName)# не найден  	  
	  */>
     }
     // s ClassOref=##class(%Dictionary.ClassDefinition).%New(ParentClassName)
     
     s ClassOref=##class(%ClassDefinition).%OpenId(ParentClassName)
     if ClassOref {
       s ConstructMethod=$p(ParentClassName,".",$l(ParentClassName,"."))
       s count=ClassOref.Properties.Count() 
       for i=1:1:count {
            s nam=ClassOref.Properties.GetAt(i).Name
            continue:'$d(^oddDEF(ParentClassName,"a",nam,57))
            continue:^oddDEF(ParentClassName,"a",nam,57)'=1
            w "  var "_ClassOref.Properties.GetAt(i).Name_" "
            if $d(^oddDEF(ParentClassName,"a",nam,31)) {
                 s val=^oddDEF(ParentClassName,"a",nam,31)
                 if val="""null""" w "=null;"_$c(13,10)  continue
                 s typ=""
                 if $d(^oddDEF(ParentClassName,"a",nam,5)) {
                    s typ=^oddDEF(ParentClassName,"a",nam,5)
                    if $e(typ,1,1)="%",$l(typ,".")=1 {
                       s typ=$REPLACE(typ,"%","%Library.")
                    }
                 }   
                 if typ="" {
                     if $l(typ ," ")=1 { w "="_$e(val,2,$l(val)-1)_";"_$c(13,10)  continue }
                    try {   x "w "_val   }catch(e){  w "="_$e(val,2,$l(val)-1)_";"_$c(13,10)  continue }
                 }
                 
                 if typ="%Library.Boolean" {
                      if $e(val,1,1)="""" {
                         w "=" 
                         try {   x "w "_val   }catch(e){  if +val=1 { w "=true"  }else     { w "=false" }   }
                      }else {
                        if val=1 { w "=true"  }else     { w "=false" }
                      }
                 }elseif  typ="%Library.Integer" {
                     if $e(val,1,1)="""" {
                         w "=" 
                         try {   x "w "_val   }catch(e){  s val=+val  w val }
                      } else {
                          s val=+val  w val
                      } 
                 }else{
	                 
                     if $e(val,1,1)'="""" {
                           w "=""" 
                           try {   x "w "_val   }catch(e){  w val   }
                           w """"
                      }else {
                         w "="_val
                      } 
                 }
            }
            w ";"_$c(13,10) 
       }
       s ConstructMethodIndex=""
       s count=ClassOref.Methods.Count()
       for i=1:1:count {
            if (MethodName=""){
               continue:$l(ClassOref.Methods.GetAt(i).Name,"OnPage")'=1
               continue:ClassOref.Methods.GetAt(i).Name="OnPreHTTP"
               continue:ClassOref.Methods.GetAt(i).Name="OnPostHTTP"
               continue:ClassOref.Methods.GetAt(i).Name="getLibOne"
               continue:ClassOref.Methods.GetAt(i).Name="GetJSMethodFromClientMethod"
               continue:ClassOref.Methods.GetAt(i).Name="readJSFunctionFromCacheClass"
            }else{
                continue:ClassOref.Methods.GetAt(i).Name'=MethodName   
            }
           /// [ ServerOnly = 1 ]
           // continue:'$d(^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,59))
           // continue:^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,59)'=1
           
           /// [ WebMethod ]
           continue:'$d(^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,51))
           continue:^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,51)'=1
          
          if $ZCVT(ClassOref.Methods.GetAt(i).Name,"L")=$ZCVT(ConstructMethod,"L"){
             s ConstructMethodIndex=i
             continue    
          }
          
          if DrawDescript=1 {
             if $l(ClassOref.Methods.GetAt(i).Description)>0,ParentClassName'=##this{
                w !,"/*",!
                w $replace(ClassOref.Methods.GetAt(i).Description,"*/","-/-")
                w !,"*/"
             }
          }
          // Получаем JS представление Cache клиент метода
           if ClassOref.Methods.GetAt(i).Language="javascript" {
               w !
               w:isVar=1 "var " 
               w ClassOref.Methods.GetAt(i).Name_"=function("
               s param=ClassOref.Methods.GetAt(i).FormalSpec
               for ind=1:1:$l(param,","){
                   s subParam=$p(param,",",ind)
                   s subParam=$p(subParam,":",1)
                   s subParam=$p(subParam,"=",1)
                   w:ind'=1 ","
                   w subParam
               }
               w "){",!
                 d ..ExecFrag(ClassOref.Methods.GetAt(i).Code,"/*(",")*/")
                 // w ClassOref.Methods.GetAt(i).Code
                 w !,"};"
                
            }
           // Получаем JS представление Cache класс метода
           if ClassOref.Methods.GetAt(i).Language="cache" {
                   w !,"var "_ClassOref.Methods.GetAt(i).Name_"=function(){",!
                   ; if $d(^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,42)){ w "return "}
                   s WEVENT=$$$cspEncode(%session.Key,$zu(5)_":"_ParentClassName_"."_ClassOref.Methods.GetAt(i).Name)
                   w "   return cspHttpServerMethod('"_WEVENT_"',arguments);"
                   w !,"};"
           }
                
         }
         // После отрисовки функций, создаем конструктор( если конечно он встретился ранее)
         if ConstructMethodIndex'="" {
           s i=ConstructMethodIndex
           if ClassOref.Methods.GetAt(i).Language="javascript" {
              d ..ExecFrag(ClassOref.Methods.GetAt(i).Code,"/*(",")*/")
           }
           if ClassOref.Methods.GetAt(i).Language="cache" {
              s WEVENT=$$$cspEncode(%session.Key,$zu(5)_":"_ParentClassName_"."_ClassOref.Methods.GetAt(i).Name)
              w " cspHttpServerMethod('"_WEVENT_"',arguments);"
           }
         }
       }
       q ""
]]></Implementation>
</Method>

<Method name="ExecPostQuery">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
      s jsonTxt=""
 	   for {
         q:%request.Content.AtEnd
         s jsonTxt=jsonTxt_%request.Content.Read(32000)	     
      }
 	  do ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(jsonTxt,,.%RequestSrv,1)
 	  s ClassMethod=%RequestSrv.GetAt(1)
      s ClassMethod=$p(ClassMethod,"&",1)	         
      // if $e(ClassMethod,1,2)=".."{
      if $l(ClassMethod,".")>1{
         s %method=$p(ClassMethod,".",$l(ClassMethod,"."))
         s %class=$e(ClassMethod,1,$l(ClassMethod)-$l(%method)-1)
      }else{
	     s ClassMethod=$$$cspDecode(%session.Key,ClassMethod)
	     s NameSpace=$p(ClassMethod,":",1)
	     s ClassMethod=$p(ClassMethod,":",2)
         s %method=$p(ClassMethod,".",$l(ClassMethod,"."))
         s %class=$e(ClassMethod,1,$l(ClassMethod)-$l(%method)-1)
      }
 	  Set count=%RequestSrv.Count()-1
      set args=count
      s numArg=0
      for j=2:1:%RequestSrv.Count(){
 	     s numArg=numArg+1
         set args(numArg) = %RequestSrv.GetAt(j)
      }
      k j,numArg,%RequestSrv,count,ClassMethod
      if '$d(^oddDEF(%class,"m",%method,70)) {
         if '$d(^oddDEF(%class,"m",%method,42)) {
           // XECUTE ("(out) SET out="_value, .valueOut)
           x " do $classmethod(%class, %method, args...) "
         } Else {
           x " w $classmethod(%class, %method, args...) "
         }
       }else{
         if $d(^oddDEF(%class,"m",%method,30)){
            for ind=1:1:^oddDEF(%class,"m",%method,30){
               w:ind'=1 $c(13,10)
               d ..ExecFrag(^oddDEF(%class,"m",%method,30,ind),"/*(",")*/")
            }
         }
       }
]]></Implementation>
</Method>

<Method name="sendserver">
<Language>javascript</Language>
<WebMethod>1</WebMethod>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
    var FunCallBack=null;
    var ContextElement=null;
    if (arguments.length==0){
	    return;
    }
    var arr=new Array();
    if ((''+arguments[1])=='[object Arguments]'){
       for(var ind in arguments[1]){
	        if (arguments[1][ind]==undefined){continue;} 
	        if (typeof arguments[1][ind] === 'function'){
		       FunCallBack=arguments[ind];
	           continue;
	        } 
	        if (((arguments[1][ind]+'') == '[object HTMLElement]')||((arguments[1][ind]+'') == '[object HTMLUnknownElement]')){
		       ContextElement=arguments[1][ind];
	           continue;
	        } 
	        arr.push(arguments[1][ind]); 
	   }   
    }else{
       for(var ind in arguments){
	     if (arguments[ind]==undefined){continue;} 
	     if (typeof arguments[ind] === 'function'){
		    FunCallBack=arguments[ind];
	        continue;
	     } 
         if (((arguments[ind]+'') == '[object HTMLElement]')||((arguments[ind]+'') == '[object HTMLUnknownElement]')){
             ContextElement=arguments[ind];
	         continue;
	     } 
         arr.push(arguments[ind]); 
       }   
    }
    var UrlServerController='/*($zcvt(%ClassName,"O","URL")_".cls"  )*/';
    var requestsendserver =  new XMLHttpRequest();
    requestsendserver.ontimeout = function (e) { alert('TymeOut'); }
    if (FunCallBack==null){
        requestsendserver.open('POST',UrlServerController , false);
	    requestsendserver.send(JSON.stringify(arr));  
	    if (requestsendserver.status !== 200) {
	        return {"error":requestsendserver.status}
	    }
	    return requestsendserver.responseText;
    }else{
	    requestsendserver.open('POST', UrlServerController, true);
        requestsendserver.onreadystatechange = function() {
  	      if (this.readyState == 4 && this.status == 200) {
	         if (typeof FunCallBack === 'function'){
	              if (ContextElement!=null){
		            try {
			           FunCallBack(ContextElement,this.responseText);
		            } catch (e) {   
		              FunCallBack(e,this.responseText);   
		            } 
	              }else{
	                 FunCallBack(this.responseText);
	              }
	          }
	       };
	    };
	    requestsendserver.send(JSON.stringify(arr));
    }
]]></Implementation>
</Method>
</Class>


<Class name="%ZWebNode.Lib.Polymer.DomElementV3">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.DomElementV3.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.DomElementV3.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53153.381757</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

import { PolymerElement, html } from "/%ZWebNode.Lib.Polymer.v3.polymer.element.cls";
import "/%ZWebNode.Lib.Polymer.v3.iron.icons.cls";


class demoelement extends PolymerElement {
  static get template() {
    return html`
      <h1>fsdfsdfsd</h1>
    `;
  }
  _message(fav) {
    if (fav) {
      return 'You really like me!';
    } else {
      return 'Do you like me?';
    }
  }

}
customElements.define('demo-element', demoelement);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:53</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.DomElementV3" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\DomElementV3.js") 
    }
    q 1
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.DomElementV3.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\DomElementV3.js</Default>
</Parameter>

<Parameter name="LongPath">
</Parameter>

<Parameter name="NameOnly">
<Default>DomElementV3.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>DomElementV3.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.Grid">
<Description>
 1) все вызываемые методы пишутся с маленькими буквами https://polymer-library.polymer-project.org/3.0/docs/devguide/properties</Description>
<Super>%RegisteredObject</Super>
<TimeCreated>65261,81617.096865</TimeCreated>

<Parameter name="TagName">
<Default>exsample-element-test</Default>
</Parameter>

<Property name="employees">
<Type>%ZWebNode.Lib.Polymer.Typ.Array</Type>
<ClientName>usersAddedOrRemoved(employees.*)</ClientName>
<InitialExpression>"[{'first': 'Bob', 'last': 'Smith'},{'first': 'Bob', 'last': 'Smith'},{'first': 'Bob', 'last': 'Smith'},{'first': 'Bob', 'last': 'Smith'},{'first': 'Sally', 'last': 'Johnson'}]"</InitialExpression>
</Property>

<Property name="username">
<Type>%ZWebNode.Lib.Polymer.Typ.String</Type>
<ClientName>userNameChanged</ClientName>
<InitialExpression>"Иванов"</InitialExpression>
</Property>

<Property name="messagetest">
<Type>%ZWebNode.Lib.Polymer.Typ.String</Type>
<InitialExpression>" "</InitialExpression>
</Property>

<Property name="userObject">
<Type>%ZWebNode.Lib.Polymer.Typ.Object</Type>
<ClientName>EditUserObject(userObject.*)</ClientName>
<InitialExpression>"{}"</InitialExpression>
</Property>

<XData name="template">
<Data><![CDATA[
<dom-module id="#(%TagName)#">
<div> Employee list: #($h)# </div>
<h1>{{employees}}</h1>
<h1>-- [[testsendserver()]] --</h1>
<h1>-- Time [[gettime()]] --</h1>
<h3>[[testjs(1)]]</h3>
<h1>---------------------</h1>
    <input value="{{first::input}}"/><input  value="{{last::input}}"/><button on-click="MyButtonClick">add</button>
    <template is="dom-repeat" id="employeeList" items="{{employees}}">
     <div> {{index}} First name: <span>{{item.first}}</span> Last name: <span>{{item.last}}</span></div>
    </template>
<h1>---------------------</h1>
<br />   <input value="{{username::input}}"/>
<br />  {{username}}
<br />
<h1>----Асинхронное обращение к серверу -----</h1>
   <button on-click="MySendButtonClick">add</button>
   {{messagetest}}
<h1>-----------------------------------------</h1>     
<h1>---- Редактирование объекта -----</h1>
   FIO <input value="{{userObject.FIO::input}}"/>
   Возрост <input value="{{userObject.VOZ::input}}"/>
   <br />
   {{userObject.FIO}} {{userObject.VOZ}}
<h1>---------------------------------</h1>     
</dom-module>
]]></Data>
</XData>

<Method name="testsendserver">
<Language>javascript</Language>
<ReturnType>%String</ReturnType>
<WebMethod>1</WebMethod>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[	return 'Текст из testsendserver() javascript '+#server(..gettime())#
]]></Implementation>
</Method>

<Method name="gettime">
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%String</ReturnType>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[	q $zdt($h)
]]></Implementation>
</Method>

<Method name="testjs">
<FormalSpec>fav</FormalSpec>
<Language>javascript</Language>
<ReturnType>%String</ReturnType>
<WebMethod>1</WebMethod>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
  if (fav) {
     return 'You really like me! '+fav;
  } else {
     return 'Do you like me?'+fav;
  }
]]></Implementation>
</Method>

<Method name="userNameChanged">
<FormalSpec>name,oldName</FormalSpec>
<Language>javascript</Language>
<WebMethod>1</WebMethod>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[    console.log('oldName',oldName,'  new name: ' + name);
]]></Implementation>
</Method>

<Method name="usersAddedOrRemoved">
<FormalSpec>changeRecord</FormalSpec>
<Language>javascript</Language>
<WebMethod>1</WebMethod>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	console.log('usersAddedOrRemoved',changeRecord)
    /*
    if (changeRecord) {
      changeRecord.indexSplices.forEach(function(s) {
        s.removed.forEach(function(user) {
          console.log(user.name + ' was removed');
        });
        for (var i=0; i<s.addedCount; i++) {
          var index = s.index + i;
          var newUser = s.object[index];
          console.log('User ' + newUser.name + ' added at index ' + index);
        }
      }, this);
    }
    */
]]></Implementation>
</Method>

<Method name="MyButtonClick">
<Language>javascript</Language>
<WebMethod>1</WebMethod>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
    /// Для того , чтобы сработал observer необходимо полностью обнулять массив
    var obj={"first":this.first,"last":this.last};
    var arr=this.employees;
    this.employees=[];
    arr.push(obj);
    this.employees=arr;
]]></Implementation>
</Method>

<Method name="MySendButtonClick">
<Description>
Этот метод будет вызыватся из системы асинхронно</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>THIS</FormalSpec>
<Language>cache</Language>
<WebMethod>1</WebMethod>
<Implementation><![CDATA[  &js< THIS.messagetest="MESSAGE #($h)#">
]]></Implementation>
</Method>

<Method name="EditUserObject">
<FormalSpec>userObject</FormalSpec>
<Language>javascript</Language>
<WebMethod>1</WebMethod>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[	console.log(userObject);
]]></Implementation>
</Method>
</Class>


<Class name="%ZWebNode.Lib.Polymer.Typ.Array">
<ClassType>datatype</ClassType>
<TimeCreated>65261,81675.538603</TimeCreated>
</Class>


<Class name="%ZWebNode.Lib.Polymer.Typ.Object">
<ClassType>datatype</ClassType>
<TimeCreated>65261,81672.238065</TimeCreated>
</Class>


<Class name="%ZWebNode.Lib.Polymer.Typ.String">
<ClassType>datatype</ClassType>
<TimeCreated>65262,34925.638553</TimeCreated>
</Class>


<Class name="%ZWebNode.Lib.Polymer.demoV3">
<Description>
</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53153.543282</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:53</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     d ..DrawXdata("XDataContet")
     Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","text/html") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\demoV3.html") 
    }
    q 1
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.demoV3.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\demoV3.html</Default>
</Parameter>

<Parameter name="LongPath">
</Parameter>

<Parameter name="NameOnly">
<Default>demoV3.html</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>html</Default>
</Parameter>

<Parameter name="SrcName">
<Default>demoV3.html</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>

<XData name="XDataContet">
<Data><![CDATA[
<data>
<html>
 <head>
    <script src="/%ZWebNode.Lib.Polymer.v3.webcomponents.lite.cls"></script>
    <!--script type="module" src="/%ZWebNode.Lib.Polymer.DomElementV3.cls"></script-->
    <script type="module" src="/%ZWebNode.Lib.Polymer.Components.cls"></script>
</head>
<body>
  <demo-element></demo-element>
  <exsample-element-test></exsample-element-test>
</body>
</html>
</data>
]]></Data>
</XData>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.apply.shim">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.apply.shim.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.apply.shim.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53154.406118</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license
 Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

/*
 * The apply shim simulates the behavior of `@apply` proposed at
 * https://tabatkins.github.io/specs/css-apply-rule/.
 * The approach is to convert a property like this:
 *
 *    --foo: {color: red; background: blue;}
 *
 * to this:
 *
 *    --foo_-_color: red;
 *    --foo_-_background: blue;
 *
 * Then where `@apply --foo` is used, that is converted to:
 *
 *    color: var(--foo_-_color);
 *    background: var(--foo_-_background);
 *
 * This approach generally works but there are some issues and limitations.
 * Consider, for example, that somewhere *between* where `--foo` is set and used,
 * another element sets it to:
 *
 *    --foo: { border: 2px solid red; }
 *
 * We must now ensure that the color and background from the previous setting
 * do not apply. This is accomplished by changing the property set to this:
 *
 *    --foo_-_border: 2px solid red;
 *    --foo_-_color: initial;
 *    --foo_-_background: initial;
 *
 * This works but introduces one new issue.
 * Consider this setup at the point where the `@apply` is used:
 *
 *    background: orange;
 *    `@apply` --foo;
 *
 * In this case the background will be unset (initial) rather than the desired
 * `orange`. We address this by altering the property set to use a fallback
 * value like this:
 *
 *    color: var(--foo_-_color);
 *    background: var(--foo_-_background, orange);
 *    border: var(--foo_-_border);
 *
 * Note that the default is retained in the property set and the `background` is
 * the desired `orange`. This leads us to a limitation.
 *
 * Limitation 1:

 * Only properties in the rule where the `@apply`
 * is used are considered as default values.
 * If another rule matches the element and sets `background` with
 * less specificity than the rule in which `@apply` appears,
 * the `background` will not be set.
 *
 * Limitation 2:
 *
 * When using Polymer's `updateStyles` api, new properties may not be set for
 * `@apply` properties.

*/
'use strict';

import {forEachRule, processVariableAndFallback, rulesForStyle, toCssText, gatherStyleText} from '/%ZWebNode.Lib.Polymer.v3.style.util.cls';
import {MIXIN_MATCH, VAR_ASSIGN} from '/%ZWebNode.Lib.Polymer.v3.common.regex.cls';
import {detectMixin} from '/%ZWebNode.Lib.Polymer.v3.common.utils.cls';
import {StyleNode} from '/%ZWebNode.Lib.Polymer.v3.css.parse.cls'; // eslint-disable-line no-unused-vars

const APPLY_NAME_CLEAN = /;\s*/m;
const INITIAL_INHERIT = /^\s*(initial)|(inherit)\s*$/;
const IMPORTANT = /\s*!important/; // separator used between mixin-name and mixin-property-name when producing properties
// NOTE: plain '-' may cause collisions in user styles

const MIXIN_VAR_SEP = '_-_';
/**
 * @typedef {!Object<string, string>}
 */

let PropertyEntry; // eslint-disable-line no-unused-vars

/**
 * @typedef {!Object<string, boolean>}
 */

let DependantsEntry; // eslint-disable-line no-unused-vars

/** @typedef {{
 *    properties: PropertyEntry,
 *    dependants: DependantsEntry
 * }}
 */

let MixinMapEntry; // eslint-disable-line no-unused-vars
// map of mixin to property names
// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}

class MixinMap {
    constructor() {
        /** @type {!Object<string, !MixinMapEntry>} */
        this._map = {};
    }

    /**
     * @param {string} name
     * @param {!PropertyEntry} props
     */


    set(name, props) {
        name = name.trim();
        this._map[name] = {
            properties: props,
            dependants: {}
        };
    }

    /**
     * @param {string} name
     * @return {MixinMapEntry}
     */


    get(name) {
        name = name.trim();
        return this._map[name] || null;
    }

}

/**
 * Callback for when an element is marked invalid
 * @type {?function(string)}
 */


let invalidCallback = null;

/** @unrestricted */

class ApplyShim {
    constructor() {
        /** @type {?string} */
        this._currentElement = null;
        /** @type {HTMLMetaElement} */

        this._measureElement = null;
        this._map = new MixinMap();
    }

    /**
     * return true if `cssText` contains a mixin definition or consumption
     * @param {string} cssText
     * @return {boolean}
     */


    detectMixin(cssText) {
        return detectMixin(cssText);
    }

    /**
     * Gather styles into one style for easier processing
     * @param {!HTMLTemplateElement} template
     * @return {HTMLStyleElement}
     */


    gatherStyles(template) {
        const styleText = gatherStyleText(template.content);

        if (styleText) {
            const style =
                /** @type {!HTMLStyleElement} */
                document.createElement('style');
            style.textContent = styleText;
            template.content.insertBefore(style, template.content.firstChild);
            return style;
        }

        return null;
    }

    /**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @return {StyleNode}
     */


    transformTemplate(template, elementName) {
        if (template._gatheredStyle === undefined) {
            template._gatheredStyle = this.gatherStyles(template);
        }
        /** @type {HTMLStyleElement} */


        const style = template._gatheredStyle;
        return style ? this.transformStyle(style, elementName) : null;
    }

    /**
     * @param {!HTMLStyleElement} style
     * @param {string} elementName
     * @return {StyleNode}
     */


    transformStyle(style, elementName = '') {
        let ast = rulesForStyle(style);
        this.transformRules(ast, elementName);
        style.textContent = toCssText(ast);
        return ast;
    }

    /**
     * @param {!HTMLStyleElement} style
     * @return {StyleNode}
     */


    transformCustomStyle(style) {
        let ast = rulesForStyle(style);
        forEachRule(ast, rule => {
            if (rule['selector'] === ':root') {
                rule['selector'] = 'html';
            }

            this.transformRule(rule);
        });
        style.textContent = toCssText(ast);
        return ast;
    }

    /**
     * @param {StyleNode} rules
     * @param {string} elementName
     */


    transformRules(rules, elementName) {
        this._currentElement = elementName;
        forEachRule(rules, r => {
            this.transformRule(r);
        });
        this._currentElement = null;
    }

    /**
     * @param {!StyleNode} rule
     */


    transformRule(rule) {
        rule['cssText'] = this.transformCssText(rule['parsedCssText'], rule); // :root was only used for variable assignment in property shim,
        // but generates invalid selectors with real properties.
        // replace with `:host > *`, which serves the same effect

        if (rule['selector'] === ':root') {
            rule['selector'] = ':host > *';
        }
    }

    /**
     * @param {string} cssText
     * @param {!StyleNode} rule
     * @return {string}
     */


    transformCssText(cssText, rule) {
        // produce variables
        cssText = cssText.replace(VAR_ASSIGN, (matchText, propertyName, valueProperty, valueMixin) => this._produceCssProperties(matchText, propertyName, valueProperty, valueMixin, rule)); // consume mixins

        return this._consumeCssProperties(cssText, rule);
    }

    /**
     * @param {string} property
     * @return {string}
     */


    _getInitialValueForProperty(property) {
        if (!this._measureElement) {
            this._measureElement =
                /** @type {HTMLMetaElement} */
                document.createElement('meta');

            this._measureElement.setAttribute('apply-shim-measure', '');

            this._measureElement.style.all = 'initial';
            document.head.appendChild(this._measureElement);
        }

        return window.getComputedStyle(this._measureElement).getPropertyValue(property);
    }

    /**
     * Walk over all rules before this rule to find fallbacks for mixins
     *
     * @param {!StyleNode} startRule
     * @return {!Object}
     */


    _fallbacksFromPreviousRules(startRule) {
        // find the "top" rule
        let topRule = startRule;

        while (topRule['parent']) {
            topRule = topRule['parent'];
        }

        const fallbacks = {};
        let seenStartRule = false;
        forEachRule(topRule, r => {
            // stop when we hit the input rule
            seenStartRule = seenStartRule || r === startRule;

            if (seenStartRule) {
                return;
            } // NOTE: Only matching selectors are "safe" for this fallback processing
            // It would be prohibitive to run `matchesSelector()` on each selector,
            // so we cheat and only check if the same selector string is used, which
            // guarantees things like specificity matching


            if (r['selector'] === startRule['selector']) {
                Object.assign(fallbacks, this._cssTextToMap(r['parsedCssText']));
            }
        });
        return fallbacks;
    }

    /**
     * replace mixin consumption with variable consumption
     * @param {string} text
     * @param {!StyleNode=} rule
     * @return {string}
     */


    _consumeCssProperties(text, rule) {
        /** @type {Array} */
        let m = null; // loop over text until all mixins with defintions have been applied

        while (m = MIXIN_MATCH.exec(text)) {
            let matchText = m[0];
            let mixinName = m[1];
            let idx = m.index; // collect properties before apply to be "defaults" if mixin might override them
            // match includes a "prefix", so find the start and end positions of @apply

            let applyPos = idx + matchText.indexOf('@apply');
            let afterApplyPos = idx + matchText.length; // find props defined before this @apply

            let textBeforeApply = text.slice(0, applyPos);
            let textAfterApply = text.slice(afterApplyPos);
            let defaults = rule ? this._fallbacksFromPreviousRules(rule) : {};
            Object.assign(defaults, this._cssTextToMap(textBeforeApply));

            let replacement = this._atApplyToCssProperties(mixinName, defaults); // use regex match position to replace mixin, keep linear processing time


            text = `${textBeforeApply}${replacement}${textAfterApply}`; // move regex search to _after_ replacement

            MIXIN_MATCH.lastIndex = idx + replacement.length;
        }

        return text;
    }

    /**
     * produce variable consumption at the site of mixin consumption
     * `@apply` --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))
     * Example:
     *  border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)
     *
     * @param {string} mixinName
     * @param {Object} fallbacks
     * @return {string}
     */


    _atApplyToCssProperties(mixinName, fallbacks) {
        mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');
        let vars = [];

        let mixinEntry = this._map.get(mixinName); // if we depend on a mixin before it is created
        // make a sentinel entry in the map to add this element as a dependency for when it is defined.


        if (!mixinEntry) {
            this._map.set(mixinName, {});

            mixinEntry = this._map.get(mixinName);
        }

        if (mixinEntry) {
            if (this._currentElement) {
                mixinEntry.dependants[this._currentElement] = true;
            }

            let p, parts, f;
            const properties = mixinEntry.properties;

            for (p in properties) {
                f = fallbacks && fallbacks[p];
                parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];

                if (f) {
                    parts.push(',', f.replace(IMPORTANT, ''));
                }

                parts.push(')');

                if (IMPORTANT.test(properties[p])) {
                    parts.push(' !important');
                }

                vars.push(parts.join(''));
            }
        }

        return vars.join('; ');
    }

    /**
     * @param {string} property
     * @param {string} value
     * @return {string}
     */


    _replaceInitialOrInherit(property, value) {
        let match = INITIAL_INHERIT.exec(value);

        if (match) {
            if (match[1]) {
                // initial
                // replace `initial` with the concrete initial value for this property
                value = this._getInitialValueForProperty(property);
            } else {
                // inherit
                // with this purposfully illegal value, the variable will be invalid at
                // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)
                // and for inheriting values, will behave similarly
                // we cannot support the same behavior for non inheriting values like 'border'
                value = 'apply-shim-inherit';
            }
        }

        return value;
    }

    /**
     * "parse" a mixin definition into a map of properties and values
     * cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')
     * @param {string} text
     * @param {boolean=} replaceInitialOrInherit
     * @return {!Object<string, string>}
     */


    _cssTextToMap(text, replaceInitialOrInherit = false) {
        let props = text.split(';');
        let property, value;
        let out = {};

        for (let i = 0, p, sp; i < props.length; i++) {
            p = props[i];

            if (p) {
                sp = p.split(':'); // ignore lines that aren't definitions like @media

                if (sp.length > 1) {
                    property = sp[0].trim(); // some properties may have ':' in the value, like data urls

                    value = sp.slice(1).join(':');

                    if (replaceInitialOrInherit) {
                        value = this._replaceInitialOrInherit(property, value);
                    }

                    out[property] = value;
                }
            }
        }

        return out;
    }

    /**
     * @param {MixinMapEntry} mixinEntry
     */


    _invalidateMixinEntry(mixinEntry) {
        if (!invalidCallback) {
            return;
        }

        for (let elementName in mixinEntry.dependants) {
            if (elementName !== this._currentElement) {
                invalidCallback(elementName);
            }
        }
    }

    /**
     * @param {string} matchText
     * @param {string} propertyName
     * @param {?string} valueProperty
     * @param {?string} valueMixin
     * @param {!StyleNode} rule
     * @return {string}
     */


    _produceCssProperties(matchText, propertyName, valueProperty, valueMixin, rule) {
        // handle case where property value is a mixin
        if (valueProperty) {
            // form: --mixin2: var(--mixin1), where --mixin1 is in the map
            processVariableAndFallback(valueProperty, (prefix, value) => {
                if (value && this._map.get(value)) {
                    valueMixin = `@apply ${value};`;
                }
            });
        }

        if (!valueMixin) {
            return matchText;
        }

        let mixinAsProperties = this._consumeCssProperties('' + valueMixin, rule);

        let prefix = matchText.slice(0, matchText.indexOf('--')); // `initial` and `inherit` as properties in a map should be replaced because
        // these keywords are eagerly evaluated when the mixin becomes CSS Custom Properties,
        // and would set the variable value, rather than carry the keyword to the `var()` usage.

        let mixinValues = this._cssTextToMap(mixinAsProperties, true);

        let combinedProps = mixinValues;

        let mixinEntry = this._map.get(propertyName);

        let oldProps = mixinEntry && mixinEntry.properties;

        if (oldProps) {
            // NOTE: since we use mixin, the map of properties is updated here
            // and this is what we want.
            combinedProps = Object.assign(Object.create(oldProps), mixinValues);
        } else {
            this._map.set(propertyName, combinedProps);
        }

        let out = [];
        let p, v; // set variables defined by current mixin

        let needToInvalidate = false;

        for (p in combinedProps) {
            v = mixinValues[p]; // if property not defined by current mixin, set initial

            if (v === undefined) {
                v = 'initial';
            }

            if (oldProps && !(p in oldProps)) {
                needToInvalidate = true;
            }

            out.push(`${propertyName}${MIXIN_VAR_SEP}${p}: ${v}`);
        }

        if (needToInvalidate) {
            this._invalidateMixinEntry(mixinEntry);
        }

        if (mixinEntry) {
            mixinEntry.properties = combinedProps;
        } // because the mixinMap is global, the mixin might conflict with
        // a different scope's simple variable definition:
        // Example:
        // some style somewhere:
        // --mixin1:{ ... }
        // --mixin2: var(--mixin1);
        // some other element:
        // --mixin1: 10px solid red;
        // --foo: var(--mixin1);
        // In this case, we leave the original variable definition in place.


        if (valueProperty) {
            prefix = `${matchText};${prefix}`;
        }

        return `${prefix}${out.join('; ')};`;
    }

}

/* exports */

/* eslint-disable no-self-assign */


ApplyShim.prototype['detectMixin'] = ApplyShim.prototype.detectMixin;
ApplyShim.prototype['transformStyle'] = ApplyShim.prototype.transformStyle;
ApplyShim.prototype['transformCustomStyle'] = ApplyShim.prototype.transformCustomStyle;
ApplyShim.prototype['transformRules'] = ApplyShim.prototype.transformRules;
ApplyShim.prototype['transformRule'] = ApplyShim.prototype.transformRule;
ApplyShim.prototype['transformTemplate'] = ApplyShim.prototype.transformTemplate;
ApplyShim.prototype['_separator'] = MIXIN_VAR_SEP;
/* eslint-enable no-self-assign */

Object.defineProperty(ApplyShim.prototype, 'invalidCallback', {
    /** @return {?function(string)} */
    get() {
        return invalidCallback;
    },

    /** @param {?function(string)} cb */
    set(cb) {
        invalidCallback = cb;
    }

});
export default ApplyShim;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:54</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.apply.shim" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\apply-shim.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.apply.shim.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\apply-shim.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>apply-shim.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/apply-shim.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.apply.shim.edit">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.apply.shim.edit.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.apply.shim.edit.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53154.713978</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';

import ApplyShim from '/%ZWebNode.Lib.Polymer.v3.apply.shim.cls';
import templateMap from '/%ZWebNode.Lib.Polymer.v3.template.map.cls';
import { getIsExtends, toCssText, elementHasBuiltCss } from '/%ZWebNode.Lib.Polymer.v3.style.util.cls';
import * as ApplyShimUtils from '/%ZWebNode.Lib.Polymer.v3.apply.shim.utils.cls';
import { getComputedStyleValue, updateNativeProperties } from '/%ZWebNode.Lib.Polymer.v3.common.utils.cls';
import { CustomStyleInterfaceInterface } from '/%ZWebNode.Lib.Polymer.v3.custom.style.interface.cls'; // eslint-disable-line no-unused-vars

import { nativeCssVariables, nativeShadow, cssBuild, disableRuntime } from '/%ZWebNode.Lib.Polymer.v3.style.settings.cls';
/** @const {ApplyShim} */

const applyShimEdit = new ApplyShim();

class ApplyShimInterface {
  constructor() {
    /** @type {?CustomStyleInterfaceInterface} */
    this.customStyleInterface = null;
    applyShimEdit['invalidCallback'] = ApplyShimUtils.invalidate;
  }

  ensure() {
    if (this.customStyleInterface) {
      return;
    }

    if (window.ShadyCSS.CustomStyleInterface) {
      this.customStyleInterface =
      /** @type {!CustomStyleInterfaceInterface} */
      window.ShadyCSS.CustomStyleInterface;

      this.customStyleInterface['transformCallback'] = style => {
        applyShimEdit.transformCustomStyle(style);
      };

      this.customStyleInterface['validateCallback'] = () => {
        requestAnimationFrame(() => {
          if (this.customStyleInterface['enqueued']) {
            this.flushCustomStyles();
          }
        });
      };
    }
  }
  /**
   * @param {!HTMLTemplateElement} template
   * @param {string} elementName
   */


  prepareTemplate(template, elementName) {
    this.ensure();

    if (elementHasBuiltCss(template)) {
      return;
    }

    templateMap[elementName] = template;
    let ast = applyShimEdit.transformTemplate(template, elementName); // save original style ast to use for revalidating instances

    template['_styleAst'] = ast;
  }

  flushCustomStyles() {
    this.ensure();

    if (!this.customStyleInterface) {
      return;
    }

    let styles = this.customStyleInterface['processStyles']();

    if (!this.customStyleInterface['enqueued']) {
      return;
    }

    for (let i = 0; i < styles.length; i++) {
      let cs = styles[i];
      let style = this.customStyleInterface['getStyleForCustomStyle'](cs);

      if (style) {
        applyShimEdit.transformCustomStyle(style);
      }
    }

    this.customStyleInterface['enqueued'] = false;
  }
  /**
   * @param {HTMLElement} element
   * @param {Object=} properties
   */


  styleSubtree(element, properties) {
    this.ensure();

    if (properties) {
      updateNativeProperties(element, properties);
    }

    if (element.shadowRoot) {
      this.styleElement(element);
      let shadowChildren =
      /** @type {!ParentNode} */
      element.shadowRoot.children || element.shadowRoot.childNodes;

      for (let i = 0; i < shadowChildren.length; i++) {
        this.styleSubtree(
        /** @type {HTMLElement} */
        shadowChildren[i]);
      }
    } else {
      let children = element.children || element.childNodes;

      for (let i = 0; i < children.length; i++) {
        this.styleSubtree(
        /** @type {HTMLElement} */
        children[i]);
      }
    }
  }
  /**
   * @param {HTMLElement} element
   */


  styleElement(element) {
    this.ensure();
    let {
      is
    } = getIsExtends(element);
    let template = templateMap[is];

    if (template && elementHasBuiltCss(template)) {
      return;
    }

    if (template && !ApplyShimUtils.templateIsValid(template)) {
      // only revalidate template once
      if (!ApplyShimUtils.templateIsValidating(template)) {
        this.prepareTemplate(template, is);
        ApplyShimUtils.startValidatingTemplate(template);
      } // update this element instance


      let root = element.shadowRoot;

      if (root) {
        let style =
        /** @type {HTMLStyleElement} */
        root.querySelector('style');

        if (style) {
          // reuse the template's style ast, it has all the original css text
          style['__cssRules'] = template['_styleAst'];
          style.textContent = toCssText(template['_styleAst']);
        }
      }
    }
  }
  /**
   * @param {Object=} properties
   */


  styleDocument(properties) {
    this.ensure();
    this.styleSubtree(document.body, properties);
  }

}

if (!window.ShadyCSS || !window.ShadyCSS.ScopingShim) {
  const applyShimInterface = new ApplyShimInterface();
  let CustomStyleInterface = window.ShadyCSS && window.ShadyCSS.CustomStyleInterface;
  /** @suppress {duplicate} */

  window.ShadyCSS = {
    /**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @param {string=} elementExtends
     */
    prepareTemplate(template, elementName, elementExtends) {
      // eslint-disable-line no-unused-vars
      applyShimInterface.flushCustomStyles();
      applyShimInterface.prepareTemplate(template, elementName);
    },

    /**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @param {string=} elementExtends
     */
    prepareTemplateStyles(template, elementName, elementExtends) {
      window.ShadyCSS.prepareTemplate(template, elementName, elementExtends);
    },

    /**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     */
    prepareTemplateDom(template, elementName) {},

    // eslint-disable-line no-unused-vars

    /**
     * @param {!HTMLElement} element
     * @param {Object=} properties
     */
    styleSubtree(element, properties) {
      applyShimInterface.flushCustomStyles();
      applyShimInterface.styleSubtree(element, properties);
    },

    /**
     * @param {!HTMLElement} element
     */
    styleElement(element) {
      applyShimInterface.flushCustomStyles();
      applyShimInterface.styleElement(element);
    },

    /**
     * @param {Object=} properties
     */
    styleDocument(properties) {
      applyShimInterface.flushCustomStyles();
      applyShimInterface.styleDocument(properties);
    },

    /**
     * @param {Element} element
     * @param {string} property
     * @return {string}
     */
    getComputedStyleValue(element, property) {
      return getComputedStyleValue(element, property);
    },

    flushCustomStyles() {
      applyShimInterface.flushCustomStyles();
    },

    nativeCss: nativeCssVariables,
    nativeShadow: nativeShadow,
    cssBuild: cssBuild,
    disableRuntime: disableRuntime
  };

  if (CustomStyleInterface) {
    window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;
  }
}

window.ShadyCSS.ApplyShim = applyShimEdit;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:54</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.apply.shim.edit" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\apply-shim-edit.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.apply.shim.edit.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\apply-shim-edit.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>apply-shim-edit.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/apply-shim-edit.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.apply.shim.utils">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.apply.shim.utils.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.apply.shim.utils.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53154.927708</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license
 Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
'use strict';

import templateMap from '/%ZWebNode.Lib.Polymer.v3.template.map.cls';
import {StyleNode} from '/%ZWebNode.Lib.Polymer.v3.css.parse.cls'; // eslint-disable-line no-unused-vars

/*
 * Utilities for handling invalidating apply-shim mixins for a given template.
 *
 * The invalidation strategy involves keeping track of the "current" version of a template's mixins, and updating that count when a mixin is invalidated.
 * The template
 */

/** @const {string} */

const CURRENT_VERSION = '_applyShimCurrentVersion';
/** @const {string} */

const NEXT_VERSION = '_applyShimNextVersion';
/** @const {string} */

const VALIDATING_VERSION = '_applyShimValidatingVersion';
/**
 * @const {Promise<void>}
 */

const promise = Promise.resolve();

/**
 * @param {string} elementName
 */

export function invalidate(elementName) {
    let template = templateMap[elementName];

    if (template) {
        invalidateTemplate(template);
    }
}

/**
 * This function can be called multiple times to mark a template invalid
 * and signal that the style inside must be regenerated.
 *
 * Use `startValidatingTemplate` to begin an asynchronous validation cycle.
 * During that cycle, call `templateIsValidating` to see if the template must
 * be revalidated
 * @param {HTMLTemplateElement} template
 */

export function invalidateTemplate(template) {
    // default the current version to 0
    template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0; // ensure the "validating for" flag exists

    template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0; // increment the next version

    template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;
}

/**
 * @param {string} elementName
 * @return {boolean}
 */

export function isValid(elementName) {
    let template = templateMap[elementName];

    if (template) {
        return templateIsValid(template);
    }

    return true;
}

/**
 * @param {HTMLTemplateElement} template
 * @return {boolean}
 */

export function templateIsValid(template) {
    return template[CURRENT_VERSION] === template[NEXT_VERSION];
}

/**
 * @param {string} elementName
 * @return {boolean}
 */

export function isValidating(elementName) {
    let template = templateMap[elementName];

    if (template) {
        return templateIsValidating(template);
    }

    return false;
}

/**
 * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.
 * If false, the template must be validated.
 * @param {HTMLTemplateElement} template
 * @return {boolean}
 */

export function templateIsValidating(template) {
    return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];
}

/**
 * the template is marked as `validating` for one microtask so that all instances
 * found in the tree crawl of `applyStyle` will update themselves,
 * but the template will only be updated once.
 * @param {string} elementName
 */

export function startValidating(elementName) {
    let template = templateMap[elementName];
    startValidatingTemplate(template);
}

/**
 * Begin an asynchronous invalidation cycle.
 * This should be called after every validation of a template
 *
 * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`
 * @param {HTMLTemplateElement} template
 */

export function startValidatingTemplate(template) {
    // remember that the current "next version" is the reason for this validation cycle
    template[VALIDATING_VERSION] = template[NEXT_VERSION]; // however, there only needs to be one async task to clear the counters

    if (!template._validating) {
        template._validating = true;
        promise.then(function () {
            // sync the current version to let future invalidations cause a refresh cycle
            template[CURRENT_VERSION] = template[NEXT_VERSION];
            template._validating = false;
        });
    }
}

/**
 * @return {boolean}
 */

export function elementsAreInvalid() {
    for (let elementName in templateMap) {
        let template = templateMap[elementName];

        if (!templateIsValid(template)) {
            return true;
        }
    }

    return false;
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:54</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.apply.shim.utils" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\apply-shim-utils.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.apply.shim.utils.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\apply-shim-utils.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>apply-shim-utils.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/apply-shim-utils.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.array.selector">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.array.selector.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.array.selector.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53155.11962</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { PolymerElement } from '/%ZWebNode.Lib.Polymer.v3.polymer.element.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import { calculateSplices } from '/%ZWebNode.Lib.Polymer.v3.array.splice.cls';
import { ElementMixin } from '/%ZWebNode.Lib.Polymer.v3.element.mixin.cls';
/**
 * Element mixin for recording dynamic associations between item paths in a
 * master `items` array and a `selected` array such that path changes to the
 * master array (at the host) element or elsewhere via data-binding) are
 * correctly propagated to items in the selected array and vice-versa.
 *
 * The `items` property accepts an array of user data, and via the
 * `select(item)` and `deselect(item)` API, updates the `selected` property
 * which may be bound to other parts of the application, and any changes to
 * sub-fields of `selected` item(s) will be kept in sync with items in the
 * `items` array.  When `multi` is false, `selected` is a property
 * representing the last selected item.  When `multi` is true, `selected`
 * is an array of multiply selected items.
 *
 * polymer
 * @mixinFunction
 * @appliesMixin ElementMixin
 * @summary Element mixin for recording dynamic associations between item paths in a
 * master `items` array and a `selected` array
 */

let ArraySelectorMixin = dedupingMixin(superClass => {
  /**
   * @constructor
   * @implements {Polymer_ElementMixin}
   * @private
   */
  let elementBase = ElementMixin(superClass);
  /**
   * polymer
   * @mixinClass
   * @implements {Polymer_ArraySelectorMixin}
   * @unrestricted
   */

  class ArraySelectorMixin extends elementBase {
    static get properties() {
      return {
        /**
         * An array containing items from which selection will be made.
         */
        items: {
          type: Array
        },

        /**
         * When `true`, multiple items may be selected at once (in this case,
         * `selected` is an array of currently selected items).  When `false`,
         * only one item may be selected at a time.
         */
        multi: {
          type: Boolean,
          value: false
        },

        /**
         * When `multi` is true, this is an array that contains any selected.
         * When `multi` is false, this is the currently selected item, or `null`
         * if no item is selected.
         * @type {?Object|?Array<!Object>}
         */
        selected: {
          type: Object,
          notify: true
        },

        /**
         * When `multi` is false, this is the currently selected item, or `null`
         * if no item is selected.
         * @type {?Object}
         */
        selectedItem: {
          type: Object,
          notify: true
        },

        /**
         * When `true`, calling `select` on an item that is already selected
         * will deselect the item.
         */
        toggle: {
          type: Boolean,
          value: false
        }
      };
    }

    static get observers() {
      return ['__updateSelection(multi, items.*)'];
    }

    constructor() {
      super();
      this.__lastItems = null;
      this.__lastMulti = null;
      this.__selectedMap = null;
    }

    __updateSelection(multi, itemsInfo) {
      let path = itemsInfo.path;

      if (path == JSCompiler_renameProperty('items', this)) {
        // Case 1 - items array changed, so diff against previous array and
        // deselect any removed items and adjust selected indices
        let newItems = itemsInfo.base || [];
        let lastItems = this.__lastItems;
        let lastMulti = this.__lastMulti;

        if (multi !== lastMulti) {
          this.clearSelection();
        }

        if (lastItems) {
          let splices = calculateSplices(newItems, lastItems);

          this.__applySplices(splices);
        }

        this.__lastItems = newItems;
        this.__lastMulti = multi;
      } else if (itemsInfo.path == `${JSCompiler_renameProperty('items', this)}.splices`) {
        // Case 2 - got specific splice information describing the array mutation:
        // deselect any removed items and adjust selected indices
        this.__applySplices(itemsInfo.value.indexSplices);
      } else {
        // Case 3 - an array element was changed, so deselect the previous
        // item for that index if it was previously selected
        let part = path.slice(`${JSCompiler_renameProperty('items', this)}.`.length);
        let idx = parseInt(part, 10);

        if (part.indexOf('.') < 0 && part == idx) {
          this.__deselectChangedIdx(idx);
        }
      }
    }

    __applySplices(splices) {
      let selected = this.__selectedMap; // Adjust selected indices and mark removals

      for (let i = 0; i < splices.length; i++) {
        let s = splices[i];
        selected.forEach((idx, item) => {
          if (idx < s.index) {// no change
          } else if (idx >= s.index + s.removed.length) {
            // adjust index
            selected.set(item, idx + s.addedCount - s.removed.length);
          } else {
            // remove index
            selected.set(item, -1);
          }
        });

        for (let j = 0; j < s.addedCount; j++) {
          let idx = s.index + j;

          if (selected.has(this.items[idx])) {
            selected.set(this.items[idx], idx);
          }
        }
      } // Update linked paths


      this.__updateLinks(); // Remove selected items that were removed from the items array


      let sidx = 0;
      selected.forEach((idx, item) => {
        if (idx < 0) {
          if (this.multi) {
            this.splice(JSCompiler_renameProperty('selected', this), sidx, 1);
          } else {
            this.selected = this.selectedItem = null;
          }

          selected.delete(item);
        } else {
          sidx++;
        }
      });
    }

    __updateLinks() {
      this.__dataLinkedPaths = {};

      if (this.multi) {
        let sidx = 0;

        this.__selectedMap.forEach(idx => {
          if (idx >= 0) {
            this.linkPaths(`${JSCompiler_renameProperty('items', this)}.${idx}`, `${JSCompiler_renameProperty('selected', this)}.${sidx++}`);
          }
        });
      } else {
        this.__selectedMap.forEach(idx => {
          this.linkPaths(JSCompiler_renameProperty('selected', this), `${JSCompiler_renameProperty('items', this)}.${idx}`);
          this.linkPaths(JSCompiler_renameProperty('selectedItem', this), `${JSCompiler_renameProperty('items', this)}.${idx}`);
        });
      }
    }
    /**
     * Clears the selection state.
     * @override
     * @return {void}
     */


    clearSelection() {
      // Unbind previous selection
      this.__dataLinkedPaths = {}; // The selected map stores 3 pieces of information:
      // key: items array object
      // value: items array index
      // order: selected array index

      this.__selectedMap = new Map(); // Initialize selection

      this.selected = this.multi ? [] : null;
      this.selectedItem = null;
    }
    /**
     * Returns whether the item is currently selected.
     *
     * @override
     * @param {*} item Item from `items` array to test
     * @return {boolean} Whether the item is selected
     */


    isSelected(item) {
      return this.__selectedMap.has(item);
    }
    /**
     * Returns whether the item is currently selected.
     *
     * @override
     * @param {number} idx Index from `items` array to test
     * @return {boolean} Whether the item is selected
     */


    isIndexSelected(idx) {
      return this.isSelected(this.items[idx]);
    }

    __deselectChangedIdx(idx) {
      let sidx = this.__selectedIndexForItemIndex(idx);

      if (sidx >= 0) {
        let i = 0;

        this.__selectedMap.forEach((idx, item) => {
          if (sidx == i++) {
            this.deselect(item);
          }
        });
      }
    }

    __selectedIndexForItemIndex(idx) {
      let selected = this.__dataLinkedPaths[`${JSCompiler_renameProperty('items', this)}.${idx}`];

      if (selected) {
        return parseInt(selected.slice(`${JSCompiler_renameProperty('selected', this)}.`.length), 10);
      }
    }
    /**
     * Deselects the given item if it is already selected.
     *
     * @override
     * @param {*} item Item from `items` array to deselect
     * @return {void}
     */


    deselect(item) {
      let idx = this.__selectedMap.get(item);

      if (idx >= 0) {
        this.__selectedMap.delete(item);

        let sidx;

        if (this.multi) {
          sidx = this.__selectedIndexForItemIndex(idx);
        }

        this.__updateLinks();

        if (this.multi) {
          this.splice(JSCompiler_renameProperty('selected', this), sidx, 1);
        } else {
          this.selected = this.selectedItem = null;
        }
      }
    }
    /**
     * Deselects the given index if it is already selected.
     *
     * @override
     * @param {number} idx Index from `items` array to deselect
     * @return {void}
     */


    deselectIndex(idx) {
      this.deselect(this.items[idx]);
    }
    /**
     * Selects the given item.  When `toggle` is true, this will automatically
     * deselect the item if already selected.
     *
     * @override
     * @param {*} item Item from `items` array to select
     * @return {void}
     */


    select(item) {
      this.selectIndex(this.items.indexOf(item));
    }
    /**
     * Selects the given index.  When `toggle` is true, this will automatically
     * deselect the item if already selected.
     *
     * @override
     * @param {number} idx Index from `items` array to select
     * @return {void}
     */


    selectIndex(idx) {
      let item = this.items[idx];

      if (!this.isSelected(item)) {
        if (!this.multi) {
          this.__selectedMap.clear();
        }

        this.__selectedMap.set(item, idx);

        this.__updateLinks();

        if (this.multi) {
          this.push(JSCompiler_renameProperty('selected', this), item);
        } else {
          this.selected = this.selectedItem = item;
        }
      } else if (this.toggle) {
        this.deselectIndex(idx);
      }
    }

  }

  return ArraySelectorMixin;
}); // export mixin

export { ArraySelectorMixin };
/**
 * @constructor
 * @extends {PolymerElement}
 * @implements {Polymer_ArraySelectorMixin}
 * @private
 */

let baseArraySelector = ArraySelectorMixin(PolymerElement);
/**
 * Element implementing the `ArraySelector` mixin, which records
 * dynamic associations between item paths in a master `items` array and a
 * `selected` array such that path changes to the master array (at the host)
 * element or elsewhere via data-binding) are correctly propagated to items
 * in the selected array and vice-versa.
 *
 * The `items` property accepts an array of user data, and via the
 * `select(item)` and `deselect(item)` API, updates the `selected` property
 * which may be bound to other parts of the application, and any changes to
 * sub-fields of `selected` item(s) will be kept in sync with items in the
 * `items` array.  When `multi` is false, `selected` is a property
 * representing the last selected item.  When `multi` is true, `selected`
 * is an array of multiply selected items.
 *
 * Example:
 *
 * ```js
 * import {PolymerElement} from 'polymer/polymer';
 * import 'polymer/polymer/lib/elements/array-selector.js';
 *
 * class EmployeeList extends PolymerElement {
 *   static get _template() {
 *     return html`
 *         <div> Employee list: </div>
 *         <dom-repeat id="employeeList" items="{{employees}}">
 *           <template>
 *             <div>First name: <span>{{item.first}}</span></div>
 *               <div>Last name: <span>{{item.last}}</span></div>
 *               <button on-click="toggleSelection">Select</button>
 *           </template>
 *         </dom-repeat>
 *
 *         <array-selector id="selector"
 *                         items="{{employees}}"
 *                         selected="{{selected}}"
 *                         multi toggle></array-selector>
 *
 *         <div> Selected employees: </div>
 *         <dom-repeat items="{{selected}}">
 *           <template>
 *             <div>First name: <span>{{item.first}}</span></div>
 *             <div>Last name: <span>{{item.last}}</span></div>
 *           </template>
 *         </dom-repeat>`;
 *   }
 *   static get is() { return 'employee-list'; }
 *   static get properties() {
 *     return {
 *       employees: {
 *         value() {
 *           return [
 *             {first: 'Bob', last: 'Smith'},
 *             {first: 'Sally', last: 'Johnson'},
 *             ...
 *           ];
 *         }
 *       }
 *     };
 *   }
 *   toggleSelection(e) {
 *     const item = this.$.employeeList.itemForElement(e.target);
 *     this.$.selector.select(item);
 *   }
 * }
 * ```
 *
 * polymer
 * @customElement
 * @extends {baseArraySelector}
 * @appliesMixin ArraySelectorMixin
 * @summary Custom element that links paths between an input `items` array and
 *   an output `selected` item or array based on calls to its selection API.
 */

class ArraySelector extends baseArraySelector {
  // Not needed to find template; can be removed once the analyzer
  // can find the tag name from customElements.define call
  static get is() {
    return 'array-selector';
  }

  static get template() {
    return null;
  }

}

customElements.define(ArraySelector.is, ArraySelector);
export { ArraySelector };
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:55</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.array.selector" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\array-selector.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.array.selector.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\array-selector.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>array-selector.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/array-selector.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.array.splice">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.array.splice.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.array.splice.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53155.398947</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';

function newSplice(index, removed, addedCount) {
  return {
    index: index,
    removed: removed,
    addedCount: addedCount
  };
}

const EDIT_LEAVE = 0;
const EDIT_UPDATE = 1;
const EDIT_ADD = 2;
const EDIT_DELETE = 3; // Note: This function is *based* on the computation of the Levenshtein
// "edit" distance. The one change is that "updates" are treated as two
// edits - not one. With Array splices, an update is really a delete
// followed by an add. By retaining this, we optimize for "keeping" the
// maximum array items in the original array. For example:
//
//   'xxxx123' -> '123yyyy'
//
// With 1-edit updates, the shortest path would be just to update all seven
// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This
// leaves the substring '123' intact.

function calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {
  // "Deletion" columns
  let rowCount = oldEnd - oldStart + 1;
  let columnCount = currentEnd - currentStart + 1;
  let distances = new Array(rowCount); // "Addition" rows. Initialize null column.

  for (let i = 0; i < rowCount; i++) {
    distances[i] = new Array(columnCount);
    distances[i][0] = i;
  } // Initialize null row


  for (let j = 0; j < columnCount; j++) distances[0][j] = j;

  for (let i = 1; i < rowCount; i++) {
    for (let j = 1; j < columnCount; j++) {
      if (equals(current[currentStart + j - 1], old[oldStart + i - 1])) distances[i][j] = distances[i - 1][j - 1];else {
        let north = distances[i - 1][j] + 1;
        let west = distances[i][j - 1] + 1;
        distances[i][j] = north < west ? north : west;
      }
    }
  }

  return distances;
} // This starts at the final weight, and walks "backward" by finding
// the minimum previous weight recursively until the origin of the weight
// matrix.


function spliceOperationsFromEditDistances(distances) {
  let i = distances.length - 1;
  let j = distances[0].length - 1;
  let current = distances[i][j];
  let edits = [];

  while (i > 0 || j > 0) {
    if (i == 0) {
      edits.push(EDIT_ADD);
      j--;
      continue;
    }

    if (j == 0) {
      edits.push(EDIT_DELETE);
      i--;
      continue;
    }

    let northWest = distances[i - 1][j - 1];
    let west = distances[i - 1][j];
    let north = distances[i][j - 1];
    let min;
    if (west < north) min = west < northWest ? west : northWest;else min = north < northWest ? north : northWest;

    if (min == northWest) {
      if (northWest == current) {
        edits.push(EDIT_LEAVE);
      } else {
        edits.push(EDIT_UPDATE);
        current = northWest;
      }

      i--;
      j--;
    } else if (min == west) {
      edits.push(EDIT_DELETE);
      i--;
      current = west;
    } else {
      edits.push(EDIT_ADD);
      j--;
      current = north;
    }
  }

  edits.reverse();
  return edits;
}
/**
 * Splice Projection functions:
 *
 * A splice map is a representation of how a previous array of items
 * was transformed into a new array of items. Conceptually it is a list of
 * tuples of
 *
 *   <index, removed, addedCount>
 *
 * which are kept in ascending index order of. The tuple represents that at
 * the |index|, |removed| sequence of items were removed, and counting forward
 * from |index|, |addedCount| items were added.
 */

/**
 * Lacking individual splice mutation information, the minimal set of
 * splices can be synthesized given the previous state and final state of an
 * array. The basic approach is to calculate the edit distance matrix and
 * choose the shortest path through it.
 *
 * Complexity: O(l * p)
 *   l: The length of the current array
 *   p: The length of the old array
 *
 * @param {!Array} current The current "changed" array for which to
 * calculate splices.
 * @param {number} currentStart Starting index in the `current` array for
 * which splices are calculated.
 * @param {number} currentEnd Ending index in the `current` array for
 * which splices are calculated.
 * @param {!Array} old The original "unchanged" array to compare `current`
 * against to determine splices.
 * @param {number} oldStart Starting index in the `old` array for
 * which splices are calculated.
 * @param {number} oldEnd Ending index in the `old` array for
 * which splices are calculated.
 * @return {!Array} Returns an array of splice record objects. Each of these
 * contains: `index` the location where the splice occurred; `removed`
 * the array of removed items from this location; `addedCount` the number
 * of items added at this location.
 */


function calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd) {
  let prefixCount = 0;
  let suffixCount = 0;
  let splice;
  let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);
  if (currentStart == 0 && oldStart == 0) prefixCount = sharedPrefix(current, old, minLength);
  if (currentEnd == current.length && oldEnd == old.length) suffixCount = sharedSuffix(current, old, minLength - prefixCount);
  currentStart += prefixCount;
  oldStart += prefixCount;
  currentEnd -= suffixCount;
  oldEnd -= suffixCount;
  if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0) return [];

  if (currentStart == currentEnd) {
    splice = newSplice(currentStart, [], 0);

    while (oldStart < oldEnd) splice.removed.push(old[oldStart++]);

    return [splice];
  } else if (oldStart == oldEnd) return [newSplice(currentStart, [], currentEnd - currentStart)];

  let ops = spliceOperationsFromEditDistances(calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));
  splice = undefined;
  let splices = [];
  let index = currentStart;
  let oldIndex = oldStart;

  for (let i = 0; i < ops.length; i++) {
    switch (ops[i]) {
      case EDIT_LEAVE:
        if (splice) {
          splices.push(splice);
          splice = undefined;
        }

        index++;
        oldIndex++;
        break;

      case EDIT_UPDATE:
        if (!splice) splice = newSplice(index, [], 0);
        splice.addedCount++;
        index++;
        splice.removed.push(old[oldIndex]);
        oldIndex++;
        break;

      case EDIT_ADD:
        if (!splice) splice = newSplice(index, [], 0);
        splice.addedCount++;
        index++;
        break;

      case EDIT_DELETE:
        if (!splice) splice = newSplice(index, [], 0);
        splice.removed.push(old[oldIndex]);
        oldIndex++;
        break;
    }
  }

  if (splice) {
    splices.push(splice);
  }

  return splices;
}

function sharedPrefix(current, old, searchLength) {
  for (let i = 0; i < searchLength; i++) if (!equals(current[i], old[i])) return i;

  return searchLength;
}

function sharedSuffix(current, old, searchLength) {
  let index1 = current.length;
  let index2 = old.length;
  let count = 0;

  while (count < searchLength && equals(current[--index1], old[--index2])) count++;

  return count;
}
/**
 * Returns an array of splice records indicating the minimum edits required
 * to transform the `previous` array into the `current` array.
 *
 * Splice records are ordered by index and contain the following fields:
 * - `index`: index where edit started
 * - `removed`: array of removed items from this index
 * - `addedCount`: number of items added at this index
 *
 * This function is based on the Levenshtein "minimum edit distance"
 * algorithm. Note that updates are treated as removal followed by addition.
 *
 * The worst-case time complexity of this algorithm is `O(l * p)`
 *   l: The length of the current array
 *   p: The length of the previous array
 *
 * However, the worst-case complexity is reduced by an `O(n)` optimization
 * to detect any shared prefix & suffix between the two arrays and only
 * perform the more expensive minimum edit distance calculation over the
 * non-shared portions of the arrays.
 *
 * @function
 * @param {!Array} current The "changed" array for which splices will be
 * calculated.
 * @param {!Array} previous The "unchanged" original array to compare
 * `current` against to determine the splices.
 * @return {!Array} Returns an array of splice record objects. Each of these
 * contains: `index` the location where the splice occurred; `removed`
 * the array of removed items from this location; `addedCount` the number
 * of items added at this location.
 */


export function calculateSplices(current, previous) {
  return calcSplices(current, 0, current.length, previous, 0, previous.length);
}

function equals(currentValue, previousValue) {
  return currentValue === previousValue;
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:55</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.array.splice" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\array-splice.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.array.splice.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\array-splice.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>array-splice.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/array-splice.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.async">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.async.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.async.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53155.620249</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/**
 * @fileoverview
 *
 * This module provides a number of strategies for enqueuing asynchronous
 * tasks. Each sub-module provides a standard `run(fn)` interface that returns a
 * handle, and a `cancel(handle)` interface for canceling async tasks before
 * they run.
 *
 * @summary Module that provides a number of strategies for enqueuing
 * asynchronous tasks.
 */
import '/%ZWebNode.Lib.Polymer.v3.boot.cls'; // Microtask implemented using Mutation Observer

let microtaskCurrHandle = 0;
let microtaskLastHandle = 0;
let microtaskCallbacks = [];
let microtaskNodeContent = 0;
let microtaskNode = document.createTextNode('');
new window.MutationObserver(microtaskFlush).observe(microtaskNode, {
  characterData: true
});

function microtaskFlush() {
  const len = microtaskCallbacks.length;

  for (let i = 0; i < len; i++) {
    let cb = microtaskCallbacks[i];

    if (cb) {
      try {
        cb();
      } catch (e) {
        setTimeout(() => {
          throw e;
        });
      }
    }
  }

  microtaskCallbacks.splice(0, len);
  microtaskLastHandle += len;
}
/**
 * Async interface wrapper around `setTimeout`.
 *
 * @namespace
 * @summary Async interface wrapper around `setTimeout`.
 */


const timeOut = {
  /**
   * Returns a sub-module with the async interface providing the provided
   * delay.
   *
   * @memberof timeOut
   * @param {number=} delay Time to wait before calling callbacks in ms
   * @return {!AsyncInterface} An async timeout interface
   */
  after(delay) {
    return {
      run(fn) {
        return window.setTimeout(fn, delay);
      },

      cancel(handle) {
        window.clearTimeout(handle);
      }

    };
  },

  /**
   * Enqueues a function called in the next task.
   *
   * @memberof timeOut
   * @param {!Function} fn Callback to run
   * @param {number=} delay Delay in milliseconds
   * @return {number} Handle used for canceling task
   */
  run(fn, delay) {
    return window.setTimeout(fn, delay);
  },

  /**
   * Cancels a previously enqueued `timeOut` callback.
   *
   * @memberof timeOut
   * @param {number} handle Handle returned from `run` of callback to cancel
   * @return {void}
   */
  cancel(handle) {
    window.clearTimeout(handle);
  }

};
export { timeOut };
/**
 * Async interface wrapper around `requestAnimationFrame`.
 *
 * @namespace
 * @summary Async interface wrapper around `requestAnimationFrame`.
 */

const animationFrame = {
  /**
   * Enqueues a function called at `requestAnimationFrame` timing.
   *
   * @memberof animationFrame
   * @param {function(number):void} fn Callback to run
   * @return {number} Handle used for canceling task
   */
  run(fn) {
    return window.requestAnimationFrame(fn);
  },

  /**
   * Cancels a previously enqueued `animationFrame` callback.
   *
   * @memberof animationFrame
   * @param {number} handle Handle returned from `run` of callback to cancel
   * @return {void}
   */
  cancel(handle) {
    window.cancelAnimationFrame(handle);
  }

};
export { animationFrame };
/**
 * Async interface wrapper around `requestIdleCallback`.  Falls back to
 * `setTimeout` on browsers that do not support `requestIdleCallback`.
 *
 * @namespace
 * @summary Async interface wrapper around `requestIdleCallback`.
 */

const idlePeriod = {
  /**
   * Enqueues a function called at `requestIdleCallback` timing.
   *
   * @memberof idlePeriod
   * @param {function(!IdleDeadline):void} fn Callback to run
   * @return {number} Handle used for canceling task
   */
  run(fn) {
    return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);
  },

  /**
   * Cancels a previously enqueued `idlePeriod` callback.
   *
   * @memberof idlePeriod
   * @param {number} handle Handle returned from `run` of callback to cancel
   * @return {void}
   */
  cancel(handle) {
    window.cancelIdleCallback ? window.cancelIdleCallback(handle) : window.clearTimeout(handle);
  }

};
export { idlePeriod };
/**
 * Async interface for enqueuing callbacks that run at microtask timing.
 *
 * Note that microtask timing is achieved via a single `MutationObserver`,
 * and thus callbacks enqueued with this API will all run in a single
 * batch, and not interleaved with other microtasks such as promises.
 * Promises are avoided as an implementation choice for the time being
 * due to Safari bugs that cause Promises to lack microtask guarantees.
 *
 * @namespace
 * @summary Async interface for enqueuing callbacks that run at microtask
 *   timing.
 */

const microTask = {
  /**
   * Enqueues a function called at microtask timing.
   *
   * @memberof microTask
   * @param {!Function=} callback Callback to run
   * @return {number} Handle used for canceling task
   */
  run(callback) {
    microtaskNode.textContent = microtaskNodeContent++;
    microtaskCallbacks.push(callback);
    return microtaskCurrHandle++;
  },

  /**
   * Cancels a previously enqueued `microTask` callback.
   *
   * @memberof microTask
   * @param {number} handle Handle returned from `run` of callback to cancel
   * @return {void}
   */
  cancel(handle) {
    const idx = handle - microtaskLastHandle;

    if (idx >= 0) {
      if (!microtaskCallbacks[idx]) {
        throw new Error('invalid async handle: ' + handle);
      }

      microtaskCallbacks[idx] = null;
    }
  }

};
export { microTask };
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:55</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.async" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\async.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.async.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\async.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>async.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/async.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.boot">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.boot.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.boot.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53155.815932</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/* eslint-disable no-unused-vars */

/**
 * When using Closure Compiler, JSCompiler_renameProperty(property, object) is replaced by the munged name for object[property]
 * We cannot alias this function, so we have to use a small shim that has the same behavior when not compiling.
 *
 * @param {string} prop Property name
 * @param {?Object} obj Reference object
 * @return {string} Potentially renamed property name
 */
window.JSCompiler_renameProperty = function (prop, obj) {
  return prop;
};
/* eslint-enable */


export {};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:55</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.boot" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\boot.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.boot.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\boot.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>boot.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/boot.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.case.map">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.case.map.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.case.map.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53155.967141</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
const caseMap = {};
const DASH_TO_CAMEL = /-[a-z]/g;
const CAMEL_TO_DASH = /([A-Z])/g;
/**
 * @fileoverview Module with utilities for converting between "dash-case" and
 * "camelCase" identifiers.
 */

/**
 * Converts "dash-case" identifier (e.g. `foo-bar-baz`) to "camelCase"
 * (e.g. `fooBarBaz`).
 *
 * @param {string} dash Dash-case identifier
 * @return {string} Camel-case representation of the identifier
 */

export function dashToCamelCase(dash) {
  return caseMap[dash] || (caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL, m => m[1].toUpperCase()));
}
/**
 * Converts "camelCase" identifier (e.g. `fooBarBaz`) to "dash-case"
 * (e.g. `foo-bar-baz`).
 *
 * @param {string} camel Camel-case identifier
 * @return {string} Dash-case representation of the identifier
 */

export function camelToDashCase(camel) {
  return caseMap[camel] || (caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase());
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:55</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.case.map" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\case-map.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.case.map.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\case-map.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>case-map.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/case-map.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.class">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.class.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.class.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53156.119418</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { LegacyElementMixin } from '/%ZWebNode.Lib.Polymer.v3.legacy.element.mixin.cls';
import { legacyOptimizations } from '/%ZWebNode.Lib.Polymer.v3.settings.cls';
const lifecycleProps = {
  attached: true,
  detached: true,
  ready: true,
  created: true,
  beforeRegister: true,
  registered: true,
  attributeChanged: true,
  listeners: true,
  hostAttributes: true
};
const excludeOnInfo = {
  attached: true,
  detached: true,
  ready: true,
  created: true,
  beforeRegister: true,
  registered: true,
  attributeChanged: true,
  behaviors: true,
  _noAccessors: true
};
const excludeOnBehaviors = Object.assign({
  listeners: true,
  hostAttributes: true,
  properties: true,
  observers: true
}, excludeOnInfo);

function copyProperties(source, target, excludeProps) {
  const noAccessors = source._noAccessors;
  const propertyNames = Object.getOwnPropertyNames(source);

  for (let i = 0; i < propertyNames.length; i++) {
    let p = propertyNames[i];

    if (p in excludeProps) {
      continue;
    }

    if (noAccessors) {
      target[p] = source[p];
    } else {
      let pd = Object.getOwnPropertyDescriptor(source, p);

      if (pd) {
        // ensure property is configurable so that a later behavior can
        // re-configure it.
        pd.configurable = true;
        Object.defineProperty(target, p, pd);
      }
    }
  }
}
/**
 * Applies a "legacy" behavior or array of behaviors to the provided class.
 *
 * Note: this method will automatically also apply the `LegacyElementMixin`
 * to ensure that any legacy behaviors can rely on legacy Polymer API on
 * the underlying element.
 *
 * @function
 * @template T
 * @param {!Object|!Array<!Object>} behaviors Behavior object or array of behaviors.
 * @param {function(new:T)} klass Element class.
 * @return {?} Returns a new Element class extended by the
 * passed in `behaviors` and also by `LegacyElementMixin`.
 * @suppress {invalidCasts, checkTypes}
 */


export function mixinBehaviors(behaviors, klass) {
  return GenerateClassFromInfo({}, LegacyElementMixin(klass), behaviors);
} // NOTE:
// 1.x
// Behaviors were mixed in *in reverse order* and de-duped on the fly.
// The rule was that behavior properties were copied onto the element
// prototype if and only if the property did not already exist.
// Given: Polymer{ behaviors: [A, B, C, A, B]}, property copy order was:
// (1), B, (2), A, (3) C. This means prototype properties win over
// B properties win over A win over C. This mirrors what would happen
// with inheritance if element extended B extended A extended C.
//
// Again given, Polymer{ behaviors: [A, B, C, A, B]}, the resulting
// `behaviors` array was [C, A, B].
// Behavior lifecycle methods were called in behavior array order
// followed by the element, e.g. (1) C.created, (2) A.created,
// (3) B.created, (4) element.created. There was no support for
// super, and "super-behavior" methods were callable only by name).
//
// 2.x
// Behaviors are made into proper mixins which live in the
// element's prototype chain. Behaviors are placed in the element prototype
// eldest to youngest and de-duped youngest to oldest:
// So, first [A, B, C, A, B] becomes [C, A, B] then,
// the element prototype becomes (oldest) (1) PolymerElement, (2) class(C),
// (3) class(A), (4) class(B), (5) class(Polymer({...})).
// Result:
// This means element properties win over B properties win over A win
// over C. (same as 1.x)
// If lifecycle is called (super then me), order is
// (1) C.created, (2) A.created, (3) B.created, (4) element.created
// (again same as 1.x)

function applyBehaviors(proto, behaviors, lifecycle) {
  for (let i = 0; i < behaviors.length; i++) {
    applyInfo(proto, behaviors[i], lifecycle, excludeOnBehaviors);
  }
}

function applyInfo(proto, info, lifecycle, excludeProps) {
  copyProperties(info, proto, excludeProps);

  for (let p in lifecycleProps) {
    if (info[p]) {
      lifecycle[p] = lifecycle[p] || [];
      lifecycle[p].push(info[p]);
    }
  }
}
/**
 * @param {Array} behaviors List of behaviors to flatten.
 * @param {Array=} list Target list to flatten behaviors into.
 * @param {Array=} exclude List of behaviors to exclude from the list.
 * @return {!Array} Returns the list of flattened behaviors.
 */


function flattenBehaviors(behaviors, list, exclude) {
  list = list || [];

  for (let i = behaviors.length - 1; i >= 0; i--) {
    let b = behaviors[i];

    if (b) {
      if (Array.isArray(b)) {
        flattenBehaviors(b, list);
      } else {
        // dedup
        if (list.indexOf(b) < 0 && (!exclude || exclude.indexOf(b) < 0)) {
          list.unshift(b);
        }
      }
    } else {
      console.warn('behavior is null, check for missing or 404 import');
    }
  }

  return list;
}
/**
 * Copies property descriptors from source to target, overwriting all fields
 * of any previous descriptor for a property *except* for `value`, which is
 * merged in from the target if it does not exist on the source.
 *
 * @param {*} target Target properties object
 * @param {*} source Source properties object
 */


function mergeProperties(target, source) {
  for (const p in source) {
    const targetInfo = target[p];
    const sourceInfo = source[p];

    if (!('value' in sourceInfo) && targetInfo && 'value' in targetInfo) {
      target[p] = Object.assign({
        value: targetInfo.value
      }, sourceInfo);
    } else {
      target[p] = sourceInfo;
    }
  }
}
/* Note about construction and extension of legacy classes.
  [Changed in Q4 2018 to optimize performance.]

  When calling `Polymer` or `mixinBehaviors`, the generated class below is
  made. The list of behaviors was previously made into one generated class per
  behavior, but this is no longer the case as behaviors are now called
  manually. Note, there may *still* be multiple generated classes in the
  element's prototype chain if extension is used with `mixinBehaviors`.

  The generated class is directly tied to the info object and behaviors
  used to create it. That list of behaviors is filtered so it's only the
  behaviors not active on the superclass. In order to call through to the
  entire list of lifecycle methods, it's important to call `super`.

  The element's `properties` and `observers` are controlled via the finalization
  mechanism provided by `PropertiesMixin`. `Properties` and `observers` are
  collected by manually traversing the prototype chain and merging.

  To limit changes, the `_registered` method is called via `_initializeProperties`
  and not `_finalizeClass`.

*/

/**
 * @param {!PolymerInit} info Polymer info object
 * @param {function(new:HTMLElement)} Base base class to extend with info object
 * @param {Object=} behaviors behaviors to copy into the element
 * @return {function(new:HTMLElement)} Generated class
 * @suppress {checkTypes}
 * @private
 */


function GenerateClassFromInfo(info, Base, behaviors) {
  // manages behavior and lifecycle processing (filled in after class definition)
  let behaviorList;
  const lifecycle = {};
  /** @private */

  class PolymerGenerated extends Base {
    // explicitly not calling super._finalizeClass

    /** @nocollapse */
    static _finalizeClass() {
      // if calling via a subclass that hasn't been generated, pass through to super
      if (!this.hasOwnProperty(JSCompiler_renameProperty('generatedFrom', this))) {
        // TODO(https://github.com/google/closure-compiler/issues/3240):
        //     Change back to just super.methodCall()
        Base._finalizeClass.call(this);
      } else {
        // interleave properties and observers per behavior and `info`
        if (behaviorList) {
          for (let i = 0, b; i < behaviorList.length; i++) {
            b = behaviorList[i];

            if (b.properties) {
              this.createProperties(b.properties);
            }

            if (b.observers) {
              this.createObservers(b.observers, b.properties);
            }
          }
        }

        if (info.properties) {
          this.createProperties(info.properties);
        }

        if (info.observers) {
          this.createObservers(info.observers, info.properties);
        } // make sure to prepare the element template


        this._prepareTemplate();
      }
    }
    /** @nocollapse */


    static get properties() {
      const properties = {};

      if (behaviorList) {
        for (let i = 0; i < behaviorList.length; i++) {
          mergeProperties(properties, behaviorList[i].properties);
        }
      }

      mergeProperties(properties, info.properties);
      return properties;
    }
    /** @nocollapse */


    static get observers() {
      let observers = [];

      if (behaviorList) {
        for (let i = 0, b; i < behaviorList.length; i++) {
          b = behaviorList[i];

          if (b.observers) {
            observers = observers.concat(b.observers);
          }
        }
      }

      if (info.observers) {
        observers = observers.concat(info.observers);
      }

      return observers;
    }
    /**
     * @return {void}
     */


    created() {
      super.created();
      const list = lifecycle.created;

      if (list) {
        for (let i = 0; i < list.length; i++) {
          list[i].call(this);
        }
      }
    }
    /**
     * @return {void}
     */


    _registered() {
      /* NOTE: `beforeRegister` is called here for bc, but the behavior
        is different than in 1.x. In 1.0, the method was called *after*
        mixing prototypes together but *before* processing of meta-objects.
        However, dynamic effects can still be set here and can be done either
        in `beforeRegister` or `registered`. It is no longer possible to set
        `is` in `beforeRegister` as you could in 1.x.
      */
      // only proceed if the generated class' prototype has not been registered.
      const generatedProto = PolymerGenerated.prototype;

      if (!generatedProto.hasOwnProperty('__hasRegisterFinished')) {
        generatedProto.__hasRegisterFinished = true; // ensure superclass is registered first.

        super._registered(); // copy properties onto the generated class lazily if we're optimizing,


        if (legacyOptimizations) {
          copyPropertiesToProto(generatedProto);
        } // make sure legacy lifecycle is called on the *element*'s prototype
        // and not the generated class prototype; if the element has been
        // extended, these are *not* the same.


        const proto = Object.getPrototypeOf(this);
        let list = lifecycle.beforeRegister;

        if (list) {
          for (let i = 0; i < list.length; i++) {
            list[i].call(proto);
          }
        }

        list = lifecycle.registered;

        if (list) {
          for (let i = 0; i < list.length; i++) {
            list[i].call(proto);
          }
        }
      }
    }
    /**
     * @return {void}
     */


    _applyListeners() {
      super._applyListeners();

      const list = lifecycle.listeners;

      if (list) {
        for (let i = 0; i < list.length; i++) {
          const listeners = list[i];

          if (listeners) {
            for (let l in listeners) {
              this._addMethodEventListenerToNode(this, l, listeners[l]);
            }
          }
        }
      }
    } // note: exception to "super then me" rule;
    // do work before calling super so that super attributes
    // only apply if not already set.

    /**
     * @return {void}
     */


    _ensureAttributes() {
      const list = lifecycle.hostAttributes;

      if (list) {
        for (let i = list.length - 1; i >= 0; i--) {
          const hostAttributes = list[i];

          for (let a in hostAttributes) {
            this._ensureAttribute(a, hostAttributes[a]);
          }
        }
      }

      super._ensureAttributes();
    }
    /**
     * @return {void}
     */


    ready() {
      super.ready();
      let list = lifecycle.ready;

      if (list) {
        for (let i = 0; i < list.length; i++) {
          list[i].call(this);
        }
      }
    }
    /**
     * @return {void}
     */


    attached() {
      super.attached();
      let list = lifecycle.attached;

      if (list) {
        for (let i = 0; i < list.length; i++) {
          list[i].call(this);
        }
      }
    }
    /**
     * @return {void}
     */


    detached() {
      super.detached();
      let list = lifecycle.detached;

      if (list) {
        for (let i = 0; i < list.length; i++) {
          list[i].call(this);
        }
      }
    }
    /**
     * Implements native Custom Elements `attributeChangedCallback` to
     * set an attribute value to a property via `_attributeToProperty`.
     *
     * @param {string} name Name of attribute that changed
     * @param {?string} old Old attribute value
     * @param {?string} value New attribute value
     * @return {void}
     */


    attributeChanged(name, old, value) {
      super.attributeChanged();
      let list = lifecycle.attributeChanged;

      if (list) {
        for (let i = 0; i < list.length; i++) {
          list[i].call(this, name, old, value);
        }
      }
    }

  } // apply behaviors, note actual copying is done lazily at first instance creation


  if (behaviors) {
    // NOTE: ensure the behavior is extending a class with
    // legacy element api. This is necessary since behaviors expect to be able
    // to access 1.x legacy api.
    if (!Array.isArray(behaviors)) {
      behaviors = [behaviors];
    }

    let superBehaviors = Base.prototype.behaviors; // get flattened, deduped list of behaviors *not* already on super class

    behaviorList = flattenBehaviors(behaviors, null, superBehaviors);
    PolymerGenerated.prototype.behaviors = superBehaviors ? superBehaviors.concat(behaviors) : behaviorList;
  }

  const copyPropertiesToProto = proto => {
    if (behaviorList) {
      applyBehaviors(proto, behaviorList, lifecycle);
    }

    applyInfo(proto, info, lifecycle, excludeOnInfo);
  }; // copy properties if we're not optimizing


  if (!legacyOptimizations) {
    copyPropertiesToProto(PolymerGenerated.prototype);
  }

  PolymerGenerated.generatedFrom = info;
  return PolymerGenerated;
}
/**
 * Generates a class that extends `LegacyElement` based on the
 * provided info object.  Metadata objects on the `info` object
 * (`properties`, `observers`, `listeners`, `behaviors`, `is`) are used
 * for Polymer's meta-programming systems, and any functions are copied
 * to the generated class.
 *
 * Valid "metadata" values are as follows:
 *
 * `is`: String providing the tag name to register the element under. In
 * addition, if a `dom-module` with the same id exists, the first template
 * in that `dom-module` will be stamped into the shadow root of this element,
 * with support for declarative event listeners (`on-...`), Polymer data
 * bindings (`[[...]]` and `{{...}}`), and id-based node finding into
 * `this.$`.
 *
 * `properties`: Object describing property-related metadata used by Polymer
 * features (key: property names, value: object containing property metadata).
 * Valid keys in per-property metadata include:
 * - `type` (String|Number|Object|Array|...): Used by
 *   `attributeChangedCallback` to determine how string-based attributes
 *   are deserialized to JavaScript property values.
 * - `notify` (boolean): Causes a change in the property to fire a
 *   non-bubbling event called `<property>-changed`. Elements that have
 *   enabled two-way binding to the property use this event to observe changes.
 * - `readOnly` (boolean): Creates a getter for the property, but no setter.
 *   To set a read-only property, use the private setter method
 *   `_setProperty(property, value)`.
 * - `observer` (string): Observer method name that will be called when
 *   the property changes. The arguments of the method are
 *   `(value, previousValue)`.
 * - `computed` (string): String describing method and dependent properties
 *   for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).
 *   Computed properties are read-only by default and can only be changed
 *   via the return value of the computing method.
 *
 * `observers`: Array of strings describing multi-property observer methods
 *  and their dependent properties (e.g. `'observeABC(a, b, c)'`).
 *
 * `listeners`: Object describing event listeners to be added to each
 *  instance of this element (key: event name, value: method name).
 *
 * `behaviors`: Array of additional `info` objects containing metadata
 * and callbacks in the same format as the `info` object here which are
 * merged into this element.
 *
 * `hostAttributes`: Object listing attributes to be applied to the host
 *  once created (key: attribute name, value: attribute value).  Values
 *  are serialized based on the type of the value.  Host attributes should
 *  generally be limited to attributes such as `tabIndex` and `aria-...`.
 *  Attributes in `hostAttributes` are only applied if a user-supplied
 *  attribute is not already present (attributes in markup override
 *  `hostAttributes`).
 *
 * In addition, the following Polymer-specific callbacks may be provided:
 * - `registered`: called after first instance of this element,
 * - `created`: called during `constructor`
 * - `attached`: called during `connectedCallback`
 * - `detached`: called during `disconnectedCallback`
 * - `ready`: called before first `attached`, after all properties of
 *   this element have been propagated to its template and all observers
 *   have run
 *
 * @param {!PolymerInit} info Object containing Polymer metadata and functions
 *   to become class methods.
 * @template T
 * @param {function(T):T} mixin Optional mixin to apply to legacy base class
 *   before extending with Polymer metaprogramming.
 * @return {function(new:HTMLElement)} Generated class
 */


export const Class = function (info, mixin) {
  if (!info) {
    console.warn('Polymer.Class requires `info` argument');
  }

  let klass = mixin ? mixin(LegacyElementMixin(HTMLElement)) : LegacyElementMixin(HTMLElement);
  klass = GenerateClassFromInfo(info, klass, info.behaviors); // decorate klass with registration info

  klass.is = klass.prototype.is = info.is;
  return klass;
};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:56</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.class" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\class.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.class.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\class.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>class.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/class.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.common.regex">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.common.regex.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.common.regex.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53156.427889</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license
 Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
export const VAR_ASSIGN = /(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi;
export const MIXIN_MATCH = /(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi;
export const VAR_CONSUMED = /(--[\w-]+)\s*([:,;)]|$)/gi;
export const ANIMATION_MATCH = /(animation\s*:)|(animation-name\s*:)/;
export const MEDIA_MATCH = /@media\s(.*)/;
export const IS_VAR = /^--/;
export const BRACKETED = /\{[^}]*\}/g;
export const HOST_PREFIX = '(?:^|[^.#[:])';
export const HOST_SUFFIX = '($|[.:[\\s>+~])';
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:56</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.common.regex" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\common-regex.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.common.regex.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\common-regex.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>common-regex.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/common-regex.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.common.utils">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.common.utils.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.common.utils.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53156.569301</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license
 Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
'use strict';

import {MIXIN_MATCH, VAR_ASSIGN} from '/%ZWebNode.Lib.Polymer.v3.common.regex.cls';

/**
 * @param {Element} element
 * @param {Object=} properties
 */

export function updateNativeProperties(element, properties) {
    // remove previous properties
    for (let p in properties) {
        // NOTE: for bc with shim, don't apply null values.
        if (p === null) {
            element.style.removeProperty(p);
        } else {
            element.style.setProperty(p, properties[p]);
        }
    }
}

/**
 * @param {Element} element
 * @param {string} property
 * @return {string}
 */

export function getComputedStyleValue(element, property) {
    /**
     * @const {string}
     */
    const value = window.getComputedStyle(element).getPropertyValue(property);

    if (!value) {
        return '';
    } else {
        return value.trim();
    }
}

/**
 * return true if `cssText` contains a mixin definition or consumption
 * @param {string} cssText
 * @return {boolean}
 */

export function detectMixin(cssText) {
    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText); // reset state of the regexes

    MIXIN_MATCH.lastIndex = 0;
    VAR_ASSIGN.lastIndex = 0;
    return has;
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:56</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.common.utils" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\common-utils.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.common.utils.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\common-utils.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>common-utils.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/common-utils.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.css.parse">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.css.parse.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.css.parse.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53156.736871</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license
 Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

/*
Extremely simple css parser. Intended to be not more than what we need
and definitely not necessarily correct =).
*/
'use strict';

/** @unrestricted */

class StyleNode {
    constructor() {
        /** @type {number} */
        this['start'] = 0;
        /** @type {number} */

        this['end'] = 0;
        /** @type {StyleNode} */

        this['previous'] = null;
        /** @type {StyleNode} */

        this['parent'] = null;
        /** @type {Array<StyleNode>} */

        this['rules'] = null;
        /** @type {string} */

        this['parsedCssText'] = '';
        /** @type {string} */

        this['cssText'] = '';
        /** @type {boolean} */

        this['atRule'] = false;
        /** @type {number} */

        this['type'] = 0;
        /** @type {string} */

        this['keyframesName'] = '';
        /** @type {string} */

        this['selector'] = '';
        /** @type {string} */

        this['parsedSelector'] = '';
    }

}

export {StyleNode}; // given a string of css, return a simple rule tree

/**
 * @param {string} text
 * @return {StyleNode}
 */

export function parse(text) {
    text = clean(text);
    return parseCss(lex(text), text);
} // remove stuff we don't care about that may hinder parsing

/**
 * @param {string} cssText
 * @return {string}
 */

function clean(cssText) {
    return cssText.replace(RX.comments, '').replace(RX.port, '');
} // super simple {...} lexer that returns a node tree

/**
 * @param {string} text
 * @return {StyleNode}
 */


function lex(text) {
    let root = new StyleNode();
    root['start'] = 0;
    root['end'] = text.length;
    let n = root;

    for (let i = 0, l = text.length; i < l; i++) {
        if (text[i] === OPEN_BRACE) {
            if (!n['rules']) {
                n['rules'] = [];
            }

            let p = n;
            let previous = p['rules'][p['rules'].length - 1] || null;
            n = new StyleNode();
            n['start'] = i + 1;
            n['parent'] = p;
            n['previous'] = previous;
            p['rules'].push(n);
        } else if (text[i] === CLOSE_BRACE) {
            n['end'] = i + 1;
            n = n['parent'] || root;
        }
    }

    return root;
} // add selectors/cssText to node tree

/**
 * @param {StyleNode} node
 * @param {string} text
 * @return {StyleNode}
 */


function parseCss(node, text) {
    let t = text.substring(node['start'], node['end'] - 1);
    node['parsedCssText'] = node['cssText'] = t.trim();

    if (node['parent']) {
        let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];
        t = text.substring(ss, node['start'] - 1);
        t = _expandUnicodeEscapes(t);
        t = t.replace(RX.multipleSpaces, ' '); // TODO(sorvell): ad hoc; make selector include only after last ;
        // helps with mixin syntax

        t = t.substring(t.lastIndexOf(';') + 1);
        let s = node['parsedSelector'] = node['selector'] = t.trim();
        node['atRule'] = s.indexOf(AT_START) === 0; // note, support a subset of rule types...

        if (node['atRule']) {
            if (s.indexOf(MEDIA_START) === 0) {
                node['type'] = types.MEDIA_RULE;
            } else if (s.match(RX.keyframesRule)) {
                node['type'] = types.KEYFRAMES_RULE;
                node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();
            }
        } else {
            if (s.indexOf(VAR_START) === 0) {
                node['type'] = types.MIXIN_RULE;
            } else {
                node['type'] = types.STYLE_RULE;
            }
        }
    }

    let r$ = node['rules'];

    if (r$) {
        for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
            parseCss(r, text);
        }
    }

    return node;
}

/**
 * conversion of sort unicode escapes with spaces like `\33 ` (and longer) into
 * expanded form that doesn't require trailing space `\000033`
 * @param {string} s
 * @return {string}
 */


function _expandUnicodeEscapes(s) {
    return s.replace(/\\([0-9a-f]{1,6})\s/gi, function () {
        let code = arguments[1],
            repeat = 6 - code.length;

        while (repeat--) {
            code = '0' + code;
        }

        return '\\' + code;
    });
}

/**
 * stringify parsed css.
 * @param {StyleNode} node
 * @param {boolean=} preserveProperties
 * @param {string=} text
 * @return {string}
 */


export function stringify(node, preserveProperties, text = '') {
    // calc rule cssText
    let cssText = '';

    if (node['cssText'] || node['rules']) {
        let r$ = node['rules'];

        if (r$ && !_hasMixinRules(r$)) {
            for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
                cssText = stringify(r, preserveProperties, cssText);
            }
        } else {
            cssText = preserveProperties ? node['cssText'] : removeCustomProps(node['cssText']);
            cssText = cssText.trim();

            if (cssText) {
                cssText = '  ' + cssText + '\n';
            }
        }
    } // emit rule if there is cssText


    if (cssText) {
        if (node['selector']) {
            text += node['selector'] + ' ' + OPEN_BRACE + '\n';
        }

        text += cssText;

        if (node['selector']) {
            text += CLOSE_BRACE + '\n\n';
        }
    }

    return text;
}

/**
 * @param {Array<StyleNode>} rules
 * @return {boolean}
 */

function _hasMixinRules(rules) {
    let r = rules[0];
    return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;
}

/**
 * @param {string} cssText
 * @return {string}
 */


function removeCustomProps(cssText) {
    cssText = removeCustomPropAssignment(cssText);
    return removeCustomPropApply(cssText);
}

/**
 * @param {string} cssText
 * @return {string}
 */


export function removeCustomPropAssignment(cssText) {
    return cssText.replace(RX.customProp, '').replace(RX.mixinProp, '');
}

/**
 * @param {string} cssText
 * @return {string}
 */

function removeCustomPropApply(cssText) {
    return cssText.replace(RX.mixinApply, '').replace(RX.varApply, '');
}

/** @enum {number} */


export const types = {
    STYLE_RULE: 1,
    KEYFRAMES_RULE: 7,
    MEDIA_RULE: 4,
    MIXIN_RULE: 1000
};
const OPEN_BRACE = '{';
const CLOSE_BRACE = '}'; // helper regexp's

const RX = {
    comments: /\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim,
    port: /@import[^;]*;/gim,
    customProp: /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,
    mixinProp: /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,
    mixinApply: /@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,
    varApply: /[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,
    keyframesRule: /^@[^\s]*keyframes/,
    multipleSpaces: /\s+/g
};
const VAR_START = '--';
const MEDIA_START = '@media';
const AT_START = '@';
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:56</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.css.parse" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\css-parse.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.css.parse.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\css-parse.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>css-parse.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/css-parse.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.custom.elements.es5.adapter">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.custom.elements.es5.adapter.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.custom.elements.es5.adapter.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53156.962574</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license @nocompile
 Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
(function () {
    'use strict';

    (function () {
        if (void 0 === window.Reflect || void 0 === window.customElements || window.customElements.hasOwnProperty('polyfillWrapFlushCallback')) return;
        const a = HTMLElement;
        window.HTMLElement = function HTMLElement() {
            return Reflect.construct(a, [], this.constructor)
        }, HTMLElement.prototype = a.prototype, HTMLElement.prototype.constructor = HTMLElement, Object.setPrototypeOf(HTMLElement, a);
    })();

}());
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:56</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.custom.elements.es5.adapter" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\custom-elements-es5-adapter.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.custom.elements.es5.adapter.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\custom-elements-es5-adapter.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>custom-elements-es5-adapter.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/custom-elements-es5-adapter.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.custom.style">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.custom.style.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.custom.style.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53157.115646</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import "/%ZWebNode.Lib.Polymer.v3.custom.style.interface.edit.cls";
import { cssFromModules } from '/%ZWebNode.Lib.Polymer.v3.style.gather.cls';
const attr = 'include';
const CustomStyleInterface = window.ShadyCSS.CustomStyleInterface;
/**
 * Custom element for defining styles in the main document that can take
 * advantage of [shady DOM](https://github.com/webcomponents/shadycss) shims
 * for style encapsulation, custom properties, and custom mixins.
 *
 * - Document styles defined in a `<custom-style>` are shimmed to ensure they
 *   do not leak into local DOM when running on browsers without native
 *   Shadow DOM.
 * - Custom properties can be defined in a `<custom-style>`. Use the `html` selector
 *   to define custom properties that apply to all custom elements.
 * - Custom mixins can be defined in a `<custom-style>`, if you import the optional
 *   [apply shim](https://github.com/webcomponents/shadycss#about-applyshim)
 *   (`shadycss/apply-shim.html`).
 *
 * To use:
 *
 * - Import `custom-style.html`.
 * - Place a `<custom-style>` element in the main document, wrapping an inline `<style>` tag that
 *   contains the CSS rules you want to shim.
 *
 * For example:
 *
 * ```html
 * <!-- import apply shim--only required if using mixins -->
 * <link rel="import" href="v3/bower_components/shadycss/apply-shim.html"/>
 * <!-- import custom-style element -->
 * <link rel="import" href="v3/bower_components/polymer/lib/elements/custom-style.html"/>
 *
 * <custom-style>
 *   <style>
 *     html {
 *       --custom-color: blue;
 *       --custom-mixin: {
 *         font-weight: bold;
 *         color: red;
 *       };
 *     }
 *   </style>
 * </custom-style>
 * ```
 *
 * @customElement
 * @extends HTMLElement
 * @summary Custom element for defining styles in the main document that can
 *   take advantage of Polymer's style scoping and custom properties shims.
 */

export class CustomStyle extends HTMLElement {
  constructor() {
    super();
    this._style = null;
    CustomStyleInterface.addCustomStyle(this);
  }
  /**
   * Returns the light-DOM `<style>` child this element wraps.  Upon first
   * call any style modules referenced via the `include` attribute will be
   * concatenated to this element's `<style>`.
   *
   * @export
   * @return {HTMLStyleElement} This element's light-DOM `<style>`
   */


  getStyle() {
    if (this._style) {
      return this._style;
    }

    const style =
    /** @type {HTMLStyleElement} */
    this.querySelector('style');

    if (!style) {
      return null;
    }

    this._style = style;
    const include = style.getAttribute(attr);

    if (include) {
      style.removeAttribute(attr);
      /** @suppress {deprecated} */

      style.textContent = cssFromModules(include) + style.textContent;
    }
    /*
    HTML Imports styling the main document are deprecated in Chrome
    https://crbug.com/523952
     If this element is not in the main document, then it must be in an HTML Import document.
    In that case, move the custom style to the main document.
     The ordering of `<custom-style>` should stay the same as when loaded by HTML Imports, but there may be odd
    cases of ordering w.r.t the main document styles.
    */


    if (this.ownerDocument !== window.document) {
      window.document.head.appendChild(this);
    }

    return this._style;
  }

}
window.customElements.define('custom-style', CustomStyle);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:57</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.custom.style" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\custom-style.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.custom.style.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\custom-style.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>custom-style.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/custom-style.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.custom.style.interface">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.custom.style.interface.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.custom.style.interface.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53157.295849</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license
 Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
'use strict';

import documentWait from '/%ZWebNode.Lib.Polymer.v3.document.wait.cls';

/**
 * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}
 */

export let CustomStyleProvider;
const SEEN_MARKER = '__seenByShadyCSS';
const CACHED_STYLE = '__shadyCSSCachedStyle';
/** @type {?function(!HTMLStyleElement)} */

let transformFn = null;
/** @type {?function()} */

let validateFn = null;
/**
 This interface is provided to add document-level <style> elements to ShadyCSS for processing.
 These styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles
 In addition, these styles may also need to be processed for @apply rules and CSS Custom Properties

 To add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`

 In addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.
 This function will be called when calculating styles.

 An example usage of the document-level styling api can be found in `examples/document-style-lib.js`

 @unrestricted
 */

export default class CustomStyleInterface {
    constructor() {
        /** @type {!Array<!CustomStyleProvider>} */
        this['customStyles'] = [];
        this['enqueued'] = false; // NOTE(dfreedm): use quotes here to prevent closure inlining to `function(){}`;

        documentWait(() => {
            if (window['ShadyCSS']['flushCustomStyles']) {
                window['ShadyCSS']['flushCustomStyles']();
            }
        });
    }

    /**
     * Queue a validation for new custom styles to batch style recalculations
     */


    enqueueDocumentValidation() {
        if (this['enqueued'] || !validateFn) {
            return;
        }

        this['enqueued'] = true;
        documentWait(validateFn);
    }

    /**
     * @param {!HTMLStyleElement} style
     */


    addCustomStyle(style) {
        if (!style[SEEN_MARKER]) {
            style[SEEN_MARKER] = true;
            this['customStyles'].push(style);
            this.enqueueDocumentValidation();
        }
    }

    /**
     * @param {!CustomStyleProvider} customStyle
     * @return {HTMLStyleElement}
     */


    getStyleForCustomStyle(customStyle) {
        if (customStyle[CACHED_STYLE]) {
            return customStyle[CACHED_STYLE];
        }

        let style;

        if (customStyle['getStyle']) {
            style = customStyle['getStyle']();
        } else {
            style = customStyle;
        }

        return style;
    }

    /**
     * @return {!Array<!CustomStyleProvider>}
     */


    processStyles() {
        const cs = this['customStyles'];

        for (let i = 0; i < cs.length; i++) {
            const customStyle = cs[i];

            if (customStyle[CACHED_STYLE]) {
                continue;
            }

            const style = this.getStyleForCustomStyle(customStyle);

            if (style) {
                // HTMLImports polyfill may have cloned the style into the main document,
                // which is referenced with __appliedElement.
                const styleToTransform =
                    /** @type {!HTMLStyleElement} */
                    style['__appliedElement'] || style;

                if (transformFn) {
                    transformFn(styleToTransform);
                }

                customStyle[CACHED_STYLE] = styleToTransform;
            }
        }

        return cs;
    }

}
/* eslint-disable no-self-assign */

CustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;
CustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;
CustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;
/* eslint-enable no-self-assign */

Object.defineProperties(CustomStyleInterface.prototype, {
    'transformCallback': {
        /** @return {?function(!HTMLStyleElement)} */
        get() {
            return transformFn;
        },

        /** @param {?function(!HTMLStyleElement)} fn */
        set(fn) {
            transformFn = fn;
        }

    },
    'validateCallback': {
        /** @return {?function()} */
        get() {
            return validateFn;
        },

        /**
         * @param {?function()} fn
         * @this {CustomStyleInterface}
         */
        set(fn) {
            let needsEnqueue = false;

            if (!validateFn) {
                needsEnqueue = true;
            }

            validateFn = fn;

            if (needsEnqueue) {
                this.enqueueDocumentValidation();
            }
        }

    }
});
/** @typedef {{
 * customStyles: !Array<!CustomStyleProvider>,
 * addCustomStyle: function(!CustomStyleProvider),
 * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,
 * findStyles: function(),
 * transformCallback: ?function(!HTMLStyleElement),
 * validateCallback: ?function()
 * }}
 */

export const CustomStyleInterfaceInterface = {};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:57</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.custom.style.interface" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\custom-style-interface.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.custom.style.interface.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\custom-style-interface.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>custom-style-interface.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/custom-style-interface.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.custom.style.interface.edit">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.custom.style.interface.edit.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.custom.style.interface.edit.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53157.488783</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';

import CustomStyleInterface from '/%ZWebNode.Lib.Polymer.v3.custom.style.interface.cls';
import { getComputedStyleValue, updateNativeProperties } from '/%ZWebNode.Lib.Polymer.v3.common.utils.cls';
import { nativeCssVariables, nativeShadow, cssBuild, disableRuntime } from '/%ZWebNode.Lib.Polymer.v3.style.settings.cls';
const customStyleInterfaceEdit = new CustomStyleInterface();

if (!window.ShadyCSS) {
  window.ShadyCSS = {
    /**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @param {string=} elementExtends
     */
    prepareTemplate(template, elementName, elementExtends) {},

    // eslint-disable-line no-unused-vars

    /**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     */
    prepareTemplateDom(template, elementName) {},

    // eslint-disable-line no-unused-vars

    /**
     * @param {!HTMLTemplateElement} template
     * @param {string} elementName
     * @param {string=} elementExtends
     */
    prepareTemplateStyles(template, elementName, elementExtends) {},

    // eslint-disable-line no-unused-vars

    /**
     * @param {Element} element
     * @param {Object=} properties
     */
    styleSubtree(element, properties) {
      customStyleInterfaceEdit.processStyles();
      updateNativeProperties(element, properties);
    },

    /**
     * @param {Element} element
     */
    styleElement(element) {
      // eslint-disable-line no-unused-vars
      customStyleInterfaceEdit.processStyles();
    },

    /**
     * @param {Object=} properties
     */
    styleDocument(properties) {
      customStyleInterfaceEdit.processStyles();
      updateNativeProperties(document.body, properties);
    },

    /**
     * @param {Element} element
     * @param {string} property
     * @return {string}
     */
    getComputedStyleValue(element, property) {
      return getComputedStyleValue(element, property);
    },

    flushCustomStyles() {},

    nativeCss: nativeCssVariables,
    nativeShadow: nativeShadow,
    cssBuild: cssBuild,
    disableRuntime: disableRuntime
  };
}

window.ShadyCSS.CustomStyleInterface = customStyleInterfaceEdit;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:57</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.custom.style.interface.edit" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\custom-style-interface-edit.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.custom.style.interface.edit.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\custom-style-interface-edit.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>custom-style-interface-edit.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/custom-style-interface-edit.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.debounce">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.debounce.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.debounce.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53157.661674</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import '/%ZWebNode.Lib.Polymer.v3.async.cls';
/**
 * @summary Collapse multiple callbacks into one invocation after a timer.
 */

export class Debouncer {
  constructor() {
    this._asyncModule = null;
    this._callback = null;
    this._timer = null;
  }
  /**
   * Sets the scheduler; that is, a module with the Async interface,
   * a callback and optional arguments to be passed to the run function
   * from the async module.
   *
   * @param {!AsyncInterface} asyncModule Object with Async interface.
   * @param {function()} callback Callback to run.
   * @return {void}
   */


  setConfig(asyncModule, callback) {
    this._asyncModule = asyncModule;
    this._callback = callback;
    this._timer = this._asyncModule.run(() => {
      this._timer = null;
      debouncerQueue.delete(this);

      this._callback();
    });
  }
  /**
   * Cancels an active debouncer and returns a reference to itself.
   *
   * @return {void}
   */


  cancel() {
    if (this.isActive()) {
      this._cancelAsync(); // Canceling a debouncer removes its spot from the flush queue,
      // so if a debouncer is manually canceled and re-debounced, it
      // will reset its flush order (this is a very minor difference from 1.x)
      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order


      debouncerQueue.delete(this);
    }
  }
  /**
   * Cancels a debouncer's async callback.
   *
   * @return {void}
   */


  _cancelAsync() {
    if (this.isActive()) {
      this._asyncModule.cancel(
      /** @type {number} */
      this._timer);

      this._timer = null;
    }
  }
  /**
   * Flushes an active debouncer and returns a reference to itself.
   *
   * @return {void}
   */


  flush() {
    if (this.isActive()) {
      this.cancel();

      this._callback();
    }
  }
  /**
   * Returns true if the debouncer is active.
   *
   * @return {boolean} True if active.
   */


  isActive() {
    return this._timer != null;
  }
  /**
   * Creates a debouncer if no debouncer is passed as a parameter
   * or it cancels an active debouncer otherwise. The following
   * example shows how a debouncer can be called multiple times within a
   * microtask and "debounced" such that the provided callback function is
   * called once. Add this method to a custom element:
   *
   * ```js
   * import {microTask} from 'polymer/polymer/lib/utils/async.js';
   * import {Debouncer} from 'polymer/polymer/lib/utils/debounce.js';
   * // ...
   *
   * _debounceWork() {
   *   this._debounceJob = Debouncer.debounce(this._debounceJob,
   *       microTask, () => this._doWork());
   * }
   * ```
   *
   * If the `_debounceWork` method is called multiple times within the same
   * microtask, the `_doWork` function will be called only once at the next
   * microtask checkpoint.
   *
   * Note: In testing it is often convenient to avoid asynchrony. To accomplish
   * this with a debouncer, you can use `enqueueDebouncer` and
   * `flush`. For example, extend the above example by adding
   * `enqueueDebouncer(this._debounceJob)` at the end of the
   * `_debounceWork` method. Then in a test, call `flush` to ensure
   * the debouncer has completed.
   *
   * @param {Debouncer?} debouncer Debouncer object.
   * @param {!AsyncInterface} asyncModule Object with Async interface
   * @param {function()} callback Callback to run.
   * @return {!Debouncer} Returns a debouncer object.
   */


  static debounce(debouncer, asyncModule, callback) {
    if (debouncer instanceof Debouncer) {
      // Cancel the async callback, but leave in debouncerQueue if it was
      // enqueued, to maintain 1.x flush order
      debouncer._cancelAsync();
    } else {
      debouncer = new Debouncer();
    }

    debouncer.setConfig(asyncModule, callback);
    return debouncer;
  }

}
let debouncerQueue = new Set();
/**
 * Adds a `Debouncer` to a list of globally flushable tasks.
 *
 * @param {!Debouncer} debouncer Debouncer to enqueue
 * @return {void}
 */

export const enqueueDebouncer = function (debouncer) {
  debouncerQueue.add(debouncer);
};
/**
 * Flushes any enqueued debouncers
 *
 * @return {boolean} Returns whether any debouncers were flushed
 */

export const flushDebouncers = function () {
  const didFlush = Boolean(debouncerQueue.size); // If new debouncers are added while flushing, Set.forEach will ensure
  // newly added ones are also flushed

  debouncerQueue.forEach(debouncer => {
    try {
      debouncer.flush();
    } catch (e) {
      setTimeout(() => {
        throw e;
      });
    }
  });
  return didFlush;
};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:57</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.debounce" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\debounce.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.debounce.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\debounce.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>debounce.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/debounce.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.dir.mixin">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.dir.mixin.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.dir.mixin.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53157.851843</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 * @fileoverview
 * @suppress {checkPrototypalTypes}
 * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt The complete set of authors may be found
 * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may
 * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by
 * Google as part of the polymer project is also subject to an additional IP
 * rights grant found at http://polymer.github.io/PATENTS.txt
 */
import { PropertyAccessors } from '/%ZWebNode.Lib.Polymer.v3.property.accessors.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
const HOST_DIR = /:host\(:dir\((ltr|rtl)\)\)/g;
const HOST_DIR_REPLACMENT = ':host([dir="$1"])';
const EL_DIR = /([\s\w-#\.\[\]\*]*):dir\((ltr|rtl)\)/g;
const EL_DIR_REPLACMENT = ':host([dir="$2"]) $1';
const DIR_CHECK = /:dir\((?:ltr|rtl)\)/;
const SHIM_SHADOW = Boolean(window['ShadyDOM'] && window['ShadyDOM']['inUse']);
/**
 * @type {!Array<!Polymer_DirMixin>}
 */

const DIR_INSTANCES = [];
/** @type {?MutationObserver} */

let observer = null;
let DOCUMENT_DIR = '';

function getRTL() {
  DOCUMENT_DIR = document.documentElement.getAttribute('dir');
}
/**
 * @param {!Polymer_DirMixin} instance Instance to set RTL status on
 */


function setRTL(instance) {
  if (!instance.__autoDirOptOut) {
    const el =
    /** @type {!HTMLElement} */
    instance;
    el.setAttribute('dir', DOCUMENT_DIR);
  }
}

function updateDirection() {
  getRTL();
  DOCUMENT_DIR = document.documentElement.getAttribute('dir');

  for (let i = 0; i < DIR_INSTANCES.length; i++) {
    setRTL(DIR_INSTANCES[i]);
  }
}

function takeRecords() {
  if (observer && observer.takeRecords().length) {
    updateDirection();
  }
}
/**
 * Element class mixin that allows elements to use the `:dir` CSS Selector to
 * have text direction specific styling.
 *
 * With this mixin, any stylesheet provided in the template will transform
 * `:dir` into `:host([dir])` and sync direction with the page via the
 * element's `dir` attribute.
 *
 * Elements can opt out of the global page text direction by setting the `dir`
 * attribute directly in `ready()` or in HTML.
 *
 * Caveats:
 * - Applications must set `<html dir="ltr">` or `<html dir="rtl">` to sync
 *   direction
 * - Automatic left-to-right or right-to-left styling is sync'd with the
 *   `<html>` element only.
 * - Changing `dir` at runtime is supported.
 * - Opting out of the global direction styling is permanent
 *
 * @mixinFunction
 * polymer
 * @appliesMixin PropertyAccessors
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */


export const DirMixin = dedupingMixin(base => {
  if (!SHIM_SHADOW) {
    if (!observer) {
      getRTL();
      observer = new MutationObserver(updateDirection);
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['dir']
      });
    }
  }
  /**
   * @constructor
   * @implements {Polymer_PropertyAccessors}
   * @private
   */


  const elementBase = PropertyAccessors(base);
  /**
   * polymer
   * @mixinClass
   * @implements {Polymer_DirMixin}
   */

  class Dir extends elementBase {
    /**
     * @param {string} cssText .
     * @param {string} baseURI .
     * @return {string} .
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */
    static _processStyleText(cssText, baseURI) {
      // TODO(https://github.com/google/closure-compiler/issues/3240):
      //     Change back to just super.methodCall()
      cssText = elementBase._processStyleText.call(this, cssText, baseURI);

      if (!SHIM_SHADOW && DIR_CHECK.test(cssText)) {
        cssText = this._replaceDirInCssText(cssText);
        this.__activateDir = true;
      }

      return cssText;
    }
    /**
     * Replace `:dir` in the given CSS text
     *
     * @param {string} text CSS text to replace DIR
     * @return {string} Modified CSS
     * @nocollapse
     */


    static _replaceDirInCssText(text) {
      let replacedText = text;
      replacedText = replacedText.replace(HOST_DIR, HOST_DIR_REPLACMENT);
      replacedText = replacedText.replace(EL_DIR, EL_DIR_REPLACMENT);
      return replacedText;
    }

    constructor() {
      super();
      /** @type {boolean} */

      this.__autoDirOptOut = false;
    }
    /**
     * @override
     * @suppress {invalidCasts} Closure doesn't understand that `this` is an
     *     HTMLElement
     * @return {void}
     */


    ready() {
      super.ready();
      this.__autoDirOptOut =
      /** @type {!HTMLElement} */
      this.hasAttribute('dir');
    }
    /**
     * @override
     * @suppress {missingProperties} If it exists on elementBase, it can be
     *   super'd
     * @return {void}
     */


    connectedCallback() {
      if (elementBase.prototype.connectedCallback) {
        super.connectedCallback();
      }

      if (this.constructor.__activateDir) {
        takeRecords();
        DIR_INSTANCES.push(this);
        setRTL(this);
      }
    }
    /**
     * @override
     * @suppress {missingProperties} If it exists on elementBase, it can be
     *   super'd
     * @return {void}
     */


    disconnectedCallback() {
      if (elementBase.prototype.disconnectedCallback) {
        super.disconnectedCallback();
      }

      if (this.constructor.__activateDir) {
        const idx = DIR_INSTANCES.indexOf(this);

        if (idx > -1) {
          DIR_INSTANCES.splice(idx, 1);
        }
      }
    }

  }

  Dir.__activateDir = false;
  return Dir;
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:57</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.dir.mixin" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\dir-mixin.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.dir.mixin.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\dir-mixin.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>dir-mixin.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/dir-mixin.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.document.wait">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.document.wait.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.document.wait.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53158.059159</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license
 Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
'use strict';
/** @type {Promise<void>} */

let readyPromise = null;
/** @type {?function(?function())} */

let whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;
/** @type {function()} */

let resolveFn;
/**
 * @param {?function()} callback
 */

export default function documentWait(callback) {
    requestAnimationFrame(function () {
        if (whenReady) {
            whenReady(callback);
        } else {
            if (!readyPromise) {
                readyPromise = new Promise(resolve => {
                    resolveFn = resolve;
                });

                if (document.readyState === 'complete') {
                    resolveFn();
                } else {
                    document.addEventListener('readystatechange', () => {
                        if (document.readyState === 'complete') {
                            resolveFn();
                        }
                    });
                }
            }

            readyPromise.then(function () {
                callback && callback();
            });
        }
    });
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:58</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.document.wait" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\document-wait.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.document.wait.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\document-wait.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>document-wait.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/document-wait.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.dom.bind">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.dom.bind.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.dom.bind.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53158.218968</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { PropertyEffects } from '/%ZWebNode.Lib.Polymer.v3.property.effects.cls';
import { OptionalMutableData } from '/%ZWebNode.Lib.Polymer.v3.mutable.data.cls';
import { GestureEventListeners } from '/%ZWebNode.Lib.Polymer.v3.gesture.event.listeners.cls';
import { strictTemplatePolicy } from '/%ZWebNode.Lib.Polymer.v3.settings.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
import { hideElementsGlobally } from '/%ZWebNode.Lib.Polymer.v3.hide.template.controls.cls';
/**
 * @constructor
 * @extends {HTMLElement}
 * @implements {Polymer_PropertyEffects}
 * @implements {Polymer_OptionalMutableData}
 * @implements {Polymer_GestureEventListeners}
 * @private
 */

const domBindBase = GestureEventListeners(OptionalMutableData(PropertyEffects(HTMLElement)));
/**
 * Custom element to allow using Polymer's template features (data binding,
 * declarative event listeners, etc.) in the main document without defining
 * a new custom element.
 *
 * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`
 * element, which will immediately stamp the wrapped template into the main
 * document and bind elements to the `dom-bind` element itself as the
 * binding scope.
 *
 * polymer
 * @customElement
 * @appliesMixin PropertyEffects
 * @appliesMixin OptionalMutableData
 * @appliesMixin GestureEventListeners
 * @extends {domBindBase}
 * @summary Custom element to allow using Polymer's template features (data
 *   binding, declarative event listeners, etc.) in the main document.
 */

export class DomBind extends domBindBase {
  static get observedAttributes() {
    return ['mutable-data'];
  }

  constructor() {
    super();

    if (strictTemplatePolicy) {
      throw new Error(`strictTemplatePolicy: dom-bind not allowed`);
    }

    this.root = null;
    this.$ = null;
    this.__children = null;
  }
  /* eslint-disable no-unused-vars */

  /**
   * @override
   * @param {string} name Name of attribute that changed
   * @param {?string} old Old attribute value
   * @param {?string} value New attribute value
   * @param {?string} namespace Attribute namespace.
   * @return {void}
   */


  attributeChangedCallback(name, old, value, namespace) {
    // assumes only one observed attribute
    this.mutableData = true;
  }
  /**
   * @override
   * @return {void}
   */


  connectedCallback() {
    if (!hideElementsGlobally()) {
      this.style.display = 'none';
    }

    this.render();
  }
  /**
   * @override
   * @return {void}
   */


  disconnectedCallback() {
    this.__removeChildren();
  }

  __insertChildren() {
    wrap(wrap(this).parentNode).insertBefore(this.root, this);
  }

  __removeChildren() {
    if (this.__children) {
      for (let i = 0; i < this.__children.length; i++) {
        this.root.appendChild(this.__children[i]);
      }
    }
  }
  /**
   * Forces the element to render its content. This is typically only
   * necessary to call if HTMLImports with the async attribute are used.
   * @return {void}
   */


  render() {
    let template;

    if (!this.__children) {
      template =
      /** @type {HTMLTemplateElement} */
      template || this.querySelector('template');

      if (!template) {
        // Wait until childList changes and template should be there by then
        let observer = new MutationObserver(() => {
          template =
          /** @type {HTMLTemplateElement} */
          this.querySelector('template');

          if (template) {
            observer.disconnect();
            this.render();
          } else {
            throw new Error('dom-bind requires a <template> child');
          }
        });
        observer.observe(this, {
          childList: true
        });
        return;
      }

      this.root = this._stampTemplate(
      /** @type {!HTMLTemplateElement} */
      template);
      this.$ = this.root.$;
      this.__children = [];

      for (let n = this.root.firstChild; n; n = n.nextSibling) {
        this.__children[this.__children.length] = n;
      }

      this._enableProperties();
    }

    this.__insertChildren();

    this.dispatchEvent(new CustomEvent('dom-change', {
      bubbles: true,
      composed: true
    }));
  }

}
customElements.define('dom-bind', DomBind);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:58</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.dom.bind" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\dom-bind.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.dom.bind.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\dom-bind.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>dom-bind.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/dom-bind.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.dom.if">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.dom.if.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.dom.if.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53158.406344</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { PolymerElement } from '/%ZWebNode.Lib.Polymer.v3.polymer.element.cls';
import { templatize } from '/%ZWebNode.Lib.Polymer.v3.templatize.cls';
import { Debouncer } from '/%ZWebNode.Lib.Polymer.v3.debounce.cls';
import { enqueueDebouncer, flush } from '/%ZWebNode.Lib.Polymer.v3.flush.cls';
import { microTask } from '/%ZWebNode.Lib.Polymer.v3.async.cls';
import { root } from '/%ZWebNode.Lib.Polymer.v3.path.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
import { hideElementsGlobally } from '/%ZWebNode.Lib.Polymer.v3.hide.template.controls.cls';
/**
 * The `<dom-if>` element will stamp a light-dom `<template>` child when
 * the `if` property becomes truthy, and the template can use Polymer
 * data-binding and declarative event features when used in the context of
 * a Polymer element's template.
 *
 * When `if` becomes falsy, the stamped content is hidden but not
 * removed from dom. When `if` subsequently becomes truthy again, the content
 * is simply re-shown. This approach is used due to its favorable performance
 * characteristics: the expense of creating template content is paid only
 * once and lazily.
 *
 * Set the `restamp` property to true to force the stamped content to be
 * created / destroyed when the `if` condition changes.
 *
 * @customElement
 * polymer
 * @extends PolymerElement
 * @summary Custom element that conditionally stamps and hides or removes
 *   template content based on a boolean flag.
 */

export class DomIf extends PolymerElement {
  // Not needed to find template; can be removed once the analyzer
  // can find the tag name from customElements.define call
  static get is() {
    return 'dom-if';
  }

  static get template() {
    return null;
  }

  static get properties() {
    return {
      /**
       * Fired whenever DOM is added or removed/hidden by this template (by
       * default, rendering occurs lazily).  To force immediate rendering, call
       * `render`.
       *
       * @event dom-change
       */

      /**
       * A boolean indicating whether this template should stamp.
       */
      if: {
        type: Boolean,
        observer: '__debounceRender'
      },

      /**
       * When true, elements will be removed from DOM and discarded when `if`
       * becomes false and re-created and added back to the DOM when `if`
       * becomes true.  By default, stamped elements will be hidden but left
       * in the DOM when `if` becomes false, which is generally results
       * in better performance.
       */
      restamp: {
        type: Boolean,
        observer: '__debounceRender'
      }
    };
  }

  constructor() {
    super();
    this.__renderDebouncer = null;
    this.__invalidProps = null;
    this.__instance = null;
    this._lastIf = false;
    this.__ctor = null;
    this.__hideTemplateChildren__ = false;
  }

  __debounceRender() {
    // Render is async for 2 reasons:
    // 1. To eliminate dom creation trashing if user code thrashes `if` in the
    //    same turn. This was more common in 1.x where a compound computed
    //    property could result in the result changing multiple times, but is
    //    mitigated to a large extent by batched property processing in 2.x.
    // 2. To avoid double object propagation when a bag including values bound
    //    to the `if` property as well as one or more hostProps could enqueue
    //    the <dom-if> to flush before the <template>'s host property
    //    forwarding. In that scenario creating an instance would result in
    //    the host props being set once, and then the enqueued changes on the
    //    template would set properties a second time, potentially causing an
    //    object to be set to an instance more than once.  Creating the
    //    instance async from flushing data ensures this doesn't happen. If
    //    we wanted a sync option in the future, simply having <dom-if> flush
    //    (or clear) its template's pending host properties before creating
    //    the instance would also avoid the problem.
    this.__renderDebouncer = Debouncer.debounce(this.__renderDebouncer, microTask, () => this.__render());
    enqueueDebouncer(this.__renderDebouncer);
  }
  /**
   * @override
   * @return {void}
   */


  disconnectedCallback() {
    super.disconnectedCallback();
    const parent = wrap(this).parentNode;

    if (!parent || parent.nodeType == Node.DOCUMENT_FRAGMENT_NODE && !wrap(parent).host) {
      this.__teardownInstance();
    }
  }
  /**
   * @override
   * @return {void}
   */


  connectedCallback() {
    super.connectedCallback();

    if (!hideElementsGlobally()) {
      this.style.display = 'none';
    }

    if (this.if) {
      this.__debounceRender();
    }
  }
  /**
   * Forces the element to render its content. Normally rendering is
   * asynchronous to a provoking change. This is done for efficiency so
   * that multiple changes trigger only a single render. The render method
   * should be called if, for example, template rendering is required to
   * validate application state.
   * @return {void}
   */


  render() {
    flush();
  }

  __render() {
    if (this.if) {
      if (!this.__ensureInstance()) {
        // No template found yet
        return;
      }

      this._showHideChildren();
    } else if (this.restamp) {
      this.__teardownInstance();
    }

    if (!this.restamp && this.__instance) {
      this._showHideChildren();
    }

    if (this.if != this._lastIf) {
      this.dispatchEvent(new CustomEvent('dom-change', {
        bubbles: true,
        composed: true
      }));
      this._lastIf = this.if;
    }
  }

  __ensureInstance() {
    let parentNode = wrap(this).parentNode; // Guard against element being detached while render was queued

    if (parentNode) {
      if (!this.__ctor) {
        let template =
        /** @type {HTMLTemplateElement} */
        wrap(this).querySelector('template');

        if (!template) {
          // Wait until childList changes and template should be there by then
          let observer = new MutationObserver(() => {
            if (wrap(this).querySelector('template')) {
              observer.disconnect();

              this.__render();
            } else {
              throw new Error('dom-if requires a <template> child');
            }
          });
          observer.observe(this, {
            childList: true
          });
          return false;
        }

        this.__ctor = templatize(template, this, {
          // dom-if templatizer instances require `mutable: true`, as
          // `__syncHostProperties` relies on that behavior to sync objects
          mutableData: true,

          /**
           * @param {string} prop Property to forward
           * @param {*} value Value of property
           * @this {DomIf}
           */
          forwardHostProp: function (prop, value) {
            if (this.__instance) {
              if (this.if) {
                this.__instance.forwardHostProp(prop, value);
              } else {
                // If we have an instance but are squelching host property
                // forwarding due to if being false, note the invalidated
                // properties so `__syncHostProperties` can sync them the next
                // time `if` becomes true
                this.__invalidProps = this.__invalidProps || Object.create(null);
                this.__invalidProps[root(prop)] = true;
              }
            }
          }
        });
      }

      if (!this.__instance) {
        this.__instance = new this.__ctor();
        wrap(parentNode).insertBefore(this.__instance.root, this);
      } else {
        this.__syncHostProperties();

        let c$ = this.__instance.children;

        if (c$ && c$.length) {
          // Detect case where dom-if was re-attached in new position
          let lastChild = wrap(this).previousSibling;

          if (lastChild !== c$[c$.length - 1]) {
            for (let i = 0, n; i < c$.length && (n = c$[i]); i++) {
              wrap(parentNode).insertBefore(n, this);
            }
          }
        }
      }
    }

    return true;
  }

  __syncHostProperties() {
    let props = this.__invalidProps;

    if (props) {
      for (let prop in props) {
        this.__instance._setPendingProperty(prop, this.__dataHost[prop]);
      }

      this.__invalidProps = null;

      this.__instance._flushProperties();
    }
  }

  __teardownInstance() {
    if (this.__instance) {
      let c$ = this.__instance.children;

      if (c$ && c$.length) {
        // use first child parent, for case when dom-if may have been detached
        let parent = wrap(c$[0]).parentNode; // Instance children may be disconnected from parents when dom-if
        // detaches if a tree was innerHTML'ed

        if (parent) {
          parent = wrap(parent);

          for (let i = 0, n; i < c$.length && (n = c$[i]); i++) {
            parent.removeChild(n);
          }
        }
      }

      this.__instance = null;
      this.__invalidProps = null;
    }
  }
  /**
   * Shows or hides the template instance top level child elements. For
   * text nodes, `textContent` is removed while "hidden" and replaced when
   * "shown."
   * @return {void}
   * @protected
   * @suppress {visibility}
   */


  _showHideChildren() {
    let hidden = this.__hideTemplateChildren__ || !this.if;

    if (this.__instance) {
      this.__instance._showHideChildren(hidden);
    }
  }

}
customElements.define(DomIf.is, DomIf);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:58</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.dom.if" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\dom-if.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.dom.if.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\dom-if.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>dom-if.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/dom-if.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.dom.module">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.dom.module.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.dom.module.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53158.689378</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { resolveUrl, pathFromUrl } from '/%ZWebNode.Lib.Polymer.v3.resolve.url.cls';
import { strictTemplatePolicy } from '/%ZWebNode.Lib.Polymer.v3.settings.cls';
let modules = {};
let lcModules = {};
/**
 * Sets a dom-module into the global registry by id.
 *
 * @param {string} id dom-module id
 * @param {DomModule} module dom-module instance
 * @return {void}
 */

function setModule(id, module) {
  // store id separate from lowercased id so that
  // in all cases mixedCase id will stored distinctly
  // and lowercase version is a fallback
  modules[id] = lcModules[id.toLowerCase()] = module;
}
/**
 * Retrieves a dom-module from the global registry by id.
 *
 * @param {string} id dom-module id
 * @return {DomModule!} dom-module instance
 */


function findModule(id) {
  return modules[id] || lcModules[id.toLowerCase()];
}

function styleOutsideTemplateCheck(inst) {
  if (inst.querySelector('style')) {
    console.warn('dom-module %s has style outside template', inst.id);
  }
}
/**
 * The `dom-module` element registers the dom it contains to the name given
 * by the module's id attribute. It provides a unified database of dom
 * accessible via its static `import` API.
 *
 * A key use case of `dom-module` is for providing custom element `<template>`s
 * via HTML imports that are parsed by the native HTML parser, that can be
 * relocated during a bundling pass and still looked up by `id`.
 *
 * Example:
 *
 *     <dom-module id="foo">
 *       <img src="v3/stuff.png">
 *     </dom-module>
 *
 * Then in code in some other location that cannot access the dom-module above
 *
 *     let img = customElements.get('dom-module').import('foo', 'img');
 *
 * @customElement
 * @extends HTMLElement
 * @summary Custom element that provides a registry of relocatable DOM content
 *   by `id` that is agnostic to bundling.
 * @unrestricted
 */


export class DomModule extends HTMLElement {
  /** @override */
  static get observedAttributes() {
    return ['id'];
  }
  /**
   * Retrieves the element specified by the css `selector` in the module
   * registered by `id`. For example, this.import('foo', 'img');
   * @param {string} id The id of the dom-module in which to search.
   * @param {string=} selector The css selector by which to find the element.
   * @return {Element} Returns the element which matches `selector` in the
   * module registered at the specified `id`.
   *
   * @export
   * @nocollapse Referred to indirectly in style-gather.js
   */


  static import(id, selector) {
    if (id) {
      let m = findModule(id);

      if (m && selector) {
        return m.querySelector(selector);
      }

      return m;
    }

    return null;
  }
  /* eslint-disable no-unused-vars */

  /**
   * @param {string} name Name of attribute.
   * @param {?string} old Old value of attribute.
   * @param {?string} value Current value of attribute.
   * @param {?string} namespace Attribute namespace.
   * @return {void}
   * @override
   */


  attributeChangedCallback(name, old, value, namespace) {
    if (old !== value) {
      this.register();
    }
  }
  /* eslint-enable no-unused-args */

  /**
   * The absolute URL of the original location of this `dom-module`.
   *
   * This value will differ from this element's `ownerDocument` in the
   * following ways:
   * - Takes into account any `assetpath` attribute added during bundling
   *   to indicate the original location relative to the bundled location
   * - Uses the HTMLImports polyfill's `importForElement` API to ensure
   *   the path is relative to the import document's location since
   *   `ownerDocument` is not currently polyfilled
   */


  get assetpath() {
    // Don't override existing assetpath.
    if (!this.__assetpath) {
      // note: assetpath set via an attribute must be relative to this
      // element's location; accomodate polyfilled HTMLImports
      const owner = window.HTMLImports && HTMLImports.importForElement ? HTMLImports.importForElement(this) || document : this.ownerDocument;
      const url = resolveUrl(this.getAttribute('assetpath') || '', owner.baseURI);
      this.__assetpath = pathFromUrl(url);
    }

    return this.__assetpath;
  }
  /**
   * Registers the dom-module at a given id. This method should only be called
   * when a dom-module is imperatively created. For
   * example, `document.createElement('dom-module').register('foo')`.
   * @param {string=} id The id at which to register the dom-module.
   * @return {void}
   */


  register(id) {
    id = id || this.id;

    if (id) {
      // Under strictTemplatePolicy, reject and null out any re-registered
      // dom-module since it is ambiguous whether first-in or last-in is trusted
      if (strictTemplatePolicy && findModule(id) !== undefined) {
        setModule(id, null);
        throw new Error(`strictTemplatePolicy: dom-module ${id} re-registered`);
      }

      this.id = id;
      setModule(id, this);
      styleOutsideTemplateCheck(this);
    }
  }

}
DomModule.prototype['modules'] = modules;
customElements.define('dom-module', DomModule);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:58</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.dom.module" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\dom-module.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.dom.module.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\dom-module.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>dom-module.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/dom-module.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.dom.repeat">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.dom.repeat.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.dom.repeat.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53158.802647</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { PolymerElement } from '/%ZWebNode.Lib.Polymer.v3.polymer.element.cls';
import { TemplateInstanceBase, templatize, modelForElement } from '/%ZWebNode.Lib.Polymer.v3.templatize.cls'; // eslint-disable-line no-unused-vars

import { Debouncer } from '/%ZWebNode.Lib.Polymer.v3.debounce.cls';
import { enqueueDebouncer, flush } from '/%ZWebNode.Lib.Polymer.v3.flush.cls';
import { OptionalMutableData } from '/%ZWebNode.Lib.Polymer.v3.mutable.data.cls';
import { matches, translate } from '/%ZWebNode.Lib.Polymer.v3.path.cls';
import { timeOut, microTask } from '/%ZWebNode.Lib.Polymer.v3.async.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
import { hideElementsGlobally } from '/%ZWebNode.Lib.Polymer.v3.hide.template.controls.cls';
/**
 * @constructor
 * @implements {Polymer_OptionalMutableData}
 * @extends {PolymerElement}
 * @private
 */

const domRepeatBase = OptionalMutableData(PolymerElement);
/**
 * The `<dom-repeat>` element will automatically stamp and binds one instance
 * of template content to each object in a user-provided array.
 * `dom-repeat` accepts an `items` property, and one instance of the template
 * is stamped for each item into the DOM at the location of the `dom-repeat`
 * element.  The `item` property will be set on each instance's binding
 * scope, thus templates should bind to sub-properties of `item`.
 *
 * Example:
 *
 * ```html
 * <dom-module id="employee-list">
 *
 *   <template>
 *
 *     <div> Employee list: </div>
 *     <dom-repeat items="{{employees}}">
 *       <template>
 *         <div>First name: <span>{{item.first}}</span></div>
 *         <div>Last name: <span>{{item.last}}</span></div>
 *       </template>
 *     </dom-repeat>
 *
 *   </template>
 *
 * </dom-module>
 * ```
 *
 * With the following custom element definition:
 *
 * ```js
 * class EmployeeList extends PolymerElement {
 *   static get is() { return 'employee-list'; }
 *   static get properties() {
 *     return {
 *       employees: {
 *         value() {
 *           return [
 *             {first: 'Bob', last: 'Smith'},
 *             {first: 'Sally', last: 'Johnson'},
 *             ...
 *           ];
 *         }
 *       }
 *     };
 *   }
 * }
 * ```
 *
 * Notifications for changes to items sub-properties will be forwarded to template
 * instances, which will update via the normal structured data notification system.
 *
 * Mutations to the `items` array itself should be made using the Array
 * mutation API's on the PropertyEffects mixin (`push`, `pop`, `splice`,
 * `shift`, `unshift`), and template instances will be kept in sync with the
 * data in the array.
 *
 * Events caught by event handlers within the `dom-repeat` template will be
 * decorated with a `model` property, which represents the binding scope for
 * each template instance.  The model should be used to manipulate data on the
 * instance, for example `event.model.set('item.checked', true);`.
 *
 * Alternatively, the model for a template instance for an element stamped by
 * a `dom-repeat` can be obtained using the `modelForElement` API on the
 * `dom-repeat` that stamped it, for example
 * `this.$.domRepeat.modelForElement(event.target).set('item.checked', true);`.
 * This may be useful for manipulating instance data of event targets obtained
 * by event handlers on parents of the `dom-repeat` (event delegation).
 *
 * A view-specific filter/sort may be applied to each `dom-repeat` by supplying a
 * `filter` and/or `sort` property.  This may be a string that names a function on
 * the host, or a function may be assigned to the property directly.  The functions
 * should implemented following the standard `Array` filter/sort API.
 *
 * In order to re-run the filter or sort functions based on changes to sub-fields
 * of `items`, the `observe` property may be set as a space-separated list of
 * `item` sub-fields that should cause a re-filter/sort when modified.  If
 * the filter or sort function depends on properties not contained in `items`,
 * the user should observe changes to those properties and call `render` to update
 * the view based on the dependency change.
 *
 * For example, for an `dom-repeat` with a filter of the following:
 *
 * ```js
 * isEngineer(item) {
 *   return item.type == 'engineer' || item.manager.type == 'engineer';
 * }
 * ```
 *
 * Then the `observe` property should be configured as follows:
 *
 * ```html
 * <dom-repeat items="{{employees}}" filter="isEngineer" observe="type manager.type">
 * ```
 *
 * @customElement
 * polymer
 * @extends {domRepeatBase}
 * @appliesMixin OptionalMutableData
 * @summary Custom element for stamping instance of a template bound to
 *   items in an array.
 */

export class DomRepeat extends domRepeatBase {
  // Not needed to find template; can be removed once the analyzer
  // can find the tag name from customElements.define call
  static get is() {
    return 'dom-repeat';
  }

  static get template() {
    return null;
  }

  static get properties() {
    /**
     * Fired whenever DOM is added or removed by this template (by
     * default, rendering occurs lazily).  To force immediate rendering, call
     * `render`.
     *
     * @event dom-change
     */
    return {
      /**
       * An array containing items determining how many instances of the template
       * to stamp and that that each template instance should bind to.
       */
      items: {
        type: Array
      },

      /**
       * The name of the variable to add to the binding scope for the array
       * element associated with a given template instance.
       */
      as: {
        type: String,
        value: 'item'
      },

      /**
       * The name of the variable to add to the binding scope with the index
       * of the instance in the sorted and filtered list of rendered items.
       * Note, for the index in the `this.items` array, use the value of the
       * `itemsIndexAs` property.
       */
      indexAs: {
        type: String,
        value: 'index'
      },

      /**
       * The name of the variable to add to the binding scope with the index
       * of the instance in the `this.items` array. Note, for the index of
       * this instance in the sorted and filtered list of rendered items,
       * use the value of the `indexAs` property.
       */
      itemsIndexAs: {
        type: String,
        value: 'itemsIndex'
      },

      /**
       * A function that should determine the sort order of the items.  This
       * property should either be provided as a string, indicating a method
       * name on the element's host, or else be an actual function.  The
       * function should match the sort function passed to `Array.sort`.
       * Using a sort function has no effect on the underlying `items` array.
       */
      sort: {
        type: Function,
        observer: '__sortChanged'
      },

      /**
       * A function that can be used to filter items out of the view.  This
       * property should either be provided as a string, indicating a method
       * name on the element's host, or else be an actual function.  The
       * function should match the sort function passed to `Array.filter`.
       * Using a filter function has no effect on the underlying `items` array.
       */
      filter: {
        type: Function,
        observer: '__filterChanged'
      },

      /**
       * When using a `filter` or `sort` function, the `observe` property
       * should be set to a space-separated list of the names of item
       * sub-fields that should trigger a re-sort or re-filter when changed.
       * These should generally be fields of `item` that the sort or filter
       * function depends on.
       */
      observe: {
        type: String,
        observer: '__observeChanged'
      },

      /**
       * When using a `filter` or `sort` function, the `delay` property
       * determines a debounce time in ms after a change to observed item
       * properties that must pass before the filter or sort is re-run.
       * This is useful in rate-limiting shuffling of the view when
       * item changes may be frequent.
       */
      delay: Number,

      /**
       * Count of currently rendered items after `filter` (if any) has been applied.
       * If "chunking mode" is enabled, `renderedItemCount` is updated each time a
       * set of template instances is rendered.
       *
       */
      renderedItemCount: {
        type: Number,
        notify: true,
        readOnly: true
      },

      /**
       * Defines an initial count of template instances to render after setting
       * the `items` array, before the next paint, and puts the `dom-repeat`
       * into "chunking mode".  The remaining items will be created and rendered
       * incrementally at each animation frame therof until all instances have
       * been rendered.
       */
      initialCount: {
        type: Number,
        observer: '__initializeChunking'
      },

      /**
       * When `initialCount` is used, this property defines a frame rate (in
       * fps) to target by throttling the number of instances rendered each
       * frame to not exceed the budget for the target frame rate.  The
       * framerate is effectively the number of `requestAnimationFrame`s that
       * it tries to allow to actually fire in a given second. It does this
       * by measuring the time between `rAF`s and continuously adjusting the
       * number of items created each `rAF` to maintain the target framerate.
       * Setting this to a higher number allows lower latency and higher
       * throughput for event handlers and other tasks, but results in a
       * longer time for the remaining items to complete rendering.
       */
      targetFramerate: {
        type: Number,
        value: 20
      },
      _targetFrameTime: {
        type: Number,
        computed: '__computeFrameTime(targetFramerate)'
      }
    };
  }

  static get observers() {
    return ['__itemsChanged(items.*)'];
  }

  constructor() {
    super();
    this.__instances = [];
    this.__limit = Infinity;
    this.__pool = [];
    this.__renderDebouncer = null;
    this.__itemsIdxToInstIdx = {};
    this.__chunkCount = null;
    this.__lastChunkTime = null;
    this.__sortFn = null;
    this.__filterFn = null;
    this.__observePaths = null;
    /** @type {?function(new:TemplateInstanceBase, Object=)} */

    this.__ctor = null;
    this.__isDetached = true;
    this.template = null;
  }
  /**
   * @override
   * @return {void}
   */


  disconnectedCallback() {
    super.disconnectedCallback();
    this.__isDetached = true;

    for (let i = 0; i < this.__instances.length; i++) {
      this.__detachInstance(i);
    }
  }
  /**
   * @override
   * @return {void}
   */


  connectedCallback() {
    super.connectedCallback();

    if (!hideElementsGlobally()) {
      this.style.display = 'none';
    } // only perform attachment if the element was previously detached.


    if (this.__isDetached) {
      this.__isDetached = false;
      let wrappedParent = wrap(wrap(this).parentNode);

      for (let i = 0; i < this.__instances.length; i++) {
        this.__attachInstance(i, wrappedParent);
      }
    }
  }

  __ensureTemplatized() {
    // Templatizing (generating the instance constructor) needs to wait
    // until ready, since won't have its template content handed back to
    // it until then
    if (!this.__ctor) {
      let template = this.template =
      /** @type {HTMLTemplateElement} */
      this.querySelector('template');

      if (!template) {
        // // Wait until childList changes and template should be there by then
        let observer = new MutationObserver(() => {
          if (this.querySelector('template')) {
            observer.disconnect();

            this.__render();
          } else {
            throw new Error('dom-repeat requires a <template> child');
          }
        });
        observer.observe(this, {
          childList: true
        });
        return false;
      } // Template instance props that should be excluded from forwarding


      let instanceProps = {};
      instanceProps[this.as] = true;
      instanceProps[this.indexAs] = true;
      instanceProps[this.itemsIndexAs] = true;
      this.__ctor = templatize(template, this, {
        mutableData: this.mutableData,
        parentModel: true,
        instanceProps: instanceProps,

        /**
         * @this {DomRepeat}
         * @param {string} prop Property to set
         * @param {*} value Value to set property to
         */
        forwardHostProp: function (prop, value) {
          let i$ = this.__instances;

          for (let i = 0, inst; i < i$.length && (inst = i$[i]); i++) {
            inst.forwardHostProp(prop, value);
          }
        },

        /**
         * @this {DomRepeat}
         * @param {Object} inst Instance to notify
         * @param {string} prop Property to notify
         * @param {*} value Value to notify
         */
        notifyInstanceProp: function (inst, prop, value) {
          if (matches(this.as, prop)) {
            let idx = inst[this.itemsIndexAs];

            if (prop == this.as) {
              this.items[idx] = value;
            }

            let path = translate(this.as, `${JSCompiler_renameProperty('items', this)}.${idx}`, prop);
            this.notifyPath(path, value);
          }
        }
      });
    }

    return true;
  }

  __getMethodHost() {
    // Technically this should be the owner of the outermost template.
    // In shadow dom, this is always getRootNode().host, but we can
    // approximate this via cooperation with our dataHost always setting
    // `_methodHost` as long as there were bindings (or id's) on this
    // instance causing it to get a dataHost.
    return this.__dataHost._methodHost || this.__dataHost;
  }

  __functionFromPropertyValue(functionOrMethodName) {
    if (typeof functionOrMethodName === 'string') {
      let methodName = functionOrMethodName;

      let obj = this.__getMethodHost();

      return function () {
        return obj[methodName].apply(obj, arguments);
      };
    }

    return functionOrMethodName;
  }

  __sortChanged(sort) {
    this.__sortFn = this.__functionFromPropertyValue(sort);

    if (this.items) {
      this.__debounceRender(this.__render);
    }
  }

  __filterChanged(filter) {
    this.__filterFn = this.__functionFromPropertyValue(filter);

    if (this.items) {
      this.__debounceRender(this.__render);
    }
  }

  __computeFrameTime(rate) {
    return Math.ceil(1000 / rate);
  }

  __initializeChunking() {
    if (this.initialCount) {
      this.__limit = this.initialCount;
      this.__chunkCount = this.initialCount;
      this.__lastChunkTime = performance.now();
    }
  }

  __tryRenderChunk() {
    // Debounced so that multiple calls through `_render` between animation
    // frames only queue one new rAF (e.g. array mutation & chunked render)
    if (this.items && this.__limit < this.items.length) {
      this.__debounceRender(this.__requestRenderChunk);
    }
  }

  __requestRenderChunk() {
    requestAnimationFrame(() => this.__renderChunk());
  }

  __renderChunk() {
    // Simple auto chunkSize throttling algorithm based on feedback loop:
    // measure actual time between frames and scale chunk count by ratio
    // of target/actual frame time
    let currChunkTime = performance.now();
    let ratio = this._targetFrameTime / (currChunkTime - this.__lastChunkTime);
    this.__chunkCount = Math.round(this.__chunkCount * ratio) || 1;
    this.__limit += this.__chunkCount;
    this.__lastChunkTime = currChunkTime;

    this.__debounceRender(this.__render);
  }

  __observeChanged() {
    this.__observePaths = this.observe && this.observe.replace('.*', '.').split(' ');
  }

  __itemsChanged(change) {
    if (this.items && !Array.isArray(this.items)) {
      console.warn('dom-repeat expected array for `items`, found', this.items);
    } // If path was to an item (e.g. 'items.3' or 'items.3.foo'), forward the
    // path to that instance synchronously (returns false for non-item paths)


    if (!this.__handleItemPath(change.path, change.value)) {
      // Otherwise, the array was reset ('items') or spliced ('items.splices'),
      // so queue a full refresh
      this.__initializeChunking();

      this.__debounceRender(this.__render);
    }
  }

  __handleObservedPaths(path) {
    // Handle cases where path changes should cause a re-sort/filter
    if (this.__sortFn || this.__filterFn) {
      if (!path) {
        // Always re-render if the item itself changed
        this.__debounceRender(this.__render, this.delay);
      } else if (this.__observePaths) {
        // Otherwise, re-render if the path changed matches an observed path
        let paths = this.__observePaths;

        for (let i = 0; i < paths.length; i++) {
          if (path.indexOf(paths[i]) === 0) {
            this.__debounceRender(this.__render, this.delay);
          }
        }
      }
    }
  }
  /**
   * @param {function(this:DomRepeat)} fn Function to debounce.
   * @param {number=} delay Delay in ms to debounce by.
   */


  __debounceRender(fn, delay = 0) {
    this.__renderDebouncer = Debouncer.debounce(this.__renderDebouncer, delay > 0 ? timeOut.after(delay) : microTask, fn.bind(this));
    enqueueDebouncer(this.__renderDebouncer);
  }
  /**
   * Forces the element to render its content. Normally rendering is
   * asynchronous to a provoking change. This is done for efficiency so
   * that multiple changes trigger only a single render. The render method
   * should be called if, for example, template rendering is required to
   * validate application state.
   * @return {void}
   */


  render() {
    // Queue this repeater, then flush all in order
    this.__debounceRender(this.__render);

    flush();
  }

  __render() {
    if (!this.__ensureTemplatized()) {
      // No template found yet
      return;
    }

    this.__applyFullRefresh(); // Reset the pool
    // TODO(kschaaf): Reuse pool across turns and nested templates
    // Now that objects/arrays are re-evaluated when set, we can safely
    // reuse pooled instances across turns, however we still need to decide
    // semantics regarding how long to hold, how many to hold, etc.


    this.__pool.length = 0; // Set rendered item count

    this._setRenderedItemCount(this.__instances.length); // Notify users


    this.dispatchEvent(new CustomEvent('dom-change', {
      bubbles: true,
      composed: true
    })); // Check to see if we need to render more items

    this.__tryRenderChunk();
  }

  __applyFullRefresh() {
    let items = this.items || [];
    let isntIdxToItemsIdx = new Array(items.length);

    for (let i = 0; i < items.length; i++) {
      isntIdxToItemsIdx[i] = i;
    } // Apply user filter


    if (this.__filterFn) {
      isntIdxToItemsIdx = isntIdxToItemsIdx.filter((i, idx, array) => this.__filterFn(items[i], idx, array));
    } // Apply user sort


    if (this.__sortFn) {
      isntIdxToItemsIdx.sort((a, b) => this.__sortFn(items[a], items[b]));
    } // items->inst map kept for item path forwarding


    const itemsIdxToInstIdx = this.__itemsIdxToInstIdx = {};
    let instIdx = 0; // Generate instances and assign items

    const limit = Math.min(isntIdxToItemsIdx.length, this.__limit);

    for (; instIdx < limit; instIdx++) {
      let inst = this.__instances[instIdx];
      let itemIdx = isntIdxToItemsIdx[instIdx];
      let item = items[itemIdx];
      itemsIdxToInstIdx[itemIdx] = instIdx;

      if (inst) {
        inst._setPendingProperty(this.as, item);

        inst._setPendingProperty(this.indexAs, instIdx);

        inst._setPendingProperty(this.itemsIndexAs, itemIdx);

        inst._flushProperties();
      } else {
        this.__insertInstance(item, instIdx, itemIdx);
      }
    } // Remove any extra instances from previous state


    for (let i = this.__instances.length - 1; i >= instIdx; i--) {
      this.__detachAndRemoveInstance(i);
    }
  }

  __detachInstance(idx) {
    let inst = this.__instances[idx];
    const wrappedRoot = wrap(inst.root);

    for (let i = 0; i < inst.children.length; i++) {
      let el = inst.children[i];
      wrappedRoot.appendChild(el);
    }

    return inst;
  }

  __attachInstance(idx, parent) {
    let inst = this.__instances[idx]; // Note, this is pre-wrapped as an optimization

    parent.insertBefore(inst.root, this);
  }

  __detachAndRemoveInstance(idx) {
    let inst = this.__detachInstance(idx);

    if (inst) {
      this.__pool.push(inst);
    }

    this.__instances.splice(idx, 1);
  }

  __stampInstance(item, instIdx, itemIdx) {
    let model = {};
    model[this.as] = item;
    model[this.indexAs] = instIdx;
    model[this.itemsIndexAs] = itemIdx;
    return new this.__ctor(model);
  }

  __insertInstance(item, instIdx, itemIdx) {
    let inst = this.__pool.pop();

    if (inst) {
      // TODO(kschaaf): If the pool is shared across turns, hostProps
      // need to be re-set to reused instances in addition to item
      inst._setPendingProperty(this.as, item);

      inst._setPendingProperty(this.indexAs, instIdx);

      inst._setPendingProperty(this.itemsIndexAs, itemIdx);

      inst._flushProperties();
    } else {
      inst = this.__stampInstance(item, instIdx, itemIdx);
    }

    let beforeRow = this.__instances[instIdx + 1];
    let beforeNode = beforeRow ? beforeRow.children[0] : this;
    wrap(wrap(this).parentNode).insertBefore(inst.root, beforeNode);
    this.__instances[instIdx] = inst;
    return inst;
  } // Implements extension point from Templatize mixin

  /**
   * Shows or hides the template instance top level child elements. For
   * text nodes, `textContent` is removed while "hidden" and replaced when
   * "shown."
   * @param {boolean} hidden Set to true to hide the children;
   * set to false to show them.
   * @return {void}
   * @protected
   */


  _showHideChildren(hidden) {
    for (let i = 0; i < this.__instances.length; i++) {
      this.__instances[i]._showHideChildren(hidden);
    }
  } // Called as a side effect of a host items.<key>.<path> path change,
  // responsible for notifying item.<path> changes to inst for key


  __handleItemPath(path, value) {
    let itemsPath = path.slice(6); // 'items.'.length == 6

    let dot = itemsPath.indexOf('.');
    let itemsIdx = dot < 0 ? itemsPath : itemsPath.substring(0, dot); // If path was index into array...

    if (itemsIdx == parseInt(itemsIdx, 10)) {
      let itemSubPath = dot < 0 ? '' : itemsPath.substring(dot + 1); // If the path is observed, it will trigger a full refresh

      this.__handleObservedPaths(itemSubPath); // Note, even if a rull refresh is triggered, always do the path
      // notification because unless mutableData is used for dom-repeat
      // and all elements in the instance subtree, a full refresh may
      // not trigger the proper update.


      let instIdx = this.__itemsIdxToInstIdx[itemsIdx];
      let inst = this.__instances[instIdx];

      if (inst) {
        let itemPath = this.as + (itemSubPath ? '.' + itemSubPath : ''); // This is effectively `notifyPath`, but avoids some of the overhead
        // of the public API

        inst._setPendingPropertyOrPath(itemPath, value, false, true);

        inst._flushProperties();
      }

      return true;
    }
  }
  /**
   * Returns the item associated with a given element stamped by
   * this `dom-repeat`.
   *
   * Note, to modify sub-properties of the item,
   * `modelForElement(el).set('item.<sub-prop>', value)`
   * should be used.
   *
   * @param {!HTMLElement} el Element for which to return the item.
   * @return {*} Item associated with the element.
   */


  itemForElement(el) {
    let instance = this.modelForElement(el);
    return instance && instance[this.as];
  }
  /**
   * Returns the inst index for a given element stamped by this `dom-repeat`.
   * If `sort` is provided, the index will reflect the sorted order (rather
   * than the original array order).
   *
   * @param {!HTMLElement} el Element for which to return the index.
   * @return {?number} Row index associated with the element (note this may
   *   not correspond to the array index if a user `sort` is applied).
   */


  indexForElement(el) {
    let instance = this.modelForElement(el);
    return instance && instance[this.indexAs];
  }
  /**
   * Returns the template "model" associated with a given element, which
   * serves as the binding scope for the template instance the element is
   * contained in. A template model
   * should be used to manipulate data associated with this template instance.
   *
   * Example:
   *
   *   let model = modelForElement(el);
   *   if (model.index < 10) {
   *     model.set('item.checked', true);
   *   }
   *
   * @param {!HTMLElement} el Element for which to return a template model.
   * @return {TemplateInstanceBase} Model representing the binding scope for
   *   the element.
   */


  modelForElement(el) {
    return modelForElement(this.template, el);
  }

}
customElements.define(DomRepeat.is, DomRepeat);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:58</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.dom.repeat" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\dom-repeat.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.dom.repeat.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\dom-repeat.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>dom-repeat.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/dom-repeat.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.element.mixin">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.element.mixin.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.element.mixin.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53159.066561</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 * @fileoverview
 * @suppress {checkPrototypalTypes}
 * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt The complete set of authors may be found
 * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may
 * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by
 * Google as part of the polymer project is also subject to an additional IP
 * rights grant found at http://polymer.github.io/PATENTS.txt
 */
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { rootPath, strictTemplatePolicy, allowTemplateFromDomModule, legacyOptimizations, syncInitialRender } from '/%ZWebNode.Lib.Polymer.v3.settings.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import { stylesFromTemplate, stylesFromModuleImports } from '/%ZWebNode.Lib.Polymer.v3.style.gather.cls';
import { pathFromUrl, resolveCss, resolveUrl } from '/%ZWebNode.Lib.Polymer.v3.resolve.url.cls';
import { DomModule } from '/%ZWebNode.Lib.Polymer.v3.dom.module.cls';
import { PropertyEffects } from '/%ZWebNode.Lib.Polymer.v3.property.effects.cls';
import { PropertiesMixin } from '/%ZWebNode.Lib.Polymer.v3.properties.mixin.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
/**
 * Current Polymer version in Semver notation.
 * @type {string} Semver notation of the current version of Polymer.
 */

export const version = '3.3.0';
const builtCSS = window.ShadyCSS && window.ShadyCSS['cssBuild'];
/**
 * Element class mixin that provides the core API for Polymer's meta-programming
 * features including template stamping, data-binding, attribute deserialization,
 * and property change observation.
 *
 * Subclassers may provide the following static getters to return metadata
 * used to configure Polymer's features for the class:
 *
 * - `static get is()`: When the template is provided via a `dom-module`,
 *   users should return the `dom-module` id from a static `is` getter.  If
 *   no template is needed or the template is provided directly via the
 *   `template` getter, there is no need to define `is` for the element.
 *
 * - `static get template()`: Users may provide the template directly (as
 *   opposed to via `dom-module`) by implementing a static `template` getter.
 *   The getter must return an `HTMLTemplateElement`.
 *
 * - `static get properties()`: Should return an object describing
 *   property-related metadata used by Polymer features (key: property name
 *   value: object containing property metadata). Valid keys in per-property
 *   metadata include:
 *   - `type` (String|Number|Object|Array|...): Used by
 *     `attributeChangedCallback` to determine how string-based attributes
 *     are deserialized to JavaScript property values.
 *   - `notify` (boolean): Causes a change in the property to fire a
 *     non-bubbling event called `<property>-changed`. Elements that have
 *     enabled two-way binding to the property use this event to observe changes.
 *   - `readOnly` (boolean): Creates a getter for the property, but no setter.
 *     To set a read-only property, use the private setter method
 *     `_setProperty(property, value)`.
 *   - `observer` (string): Observer method name that will be called when
 *     the property changes. The arguments of the method are
 *     `(value, previousValue)`.
 *   - `computed` (string): String describing method and dependent properties
 *     for computing the value of this property (e.g. `'computeFoo(bar, zot)'`).
 *     Computed properties are read-only by default and can only be changed
 *     via the return value of the computing method.
 *
 * - `static get observers()`: Array of strings describing multi-property
 *   observer methods and their dependent properties (e.g.
 *   `'observeABC(a, b, c)'`).
 *
 * The base class provides default implementations for the following standard
 * custom element lifecycle callbacks; users may override these, but should
 * call the super method to ensure
 * - `constructor`: Run when the element is created or upgraded
 * - `connectedCallback`: Run each time the element is connected to the
 *   document
 * - `disconnectedCallback`: Run each time the element is disconnected from
 *   the document
 * - `attributeChangedCallback`: Run each time an attribute in
 *   `observedAttributes` is set or removed (note: this element's default
 *   `observedAttributes` implementation will automatically return an array
 *   of dash-cased attributes based on `properties`)
 *
 * @mixinFunction
 * polymer
 * @appliesMixin PropertyEffects
 * @appliesMixin PropertiesMixin
 * @property rootPath {string} Set to the value of `rootPath`,
 *   which defaults to the main document path
 * @property importPath {string} Set to the value of the class's static
 *   `importPath` property, which defaults to the path of this element's
 *   `dom-module` (when `is` is used), but can be overridden for other
 *   import strategies.
 * @summary Element class mixin that provides the core API for Polymer's
 * meta-programming features.
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */

export const ElementMixin = dedupingMixin(base => {
  /**
   * @constructor
   * @implements {Polymer_PropertyEffects}
   * @implements {Polymer_PropertiesMixin}
   * @extends {HTMLElement}
   * @private
   */
  const polymerElementBase = PropertiesMixin(PropertyEffects(base));
  /**
   * Returns a list of properties with default values.
   * This list is created as an optimization since it is a subset of
   * the list returned from `_properties`.
   * This list is used in `_initializeProperties` to set property defaults.
   *
   * @param {PolymerElementConstructor} constructor Element class
   * @return {PolymerElementProperties} Flattened properties for this class
   *   that have default values
   * @private
   */

  function propertyDefaults(constructor) {
    if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__propertyDefaults', constructor))) {
      constructor.__propertyDefaults = null;
      let props = constructor._properties;

      for (let p in props) {
        let info = props[p];

        if ('value' in info) {
          constructor.__propertyDefaults = constructor.__propertyDefaults || {};
          constructor.__propertyDefaults[p] = info;
        }
      }
    }

    return constructor.__propertyDefaults;
  }
  /**
   * Returns a memoized version of the `observers` array.
   * @param {PolymerElementConstructor} constructor Element class
   * @return {Array} Array containing own observers for the given class
   * @protected
   */


  function ownObservers(constructor) {
    if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownObservers', constructor))) {
      constructor.__ownObservers = constructor.hasOwnProperty(JSCompiler_renameProperty('observers', constructor)) ?
      /** @type {PolymerElementConstructor} */
      constructor.observers : null;
    }

    return constructor.__ownObservers;
  }
  /**
   * Creates effects for a property.
   *
   * Note, once a property has been set to
   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`
   * these values may not be changed. For example, a subclass cannot
   * alter these settings. However, additional `observers` may be added
   * by subclasses.
   *
   * The info object should contain property metadata as follows:
   *
   * * `type`: {function} type to which an attribute matching the property
   * is deserialized. Note the property is camel-cased from a dash-cased
   * attribute. For example, 'foo-bar' attribute is deserialized to a
   * property named 'fooBar'.
   *
   * * `readOnly`: {boolean} creates a readOnly property and
   * makes a private setter for the private of the form '_setFoo' for a
   * property 'foo',
   *
   * * `computed`: {string} creates a computed property. A computed property
   * is also automatically set to `readOnly: true`. The value is calculated
   * by running a method and arguments parsed from the given string. For
   * example 'compute(foo)' will compute a given property when the
   * 'foo' property changes by executing the 'compute' method. This method
   * must return the computed value.
   *
   * * `reflectToAttribute`: {boolean} If true, the property value is reflected
   * to an attribute of the same name. Note, the attribute is dash-cased
   * so a property named 'fooBar' is reflected as 'foo-bar'.
   *
   * * `notify`: {boolean} sends a non-bubbling notification event when
   * the property changes. For example, a property named 'foo' sends an
   * event named 'foo-changed' with `event.detail` set to the value of
   * the property.
   *
   * * observer: {string} name of a method that runs when the property
   * changes. The arguments of the method are (value, previousValue).
   *
   * Note: Users may want control over modifying property
   * effects via subclassing. For example, a user might want to make a
   * reflectToAttribute property not do so in a subclass. We've chosen to
   * disable this because it leads to additional complication.
   * For example, a readOnly effect generates a special setter. If a subclass
   * disables the effect, the setter would fail unexpectedly.
   * Based on feedback, we may want to try to make effects more malleable
   * and/or provide an advanced api for manipulating them.
   *
   * @param {!PolymerElement} proto Element class prototype to add accessors
   *   and effects to
   * @param {string} name Name of the property.
   * @param {Object} info Info object from which to create property effects.
   * Supported keys:
   * @param {Object} allProps Flattened map of all properties defined in this
   *   element (including inherited properties)
   * @return {void}
   * @private
   */


  function createPropertyFromConfig(proto, name, info, allProps) {
    // computed forces readOnly...
    if (info.computed) {
      info.readOnly = true;
    } // Note, since all computed properties are readOnly, this prevents
    // adding additional computed property effects (which leads to a confusing
    // setup where multiple triggers for setting a property)
    // While we do have `hasComputedEffect` this is set on the property's
    // dependencies rather than itself.


    if (info.computed) {
      if (proto._hasReadOnlyEffect(name)) {
        console.warn(`Cannot redefine computed property '${name}'.`);
      } else {
        proto._createComputedProperty(name, info.computed, allProps);
      }
    }

    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {
      proto._createReadOnlyProperty(name, !info.computed);
    } else if (info.readOnly === false && proto._hasReadOnlyEffect(name)) {
      console.warn(`Cannot make readOnly property '${name}' non-readOnly.`);
    }

    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {
      proto._createReflectedProperty(name);
    } else if (info.reflectToAttribute === false && proto._hasReflectEffect(name)) {
      console.warn(`Cannot make reflected property '${name}' non-reflected.`);
    }

    if (info.notify && !proto._hasNotifyEffect(name)) {
      proto._createNotifyingProperty(name);
    } else if (info.notify === false && proto._hasNotifyEffect(name)) {
      console.warn(`Cannot make notify property '${name}' non-notify.`);
    } // always add observer


    if (info.observer) {
      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);
    } // always create the mapping from attribute back to property for deserialization.


    proto._addPropertyToAttributeMap(name);
  }
  /**
   * Process all style elements in the element template. Styles with the
   * `include` attribute are processed such that any styles in
   * the associated "style modules" are included in the element template.
   * @param {PolymerElementConstructor} klass Element class
   * @param {!HTMLTemplateElement} template Template to process
   * @param {string} is Name of element
   * @param {string} baseURI Base URI for element
   * @private
   */


  function processElementStyles(klass, template, is, baseURI) {
    if (!builtCSS) {
      const templateStyles = template.content.querySelectorAll('style');
      const stylesWithImports = stylesFromTemplate(template); // insert styles from <link rel="import" type="css"> at the top of the template

      const linkedStyles = stylesFromModuleImports(is);
      const firstTemplateChild = template.content.firstElementChild;

      for (let idx = 0; idx < linkedStyles.length; idx++) {
        let s = linkedStyles[idx];
        s.textContent = klass._processStyleText(s.textContent, baseURI);
        template.content.insertBefore(s, firstTemplateChild);
      } // keep track of the last "concrete" style in the template we have encountered


      let templateStyleIndex = 0; // ensure all gathered styles are actually in this template.

      for (let i = 0; i < stylesWithImports.length; i++) {
        let s = stylesWithImports[i];
        let templateStyle = templateStyles[templateStyleIndex]; // if the style is not in this template, it's been "included" and
        // we put a clone of it in the template before the style that included it

        if (templateStyle !== s) {
          s = s.cloneNode(true);
          templateStyle.parentNode.insertBefore(s, templateStyle);
        } else {
          templateStyleIndex++;
        }

        s.textContent = klass._processStyleText(s.textContent, baseURI);
      }
    }

    if (window.ShadyCSS) {
      window.ShadyCSS.prepareTemplate(template, is);
    }
  }
  /**
   * Look up template from dom-module for element
   *
   * @param {string} is Element name to look up
   * @return {?HTMLTemplateElement|undefined} Template found in dom module, or
   *   undefined if not found
   * @protected
   */


  function getTemplateFromDomModule(is) {
    let template = null; // Under strictTemplatePolicy in 3.x+, dom-module lookup is only allowed
    // when opted-in via allowTemplateFromDomModule

    if (is && (!strictTemplatePolicy || allowTemplateFromDomModule)) {
      template =
      /** @type {?HTMLTemplateElement} */
      DomModule.import(is, 'template'); // Under strictTemplatePolicy, require any element with an `is`
      // specified to have a dom-module

      if (strictTemplatePolicy && !template) {
        throw new Error(`strictTemplatePolicy: expecting dom-module or null template for ${is}`);
      }
    }

    return template;
  }
  /**
   * polymer
   * @mixinClass
   * @unrestricted
   * @implements {Polymer_ElementMixin}
   * @extends {polymerElementBase}
   */


  class PolymerElement extends polymerElementBase {
    /**
     * Current Polymer version in Semver notation.
     * @type {string} Semver notation of the current version of Polymer.
     * @nocollapse
     */
    static get polymerElementVersion() {
      return version;
    }
    /**
     * Override of PropertiesMixin _finalizeClass to create observers and
     * find the template.
     * @return {void}
     * @protected
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */


    static _finalizeClass() {
      // TODO(https://github.com/google/closure-compiler/issues/3240):
      //     Change back to just super.methodCall()
      polymerElementBase._finalizeClass.call(this);

      const observers = ownObservers(this);

      if (observers) {
        this.createObservers(observers, this._properties);
      }

      this._prepareTemplate();
    }
    /** @nocollapse */


    static _prepareTemplate() {
      // note: create "working" template that is finalized at instance time
      let template =
      /** @type {PolymerElementConstructor} */
      this.template;

      if (template) {
        if (typeof template === 'string') {
          console.error('template getter must return HTMLTemplateElement');
          template = null;
        } else if (!legacyOptimizations) {
          template = template.cloneNode(true);
        }
      }
      /** @override */


      this.prototype._template = template;
    }
    /**
     * Override of PropertiesChanged createProperties to create accessors
     * and property effects for all of the properties.
     * @param {!Object} props .
     * @return {void}
     * @protected
     * @nocollapse
     */


    static createProperties(props) {
      for (let p in props) {
        createPropertyFromConfig(
        /** @type {?} */
        this.prototype, p, props[p], props);
      }
    }
    /**
     * Creates observers for the given `observers` array.
     * Leverages `PropertyEffects` to create observers.
     * @param {Object} observers Array of observer descriptors for
     *   this class
     * @param {Object} dynamicFns Object containing keys for any properties
     *   that are functions and should trigger the effect when the function
     *   reference is changed
     * @return {void}
     * @protected
     * @nocollapse
     */


    static createObservers(observers, dynamicFns) {
      const proto = this.prototype;

      for (let i = 0; i < observers.length; i++) {
        proto._createMethodObserver(observers[i], dynamicFns);
      }
    }
    /**
     * Returns the template that will be stamped into this element's shadow root.
     *
     * If a `static get is()` getter is defined, the default implementation
     * will return the first `<template>` in a `dom-module` whose `id`
     * matches this element's `is`.
     *
     * Users may override this getter to return an arbitrary template
     * (in which case the `is` getter is unnecessary). The template returned
     * must be an `HTMLTemplateElement`.
     *
     * Note that when subclassing, if the super class overrode the default
     * implementation and the subclass would like to provide an alternate
     * template via a `dom-module`, it should override this getter and
     * return `DomModule.import(this.is, 'template')`.
     *
     * If a subclass would like to modify the super class template, it should
     * clone it rather than modify it in place.  If the getter does expensive
     * work such as cloning/modifying a template, it should memoize the
     * template for maximum performance:
     *
     *   let memoizedTemplate;
     *   class MySubClass extends MySuperClass {
     *     static get template() {
     *       if (!memoizedTemplate) {
     *         memoizedTemplate = super.template.cloneNode(true);
     *         let subContent = document.createElement('div');
     *         subContent.textContent = 'This came from MySubClass';
     *         memoizedTemplate.content.appendChild(subContent);
     *       }
     *       return memoizedTemplate;
     *     }
     *   }
     *
     * @return {!HTMLTemplateElement|string} Template to be stamped
     * @nocollapse
     */


    static get template() {
      // Explanation of template-related properties:
      // - constructor.template (this getter): the template for the class.
      //     This can come from the prototype (for legacy elements), from a
      //     dom-module, or from the super class's template (or can be overridden
      //     altogether by the user)
      // - constructor._template: memoized version of constructor.template
      // - prototype._template: working template for the element, which will be
      //     parsed and modified in place. It is a cloned version of
      //     constructor.template, saved in _finalizeClass(). Note that before
      //     this getter is called, for legacy elements this could be from a
      //     _template field on the info object passed to Polymer(), a behavior,
      //     or set in registered(); once the static getter runs, a clone of it
      //     will overwrite it on the prototype as the working template.
      if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {
        this._template = // If user has put template on prototype (e.g. in legacy via registered
        // callback or info object), prefer that first
        this.prototype.hasOwnProperty(JSCompiler_renameProperty('_template', this.prototype)) ? this.prototype._template : // Look in dom-module associated with this element's is
        getTemplateFromDomModule(
        /** @type {PolymerElementConstructor}*/
        this.is) || // Next look for superclass template (call the super impl this
        // way so that `this` points to the superclass)
        Object.getPrototypeOf(
        /** @type {PolymerElementConstructor}*/
        this.prototype).constructor.template;
      }

      return this._template;
    }
    /**
     * Set the template.
     *
     * @param {!HTMLTemplateElement|string} value Template to set.
     * @nocollapse
     */


    static set template(value) {
      this._template = value;
    }
    /**
     * Path matching the url from which the element was imported.
     *
     * This path is used to resolve url's in template style cssText.
     * The `importPath` property is also set on element instances and can be
     * used to create bindings relative to the import path.
     *
     * For elements defined in ES modules, users should implement
     * `static get importMeta() { return import.meta; }`, and the default
     * implementation of `importPath` will  return `import.meta.url`'s path.
     * For elements defined in HTML imports, this getter will return the path
     * to the document containing a `dom-module` element matching this
     * element's static `is` property.
     *
     * Note, this path should contain a trailing `/`.
     *
     * @return {string} The import path for this element class
     * @suppress {missingProperties}
     * @nocollapse
     */


    static get importPath() {
      if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {
        const meta = this.importMeta;

        if (meta) {
          this._importPath = pathFromUrl(meta.url);
        } else {
          const module = DomModule.import(
          /** @type {PolymerElementConstructor} */
          this.is);
          this._importPath = module && module.assetpath || Object.getPrototypeOf(
          /** @type {PolymerElementConstructor}*/
          this.prototype).constructor.importPath;
        }
      }

      return this._importPath;
    }

    constructor() {
      super();
      /** @type {HTMLTemplateElement} */

      this._template;
      /** @type {string} */

      this._importPath;
      /** @type {string} */

      this.rootPath;
      /** @type {string} */

      this.importPath;
      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */

      this.root;
      /** @type {!Object<string, !Element>} */

      this.$;
    }
    /**
     * Overrides the default `PropertyAccessors` to ensure class
     * metaprogramming related to property accessors and effects has
     * completed (calls `finalize`).
     *
     * It also initializes any property defaults provided via `value` in
     * `properties` metadata.
     *
     * @return {void}
     * @override
     * @suppress {invalidCasts,missingProperties} go/missingfnprops
     */


    _initializeProperties() {
      this.constructor.finalize(); // note: finalize template when we have access to `localName` to
      // avoid dependence on `is` for polyfilling styling.

      this.constructor._finalizeTemplate(
      /** @type {!HTMLElement} */
      this.localName);

      super._initializeProperties(); // set path defaults


      this.rootPath = rootPath;
      this.importPath = this.constructor.importPath; // apply property defaults...

      let p$ = propertyDefaults(this.constructor);

      if (!p$) {
        return;
      }

      for (let p in p$) {
        let info = p$[p]; // Don't set default value if there is already an own property, which
        // happens when a `properties` property with default but no effects had
        // a property set (e.g. bound) by its host before upgrade

        if (!this.hasOwnProperty(p)) {
          let value = typeof info.value == 'function' ? info.value.call(this) : info.value; // Set via `_setProperty` if there is an accessor, to enable
          // initializing readOnly property defaults

          if (this._hasAccessor(p)) {
            this._setPendingProperty(p, value, true);
          } else {
            this[p] = value;
          }
        }
      }
    }
    /**
     * Gather style text for a style element in the template.
     *
     * @param {string} cssText Text containing styling to process
     * @param {string} baseURI Base URI to rebase CSS paths against
     * @return {string} The processed CSS text
     * @protected
     * @nocollapse
     */


    static _processStyleText(cssText, baseURI) {
      return resolveCss(cssText, baseURI);
    }
    /**
    * Configures an element `proto` to function with a given `template`.
    * The element name `is` and extends `ext` must be specified for ShadyCSS
    * style scoping.
    *
    * @param {string} is Tag name (or type extension name) for this element
    * @return {void}
    * @protected
    * @nocollapse
    */


    static _finalizeTemplate(is) {
      /** @const {HTMLTemplateElement} */
      const template = this.prototype._template;

      if (template && !template.__polymerFinalized) {
        template.__polymerFinalized = true;
        const importPath = this.importPath;
        const baseURI = importPath ? resolveUrl(importPath) : ''; // e.g. support `include="module-name"`, and ShadyCSS

        processElementStyles(this, template, is, baseURI);

        this.prototype._bindTemplate(template);
      }
    }
    /**
     * Provides a default implementation of the standard Custom Elements
     * `connectedCallback`.
     *
     * The default implementation enables the property effects system and
     * flushes any pending properties, and updates shimmed CSS properties
     * when using the ShadyCSS scoping/custom properties polyfill.
     *
     * @override
     * @suppress {missingProperties, invalidCasts} Super may or may not
     *     implement the callback
     * @return {void}
     */


    connectedCallback() {
      if (window.ShadyCSS && this._template) {
        window.ShadyCSS.styleElement(
        /** @type {!HTMLElement} */
        this);
      }

      super.connectedCallback();
    }
    /**
     * Stamps the element template.
     *
     * @return {void}
     * @override
     */


    ready() {
      if (this._template) {
        this.root = this._stampTemplate(this._template);
        this.$ = this.root.$;
      }

      super.ready();
    }
    /**
     * Implements `PropertyEffects`'s `_readyClients` call. Attaches
     * element dom by calling `_attachDom` with the dom stamped from the
     * element's template via `_stampTemplate`. Note that this allows
     * client dom to be attached to the element prior to any observers
     * running.
     *
     * @return {void}
     * @override
     */


    _readyClients() {
      if (this._template) {
        this.root = this._attachDom(
        /** @type {StampedTemplate} */
        this.root);
      } // The super._readyClients here sets the clients initialized flag.
      // We must wait to do this until after client dom is created/attached
      // so that this flag can be checked to prevent notifications fired
      // during this process from being handled before clients are ready.


      super._readyClients();
    }
    /**
     * Attaches an element's stamped dom to itself. By default,
     * this method creates a `shadowRoot` and adds the dom to it.
     * However, this method may be overridden to allow an element
     * to put its dom in another location.
     *
     * @override
     * @throws {Error}
     * @suppress {missingReturn}
     * @param {StampedTemplate} dom to attach to the element.
     * @return {ShadowRoot} node to which the dom has been attached.
     */


    _attachDom(dom) {
      const n = wrap(this);

      if (n.attachShadow) {
        if (dom) {
          if (!n.shadowRoot) {
            n.attachShadow({
              mode: 'open',
              shadyUpgradeFragment: dom
            });
            n.shadowRoot.appendChild(dom);
          }

          if (syncInitialRender && window.ShadyDOM) {
            ShadyDOM.flushInitial(n.shadowRoot);
          }

          return n.shadowRoot;
        }

        return null;
      } else {
        throw new Error('ShadowDOM not available. ' + // TODO(sorvell): move to compile-time conditional when supported
        'PolymerElement can create dom as children instead of in ' + 'ShadowDOM by setting `this.root = this;\` before \`ready\`.');
      }
    }
    /**
     * When using the ShadyCSS scoping and custom property shim, causes all
     * shimmed styles in this element (and its subtree) to be updated
     * based on current custom property values.
     *
     * The optional parameter overrides inline custom property styles with an
     * object of properties where the keys are CSS properties, and the values
     * are strings.
     *
     * Example: `this.updateStyles({'--color': 'blue'})`
     *
     * These properties are retained unless a value of `null` is set.
     *
     * Note: This function does not support updating CSS mixins.
     * You can not dynamically change the value of an `@apply`.
     *
     * @override
     * @param {Object=} properties Bag of custom property key/values to
     *   apply to this element.
     * @return {void}
     * @suppress {invalidCasts}
     */


    updateStyles(properties) {
      if (window.ShadyCSS) {
        window.ShadyCSS.styleSubtree(
        /** @type {!HTMLElement} */
        this, properties);
      }
    }
    /**
     * Rewrites a given URL relative to a base URL. The base URL defaults to
     * the original location of the document containing the `dom-module` for
     * this element. This method will return the same URL before and after
     * bundling.
     *
     * Note that this function performs no resolution for URLs that start
     * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose
     * URL resolution, use `window.URL`.
     *
     * @override
     * @param {string} url URL to resolve.
     * @param {string=} base Optional base URL to resolve against, defaults
     * to the element's `importPath`
     * @return {string} Rewritten URL relative to base
     */


    resolveUrl(url, base) {
      if (!base && this.importPath) {
        base = resolveUrl(this.importPath);
      }

      return resolveUrl(url, base);
    }
    /**
     * Overrides `PropertyEffects` to add map of dynamic functions on
     * template info, for consumption by `PropertyEffects` template binding
     * code. This map determines which method templates should have accessors
     * created for them.
     *
     * @param {!HTMLTemplateElement} template Template
     * @param {!TemplateInfo} templateInfo Template metadata for current template
     * @param {!NodeInfo} nodeInfo Node metadata for current template.
     * @return {boolean} .
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */


    static _parseTemplateContent(template, templateInfo, nodeInfo) {
      templateInfo.dynamicFns = templateInfo.dynamicFns || this._properties; // TODO(https://github.com/google/closure-compiler/issues/3240):
      //     Change back to just super.methodCall()

      return polymerElementBase._parseTemplateContent.call(this, template, templateInfo, nodeInfo);
    }
    /**
     * Overrides `PropertyEffects` to warn on use of undeclared properties in
     * template.
     *
     * @param {Object} templateInfo Template metadata to add effect to
     * @param {string} prop Property that should trigger the effect
     * @param {Object=} effect Effect metadata object
     * @return {void}
     * @protected
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */


    static _addTemplatePropertyEffect(templateInfo, prop, effect) {
      // Warn if properties are used in template without being declared.
      // Properties must be listed in `properties` to be included in
      // `observedAttributes` since CE V1 reads that at registration time, and
      // since we want to keep template parsing lazy, we can't automatically
      // add undeclared properties used in templates to `observedAttributes`.
      // The warning is only enabled in `legacyOptimizations` mode, since
      // we don't want to spam existing users who might have adopted the
      // shorthand when attribute deserialization is not important.
      if (legacyOptimizations && !(prop in this._properties)) {
        console.warn(`Property '${prop}' used in template but not declared in 'properties'; ` + `attribute will not be observed.`);
      } // TODO(https://github.com/google/closure-compiler/issues/3240):
      //     Change back to just super.methodCall()


      return polymerElementBase._addTemplatePropertyEffect.call(this, templateInfo, prop, effect);
    }

  }

  return PolymerElement;
});
/**
 * When using the ShadyCSS scoping and custom property shim, causes all
 * shimmed `styles` (via `custom-style`) in the document (and its subtree)
 * to be updated based on current custom property values.
 *
 * The optional parameter overrides inline custom property styles with an
 * object of properties where the keys are CSS properties, and the values
 * are strings.
 *
 * Example: `updateStyles({'--color': 'blue'})`
 *
 * These properties are retained unless a value of `null` is set.
 *
 * @param {Object=} props Bag of custom property key/values to
 *   apply to the document.
 * @return {void}
 */

export const updateStyles = function (props) {
  if (window.ShadyCSS) {
    window.ShadyCSS.styleDocument(props);
  }
};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:59</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.element.mixin" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\element-mixin.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.element.mixin.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\element-mixin.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>element-mixin.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/element-mixin.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.flattened.nodes.observer">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.flattened.nodes.observer.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.flattened.nodes.observer.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53159.363629</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { calculateSplices } from '/%ZWebNode.Lib.Polymer.v3.array.splice.cls';
import { microTask } from '/%ZWebNode.Lib.Polymer.v3.async.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
/**
 * Returns true if `node` is a slot element
 * @param {!Node} node Node to test.
 * @return {boolean} Returns true if the given `node` is a slot
 * @private
 */

function isSlot(node) {
  return node.localName === 'slot';
}
/**
 * Class that listens for changes (additions or removals) to
 * "flattened nodes" on a given `node`. The list of flattened nodes consists
 * of a node's children and, for any children that are `<slot>` elements,
 * the expanded flattened list of `assignedNodes`.
 * For example, if the observed node has children `<a></a><slot></slot><b></b>`
 * and the `<slot>` has one `<div>` assigned to it, then the flattened
 * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other
 * `<slot>` elements assigned to it, these are flattened as well.
 *
 * The provided `callback` is called whenever any change to this list
 * of flattened nodes occurs, where an addition or removal of a node is
 * considered a change. The `callback` is called with one argument, an object
 * containing an array of any `addedNodes` and `removedNodes`.
 *
 * Note: the callback is called asynchronous to any changes
 * at a microtask checkpoint. This is because observation is performed using
 * `MutationObserver` and the `<slot>` element's `slotchange` event which
 * are asynchronous.
 *
 * An example:
 * ```js
 * class TestSelfObserve extends PolymerElement {
 *   static get is() { return 'test-self-observe';}
 *   connectedCallback() {
 *     super.connectedCallback();
 *     this._observer = new FlattenedNodesObserver(this, (info) => {
 *       this.info = info;
 *     });
 *   }
 *   disconnectedCallback() {
 *     super.disconnectedCallback();
 *     this._observer.disconnect();
 *   }
 * }
 * customElements.define(TestSelfObserve.is, TestSelfObserve);
 * ```
 *
 * @summary Class that listens for changes (additions or removals) to
 * "flattened nodes" on a given `node`.
 * @implements {PolymerDomApi.ObserveHandle}
 */


export let FlattenedNodesObserver = class {
  /**
   * Returns the list of flattened nodes for the given `node`.
   * This list consists of a node's children and, for any children
   * that are `<slot>` elements, the expanded flattened list of `assignedNodes`.
   * For example, if the observed node has children `<a></a><slot></slot><b></b>`
   * and the `<slot>` has one `<div>` assigned to it, then the flattened
   * nodes list is `<a></a><div></div><b></b>`. If the `<slot>` has other
   * `<slot>` elements assigned to it, these are flattened as well.
   *
   * @param {!HTMLElement|!HTMLSlotElement} node The node for which to
   *      return the list of flattened nodes.
   * @return {!Array<!Node>} The list of flattened nodes for the given `node`.
   * @nocollapse See https://github.com/google/closure-compiler/issues/2763
   */
  // eslint-disable-next-line
  static getFlattenedNodes(node) {
    const wrapped = wrap(node);

    if (isSlot(node)) {
      node =
      /** @type {!HTMLSlotElement} */
      node; // eslint-disable-line no-self-assign

      return wrapped.assignedNodes({
        flatten: true
      });
    } else {
      return Array.from(wrapped.childNodes).map(node => {
        if (isSlot(node)) {
          node =
          /** @type {!HTMLSlotElement} */
          node; // eslint-disable-line no-self-assign

          return wrap(node).assignedNodes({
            flatten: true
          });
        } else {
          return [node];
        }
      }).reduce((a, b) => a.concat(b), []);
    }
  }
  /**
   * @param {!HTMLElement} target Node on which to listen for changes.
   * @param {?function(this: Element, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Function called when there are additions
   * or removals from the target's list of flattened nodes.
   */
  // eslint-disable-next-line


  constructor(target, callback) {
    /**
     * @type {MutationObserver}
     * @private
     */
    this._shadyChildrenObserver = null;
    /**
     * @type {MutationObserver}
     * @private
     */

    this._nativeChildrenObserver = null;
    this._connected = false;
    /**
     * @type {!HTMLElement}
     * @private
     */

    this._target = target;
    this.callback = callback;
    this._effectiveNodes = [];
    this._observer = null;
    this._scheduled = false;
    /**
     * @type {function()}
     * @private
     */

    this._boundSchedule = () => {
      this._schedule();
    };

    this.connect();

    this._schedule();
  }
  /**
   * Activates an observer. This method is automatically called when
   * a `FlattenedNodesObserver` is created. It should only be called to
   * re-activate an observer that has been deactivated via the `disconnect` method.
   *
   * @return {void}
   */


  connect() {
    if (isSlot(this._target)) {
      this._listenSlots([this._target]);
    } else if (wrap(this._target).children) {
      this._listenSlots(
      /** @type {!NodeList<!Node>} */
      wrap(this._target).children);

      if (window.ShadyDOM) {
        this._shadyChildrenObserver = ShadyDOM.observeChildren(this._target, mutations => {
          this._processMutations(mutations);
        });
      } else {
        this._nativeChildrenObserver = new MutationObserver(mutations => {
          this._processMutations(mutations);
        });

        this._nativeChildrenObserver.observe(this._target, {
          childList: true
        });
      }
    }

    this._connected = true;
  }
  /**
   * Deactivates the flattened nodes observer. After calling this method
   * the observer callback will not be called when changes to flattened nodes
   * occur. The `connect` method may be subsequently called to reactivate
   * the observer.
   *
   * @return {void}
   * @override
   */


  disconnect() {
    if (isSlot(this._target)) {
      this._unlistenSlots([this._target]);
    } else if (wrap(this._target).children) {
      this._unlistenSlots(
      /** @type {!NodeList<!Node>} */
      wrap(this._target).children);

      if (window.ShadyDOM && this._shadyChildrenObserver) {
        ShadyDOM.unobserveChildren(this._shadyChildrenObserver);
        this._shadyChildrenObserver = null;
      } else if (this._nativeChildrenObserver) {
        this._nativeChildrenObserver.disconnect();

        this._nativeChildrenObserver = null;
      }
    }

    this._connected = false;
  }
  /**
   * @return {void}
   * @private
   */


  _schedule() {
    if (!this._scheduled) {
      this._scheduled = true;
      microTask.run(() => this.flush());
    }
  }
  /**
   * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer
   * @return {void}
   * @private
   */


  _processMutations(mutations) {
    this._processSlotMutations(mutations);

    this.flush();
  }
  /**
   * @param {Array<MutationRecord>} mutations Mutations signaled by the mutation observer
   * @return {void}
   * @private
   */


  _processSlotMutations(mutations) {
    if (mutations) {
      for (let i = 0; i < mutations.length; i++) {
        let mutation = mutations[i];

        if (mutation.addedNodes) {
          this._listenSlots(mutation.addedNodes);
        }

        if (mutation.removedNodes) {
          this._unlistenSlots(mutation.removedNodes);
        }
      }
    }
  }
  /**
   * Flushes the observer causing any pending changes to be immediately
   * delivered the observer callback. By default these changes are delivered
   * asynchronously at the next microtask checkpoint.
   *
   * @return {boolean} Returns true if any pending changes caused the observer
   * callback to run.
   */


  flush() {
    if (!this._connected) {
      return false;
    }

    if (window.ShadyDOM) {
      ShadyDOM.flush();
    }

    if (this._nativeChildrenObserver) {
      this._processSlotMutations(this._nativeChildrenObserver.takeRecords());
    } else if (this._shadyChildrenObserver) {
      this._processSlotMutations(this._shadyChildrenObserver.takeRecords());
    }

    this._scheduled = false;
    let info = {
      target: this._target,
      addedNodes: [],
      removedNodes: []
    };
    let newNodes = this.constructor.getFlattenedNodes(this._target);
    let splices = calculateSplices(newNodes, this._effectiveNodes); // process removals

    for (let i = 0, s; i < splices.length && (s = splices[i]); i++) {
      for (let j = 0, n; j < s.removed.length && (n = s.removed[j]); j++) {
        info.removedNodes.push(n);
      }
    } // process adds


    for (let i = 0, s; i < splices.length && (s = splices[i]); i++) {
      for (let j = s.index; j < s.index + s.addedCount; j++) {
        info.addedNodes.push(newNodes[j]);
      }
    } // update cache


    this._effectiveNodes = newNodes;
    let didFlush = false;

    if (info.addedNodes.length || info.removedNodes.length) {
      didFlush = true;
      this.callback.call(this._target, info);
    }

    return didFlush;
  }
  /**
   * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change
   * @return {void}
   * @private
   */


  _listenSlots(nodeList) {
    for (let i = 0; i < nodeList.length; i++) {
      let n = nodeList[i];

      if (isSlot(n)) {
        n.addEventListener('slotchange', this._boundSchedule);
      }
    }
  }
  /**
   * @param {!Array<!Node>|!NodeList<!Node>} nodeList Nodes that could change
   * @return {void}
   * @private
   */


  _unlistenSlots(nodeList) {
    for (let i = 0; i < nodeList.length; i++) {
      let n = nodeList[i];

      if (isSlot(n)) {
        n.removeEventListener('slotchange', this._boundSchedule);
      }
    }
  }

};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:59</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.flattened.nodes.observer" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\flattened-nodes-observer.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.flattened.nodes.observer.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\flattened-nodes-observer.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>flattened-nodes-observer.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/flattened-nodes-observer.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.flush">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.flush.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.flush.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53159.516009</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
/* eslint-disable no-unused-vars */

import { Debouncer } from "/%ZWebNode.Lib.Polymer.v3.debounce.cls"; // used in type annotations

/* eslint-enable no-unused-vars */


import { enqueueDebouncer, flushDebouncers } from "/%ZWebNode.Lib.Polymer.v3.debounce.cls";
export { enqueueDebouncer };
/**
 * Forces several classes of asynchronously queued tasks to flush:
 * - Debouncers added via `enqueueDebouncer`
 * - ShadyDOM distribution
 *
 * @return {void}
 */

export const flush = function () {
  let shadyDOM, debouncers;

  do {
    shadyDOM = window.ShadyDOM && ShadyDOM.flush();

    if (window.ShadyCSS && window.ShadyCSS.ScopingShim) {
      window.ShadyCSS.ScopingShim.flush();
    }

    debouncers = flushDebouncers();
  } while (shadyDOM || debouncers);
};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:59</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.flush" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\flush.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.flush.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\flush.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>flush.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/flush.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.gesture.event.listeners">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.gesture.event.listeners.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.gesture.event.listeners.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53159.598307</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import { addListener, removeListener } from '/%ZWebNode.Lib.Polymer.v3.gestures.cls';
/**
 * Element class mixin that provides API for adding Polymer's cross-platform
 * gesture events to nodes.
 *
 * The API is designed to be compatible with override points implemented
 * in `TemplateStamp` such that declarative event listeners in
 * templates will support gesture events when this mixin is applied along with
 * `TemplateStamp`.
 *
 * @mixinFunction
 * polymer
 * @summary Element class mixin that provides API for adding Polymer's
 *   cross-platform gesture events to nodes
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */

export const GestureEventListeners = dedupingMixin(superClass => {
  /**
   * polymer
   * @mixinClass
   * @implements {Polymer_GestureEventListeners}
   */
  class GestureEventListeners extends superClass {
    /**
     * Add the event listener to the node if it is a gestures event.
     *
     * @param {!EventTarget} node Node to add event listener to
     * @param {string} eventName Name of event
     * @param {function(!Event):void} handler Listener function to add
     * @return {void}
     * @override
     */
    _addEventListenerToNode(node, eventName, handler) {
      if (!addListener(node, eventName, handler)) {
        super._addEventListenerToNode(node, eventName, handler);
      }
    }
    /**
     * Remove the event listener to the node if it is a gestures event.
     *
     * @param {!EventTarget} node Node to remove event listener from
     * @param {string} eventName Name of event
     * @param {function(!Event):void} handler Listener function to remove
     * @return {void}
     * @override
     */


    _removeEventListenerFromNode(node, eventName, handler) {
      if (!removeListener(node, eventName, handler)) {
        super._removeEventListenerFromNode(node, eventName, handler);
      }
    }

  }

  return GestureEventListeners;
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:59</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.gesture.event.listeners" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\gesture-event-listeners.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.gesture.event.listeners.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\gesture-event-listeners.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>gesture-event-listeners.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/gesture-event-listeners.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.gestures">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.gestures.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.gestures.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53159.676817</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/**
 * @fileoverview
 *
 * Module for adding listeners to a node for the following normalized
 * cross-platform "gesture" events:
 * - `down` - mouse or touch went down
 * - `up` - mouse or touch went up
 * - `tap` - mouse click or finger tap
 * - `track` - mouse drag or touch move
 *
 * @summary Module for adding cross-platform gesture event listeners.
 */
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { timeOut, microTask } from '/%ZWebNode.Lib.Polymer.v3.async.cls';
import { Debouncer } from '/%ZWebNode.Lib.Polymer.v3.debounce.cls';
import { passiveTouchGestures, cancelSyntheticClickEvents } from '/%ZWebNode.Lib.Polymer.v3.settings.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls'; // detect native touch action support

let HAS_NATIVE_TA = typeof document.head.style.touchAction === 'string';
let GESTURE_KEY = '__polymerGestures';
let HANDLED_OBJ = '__polymerGesturesHandled';
let TOUCH_ACTION = '__polymerGesturesTouchAction'; // radius for tap and track

let TAP_DISTANCE = 25;
let TRACK_DISTANCE = 5; // number of last N track positions to keep

let TRACK_LENGTH = 2; // Disabling "mouse" handlers for 2500ms is enough

let MOUSE_TIMEOUT = 2500;
let MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'click']; // an array of bitmask values for mapping MouseEvent.which to MouseEvent.buttons

let MOUSE_WHICH_TO_BUTTONS = [0, 1, 4, 2];

let MOUSE_HAS_BUTTONS = function () {
  try {
    return new MouseEvent('test', {
      buttons: 1
    }).buttons === 1;
  } catch (e) {
    return false;
  }
}();
/**
 * @param {string} name Possible mouse event name
 * @return {boolean} true if mouse event, false if not
 */


function isMouseEvent(name) {
  return MOUSE_EVENTS.indexOf(name) > -1;
}
/* eslint no-empty: ["error", { "allowEmptyCatch": true }] */
// check for passive event listeners


let SUPPORTS_PASSIVE = false;

(function () {
  try {
    let opts = Object.defineProperty({}, 'passive', {
      get() {
        SUPPORTS_PASSIVE = true;
      }

    });
    window.addEventListener('test', null, opts);
    window.removeEventListener('test', null, opts);
  } catch (e) {}
})();
/**
 * Generate settings for event listeners, dependant on `passiveTouchGestures`
 *
 * @param {string} eventName Event name to determine if `{passive}` option is
 *   needed
 * @return {{passive: boolean} | undefined} Options to use for addEventListener
 *   and removeEventListener
 */


function PASSIVE_TOUCH(eventName) {
  if (isMouseEvent(eventName) || eventName === 'touchend') {
    return;
  }

  if (HAS_NATIVE_TA && SUPPORTS_PASSIVE && passiveTouchGestures) {
    return {
      passive: true
    };
  } else {
    return;
  }
} // Check for touch-only devices


let IS_TOUCH_ONLY = navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/); // keep track of any labels hit by the mouseCanceller

/** @type {!Array<!HTMLLabelElement>} */

const clickedLabels = [];
/** @type {!Object<boolean>} */

const labellable = {
  'button': true,
  'input': true,
  'keygen': true,
  'meter': true,
  'output': true,
  'textarea': true,
  'progress': true,
  'select': true
}; // Defined at https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#enabling-and-disabling-form-controls:-the-disabled-attribute

/** @type {!Object<boolean>} */

const canBeDisabled = {
  'button': true,
  'command': true,
  'fieldset': true,
  'input': true,
  'keygen': true,
  'optgroup': true,
  'option': true,
  'select': true,
  'textarea': true
};
/**
 * @param {HTMLElement} el Element to check labelling status
 * @return {boolean} element can have labels
 */

function canBeLabelled(el) {
  return labellable[el.localName] || false;
}
/**
 * @param {HTMLElement} el Element that may be labelled.
 * @return {!Array<!HTMLLabelElement>} Relevant label for `el`
 */


function matchingLabels(el) {
  let labels = Array.prototype.slice.call(
  /** @type {HTMLInputElement} */
  el.labels || []); // IE doesn't have `labels` and Safari doesn't populate `labels`
  // if element is in a shadowroot.
  // In this instance, finding the non-ancestor labels is enough,
  // as the mouseCancellor code will handle ancstor labels

  if (!labels.length) {
    labels = [];
    let root = el.getRootNode(); // if there is an id on `el`, check for all labels with a matching `for` attribute

    if (el.id) {
      let matching = root.querySelectorAll(`label[for = ${el.id}]`);

      for (let i = 0; i < matching.length; i++) {
        labels.push(
        /** @type {!HTMLLabelElement} */
        matching[i]);
      }
    }
  }

  return labels;
} // touch will make synthetic mouse events
// `preventDefault` on touchend will cancel them,
// but this breaks `<input>` focus and link clicks
// disable mouse handlers for MOUSE_TIMEOUT ms after
// a touchend to ignore synthetic mouse events


let mouseCanceller = function (mouseEvent) {
  // Check for sourceCapabilities, used to distinguish synthetic events
  // if mouseEvent did not come from a device that fires touch events,
  // it was made by a real mouse and should be counted
  // http://wicg.github.io/InputDeviceCapabilities/#dom-inputdevicecapabilities-firestouchevents
  let sc = mouseEvent.sourceCapabilities;

  if (sc && !sc.firesTouchEvents) {
    return;
  } // skip synthetic mouse events


  mouseEvent[HANDLED_OBJ] = {
    skip: true
  }; // disable "ghost clicks"

  if (mouseEvent.type === 'click') {
    let clickFromLabel = false;
    let path = getComposedPath(mouseEvent);

    for (let i = 0; i < path.length; i++) {
      if (path[i].nodeType === Node.ELEMENT_NODE) {
        if (path[i].localName === 'label') {
          clickedLabels.push(
          /** @type {!HTMLLabelElement} */
          path[i]);
        } else if (canBeLabelled(
        /** @type {!HTMLElement} */
        path[i])) {
          let ownerLabels = matchingLabels(
          /** @type {!HTMLElement} */
          path[i]); // check if one of the clicked labels is labelling this element

          for (let j = 0; j < ownerLabels.length; j++) {
            clickFromLabel = clickFromLabel || clickedLabels.indexOf(ownerLabels[j]) > -1;
          }
        }
      }

      if (path[i] === POINTERSTATE.mouse.target) {
        return;
      }
    } // if one of the clicked labels was labelling the target element,
    // this is not a ghost click


    if (clickFromLabel) {
      return;
    }

    mouseEvent.preventDefault();
    mouseEvent.stopPropagation();
  }
};
/**
 * @param {boolean=} setup True to add, false to remove.
 * @return {void}
 */


function setupTeardownMouseCanceller(setup) {
  let events = IS_TOUCH_ONLY ? ['click'] : MOUSE_EVENTS;

  for (let i = 0, en; i < events.length; i++) {
    en = events[i];

    if (setup) {
      // reset clickLabels array
      clickedLabels.length = 0;
      document.addEventListener(en, mouseCanceller, true);
    } else {
      document.removeEventListener(en, mouseCanceller, true);
    }
  }
}

function ignoreMouse(e) {
  if (!cancelSyntheticClickEvents) {
    return;
  }

  if (!POINTERSTATE.mouse.mouseIgnoreJob) {
    setupTeardownMouseCanceller(true);
  }

  let unset = function () {
    setupTeardownMouseCanceller();
    POINTERSTATE.mouse.target = null;
    POINTERSTATE.mouse.mouseIgnoreJob = null;
  };

  POINTERSTATE.mouse.target = getComposedPath(e)[0];
  POINTERSTATE.mouse.mouseIgnoreJob = Debouncer.debounce(POINTERSTATE.mouse.mouseIgnoreJob, timeOut.after(MOUSE_TIMEOUT), unset);
}
/**
 * @param {MouseEvent} ev event to test for left mouse button down
 * @return {boolean} has left mouse button down
 */


function hasLeftMouseButton(ev) {
  let type = ev.type; // exit early if the event is not a mouse event

  if (!isMouseEvent(type)) {
    return false;
  } // ev.button is not reliable for mousemove (0 is overloaded as both left button and no buttons)
  // instead we use ev.buttons (bitmask of buttons) or fall back to ev.which (deprecated, 0 for no buttons, 1 for left button)


  if (type === 'mousemove') {
    // allow undefined for testing events
    let buttons = ev.buttons === undefined ? 1 : ev.buttons;

    if (ev instanceof window.MouseEvent && !MOUSE_HAS_BUTTONS) {
      buttons = MOUSE_WHICH_TO_BUTTONS[ev.which] || 0;
    } // buttons is a bitmask, check that the left button bit is set (1)


    return Boolean(buttons & 1);
  } else {
    // allow undefined for testing events
    let button = ev.button === undefined ? 0 : ev.button; // ev.button is 0 in mousedown/mouseup/click for left button activation

    return button === 0;
  }
}

function isSyntheticClick(ev) {
  if (ev.type === 'click') {
    // ev.detail is 0 for HTMLElement.click in most browsers
    if (ev.detail === 0) {
      return true;
    } // in the worst case, check that the x/y position of the click is within
    // the bounding box of the target of the event
    // Thanks IE 10 >:(


    let t = _findOriginalTarget(ev); // make sure the target of the event is an element so we can use getBoundingClientRect,
    // if not, just assume it is a synthetic click


    if (!t.nodeType ||
    /** @type {Element} */
    t.nodeType !== Node.ELEMENT_NODE) {
      return true;
    }

    let bcr =
    /** @type {Element} */
    t.getBoundingClientRect(); // use page x/y to account for scrolling

    let x = ev.pageX,
        y = ev.pageY; // ev is a synthetic click if the position is outside the bounding box of the target

    return !(x >= bcr.left && x <= bcr.right && y >= bcr.top && y <= bcr.bottom);
  }

  return false;
}

let POINTERSTATE = {
  mouse: {
    target: null,
    mouseIgnoreJob: null
  },
  touch: {
    x: 0,
    y: 0,
    id: -1,
    scrollDecided: false
  }
};

function firstTouchAction(ev) {
  let ta = 'auto';
  let path = getComposedPath(ev);

  for (let i = 0, n; i < path.length; i++) {
    n = path[i];

    if (n[TOUCH_ACTION]) {
      ta = n[TOUCH_ACTION];
      break;
    }
  }

  return ta;
}

function trackDocument(stateObj, movefn, upfn) {
  stateObj.movefn = movefn;
  stateObj.upfn = upfn;
  document.addEventListener('mousemove', movefn);
  document.addEventListener('mouseup', upfn);
}

function untrackDocument(stateObj) {
  document.removeEventListener('mousemove', stateObj.movefn);
  document.removeEventListener('mouseup', stateObj.upfn);
  stateObj.movefn = null;
  stateObj.upfn = null;
}

if (cancelSyntheticClickEvents) {
  // use a document-wide touchend listener to start the ghost-click prevention mechanism
  // Use passive event listeners, if supported, to not affect scrolling performance
  document.addEventListener('touchend', ignoreMouse, SUPPORTS_PASSIVE ? {
    passive: true
  } : false);
}
/**
 * Returns the composedPath for the given event.
 * @param {Event} event to process
 * @return {!Array<!EventTarget>} Path of the event
 */


const getComposedPath = window.ShadyDOM && window.ShadyDOM.noPatch ? window.ShadyDOM.composedPath : event => event.composedPath && event.composedPath() || [];
/** @type {!Object<string, !GestureRecognizer>} */

export const gestures = {};
/** @type {!Array<!GestureRecognizer>} */

export const recognizers = [];
/**
 * Finds the element rendered on the screen at the provided coordinates.
 *
 * Similar to `document.elementFromPoint`, but pierces through
 * shadow roots.
 *
 * @param {number} x Horizontal pixel coordinate
 * @param {number} y Vertical pixel coordinate
 * @return {Element} Returns the deepest shadowRoot inclusive element
 * found at the screen position given.
 */

export function deepTargetFind(x, y) {
  let node = document.elementFromPoint(x, y);
  let next = node; // this code path is only taken when native ShadowDOM is used
  // if there is a shadowroot, it may have a node at x/y
  // if there is not a shadowroot, exit the loop

  while (next && next.shadowRoot && !window.ShadyDOM) {
    // if there is a node at x/y in the shadowroot, look deeper
    let oldNext = next;
    next = next.shadowRoot.elementFromPoint(x, y); // on Safari, elementFromPoint may return the shadowRoot host

    if (oldNext === next) {
      break;
    }

    if (next) {
      node = next;
    }
  }

  return node;
}
/**
 * a cheaper check than ev.composedPath()[0];
 *
 * @private
 * @param {Event|Touch} ev Event.
 * @return {EventTarget} Returns the event target.
 */

function _findOriginalTarget(ev) {
  const path = getComposedPath(
  /** @type {?Event} */
  ev); // It shouldn't be, but sometimes path is empty (window on Safari).

  return path.length > 0 ? path[0] : ev.target;
}
/**
 * @private
 * @param {Event} ev Event.
 * @return {void}
 */


function _handleNative(ev) {
  let handled;
  let type = ev.type;
  let node = ev.currentTarget;
  let gobj = node[GESTURE_KEY];

  if (!gobj) {
    return;
  }

  let gs = gobj[type];

  if (!gs) {
    return;
  }

  if (!ev[HANDLED_OBJ]) {
    ev[HANDLED_OBJ] = {};

    if (type.slice(0, 5) === 'touch') {
      ev =
      /** @type {TouchEvent} */
      ev; // eslint-disable-line no-self-assign

      let t = ev.changedTouches[0];

      if (type === 'touchstart') {
        // only handle the first finger
        if (ev.touches.length === 1) {
          POINTERSTATE.touch.id = t.identifier;
        }
      }

      if (POINTERSTATE.touch.id !== t.identifier) {
        return;
      }

      if (!HAS_NATIVE_TA) {
        if (type === 'touchstart' || type === 'touchmove') {
          _handleTouchAction(ev);
        }
      }
    }
  }

  handled = ev[HANDLED_OBJ]; // used to ignore synthetic mouse events

  if (handled.skip) {
    return;
  } // reset recognizer state


  for (let i = 0, r; i < recognizers.length; i++) {
    r = recognizers[i];

    if (gs[r.name] && !handled[r.name]) {
      if (r.flow && r.flow.start.indexOf(ev.type) > -1 && r.reset) {
        r.reset();
      }
    }
  } // enforce gesture recognizer order


  for (let i = 0, r; i < recognizers.length; i++) {
    r = recognizers[i];

    if (gs[r.name] && !handled[r.name]) {
      handled[r.name] = true;
      r[type](ev);
    }
  }
}
/**
 * @private
 * @param {TouchEvent} ev Event.
 * @return {void}
 */


function _handleTouchAction(ev) {
  let t = ev.changedTouches[0];
  let type = ev.type;

  if (type === 'touchstart') {
    POINTERSTATE.touch.x = t.clientX;
    POINTERSTATE.touch.y = t.clientY;
    POINTERSTATE.touch.scrollDecided = false;
  } else if (type === 'touchmove') {
    if (POINTERSTATE.touch.scrollDecided) {
      return;
    }

    POINTERSTATE.touch.scrollDecided = true;
    let ta = firstTouchAction(ev);
    let shouldPrevent = false;
    let dx = Math.abs(POINTERSTATE.touch.x - t.clientX);
    let dy = Math.abs(POINTERSTATE.touch.y - t.clientY);

    if (!ev.cancelable) {// scrolling is happening
    } else if (ta === 'none') {
      shouldPrevent = true;
    } else if (ta === 'pan-x') {
      shouldPrevent = dy > dx;
    } else if (ta === 'pan-y') {
      shouldPrevent = dx > dy;
    }

    if (shouldPrevent) {
      ev.preventDefault();
    } else {
      prevent('track');
    }
  }
}
/**
 * Adds an event listener to a node for the given gesture type.
 *
 * @param {!EventTarget} node Node to add listener on
 * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`
 * @param {!function(!Event):void} handler Event listener function to call
 * @return {boolean} Returns true if a gesture event listener was added.
 */


export function addListener(node, evType, handler) {
  if (gestures[evType]) {
    _add(node, evType, handler);

    return true;
  }

  return false;
}
/**
 * Removes an event listener from a node for the given gesture type.
 *
 * @param {!EventTarget} node Node to remove listener from
 * @param {string} evType Gesture type: `down`, `up`, `track`, or `tap`
 * @param {!function(!Event):void} handler Event listener function previously passed to
 *  `addListener`.
 * @return {boolean} Returns true if a gesture event listener was removed.
 */

export function removeListener(node, evType, handler) {
  if (gestures[evType]) {
    _remove(node, evType, handler);

    return true;
  }

  return false;
}
/**
 * automate the event listeners for the native events
 *
 * @private
 * @param {!EventTarget} node Node on which to add the event.
 * @param {string} evType Event type to add.
 * @param {function(!Event)} handler Event handler function.
 * @return {void}
 */

function _add(node, evType, handler) {
  let recognizer = gestures[evType];
  let deps = recognizer.deps;
  let name = recognizer.name;
  let gobj = node[GESTURE_KEY];

  if (!gobj) {
    node[GESTURE_KEY] = gobj = {};
  }

  for (let i = 0, dep, gd; i < deps.length; i++) {
    dep = deps[i]; // don't add mouse handlers on iOS because they cause gray selection overlays

    if (IS_TOUCH_ONLY && isMouseEvent(dep) && dep !== 'click') {
      continue;
    }

    gd = gobj[dep];

    if (!gd) {
      gobj[dep] = gd = {
        _count: 0
      };
    }

    if (gd._count === 0) {
      node.addEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));
    }

    gd[name] = (gd[name] || 0) + 1;
    gd._count = (gd._count || 0) + 1;
  }

  node.addEventListener(evType, handler);

  if (recognizer.touchAction) {
    setTouchAction(node, recognizer.touchAction);
  }
}
/**
 * automate event listener removal for native events
 *
 * @private
 * @param {!EventTarget} node Node on which to remove the event.
 * @param {string} evType Event type to remove.
 * @param {function(!Event): void} handler Event handler function.
 * @return {void}
 */


function _remove(node, evType, handler) {
  let recognizer = gestures[evType];
  let deps = recognizer.deps;
  let name = recognizer.name;
  let gobj = node[GESTURE_KEY];

  if (gobj) {
    for (let i = 0, dep, gd; i < deps.length; i++) {
      dep = deps[i];
      gd = gobj[dep];

      if (gd && gd[name]) {
        gd[name] = (gd[name] || 1) - 1;
        gd._count = (gd._count || 1) - 1;

        if (gd._count === 0) {
          node.removeEventListener(dep, _handleNative, PASSIVE_TOUCH(dep));
        }
      }
    }
  }

  node.removeEventListener(evType, handler);
}
/**
 * Registers a new gesture event recognizer for adding new custom
 * gesture event types.
 *
 * @param {!GestureRecognizer} recog Gesture recognizer descriptor
 * @return {void}
 */


export function register(recog) {
  recognizers.push(recog);

  for (let i = 0; i < recog.emits.length; i++) {
    gestures[recog.emits[i]] = recog;
  }
}
/**
 * @private
 * @param {string} evName Event name.
 * @return {Object} Returns the gesture for the given event name.
 */

function _findRecognizerByEvent(evName) {
  for (let i = 0, r; i < recognizers.length; i++) {
    r = recognizers[i];

    for (let j = 0, n; j < r.emits.length; j++) {
      n = r.emits[j];

      if (n === evName) {
        return r;
      }
    }
  }

  return null;
}
/**
 * Sets scrolling direction on node.
 *
 * This value is checked on first move, thus it should be called prior to
 * adding event listeners.
 *
 * @param {!EventTarget} node Node to set touch action setting on
 * @param {string} value Touch action value
 * @return {void}
 */


export function setTouchAction(node, value) {
  if (HAS_NATIVE_TA && node instanceof HTMLElement) {
    // NOTE: add touchAction async so that events can be added in
    // custom element constructors. Otherwise we run afoul of custom
    // elements restriction against settings attributes (style) in the
    // constructor.
    microTask.run(() => {
      node.style.touchAction = value;
    });
  }

  node[TOUCH_ACTION] = value;
}
/**
 * Dispatches an event on the `target` element of `type` with the given
 * `detail`.
 * @private
 * @param {!EventTarget} target The element on which to fire an event.
 * @param {string} type The type of event to fire.
 * @param {!Object=} detail The detail object to populate on the event.
 * @return {void}
 */

function _fire(target, type, detail) {
  let ev = new Event(type, {
    bubbles: true,
    cancelable: true,
    composed: true
  });
  ev.detail = detail;
  wrap(
  /** @type {!Node} */
  target).dispatchEvent(ev); // forward `preventDefault` in a clean way

  if (ev.defaultPrevented) {
    let preventer = detail.preventer || detail.sourceEvent;

    if (preventer && preventer.preventDefault) {
      preventer.preventDefault();
    }
  }
}
/**
 * Prevents the dispatch and default action of the given event name.
 *
 * @param {string} evName Event name.
 * @return {void}
 */


export function prevent(evName) {
  let recognizer = _findRecognizerByEvent(evName);

  if (recognizer.info) {
    recognizer.info.prevent = true;
  }
}
/**
 * Reset the 2500ms timeout on processing mouse input after detecting touch input.
 *
 * Touch inputs create synthesized mouse inputs anywhere from 0 to 2000ms after the touch.
 * This method should only be called during testing with simulated touch inputs.
 * Calling this method in production may cause duplicate taps or other Gestures.
 *
 * @return {void}
 */

export function resetMouseCanceller() {
  if (POINTERSTATE.mouse.mouseIgnoreJob) {
    POINTERSTATE.mouse.mouseIgnoreJob.flush();
  }
}
/* eslint-disable valid-jsdoc */

register({
  name: 'downup',
  deps: ['mousedown', 'touchstart', 'touchend'],
  flow: {
    start: ['mousedown', 'touchstart'],
    end: ['mouseup', 'touchend']
  },
  emits: ['down', 'up'],
  info: {
    movefn: null,
    upfn: null
  },

  /**
   * @this {GestureRecognizer}
   * @return {void}
   */
  reset: function () {
    untrackDocument(this.info);
  },

  /**
   * @this {GestureRecognizer}
   * @param {MouseEvent} e
   * @return {void}
   */
  mousedown: function (e) {
    if (!hasLeftMouseButton(e)) {
      return;
    }

    let t = _findOriginalTarget(e);

    let self = this;

    let movefn = function movefn(e) {
      if (!hasLeftMouseButton(e)) {
        downupFire('up', t, e);
        untrackDocument(self.info);
      }
    };

    let upfn = function upfn(e) {
      if (hasLeftMouseButton(e)) {
        downupFire('up', t, e);
      }

      untrackDocument(self.info);
    };

    trackDocument(this.info, movefn, upfn);
    downupFire('down', t, e);
  },

  /**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */
  touchstart: function (e) {
    downupFire('down', _findOriginalTarget(e), e.changedTouches[0], e);
  },

  /**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */
  touchend: function (e) {
    downupFire('up', _findOriginalTarget(e), e.changedTouches[0], e);
  }
});
/**
 * @param {string} type
 * @param {EventTarget} target
 * @param {Event|Touch} event
 * @param {Event=} preventer
 * @return {void}
 */

function downupFire(type, target, event, preventer) {
  if (!target) {
    return;
  }

  _fire(target, type, {
    x: event.clientX,
    y: event.clientY,
    sourceEvent: event,
    preventer: preventer,
    prevent: function (e) {
      return prevent(e);
    }
  });
}

register({
  name: 'track',
  touchAction: 'none',
  deps: ['mousedown', 'touchstart', 'touchmove', 'touchend'],
  flow: {
    start: ['mousedown', 'touchstart'],
    end: ['mouseup', 'touchend']
  },
  emits: ['track'],
  info: {
    x: 0,
    y: 0,
    state: 'start',
    started: false,
    moves: [],

    /** @this {GestureInfo} */
    addMove: function (move) {
      if (this.moves.length > TRACK_LENGTH) {
        this.moves.shift();
      }

      this.moves.push(move);
    },
    movefn: null,
    upfn: null,
    prevent: false
  },

  /**
   * @this {GestureRecognizer}
   * @return {void}
   */
  reset: function () {
    this.info.state = 'start';
    this.info.started = false;
    this.info.moves = [];
    this.info.x = 0;
    this.info.y = 0;
    this.info.prevent = false;
    untrackDocument(this.info);
  },

  /**
   * @this {GestureRecognizer}
   * @param {MouseEvent} e
   * @return {void}
   */
  mousedown: function (e) {
    if (!hasLeftMouseButton(e)) {
      return;
    }

    let t = _findOriginalTarget(e);

    let self = this;

    let movefn = function movefn(e) {
      let x = e.clientX,
          y = e.clientY;

      if (trackHasMovedEnough(self.info, x, y)) {
        // first move is 'start', subsequent moves are 'move', mouseup is 'end'
        self.info.state = self.info.started ? e.type === 'mouseup' ? 'end' : 'track' : 'start';

        if (self.info.state === 'start') {
          // if and only if tracking, always prevent tap
          prevent('tap');
        }

        self.info.addMove({
          x: x,
          y: y
        });

        if (!hasLeftMouseButton(e)) {
          // always fire "end"
          self.info.state = 'end';
          untrackDocument(self.info);
        }

        if (t) {
          trackFire(self.info, t, e);
        }

        self.info.started = true;
      }
    };

    let upfn = function upfn(e) {
      if (self.info.started) {
        movefn(e);
      } // remove the temporary listeners


      untrackDocument(self.info);
    }; // add temporary document listeners as mouse retargets


    trackDocument(this.info, movefn, upfn);
    this.info.x = e.clientX;
    this.info.y = e.clientY;
  },

  /**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */
  touchstart: function (e) {
    let ct = e.changedTouches[0];
    this.info.x = ct.clientX;
    this.info.y = ct.clientY;
  },

  /**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */
  touchmove: function (e) {
    let t = _findOriginalTarget(e);

    let ct = e.changedTouches[0];
    let x = ct.clientX,
        y = ct.clientY;

    if (trackHasMovedEnough(this.info, x, y)) {
      if (this.info.state === 'start') {
        // if and only if tracking, always prevent tap
        prevent('tap');
      }

      this.info.addMove({
        x: x,
        y: y
      });
      trackFire(this.info, t, ct);
      this.info.state = 'track';
      this.info.started = true;
    }
  },

  /**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */
  touchend: function (e) {
    let t = _findOriginalTarget(e);

    let ct = e.changedTouches[0]; // only trackend if track was started and not aborted

    if (this.info.started) {
      // reset started state on up
      this.info.state = 'end';
      this.info.addMove({
        x: ct.clientX,
        y: ct.clientY
      });
      trackFire(this.info, t, ct);
    }
  }
});
/**
 * @param {!GestureInfo} info
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 */

function trackHasMovedEnough(info, x, y) {
  if (info.prevent) {
    return false;
  }

  if (info.started) {
    return true;
  }

  let dx = Math.abs(info.x - x);
  let dy = Math.abs(info.y - y);
  return dx >= TRACK_DISTANCE || dy >= TRACK_DISTANCE;
}
/**
 * @param {!GestureInfo} info
 * @param {?EventTarget} target
 * @param {Touch} touch
 * @return {void}
 */


function trackFire(info, target, touch) {
  if (!target) {
    return;
  }

  let secondlast = info.moves[info.moves.length - 2];
  let lastmove = info.moves[info.moves.length - 1];
  let dx = lastmove.x - info.x;
  let dy = lastmove.y - info.y;
  let ddx,
      ddy = 0;

  if (secondlast) {
    ddx = lastmove.x - secondlast.x;
    ddy = lastmove.y - secondlast.y;
  }

  _fire(target, 'track', {
    state: info.state,
    x: touch.clientX,
    y: touch.clientY,
    dx: dx,
    dy: dy,
    ddx: ddx,
    ddy: ddy,
    sourceEvent: touch,
    hover: function () {
      return deepTargetFind(touch.clientX, touch.clientY);
    }
  });
}

register({
  name: 'tap',
  deps: ['mousedown', 'click', 'touchstart', 'touchend'],
  flow: {
    start: ['mousedown', 'touchstart'],
    end: ['click', 'touchend']
  },
  emits: ['tap'],
  info: {
    x: NaN,
    y: NaN,
    prevent: false
  },

  /**
   * @this {GestureRecognizer}
   * @return {void}
   */
  reset: function () {
    this.info.x = NaN;
    this.info.y = NaN;
    this.info.prevent = false;
  },

  /**
   * @this {GestureRecognizer}
   * @param {MouseEvent} e
   * @return {void}
   */
  mousedown: function (e) {
    if (hasLeftMouseButton(e)) {
      this.info.x = e.clientX;
      this.info.y = e.clientY;
    }
  },

  /**
   * @this {GestureRecognizer}
   * @param {MouseEvent} e
   * @return {void}
   */
  click: function (e) {
    if (hasLeftMouseButton(e)) {
      trackForward(this.info, e);
    }
  },

  /**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */
  touchstart: function (e) {
    const touch = e.changedTouches[0];
    this.info.x = touch.clientX;
    this.info.y = touch.clientY;
  },

  /**
   * @this {GestureRecognizer}
   * @param {TouchEvent} e
   * @return {void}
   */
  touchend: function (e) {
    trackForward(this.info, e.changedTouches[0], e);
  }
});
/**
 * @param {!GestureInfo} info
 * @param {Event | Touch} e
 * @param {Event=} preventer
 * @return {void}
 */

function trackForward(info, e, preventer) {
  let dx = Math.abs(e.clientX - info.x);
  let dy = Math.abs(e.clientY - info.y); // find original target from `preventer` for TouchEvents, or `e` for MouseEvents

  let t = _findOriginalTarget(preventer || e);

  if (!t || canBeDisabled[
  /** @type {!HTMLElement} */
  t.localName] && t.hasAttribute('disabled')) {
    return;
  } // dx,dy can be NaN if `click` has been simulated and there was no `down` for `start`


  if (isNaN(dx) || isNaN(dy) || dx <= TAP_DISTANCE && dy <= TAP_DISTANCE || isSyntheticClick(e)) {
    // prevent taps from being generated if an event has canceled them
    if (!info.prevent) {
      _fire(t, 'tap', {
        x: e.clientX,
        y: e.clientY,
        sourceEvent: e,
        preventer: preventer
      });
    }
  }
}
/* eslint-enable valid-jsdoc */

/** @deprecated */


export const findOriginalTarget = _findOriginalTarget;
/** @deprecated */

export const add = addListener;
/** @deprecated */

export const remove = removeListener;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:45:59</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.gestures" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\gestures.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.gestures.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\gestures.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>gestures.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/gestures.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.gulpfile">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.gulpfile.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.gulpfile.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53160.063842</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

'use strict';

/* eslint-env node */
/* eslint-disable no-console */

const gulp = require('gulp');
const sourcemaps = require('gulp-sourcemaps');
const rename = require('gulp-rename');
const rollup = require('rollup-stream');
const source = require('vinyl-source-stream');
const del = require('del');
const runseq = require('run-sequence');
const closure = require('google-closure-compiler').gulp();
const babel = require('rollup-plugin-babel');
const license = require('rollup-plugin-license');

function debugify(sourceName, fileName, extraRollupOptions) {
    if (!fileName)
        fileName = sourceName;

    const options = {
        entry: `./entrypoints/${sourceName}-index.js`,
        format: 'iife',
        moduleName: 'webcomponentsjs'
    };

    Object.assign(options, extraRollupOptions);

    return rollup(options)
        .pipe(source(`${sourceName}-index.js`), 'entrypoints')
        .pipe(rename(fileName + '.js'))
        .pipe(gulp.dest('./'))
}

function closurify(sourceName, fileName) {
    if (!fileName) {
        fileName = sourceName;
    }

    const closureOptions = {
        compilation_level: 'ADVANCED',
        language_in: 'ES6_STRICT',
        language_out: 'ES5_STRICT',
        isolation_mode: 'NONE',
        output_wrapper_file: 'closure-output.txt',
        assume_function_wrapper: true,
        js_output_file: `${fileName}.js`,
        warning_level: 'VERBOSE',
        rewrite_polyfills: false,
        module_resolution: 'NODE',
        entry_point: `entrypoints/${sourceName}-index.js`,
        dependency_mode: 'STRICT',
        externs: [
            'externs/webcomponents.js',
            'node_modules/webcomponents/custom-elements/externs/custom-elements.js',
            'node_modules/webcomponents/html-imports/externs/html-imports.js',
            'node_modules/webcomponents/shadycss/externs/shadycss-externs.js',
            'node_modules/webcomponents/shadydom/externs/shadydom.js'
        ]
    };

    return gulp.src([
        'entrypoints/*.js',
        'src/*.js',
        'node_modules/promise-polyfill/src/*.js',
        'node_modules/webcomponents/**/*.js',
        '!node_modules/webcomponents/*/externs/*.js',
        '!node_modules/webcomponents/*/node_modules/**',
        '!**/bower_components/**'
    ], {base: './', follow: true})
        .pipe(sourcemaps.init())
        .pipe(closure(closureOptions))
        .pipe(sourcemaps.write('.'))
        .pipe(gulp.dest('.'));
}

gulp.task('debugify-hi', () => {
    return debugify('webcomponents-hi')
});

gulp.task('debugify-hi-ce', () => {
    return debugify('webcomponents-hi-ce')
});

gulp.task('debugify-hi-sd-ce', () => {
    return debugify('webcomponents-hi-sd-ce')
});

gulp.task('debugify-hi-sd-ce-pf', () => {
    // The es6-promise polyfill needs to set the correct context.
    // See https://github.com/rollup/rollup/wiki/Troubleshooting#this-is-undefined
    const extraOptions = {context: 'window'};
    return debugify('webcomponents-hi-sd-ce-pf', 'webcomponents-lite', extraOptions)
});

gulp.task('debugify-sd-ce', () => {
    return debugify('webcomponents-sd-ce')
});

gulp.task('debugify-ce', () => {
    return debugify('webcomponents-ce')
});

gulp.task('debugify-sd', () => {
    return debugify('webcomponents-sd')
});

gulp.task('debugify-hi-sd', () => {
    return debugify('webcomponents-hi-sd')
});

gulp.task('closurify-hi', () => {
    return closurify('webcomponents-hi')
});

gulp.task('closurify-hi-ce', () => {
    return closurify('webcomponents-hi-ce')
});

gulp.task('closurify-hi-sd-ce', () => {
    return closurify('webcomponents-hi-sd-ce')
});

gulp.task('closurify-hi-sd-ce-pf', () => {
    return closurify('webcomponents-hi-sd-ce-pf', 'webcomponents-lite')
});

gulp.task('closurify-sd-ce', () => {
    return closurify('webcomponents-sd-ce')
});

gulp.task('closurify-hi-sd', () => {
    return closurify('webcomponents-hi-sd')
});

gulp.task('closurify-ce', () => {
    return closurify('webcomponents-ce')
})

gulp.task('closurify-sd', () => {
    return closurify('webcomponents-sd')
})

const babelOptions = {
    presets: [
        ['minify', {'keepFnName': true}],
    ],
};

gulp.task('debugify-ce-es5-adapter', () => {
    return debugify('custom-elements-es5-adapter', '', {
        plugins: [
            babel(babelOptions),
            license({
                banner: {
                    file: './license-header.txt'
                }
            })
        ]
    });
});

gulp.task('default', ['closure']);

gulp.task('clean-builds', () => {
    return del(['custom-elements-es5-adapter.js{,.map}', 'webcomponents*.js{,.map}', '!webcomponents-loader.js']);
});

gulp.task('debug', (cb) => {
    const tasks = [
        'debugify-ce',
        'debugify-hi',
        'debugify-hi-ce',
        'debugify-hi-sd',
        'debugify-hi-sd-ce',
        'debugify-hi-sd-ce-pf',
        'debugify-sd',
        'debugify-sd-ce',
        'debugify-ce-es5-adapter'
    ];
    runseq('clean-builds', tasks, cb);
});

gulp.task('closure', (cb) => {
    const tasks = [
        'closurify-ce',
        'closurify-hi',
        'closurify-hi-ce',
        'closurify-hi-sd',
        'closurify-hi-sd-ce',
        'closurify-hi-sd-ce-pf',
        'closurify-sd',
        'closurify-sd-ce',
        'debugify-ce-es5-adapter'
    ];
    runseq('clean-builds', ...tasks, cb);
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:00</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.gulpfile" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\gulpfile.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.gulpfile.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\gulpfile.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>gulpfile.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/gulpfile.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.hide.template.controls">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.hide.template.controls.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.hide.template.controls.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53160.180479</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/**
 * @fileoverview
 *
 * Module to hide `<dom-bind>`, `<dom-if>`, and `<dom-repeat>` elements
 * optimally in ShadyDOM
 */
import { legacyOptimizations, useShadow } from '/%ZWebNode.Lib.Polymer.v3.settings.cls';
let elementsHidden = false;
/**
 * @return {boolean} True if elements will be hidden globally
 */

export function hideElementsGlobally() {
  if (legacyOptimizations && !useShadow) {
    if (!elementsHidden) {
      elementsHidden = true;
      const style = document.createElement('style');
      style.textContent = 'dom-bind,dom-if,dom-repeat{display:none;}';
      document.head.appendChild(style);
    }

    return true;
  }

  return false;
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:00</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.hide.template.controls" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\hide-template-controls.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.hide.template.controls.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\hide-template-controls.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>hide-template-controls.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/hide-template-controls.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.html.tag">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.html.tag.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.html.tag.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53160.249573</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
/**
 * Class representing a static string value which can be used to filter
 * strings by asseting that they have been created via this class. The
 * `value` property returns the string passed to the constructor.
 */

class LiteralString {
  constructor(string) {
    /** @type {string} */
    this.value = string.toString();
  }
  /**
   * @return {string} LiteralString string value
   * @override
   */


  toString() {
    return this.value;
  }

}
/**
 * @param {*} value Object to stringify into HTML
 * @return {string} HTML stringified form of `obj`
 */


function literalValue(value) {
  if (value instanceof LiteralString) {
    return (
      /** @type {!LiteralString} */
      value.value
    );
  } else {
    throw new Error(`non-literal value passed to Polymer's htmlLiteral function: ${value}`);
  }
}
/**
 * @param {*} value Object to stringify into HTML
 * @return {string} HTML stringified form of `obj`
 */


function htmlValue(value) {
  if (value instanceof HTMLTemplateElement) {
    return (
      /** @type {!HTMLTemplateElement } */
      value.innerHTML
    );
  } else if (value instanceof LiteralString) {
    return literalValue(value);
  } else {
    throw new Error(`non-template value passed to Polymer's html function: ${value}`);
  }
}
/**
 * A template literal tag that creates an HTML <template> element from the
 * contents of the string.
 *
 * This allows you to write a Polymer Template in JavaScript.
 *
 * Templates can be composed by interpolating `HTMLTemplateElement`s in
 * expressions in the JavaScript template literal. The nested template's
 * `innerHTML` is included in the containing template.  The only other
 * values allowed in expressions are those returned from `htmlLiteral`
 * which ensures only literal values from JS source ever reach the HTML, to
 * guard against XSS risks.
 *
 * All other values are disallowed in expressions to help prevent XSS
 * attacks; however, `htmlLiteral` can be used to compose static
 * string values into templates. This is useful to compose strings into
 * places that do not accept html, like the css text of a `style`
 * element.
 *
 * Example:
 *
 *     static get template() {
 *       return html`
 *         <style>:host{ content:"..." }</style>
 *         <div class="shadowed">${this.partialTemplate}</div>
 *         ${super.template}
 *       `;
 *     }
 *     static get partialTemplate() { return html`<span>Partial!</span>`; }
 *
 * @param {!ITemplateArray} strings Constant parts of tagged template literal
 * @param {...*} values Variable parts of tagged template literal
 * @return {!HTMLTemplateElement} Constructed HTMLTemplateElement
 */


export const html = function html(strings, ...values) {
  const template =
  /** @type {!HTMLTemplateElement} */
  document.createElement('template');
  template.innerHTML = values.reduce((acc, v, idx) => acc + htmlValue(v) + strings[idx + 1], strings[0]);
  return template;
};
/**
 * An html literal tag that can be used with `html` to compose.
 * a literal string.
 *
 * Example:
 *
 *     static get template() {
 *       return html`
 *         <style>
 *           :host { display: block; }
 *           ${this.styleTemplate()}
 *         </style>
 *         <div class="shadowed">${staticValue}</div>
 *         ${super.template}
 *       `;
 *     }
 *     static get styleTemplate() {
 *        return htmlLiteral`.shadowed { background: gray; }`;
 *     }
 *
 * @param {!ITemplateArray} strings Constant parts of tagged template literal
 * @param {...*} values Variable parts of tagged template literal
 * @return {!LiteralString} Constructed literal string
 */

export const htmlLiteral = function (strings, ...values) {
  return new LiteralString(values.reduce((acc, v, idx) => acc + literalValue(v) + strings[idx + 1], strings[0]));
};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:00</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.html.tag" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\html-tag.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.html.tag.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\html-tag.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>html-tag.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/html-tag.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.iron.flex.layout">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.iron.flex.layout.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.iron.flex.layout.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53160.346211</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
import "/%ZWebNode.Lib.Polymer.v3.polymer.legacy.cls";
import { html } from "/%ZWebNode.Lib.Polymer.v3.html.tag.cls";
/**
The `<iron-flex-layout>` component provides simple ways to use
[CSS flexible box
layout](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes),
also known as flexbox. Note that this is an old element, that was written
before all modern browsers had non-prefixed flex styles. As such, nowadays you
don't really need to use this element anymore, and can use CSS flex styles
directly in your code.

This component provides two different ways to use flexbox:

1. [Layout
classes](https://github.com/PolymerElements/iron-flex-layout/tree/master/iron-flex-layout-classes.html).
The layout class stylesheet provides a simple set of class-based flexbox rules,
that let you specify layout properties directly in markup. You must include this
file in every element that needs to use them.

    Sample use:

    ```
    <custom-element-demo>
      <template>
        <script src="webcomponentsjs/webcomponents-lite.js"></script>
        <next-code-block></next-code-block>
      </template>
    </custom-element-demo>
    ```

    ```js
    import {html} from 'polymer/polymer/lib/utils/html-tag.js';
    import 'polymer/iron-flex-layout/iron-flex-layout-classes.js';

    const template = html`
      <style is="custom-style" include="iron-flex iron-flex-alignment"></style>
      <style>
        .test { width: 100px; }
      </style>
      <div class="layout horizontal center-center">
        <div class="test">horizontal layout center alignment</div>
      </div>
    `;
    document.body.appendChild(template.content);
    ```

2. [Custom CSS
mixins](https://github.com/PolymerElements/iron-flex-layout/blob/master/iron-flex-layout.html).
The mixin stylesheet includes custom CSS mixins that can be applied inside a CSS
rule using the `@apply` function.

Please note that the old [/deep/ layout
classes](https://github.com/PolymerElements/iron-flex-layout/tree/master/classes)
are deprecated, and should not be used. To continue using layout properties
directly in markup, please switch to using the new `dom-module`-based
[layout
classes](https://github.com/PolymerElements/iron-flex-layout/tree/master/iron-flex-layout-classes.html).
Please note that the new version does not use `/deep/`, and therefore requires
you to import the `dom-modules` in every element that needs to use them.

@group Iron Elements
@pseudoElement iron-flex-layout
@demo demo/index.html
*/

const template = html`
<custom-style>
  <style is="custom-style">
    [hidden] {
      display: none !important;
    }
  </style>
</custom-style>
<custom-style>
  <style is="custom-style">
    html {

      --layout: {
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
      };

      --layout-inline: {
        display: -ms-inline-flexbox;
        display: -webkit-inline-flex;
        display: inline-flex;
      };

      --layout-horizontal: {
        @apply --layout;

        -ms-flex-direction: row;
        -webkit-flex-direction: row;
        flex-direction: row;
      };

      --layout-horizontal-reverse: {
        @apply --layout;

        -ms-flex-direction: row-reverse;
        -webkit-flex-direction: row-reverse;
        flex-direction: row-reverse;
      };

      --layout-vertical: {
        @apply --layout;

        -ms-flex-direction: column;
        -webkit-flex-direction: column;
        flex-direction: column;
      };

      --layout-vertical-reverse: {
        @apply --layout;

        -ms-flex-direction: column-reverse;
        -webkit-flex-direction: column-reverse;
        flex-direction: column-reverse;
      };

      --layout-wrap: {
        -ms-flex-wrap: wrap;
        -webkit-flex-wrap: wrap;
        flex-wrap: wrap;
      };

      --layout-wrap-reverse: {
        -ms-flex-wrap: wrap-reverse;
        -webkit-flex-wrap: wrap-reverse;
        flex-wrap: wrap-reverse;
      };

      --layout-flex-auto: {
        -ms-flex: 1 1 auto;
        -webkit-flex: 1 1 auto;
        flex: 1 1 auto;
      };

      --layout-flex-none: {
        -ms-flex: none;
        -webkit-flex: none;
        flex: none;
      };

      --layout-flex: {
        -ms-flex: 1 1 0.000000001px;
        -webkit-flex: 1;
        flex: 1;
        -webkit-flex-basis: 0.000000001px;
        flex-basis: 0.000000001px;
      };

      --layout-flex-2: {
        -ms-flex: 2;
        -webkit-flex: 2;
        flex: 2;
      };

      --layout-flex-3: {
        -ms-flex: 3;
        -webkit-flex: 3;
        flex: 3;
      };

      --layout-flex-4: {
        -ms-flex: 4;
        -webkit-flex: 4;
        flex: 4;
      };

      --layout-flex-5: {
        -ms-flex: 5;
        -webkit-flex: 5;
        flex: 5;
      };

      --layout-flex-6: {
        -ms-flex: 6;
        -webkit-flex: 6;
        flex: 6;
      };

      --layout-flex-7: {
        -ms-flex: 7;
        -webkit-flex: 7;
        flex: 7;
      };

      --layout-flex-8: {
        -ms-flex: 8;
        -webkit-flex: 8;
        flex: 8;
      };

      --layout-flex-9: {
        -ms-flex: 9;
        -webkit-flex: 9;
        flex: 9;
      };

      --layout-flex-10: {
        -ms-flex: 10;
        -webkit-flex: 10;
        flex: 10;
      };

      --layout-flex-11: {
        -ms-flex: 11;
        -webkit-flex: 11;
        flex: 11;
      };

      --layout-flex-12: {
        -ms-flex: 12;
        -webkit-flex: 12;
        flex: 12;
      };

      /* alignment in cross axis */

      --layout-start: {
        -ms-flex-align: start;
        -webkit-align-items: flex-start;
        align-items: flex-start;
      };

      --layout-center: {
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;
      };

      --layout-end: {
        -ms-flex-align: end;
        -webkit-align-items: flex-end;
        align-items: flex-end;
      };

      --layout-baseline: {
        -ms-flex-align: baseline;
        -webkit-align-items: baseline;
        align-items: baseline;
      };

      /* alignment in main axis */

      --layout-start-justified: {
        -ms-flex-pack: start;
        -webkit-justify-content: flex-start;
        justify-content: flex-start;
      };

      --layout-center-justified: {
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
      };

      --layout-end-justified: {
        -ms-flex-pack: end;
        -webkit-justify-content: flex-end;
        justify-content: flex-end;
      };

      --layout-around-justified: {
        -ms-flex-pack: distribute;
        -webkit-justify-content: space-around;
        justify-content: space-around;
      };

      --layout-justified: {
        -ms-flex-pack: justify;
        -webkit-justify-content: space-between;
        justify-content: space-between;
      };

      --layout-center-center: {
        @apply --layout-center;
        @apply --layout-center-justified;
      };

      /* self alignment */

      --layout-self-start: {
        -ms-align-self: flex-start;
        -webkit-align-self: flex-start;
        align-self: flex-start;
      };

      --layout-self-center: {
        -ms-align-self: center;
        -webkit-align-self: center;
        align-self: center;
      };

      --layout-self-end: {
        -ms-align-self: flex-end;
        -webkit-align-self: flex-end;
        align-self: flex-end;
      };

      --layout-self-stretch: {
        -ms-align-self: stretch;
        -webkit-align-self: stretch;
        align-self: stretch;
      };

      --layout-self-baseline: {
        -ms-align-self: baseline;
        -webkit-align-self: baseline;
        align-self: baseline;
      };

      /* multi-line alignment in main axis */

      --layout-start-aligned: {
        -ms-flex-line-pack: start;  /* IE10 */
        -ms-align-content: flex-start;
        -webkit-align-content: flex-start;
        align-content: flex-start;
      };

      --layout-end-aligned: {
        -ms-flex-line-pack: end;  /* IE10 */
        -ms-align-content: flex-end;
        -webkit-align-content: flex-end;
        align-content: flex-end;
      };

      --layout-center-aligned: {
        -ms-flex-line-pack: center;  /* IE10 */
        -ms-align-content: center;
        -webkit-align-content: center;
        align-content: center;
      };

      --layout-between-aligned: {
        -ms-flex-line-pack: justify;  /* IE10 */
        -ms-align-content: space-between;
        -webkit-align-content: space-between;
        align-content: space-between;
      };

      --layout-around-aligned: {
        -ms-flex-line-pack: distribute;  /* IE10 */
        -ms-align-content: space-around;
        -webkit-align-content: space-around;
        align-content: space-around;
      };

      /*******************************
                Other Layout
      *******************************/

      --layout-block: {
        display: block;
      };

      --layout-invisible: {
        visibility: hidden !important;
      };

      --layout-relative: {
        position: relative;
      };

      --layout-fit: {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
      };

      --layout-scroll: {
        -webkit-overflow-scrolling: touch;
        overflow: auto;
      };

      --layout-fullbleed: {
        margin: 0;
        height: 100vh;
      };

      /* fixed position */

      --layout-fixed-top: {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
      };

      --layout-fixed-right: {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
      };

      --layout-fixed-bottom: {
        position: fixed;
        right: 0;
        bottom: 0;
        left: 0;
      };

      --layout-fixed-left: {
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
      };

    }
  </style>
</custom-style>`;
template.setAttribute('style', 'display: none;');
document.head.appendChild(template.content);
var style = document.createElement('style');
style.textContent = '[hidden] { display: none !important; }';
document.head.appendChild(style);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:00</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.iron.flex.layout" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\iron-flex-layout.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.iron.flex.layout.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\iron-flex-layout.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>iron-flex-layout.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/iron-flex-layout.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.iron.icon">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.iron.icon.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.iron.icon.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53160.518918</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
import "/%ZWebNode.Lib.Polymer.v3.iron.flex.layout.cls";
import { IronMeta } from "/%ZWebNode.Lib.Polymer.v3.iron.meta.cls";
import { Polymer } from "/%ZWebNode.Lib.Polymer.v3.polymer.fn.cls";
import { dom } from "/%ZWebNode.Lib.Polymer.v3.polymer.dom.cls";
import { html } from "/%ZWebNode.Lib.Polymer.v3.html.tag.cls";
import { Base } from "/%ZWebNode.Lib.Polymer.v3.polymer.legacy.cls";
/**

The `iron-icon` element displays an icon. By default an icon renders as a 24px
square.

Example using src:

    <iron-icon src="v3/star.png"></iron-icon>

Example setting size to 32px x 32px:

    <iron-icon class="big" src="v3/big_star.png"></iron-icon>

    <style is="custom-style">
      .big {
        --iron-icon-height: 32px;
        --iron-icon-width: 32px;
      }
    </style>

The iron elements include several sets of icons. To use the default set of
icons, import `iron-icons.js` and use the `icon` attribute to specify an icon:

    <script type="module">
      import "polymer/iron-icons/iron-icons.js";
    </script>

    <iron-icon icon="menu"></iron-icon>

To use a different built-in set of icons, import the specific
`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.
For example, to use a communication icon, you would use:

    <script type="module">
      import "polymer/iron-icons/communication-icons.js";
    </script>

    <iron-icon icon="communication:email"></iron-icon>

You can also create custom icon sets of bitmap or SVG icons.

Example of using an icon named `cherry` from a custom iconset with the ID
`fruit`:

    <iron-icon icon="fruit:cherry"></iron-icon>

See `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to
create a custom iconset.

See the `iron-icons` demo to see the icons available in the various iconsets.

### Styling

The following custom properties are available for styling:

Custom property | Description | Default
----------------|-------------|----------
`--iron-icon` | Mixin applied to the icon | {}
`--iron-icon-width` | Width of the icon | `24px`
`--iron-icon-height` | Height of the icon | `24px`
`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`
`--iron-icon-stroke-color` | Stroke color of the svg icon | none

@group Iron Elements
@element iron-icon
@demo demo/index.html
@hero hero.svg
@homepage polymer.github.io
*/

Polymer({
  _template: html`
    <style>
      :host {
        @apply --layout-inline;
        @apply --layout-center-center;
        position: relative;

        vertical-align: middle;

        fill: var(--iron-icon-fill-color, currentcolor);
        stroke: var(--iron-icon-stroke-color, none);

        width: var(--iron-icon-width, 24px);
        height: var(--iron-icon-height, 24px);
        @apply --iron-icon;
      }

      :host([hidden]) {
        display: none;
      }
    </style>
`,
  is: 'iron-icon',
  properties: {
    /**
     * The name of the icon to use. The name should be of the form:
     * `iconset_name:icon_name`.
     */
    icon: {
      type: String
    },

    /**
     * The name of the theme to used, if one is specified by the
     * iconset.
     */
    theme: {
      type: String
    },

    /**
     * If using iron-icon without an iconset, you can set the src to be
     * the URL of an individual icon image file. Note that this will take
     * precedence over a given icon attribute.
     */
    src: {
      type: String
    },

    /**
     * @type {!IronMeta}
     */
    _meta: {
      value: Base.create('iron-meta', {
        type: 'iconset'
      })
    }
  },
  observers: ['_updateIcon(_meta, isAttached)', '_updateIcon(theme, isAttached)', '_srcChanged(src, isAttached)', '_iconChanged(icon, isAttached)'],
  _DEFAULT_ICONSET: 'icons',
  _iconChanged: function (icon) {
    var parts = (icon || '').split(':');
    this._iconName = parts.pop();
    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;

    this._updateIcon();
  },
  _srcChanged: function (src) {
    this._updateIcon();
  },
  _usesIconset: function () {
    return this.icon || !this.src;
  },

  /** @suppress {visibility} */
  _updateIcon: function () {
    if (this._usesIconset()) {
      if (this._img && this._img.parentNode) {
        dom(this.root).removeChild(this._img);
      }

      if (this._iconName === '') {
        if (this._iconset) {
          this._iconset.removeIcon(this);
        }
      } else if (this._iconsetName && this._meta) {
        this._iconset =
        /** @type {?Polymer.Iconset} */
        this._meta.byKey(this._iconsetName);

        if (this._iconset) {
          this._iconset.applyIcon(this, this._iconName, this.theme);

          this.unlisten(window, 'iron-iconset-added', '_updateIcon');
        } else {
          this.listen(window, 'iron-iconset-added', '_updateIcon');
        }
      }
    } else {
      if (this._iconset) {
        this._iconset.removeIcon(this);
      }

      if (!this._img) {
        this._img = document.createElement('img');
        this._img.style.width = '100%';
        this._img.style.height = '100%';
        this._img.draggable = false;
      }

      this._img.src = this.src;
      dom(this.root).appendChild(this._img);
    }
  }
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:00</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.iron.icon" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\iron-icon.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.iron.icon.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\iron-icon.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>iron-icon.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/iron-icon.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.iron.icons">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.iron.icons.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.iron.icons.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53160.635831</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
import "/%ZWebNode.Lib.Polymer.v3.iron.icon.cls";
import "/%ZWebNode.Lib.Polymer.v3.iron.iconset.svg.cls";
import { html } from "/%ZWebNode.Lib.Polymer.v3.html.tag.cls";
/**

`iron-icons` is a utility import that includes the definition for the
`iron-icon` element, `iron-iconset-svg` element, as well as an import for the
default icon set.

The `iron-icons` directory also includes imports for additional icon sets that
can be loaded into your project.

Example loading icon set:

    <script type="module">
      import 'polymer/iron-icons/maps-icons.js';
    </script>

To use an icon from one of these sets, first prefix your `iron-icon` with the
icon set name, followed by a colon, ":", and then the icon id.

Example using the directions-bus icon from the maps icon set:

    <iron-icon icon="maps:directions-bus"></iron-icon>

See [iron-icon](https://www.webcomponents.org/element/polymer/iron-icon) for
more information about working with icons.

See [iron-iconset](https://www.webcomponents.org/element/polymer/iron-iconset)
and
[iron-iconset-svg](https://www.webcomponents.org/element/polymer/iron-iconset-svg)
for more information about how to create a custom iconset.

@group Iron Elements
@pseudoElement iron-icons
@demo demo/index.html
*/

const template = html`<iron-iconset-svg name="icons" size="24">
<svg><defs>
<g id="3d-rotation"><path d="M7.52 21.48C4.25 19.94 1.91 16.76 1.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08-.16-.06-.29-.13-.4-.24-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56-.05-.18-.12-.35-.23-.51-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31.2-.09.37-.2.52-.33.15-.13.27-.27.37-.42.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96-.12-.28-.29-.51-.51-.69-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49-.05.15-.14.27-.25.37-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z"></path></g>
<g id="accessibility"><path d="M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 7h-6v13h-2v-6h-2v6H9V9H3V7h18v2z"></path></g>
<g id="accessible"><circle cx="12" cy="4" r="2"></circle><path d="M19 13v-2c-1.54.02-3.09-.75-4.07-1.83l-1.29-1.43c-.17-.19-.38-.34-.61-.45-.01 0-.01-.01-.02-.01H13c-.35-.2-.75-.3-1.19-.26C10.76 7.11 10 8.04 10 9.09V15c0 1.1.9 2 2 2h5v5h2v-5.5c0-1.1-.9-2-2-2h-3v-3.45c1.29 1.07 3.25 1.94 5 1.95zm-6.17 5c-.41 1.16-1.52 2-2.83 2-1.66 0-3-1.34-3-3 0-1.31.84-2.41 2-2.83V12.1c-2.28.46-4 2.48-4 4.9 0 2.76 2.24 5 5 5 2.42 0 4.44-1.72 4.9-4h-2.07z"></path></g>
<g id="account-balance"><path d="M4 10v7h3v-7H4zm6 0v7h3v-7h-3zM2 22h19v-3H2v3zm14-12v7h3v-7h-3zm-4.5-9L2 6v2h19V6l-9.5-5z"></path></g>
<g id="account-balance-wallet"><path d="M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"></path></g>
<g id="account-box"><path d="M3 5v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5c-1.11 0-2 .9-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z"></path></g>
<g id="account-circle"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"></path></g>
<g id="add"><path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"></path></g>
<g id="add-alert"><path d="M10.01 21.01c0 1.1.89 1.99 1.99 1.99s1.99-.89 1.99-1.99h-3.98zm8.87-4.19V11c0-3.25-2.25-5.97-5.29-6.69v-.72C13.59 2.71 12.88 2 12 2s-1.59.71-1.59 1.59v.72C7.37 5.03 5.12 7.75 5.12 11v5.82L3 18.94V20h18v-1.06l-2.12-2.12zM16 13.01h-3v3h-2v-3H8V11h3V8h2v3h3v2.01z"></path></g>
<g id="add-box"><path d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"></path></g>
<g id="add-circle"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"></path></g>
<g id="add-circle-outline"><path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"></path></g>
<g id="add-shopping-cart"><path d="M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z"></path></g>
<g id="alarm"><path d="M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"></path></g>
<g id="alarm-add"><path d="M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm1-11h-2v3H8v2h3v3h2v-3h3v-2h-3V9z"></path></g>
<g id="alarm-off"><path d="M12 6c3.87 0 7 3.13 7 7 0 .84-.16 1.65-.43 2.4l1.52 1.52c.58-1.19.91-2.51.91-3.92 0-4.97-4.03-9-9-9-1.41 0-2.73.33-3.92.91L9.6 6.43C10.35 6.16 11.16 6 12 6zm10-.28l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM2.92 2.29L1.65 3.57 2.98 4.9l-1.11.93 1.42 1.42 1.11-.94.8.8C3.83 8.69 3 10.75 3 13c0 4.97 4.02 9 9 9 2.25 0 4.31-.83 5.89-2.2l2.2 2.2 1.27-1.27L3.89 3.27l-.97-.98zm13.55 16.1C15.26 19.39 13.7 20 12 20c-3.87 0-7-3.13-7-7 0-1.7.61-3.26 1.61-4.47l9.86 9.86zM8.02 3.28L6.6 1.86l-.86.71 1.42 1.42.86-.71z"></path></g>
<g id="alarm-on"><path d="M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-1.46-5.47L8.41 12.4l-1.06 1.06 3.18 3.18 6-6-1.06-1.06-4.93 4.95z"></path></g>
<g id="all-out"><path d="M16.21 4.16l4 4v-4zm4 12l-4 4h4zm-12 4l-4-4v4zm-4-12l4-4h-4zm12.95-.95c-2.73-2.73-7.17-2.73-9.9 0s-2.73 7.17 0 9.9 7.17 2.73 9.9 0 2.73-7.16 0-9.9zm-1.1 8.8c-2.13 2.13-5.57 2.13-7.7 0s-2.13-5.57 0-7.7 5.57-2.13 7.7 0 2.13 5.57 0 7.7z"></path></g>
<g id="android"><path d="M6 18c0 .55.45 1 1 1h1v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h2v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h1c.55 0 1-.45 1-1V8H6v10zM3.5 8C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5S5 17.33 5 16.5v-7C5 8.67 4.33 8 3.5 8zm17 0c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5zm-4.97-5.84l1.3-1.3c.2-.2.2-.51 0-.71-.2-.2-.51-.2-.71 0l-1.48 1.48C13.85 1.23 12.95 1 12 1c-.96 0-1.86.23-2.66.63L7.85.15c-.2-.2-.51-.2-.71 0-.2.2-.2.51 0 .71l1.31 1.31C6.97 3.26 6 5.01 6 7h12c0-1.99-.97-3.75-2.47-4.84zM10 5H9V4h1v1zm5 0h-1V4h1v1z"></path></g>
<g id="announcement"><path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 9h-2V5h2v6zm0 4h-2v-2h2v2z"></path></g>
<g id="apps"><path d="M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z"></path></g>
<g id="archive"><path d="M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z"></path></g>
<g id="arrow-back"><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"></path></g>
<g id="arrow-downward"><path d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"></path></g>
<g id="arrow-drop-down"><path d="M7 10l5 5 5-5z"></path></g>
<g id="arrow-drop-down-circle"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 12l-4-4h8l-4 4z"></path></g>
<g id="arrow-drop-up"><path d="M7 14l5-5 5 5z"></path></g>
<g id="arrow-forward"><path d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"></path></g>
<g id="arrow-upward"><path d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"></path></g>
<g id="aspect-ratio"><path d="M19 12h-2v3h-3v2h5v-5zM7 9h3V7H5v5h2V9zm14-6H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z"></path></g>
<g id="assessment"><path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"></path></g>
<g id="assignment"><path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"></path></g>
<g id="assignment-ind"><path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1.4c0-2 4-3.1 6-3.1s6 1.1 6 3.1V19z"></path></g>
<g id="assignment-late"><path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 15h-2v-2h2v2zm0-4h-2V8h2v6zm-1-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"></path></g>
<g id="assignment-return"><path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm4 12h-4v3l-5-5 5-5v3h4v4z"></path></g>
<g id="assignment-returned"><path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 15l-5-5h3V9h4v4h3l-5 5z"></path></g>
<g id="assignment-turned-in"><path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"></path></g>
<g id="attachment"><path d="M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5C8.12 15 7 13.88 7 12.5S8.12 10 9.5 10H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"></path></g>
<g id="autorenew"><path d="M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z"></path></g>
<g id="backspace"><path d="M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"></path></g>
<g id="backup"><path d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"></path></g>
<g id="block"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z"></path></g>
<g id="book"><path d="M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z"></path></g>
<g id="bookmark"><path d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"></path></g>
<g id="bookmark-border"><path d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z"></path></g>
<g id="bug-report"><path d="M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z"></path></g>
<g id="build"><path d="M22.7 19l-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z"></path></g>
<g id="cached"><path d="M19 8l-4 4h3c0 3.31-2.69 6-6 6-1.01 0-1.97-.25-2.8-.7l-1.46 1.46C8.97 19.54 10.43 20 12 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46C15.03 4.46 13.57 4 12 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z"></path></g>
<g id="camera-enhance"><path d="M9 3L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2h-3.17L15 3H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-1l1.25-2.75L16 13l-2.75-1.25L12 9l-1.25 2.75L8 13l2.75 1.25z"></path></g>
<g id="cancel"><path d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"></path></g>
<g id="card-giftcard"><path d="M20 6h-2.18c.11-.31.18-.65.18-1 0-1.66-1.34-3-3-3-1.05 0-1.96.54-2.5 1.35l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z"></path></g>
<g id="card-membership"><path d="M20 2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h4v5l4-2 4 2v-5h4c1.11 0 2-.89 2-2V4c0-1.11-.89-2-2-2zm0 13H4v-2h16v2zm0-5H4V4h16v6z"></path></g>
<g id="card-travel"><path d="M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z"></path></g>
<g id="change-history"><path d="M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z"></path></g>
<g id="check"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"></path></g>
<g id="check-box"><path d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path></g>
<g id="check-box-outline-blank"><path d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"></path></g>
<g id="check-circle"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path></g>
<g id="chevron-left"><path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"></path></g>
<g id="chevron-right"><path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"></path></g>
<g id="chrome-reader-mode"><path d="M13 12h7v1.5h-7zm0-2.5h7V11h-7zm0 5h7V16h-7zM21 4H3c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 15h-9V6h9v13z"></path></g>
<g id="class"><path d="M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z"></path></g>
<g id="clear"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></g>
<g id="close"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></g>
<g id="cloud"><path d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"></path></g>
<g id="cloud-circle"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4.5 14H8c-1.66 0-3-1.34-3-3s1.34-3 3-3l.14.01C8.58 8.28 10.13 7 12 7c2.21 0 4 1.79 4 4h.5c1.38 0 2.5 1.12 2.5 2.5S17.88 16 16.5 16z"></path></g>
<g id="cloud-done"><path d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z"></path></g>
<g id="cloud-download"><path d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z"></path></g>
<g id="cloud-off"><path d="M19.35 10.04C18.67 6.59 15.64 4 12 4c-1.48 0-2.85.43-4.01 1.17l1.46 1.46C10.21 6.23 11.08 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3 0 1.13-.64 2.11-1.56 2.62l1.45 1.45C23.16 18.16 24 16.68 24 15c0-2.64-2.05-4.78-4.65-4.96zM3 5.27l2.75 2.74C2.56 8.15 0 10.77 0 14c0 3.31 2.69 6 6 6h11.73l2 2L21 20.73 4.27 4 3 5.27zM7.73 10l8 8H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h1.73z"></path></g>
<g id="cloud-queue"><path d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h.71C7.37 7.69 9.48 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3s-1.34 3-3 3z"></path></g>
<g id="cloud-upload"><path d="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"></path></g>
<g id="code"><path d="M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"></path></g>
<g id="compare-arrows"><path d="M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z"></path></g>
<g id="content-copy"><path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"></path></g>
<g id="content-cut"><path d="M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z"></path></g>
<g id="content-paste"><path d="M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z"></path></g>
<g id="copyright"><path d="M10.08 10.86c.05-.33.16-.62.3-.87s.34-.46.59-.62c.24-.15.54-.22.91-.23.23.01.44.05.63.13.2.09.38.21.52.36s.25.33.34.53.13.42.14.64h1.79c-.02-.47-.11-.9-.28-1.29s-.4-.73-.7-1.01-.66-.5-1.08-.66-.88-.23-1.39-.23c-.65 0-1.22.11-1.7.34s-.88.53-1.2.92-.56.84-.71 1.36S8 11.29 8 11.87v.27c0 .58.08 1.12.23 1.64s.39.97.71 1.35.72.69 1.2.91 1.05.34 1.7.34c.47 0 .91-.08 1.32-.23s.77-.36 1.08-.63.56-.58.74-.94.29-.74.3-1.15h-1.79c-.01.21-.06.4-.15.58s-.21.33-.36.46-.32.23-.52.3c-.19.07-.39.09-.6.1-.36-.01-.66-.08-.89-.23-.25-.16-.45-.37-.59-.62s-.25-.55-.3-.88-.08-.67-.08-1v-.27c0-.35.03-.68.08-1.01zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"></path></g>
<g id="create"><path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"></path></g>
<g id="create-new-folder"><path d="M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z"></path></g>
<g id="credit-card"><path d="M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"></path></g>
<g id="dashboard"><path d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"></path></g>
<g id="date-range"><path d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"></path></g>
<g id="delete"><path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"></path></g>
<g id="delete-forever"><path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"></path></g>
<g id="delete-sweep"><path d="M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z"></path></g>
<g id="description"><path d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z"></path></g>
<g id="dns"><path d="M20 13H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zM7 19c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM20 3H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM7 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"></path></g>
<g id="done"><path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"></path></g>
<g id="done-all"><path d="M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z"></path></g>
<g id="donut-large"><path d="M11 5.08V2c-5 .5-9 4.81-9 10s4 9.5 9 10v-3.08c-3-.48-6-3.4-6-6.92s3-6.44 6-6.92zM18.97 11H22c-.47-5-4-8.53-9-9v3.08C16 5.51 18.54 8 18.97 11zM13 18.92V22c5-.47 8.53-4 9-9h-3.03c-.43 3-2.97 5.49-5.97 5.92z"></path></g>
<g id="donut-small"><path d="M11 9.16V2c-5 .5-9 4.79-9 10s4 9.5 9 10v-7.16c-1-.41-2-1.52-2-2.84s1-2.43 2-2.84zM14.86 11H22c-.48-4.75-4-8.53-9-9v7.16c1 .3 1.52.98 1.86 1.84zM13 14.84V22c5-.47 8.52-4.25 9-9h-7.14c-.34.86-.86 1.54-1.86 1.84z"></path></g>
<g id="drafts"><path d="M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z"></path></g>
<g id="eject"><path d="M5 17h14v2H5zm7-12L5.33 15h13.34z"></path></g>
<g id="error"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"></path></g>
<g id="error-outline"><path d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"></path></g>
<g id="euro-symbol"><path d="M15 18.5c-2.51 0-4.68-1.42-5.76-3.5H15v-2H8.58c-.05-.33-.08-.66-.08-1s.03-.67.08-1H15V9H9.24C10.32 6.92 12.5 5.5 15 5.5c1.61 0 3.09.59 4.23 1.57L21 5.3C19.41 3.87 17.3 3 15 3c-3.92 0-7.24 2.51-8.48 6H3v2h3.06c-.04.33-.06.66-.06 1 0 .34.02.67.06 1H3v2h3.52c1.24 3.49 4.56 6 8.48 6 2.31 0 4.41-.87 6-2.3l-1.78-1.77c-1.13.98-2.6 1.57-4.22 1.57z"></path></g>
<g id="event"><path d="M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"></path></g>
<g id="event-seat"><path d="M4 18v3h3v-3h10v3h3v-6H4zm15-8h3v3h-3zM2 10h3v3H2zm15 3H7V5c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2v8z"></path></g>
<g id="exit-to-app"><path d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"></path></g>
<g id="expand-less"><path d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"></path></g>
<g id="expand-more"><path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"></path></g>
<g id="explore"><path d="M12 10.9c-.61 0-1.1.49-1.1 1.1s.49 1.1 1.1 1.1c.61 0 1.1-.49 1.1-1.1s-.49-1.1-1.1-1.1zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm2.19 12.19L6 18l3.81-8.19L18 6l-3.81 8.19z"></path></g>
<g id="extension"><path d="M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z"></path></g>
<g id="face"><path d="M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z"></path></g>
<g id="favorite"><path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"></path></g>
<g id="favorite-border"><path d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"></path></g>
<g id="feedback"><path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 12h-2v-2h2v2zm0-4h-2V6h2v4z"></path></g>
<g id="file-download"><path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"></path></g>
<g id="file-upload"><path d="M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z"></path></g>
<g id="filter-list"><path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"></path></g>
<g id="find-in-page"><path d="M20 19.59V8l-6-6H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c.45 0 .85-.15 1.19-.4l-4.43-4.43c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75L20 19.59zM9 13c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3-3 1.34-3 3z"></path></g>
<g id="find-replace"><path d="M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05C14.68 4.78 12.93 4 11 4c-3.53 0-6.43 2.61-6.92 6H6.1c.46-2.28 2.48-4 4.9-4zm5.64 9.14c.66-.9 1.12-1.97 1.28-3.14H15.9c-.46 2.28-2.48 4-4.9 4-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05C7.32 17.22 9.07 18 11 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z"></path></g>
<g id="fingerprint"><path d="M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2-.13-.24-.04-.55.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67-.09.18-.26.28-.44.28zM3.5 9.72c-.1 0-.2-.03-.29-.09-.23-.16-.28-.47-.12-.7.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25.16.22.11.54-.12.7-.23.16-.54.11-.7-.12-.9-1.26-2.04-2.25-3.39-2.94-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07c-.13 0-.26-.05-.35-.15-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1-1.4-1.39-2.17-3.24-2.17-5.22 0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29-.49-1.31-.73-2.61-.73-3.96 0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z"></path></g>
<g id="first-page"><path d="M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"></path></g>
<g id="flag"><path d="M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z"></path></g>
<g id="flight-land"><path d="M2.5 19h19v2h-19zm7.18-5.73l4.35 1.16 5.31 1.42c.8.21 1.62-.26 1.84-1.06.21-.8-.26-1.62-1.06-1.84l-5.31-1.42-2.76-9.02L10.12 2v8.28L5.15 8.95l-.93-2.32-1.45-.39v5.17l1.6.43 5.31 1.43z"></path></g>
<g id="flight-takeoff"><path d="M2.5 19h19v2h-19zm19.57-9.36c-.21-.8-1.04-1.28-1.84-1.06L14.92 10l-6.9-6.43-1.93.51 4.14 7.17-4.97 1.33-1.97-1.54-1.45.39 1.82 3.16.77 1.33 1.6-.43 5.31-1.42 4.35-1.16L21 11.49c.81-.23 1.28-1.05 1.07-1.85z"></path></g>
<g id="flip-to-back"><path d="M9 7H7v2h2V7zm0 4H7v2h2v-2zm0-8c-1.11 0-2 .9-2 2h2V3zm4 12h-2v2h2v-2zm6-12v2h2c0-1.1-.9-2-2-2zm-6 0h-2v2h2V3zM9 17v-2H7c0 1.1.89 2 2 2zm10-4h2v-2h-2v2zm0-4h2V7h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zM5 7H3v12c0 1.1.89 2 2 2h12v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z"></path></g>
<g id="flip-to-front"><path d="M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3c0 1.1.89 2 2 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9c-1.11 0-2 .9-2 2v10c0 1.1.89 2 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z"></path></g>
<g id="folder"><path d="M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"></path></g>
<g id="folder-open"><path d="M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z"></path></g>
<g id="folder-shared"><path d="M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-5 3c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm4 8h-8v-1c0-1.33 2.67-2 4-2s4 .67 4 2v1z"></path></g>
<g id="font-download"><path d="M9.93 13.5h4.14L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.05 16.5l-1.14-3H9.17l-1.12 3H5.96l5.11-13h1.86l5.11 13h-2.09z"></path></g>
<g id="forward"><path d="M12 8V4l8 8-8 8v-4H4V8z"></path></g>
<g id="fullscreen"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"></path></g>
<g id="fullscreen-exit"><path d="M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z"></path></g>
<g id="g-translate"><path d="M20 5h-9.12L10 2H4c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h7l1 3h8c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zM7.17 14.59c-2.25 0-4.09-1.83-4.09-4.09s1.83-4.09 4.09-4.09c1.04 0 1.99.37 2.74 1.07l.07.06-1.23 1.18-.06-.05c-.29-.27-.78-.59-1.52-.59-1.31 0-2.38 1.09-2.38 2.42s1.07 2.42 2.38 2.42c1.37 0 1.96-.87 2.12-1.46H7.08V9.91h3.95l.01.07c.04.21.05.4.05.61 0 2.35-1.61 4-3.92 4zm6.03-1.71c.33.6.74 1.18 1.19 1.7l-.54.53-.65-2.23zm.77-.76h-.99l-.31-1.04h3.99s-.34 1.31-1.56 2.74c-.52-.62-.89-1.23-1.13-1.7zM21 20c0 .55-.45 1-1 1h-7l2-2-.81-2.77.92-.92L17.79 18l.73-.73-2.71-2.68c.9-1.03 1.6-2.25 1.92-3.51H19v-1.04h-3.64V9h-1.04v1.04h-1.96L11.18 6H20c.55 0 1 .45 1 1v13z"></path></g>
<g id="gavel"><path d="M1 21h12v2H1zM5.245 8.07l2.83-2.827 14.14 14.142-2.828 2.828zM12.317 1l5.657 5.656-2.83 2.83-5.654-5.66zM3.825 9.485l5.657 5.657-2.828 2.828-5.657-5.657z"></path></g>
<g id="gesture"><path d="M4.59 6.89c.7-.71 1.4-1.35 1.71-1.22.5.2 0 1.03-.3 1.52-.25.42-2.86 3.89-2.86 6.31 0 1.28.48 2.34 1.34 2.98.75.56 1.74.73 2.64.46 1.07-.31 1.95-1.4 3.06-2.77 1.21-1.49 2.83-3.44 4.08-3.44 1.63 0 1.65 1.01 1.76 1.79-3.78.64-5.38 3.67-5.38 5.37 0 1.7 1.44 3.09 3.21 3.09 1.63 0 4.29-1.33 4.69-6.1H21v-2.5h-2.47c-.15-1.65-1.09-4.2-4.03-4.2-2.25 0-4.18 1.91-4.94 2.84-.58.73-2.06 2.48-2.29 2.72-.25.3-.68.84-1.11.84-.45 0-.72-.83-.36-1.92.35-1.09 1.4-2.86 1.85-3.52.78-1.14 1.3-1.92 1.3-3.28C8.95 3.69 7.31 3 6.44 3 5.12 3 3.97 4 3.72 4.25c-.36.36-.66.66-.88.93l1.75 1.71zm9.29 11.66c-.31 0-.74-.26-.74-.72 0-.6.73-2.2 2.87-2.76-.3 2.69-1.43 3.48-2.13 3.48z"></path></g>
<g id="get-app"><path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"></path></g>
<g id="gif"><path d="M11.5 9H13v6h-1.5zM9 9H6c-.6 0-1 .5-1 1v4c0 .5.4 1 1 1h3c.6 0 1-.5 1-1v-2H8.5v1.5h-2v-3H10V10c0-.5-.4-1-1-1zm10 1.5V9h-4.5v6H16v-2h2v-1.5h-2v-1z"></path></g>
<g id="grade"><path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path></g>
<g id="group-work"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM9.5 8c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8zm6.5 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"></path></g>
<g id="help"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"></path></g>
<g id="help-outline"><path d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"></path></g>
<g id="highlight-off"><path d="M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"></path></g>
<g id="history"><path d="M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z"></path></g>
<g id="home"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"></path></g>
<g id="hourglass-empty"><path d="M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z"></path></g>
<g id="hourglass-full"><path d="M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6z"></path></g>
<g id="http"><path d="M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zm9-1.5H18v6h1.5v-2h2c.8 0 1.5-.7 1.5-1.5v-1c0-.8-.7-1.5-1.5-1.5zm0 2.5h-2v-1h2v1z"></path></g>
<g id="https"><path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"></path></g>
<g id="important-devices"><path d="M23 11.01L18 11c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-9c0-.55-.45-.99-1-.99zM23 20h-5v-7h5v7zM20 2H2C.89 2 0 2.89 0 4v12c0 1.1.89 2 2 2h7v2H7v2h8v-2h-2v-2h2v-2H2V4h18v5h2V4c0-1.11-.9-2-2-2zm-8.03 7L11 6l-.97 3H7l2.47 1.76-.94 2.91 2.47-1.8 2.47 1.8-.94-2.91L15 9h-3.03z"></path></g>
<g id="inbox"><path d="M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z"></path></g>
<g id="indeterminate-check-box"><path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"></path></g>
<g id="info"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"></path></g>
<g id="info-outline"><path d="M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z"></path></g>
<g id="input"><path d="M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z"></path></g>
<g id="invert-colors"><path d="M17.66 7.93L12 2.27 6.34 7.93c-3.12 3.12-3.12 8.19 0 11.31C7.9 20.8 9.95 21.58 12 21.58c2.05 0 4.1-.78 5.66-2.34 3.12-3.12 3.12-8.19 0-11.31zM12 19.59c-1.6 0-3.11-.62-4.24-1.76C6.62 16.69 6 15.19 6 13.59s.62-3.11 1.76-4.24L12 5.1v14.49z"></path></g>
<g id="label"><path d="M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z"></path></g>
<g id="label-outline"><path d="M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16zM16 17H5V7h11l3.55 5L16 17z"></path></g>
<g id="language"><path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"></path></g>
<g id="last-page"><path d="M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"></path></g>
<g id="launch"><path d="M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"></path></g>
<g id="lightbulb-outline"><path d="M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z"></path></g>
<g id="line-style"><path d="M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z"></path></g>
<g id="line-weight"><path d="M3 17h18v-2H3v2zm0 3h18v-1H3v1zm0-7h18v-3H3v3zm0-9v4h18V4H3z"></path></g>
<g id="link"><path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"></path></g>
<g id="list"><path d="M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z"></path></g>
<g id="lock"><path d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"></path></g>
<g id="lock-open"><path d="M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"></path></g>
<g id="lock-outline"><path d="M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6zM18 20H6V10h12v10z"></path></g>
<g id="low-priority"><path d="M14 5h8v2h-8zm0 5.5h8v2h-8zm0 5.5h8v2h-8zM2 11.5C2 15.08 4.92 18 8.5 18H9v2l3-3-3-3v2h-.5C6.02 16 4 13.98 4 11.5S6.02 7 8.5 7H12V5H8.5C4.92 5 2 7.92 2 11.5z"></path></g>
<g id="loyalty"><path d="M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7zm11.77 8.27L13 19.54l-4.27-4.27C8.28 14.81 8 14.19 8 13.5c0-1.38 1.12-2.5 2.5-2.5.69 0 1.32.28 1.77.74l.73.72.73-.73c.45-.45 1.08-.73 1.77-.73 1.38 0 2.5 1.12 2.5 2.5 0 .69-.28 1.32-.73 1.77z"></path></g>
<g id="mail"><path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"></path></g>
<g id="markunread"><path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"></path></g>
<g id="markunread-mailbox"><path d="M20 6H10v6H8V4h6V0H6v6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2z"></path></g>
<g id="menu"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></g>
<g id="more-horiz"><path d="M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"></path></g>
<g id="more-vert"><path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"></path></g>
<g id="motorcycle"><path d="M19.44 9.03L15.41 5H11v2h3.59l2 2H5c-2.8 0-5 2.2-5 5s2.2 5 5 5c2.46 0 4.45-1.69 4.9-4h1.65l2.77-2.77c-.21.54-.32 1.14-.32 1.77 0 2.8 2.2 5 5 5s5-2.2 5-5c0-2.65-1.97-4.77-4.56-4.97zM7.82 15C7.4 16.15 6.28 17 5 17c-1.63 0-3-1.37-3-3s1.37-3 3-3c1.28 0 2.4.85 2.82 2H5v2h2.82zM19 17c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"></path></g>
<g id="move-to-inbox"><path d="M19 3H4.99c-1.11 0-1.98.9-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10zm-3-5h-2V7h-4v3H8l4 4 4-4z"></path></g>
<g id="next-week"><path d="M20 7h-4V5c0-.55-.22-1.05-.59-1.41C15.05 3.22 14.55 3 14 3h-4c-1.1 0-2 .9-2 2v2H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zM10 5h4v2h-4V5zm1 13.5l-1-1 3-3-3-3 1-1 4 4-4 4z"></path></g>
<g id="note-add"><path d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z"></path></g>
<g id="offline-pin"><path d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm5 16H7v-2h10v2zm-6.7-4L7 10.7l1.4-1.4 1.9 1.9 5.3-5.3L17 7.3 10.3 14z"></path></g>
<g id="opacity"><path d="M17.66 8L12 2.35 6.34 8C4.78 9.56 4 11.64 4 13.64s.78 4.11 2.34 5.67 3.61 2.35 5.66 2.35 4.1-.79 5.66-2.35S20 15.64 20 13.64 19.22 9.56 17.66 8zM6 14c.01-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 17.99 12 18 14H6z"></path></g>
<g id="open-in-browser"><path d="M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z"></path></g>
<g id="open-in-new"><path d="M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"></path></g>
<g id="open-with"><path d="M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z"></path></g>
<g id="pageview"><path d="M11.5 9C10.12 9 9 10.12 9 11.5s1.12 2.5 2.5 2.5 2.5-1.12 2.5-2.5S12.88 9 11.5 9zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z"></path></g>
<g id="pan-tool"><path d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"></path></g>
<g id="payment"><path d="M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"></path></g>
<g id="perm-camera-mic"><path d="M20 5h-3.17L15 3H9L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v-2.09c-2.83-.48-5-2.94-5-5.91h2c0 2.21 1.79 4 4 4s4-1.79 4-4h2c0 2.97-2.17 5.43-5 5.91V21h7c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-6 8c0 1.1-.9 2-2 2s-2-.9-2-2V9c0-1.1.9-2 2-2s2 .9 2 2v4z"></path></g>
<g id="perm-contact-calendar"><path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1z"></path></g>
<g id="perm-data-setting"><path d="M18.99 11.5c.34 0 .67.03 1 .07L20 0 0 20h11.56c-.04-.33-.07-.66-.07-1 0-4.14 3.36-7.5 7.5-7.5zm3.71 7.99c.02-.16.04-.32.04-.49 0-.17-.01-.33-.04-.49l1.06-.83c.09-.08.12-.21.06-.32l-1-1.73c-.06-.11-.19-.15-.31-.11l-1.24.5c-.26-.2-.54-.37-.85-.49l-.19-1.32c-.01-.12-.12-.21-.24-.21h-2c-.12 0-.23.09-.25.21l-.19 1.32c-.3.13-.59.29-.85.49l-1.24-.5c-.11-.04-.24 0-.31.11l-1 1.73c-.06.11-.04.24.06.32l1.06.83c-.02.16-.03.32-.03.49 0 .17.01.33.03.49l-1.06.83c-.09.08-.12.21-.06.32l1 1.73c.06.11.19.15.31.11l1.24-.5c.26.2.54.37.85.49l.19 1.32c.02.12.12.21.25.21h2c.12 0 .23-.09.25-.21l.19-1.32c.3-.13.59-.29.84-.49l1.25.5c.11.04.24 0 .31-.11l1-1.73c.06-.11.03-.24-.06-.32l-1.07-.83zm-3.71 1.01c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"></path></g>
<g id="perm-device-information"><path d="M13 7h-2v2h2V7zm0 4h-2v6h2v-6zm4-9.99L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"></path></g>
<g id="perm-identity"><path d="M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z"></path></g>
<g id="perm-media"><path d="M2 6H0v5h.01L0 20c0 1.1.9 2 2 2h18v-2H2V6zm20-2h-8l-2-2H6c-1.1 0-1.99.9-1.99 2L4 16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7 15l4.5-6 3.5 4.51 2.5-3.01L21 15H7z"></path></g>
<g id="perm-phone-msg"><path d="M20 15.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM12 3v10l3-3h6V3h-9z"></path></g>
<g id="perm-scan-wifi"><path d="M12 3C6.95 3 3.15 4.85 0 7.23L12 22 24 7.25C20.85 4.87 17.05 3 12 3zm1 13h-2v-6h2v6zm-2-8V6h2v2h-2z"></path></g>
<g id="pets"><circle cx="4.5" cy="9.5" r="2.5"></circle><circle cx="9" cy="5.5" r="2.5"></circle><circle cx="15" cy="5.5" r="2.5"></circle><circle cx="19.5" cy="9.5" r="2.5"></circle><path d="M17.34 14.86c-.87-1.02-1.6-1.89-2.48-2.91-.46-.54-1.05-1.08-1.75-1.32-.11-.04-.22-.07-.33-.09-.25-.04-.52-.04-.78-.04s-.53 0-.79.05c-.11.02-.22.05-.33.09-.7.24-1.28.78-1.75 1.32-.87 1.02-1.6 1.89-2.48 2.91-1.31 1.31-2.92 2.76-2.62 4.79.29 1.02 1.02 2.03 2.33 2.32.73.15 3.06-.44 5.54-.44h.18c2.48 0 4.81.58 5.54.44 1.31-.29 2.04-1.31 2.33-2.32.31-2.04-1.3-3.49-2.61-4.8z"></path></g>
<g id="picture-in-picture"><path d="M19 7h-8v6h8V7zm2-4H3c-1.1 0-2 .9-2 2v14c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98V5c0-1.1-.9-2-2-2zm0 16.01H3V4.98h18v14.03z"></path></g>
<g id="picture-in-picture-alt"><path d="M19 11h-8v6h8v-6zm4 8V4.98C23 3.88 22.1 3 21 3H3c-1.1 0-2 .88-2 1.98V19c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H3V4.97h18v14.05z"></path></g>
<g id="play-for-work"><path d="M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z"></path></g>
<g id="polymer"><path d="M19 4h-4L7.11 16.63 4.5 12 9 4H5L.5 12 5 20h4l7.89-12.63L19.5 12 15 20h4l4.5-8z"></path></g>
<g id="power-settings-new"><path d="M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z"></path></g>
<g id="pregnant-woman"><path d="M9 4c0-1.11.89-2 2-2s2 .89 2 2-.89 2-2 2-2-.89-2-2zm7 9c-.01-1.34-.83-2.51-2-3 0-1.66-1.34-3-3-3s-3 1.34-3 3v7h2v5h3v-5h3v-4z"></path></g>
<g id="print"><path d="M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z"></path></g>
<g id="query-builder"><path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"></path></g>
<g id="question-answer"><path d="M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z"></path></g>
<g id="radio-button-checked"><path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"></path></g>
<g id="radio-button-unchecked"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"></path></g>
<g id="receipt"><path d="M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z"></path></g>
<g id="record-voice-over"><circle cx="9" cy="9" r="4"></circle><path d="M9 15c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4zm7.76-9.64l-1.68 1.69c.84 1.18.84 2.71 0 3.89l1.68 1.69c2.02-2.02 2.02-5.07 0-7.27zM20.07 2l-1.63 1.63c2.77 3.02 2.77 7.56 0 10.74L20.07 16c3.9-3.89 3.91-9.95 0-14z"></path></g>
<g id="redeem"><path d="M20 6h-2.18c.11-.31.18-.65.18-1 0-1.66-1.34-3-3-3-1.05 0-1.96.54-2.5 1.35l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z"></path></g>
<g id="redo"><path d="M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z"></path></g>
<g id="refresh"><path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"></path></g>
<g id="remove"><path d="M19 13H5v-2h14v2z"></path></g>
<g id="remove-circle"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z"></path></g>
<g id="remove-circle-outline"><path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"></path></g>
<g id="remove-shopping-cart"><path d="M22.73 22.73L2.77 2.77 2 2l-.73-.73L0 2.54l4.39 4.39 2.21 4.66-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h7.46l1.38 1.38c-.5.36-.83.95-.83 1.62 0 1.1.89 2 1.99 2 .67 0 1.26-.33 1.62-.84L21.46 24l1.27-1.27zM7.42 15c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h2.36l2 2H7.42zm8.13-2c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H6.54l9.01 9zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2z"></path></g>
<g id="reorder"><path d="M3 15h18v-2H3v2zm0 4h18v-2H3v2zm0-8h18V9H3v2zm0-6v2h18V5H3z"></path></g>
<g id="reply"><path d="M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path></g>
<g id="reply-all"><path d="M7 8V5l-7 7 7 7v-3l-4-4 4-4zm6 1V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"></path></g>
<g id="report"><path d="M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM12 17.3c-.72 0-1.3-.58-1.3-1.3 0-.72.58-1.3 1.3-1.3.72 0 1.3.58 1.3 1.3 0 .72-.58 1.3-1.3 1.3zm1-4.3h-2V7h2v6z"></path></g>
<g id="report-problem"><path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"></path></g>
<g id="restore"><path d="M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z"></path></g>
<g id="restore-page"><path d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm-2 16c-2.05 0-3.81-1.24-4.58-3h1.71c.63.9 1.68 1.5 2.87 1.5 1.93 0 3.5-1.57 3.5-3.5S13.93 9.5 12 9.5c-1.35 0-2.52.78-3.1 1.9l1.6 1.6h-4V9l1.3 1.3C8.69 8.92 10.23 8 12 8c2.76 0 5 2.24 5 5s-2.24 5-5 5z"></path></g>
<g id="room"><path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"></path></g>
<g id="rounded-corner"><path d="M19 19h2v2h-2v-2zm0-2h2v-2h-2v2zM3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm0-4h2V3H3v2zm4 0h2V3H7v2zm8 16h2v-2h-2v2zm-4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm-8 0h2v-2H7v2zm-4 0h2v-2H3v2zM21 8c0-2.76-2.24-5-5-5h-5v2h5c1.65 0 3 1.35 3 3v5h2V8z"></path></g>
<g id="rowing"><path d="M8.5 14.5L4 19l1.5 1.5L9 17h2l-2.5-2.5zM15 1c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 20.01L18 24l-2.99-3.01V19.5l-7.1-7.09c-.31.05-.61.07-.91.07v-2.16c1.66.03 3.61-.87 4.67-2.04l1.4-1.55c.19-.21.43-.38.69-.5.29-.14.62-.23.96-.23h.03C15.99 6.01 17 7.02 17 8.26v5.75c0 .84-.35 1.61-.92 2.16l-3.58-3.58v-2.27c-.63.52-1.43 1.02-2.29 1.39L16.5 18H18l3 3.01z"></path></g>
<g id="save"><path d="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"></path></g>
<g id="schedule"><path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"></path></g>
<g id="search"><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"></path></g>
<g id="select-all"><path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z"></path></g>
<g id="send"><path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"></path></g>
<g id="settings"><path d="M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z"></path></g>
<g id="settings-applications"><path d="M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-1.75 9c0 .23-.02.46-.05.68l1.48 1.16c.13.11.17.3.08.45l-1.4 2.42c-.09.15-.27.21-.43.15l-1.74-.7c-.36.28-.76.51-1.18.69l-.26 1.85c-.03.17-.18.3-.35.3h-2.8c-.17 0-.32-.13-.35-.29l-.26-1.85c-.43-.18-.82-.41-1.18-.69l-1.74.7c-.16.06-.34 0-.43-.15l-1.4-2.42c-.09-.15-.05-.34.08-.45l1.48-1.16c-.03-.23-.05-.46-.05-.69 0-.23.02-.46.05-.68l-1.48-1.16c-.13-.11-.17-.3-.08-.45l1.4-2.42c.09-.15.27-.21.43-.15l1.74.7c.36-.28.76-.51 1.18-.69l.26-1.85c.03-.17.18-.3.35-.3h2.8c.17 0 .32.13.35.29l.26 1.85c.43.18.82.41 1.18.69l1.74-.7c.16-.06.34 0 .43.15l1.4 2.42c.09.15.05.34-.08.45l-1.48 1.16c.03.23.05.46.05.69z"></path></g>
<g id="settings-backup-restore"><path d="M14 12c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2zm-2-9c-4.97 0-9 4.03-9 9H0l4 4 4-4H5c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.51 0-2.91-.49-4.06-1.3l-1.42 1.44C8.04 20.3 9.94 21 12 21c4.97 0 9-4.03 9-9s-4.03-9-9-9z"></path></g>
<g id="settings-bluetooth"><path d="M11 24h2v-2h-2v2zm-4 0h2v-2H7v2zm8 0h2v-2h-2v2zm2.71-18.29L12 0h-1v7.59L6.41 3 5 4.41 10.59 10 5 15.59 6.41 17 11 12.41V20h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 3.83l1.88 1.88L13 7.59V3.83zm1.88 10.46L13 16.17v-3.76l1.88 1.88z"></path></g>
<g id="settings-brightness"><path d="M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02zM8 16h2.5l1.5 1.5 1.5-1.5H16v-2.5l1.5-1.5-1.5-1.5V8h-2.5L12 6.5 10.5 8H8v2.5L6.5 12 8 13.5V16zm4-7c1.66 0 3 1.34 3 3s-1.34 3-3 3V9z"></path></g>
<g id="settings-cell"><path d="M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM16 .01L8 0C6.9 0 6 .9 6 2v16c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V2c0-1.1-.9-1.99-2-1.99zM16 16H8V4h8v12z"></path></g>
<g id="settings-ethernet"><path d="M7.77 6.76L6.23 5.48.82 12l5.41 6.52 1.54-1.28L3.42 12l4.35-5.24zM7 13h2v-2H7v2zm10-2h-2v2h2v-2zm-6 2h2v-2h-2v2zm6.77-7.52l-1.54 1.28L20.58 12l-4.35 5.24 1.54 1.28L23.18 12l-5.41-6.52z"></path></g>
<g id="settings-input-antenna"><path d="M12 5c-3.87 0-7 3.13-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.87-3.13-7-7-7zm1 9.29c.88-.39 1.5-1.26 1.5-2.29 0-1.38-1.12-2.5-2.5-2.5S9.5 10.62 9.5 12c0 1.02.62 1.9 1.5 2.29v3.3L7.59 21 9 22.41l3-3 3 3L16.41 21 13 17.59v-3.3zM12 1C5.93 1 1 5.93 1 12h2c0-4.97 4.03-9 9-9s9 4.03 9 9h2c0-6.07-4.93-11-11-11z"></path></g>
<g id="settings-input-component"><path d="M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z"></path></g>
<g id="settings-input-composite"><path d="M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z"></path></g>
<g id="settings-input-hdmi"><path d="M18 7V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v3H5v6l3 6v3h8v-3l3-6V7h-1zM8 4h8v3h-2V5h-1v2h-2V5h-1v2H8V4z"></path></g>
<g id="settings-input-svideo"><path d="M8 11.5c0-.83-.67-1.5-1.5-1.5S5 10.67 5 11.5 5.67 13 6.5 13 8 12.33 8 11.5zm7-5c0-.83-.67-1.5-1.5-1.5h-3C9.67 5 9 5.67 9 6.5S9.67 8 10.5 8h3c.83 0 1.5-.67 1.5-1.5zM8.5 15c-.83 0-1.5.67-1.5 1.5S7.67 18 8.5 18s1.5-.67 1.5-1.5S9.33 15 8.5 15zM12 1C5.93 1 1 5.93 1 12s4.93 11 11 11 11-4.93 11-11S18.07 1 12 1zm0 20c-4.96 0-9-4.04-9-9s4.04-9 9-9 9 4.04 9 9-4.04 9-9 9zm5.5-11c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-2 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"></path></g>
<g id="settings-overscan"><path d="M12.01 5.5L10 8h4l-1.99-2.5zM18 10v4l2.5-1.99L18 10zM6 10l-2.5 2.01L6 14v-4zm8 6h-4l2.01 2.5L14 16zm7-13H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z"></path></g>
<g id="settings-phone"><path d="M13 9h-2v2h2V9zm4 0h-2v2h2V9zm3 6.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 9v2h2V9h-2z"></path></g>
<g id="settings-power"><path d="M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm2-22h-2v10h2V2zm3.56 2.44l-1.45 1.45C16.84 6.94 18 8.83 18 11c0 3.31-2.69 6-6 6s-6-2.69-6-6c0-2.17 1.16-4.06 2.88-5.12L7.44 4.44C5.36 5.88 4 8.28 4 11c0 4.42 3.58 8 8 8s8-3.58 8-8c0-2.72-1.36-5.12-3.44-6.56zM15 24h2v-2h-2v2z"></path></g>
<g id="settings-remote"><path d="M15 9H9c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V10c0-.55-.45-1-1-1zm-3 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM7.05 6.05l1.41 1.41C9.37 6.56 10.62 6 12 6s2.63.56 3.54 1.46l1.41-1.41C15.68 4.78 13.93 4 12 4s-3.68.78-4.95 2.05zM12 0C8.96 0 6.21 1.23 4.22 3.22l1.41 1.41C7.26 3.01 9.51 2 12 2s4.74 1.01 6.36 2.64l1.41-1.41C17.79 1.23 15.04 0 12 0z"></path></g>
<g id="settings-voice"><path d="M7 24h2v-2H7v2zm5-11c1.66 0 2.99-1.34 2.99-3L15 4c0-1.66-1.34-3-3-3S9 2.34 9 4v6c0 1.66 1.34 3 3 3zm-1 11h2v-2h-2v2zm4 0h2v-2h-2v2zm4-14h-1.7c0 3-2.54 5.1-5.3 5.1S6.7 13 6.7 10H5c0 3.41 2.72 6.23 6 6.72V20h2v-3.28c3.28-.49 6-3.31 6-6.72z"></path></g>
<g id="shop"><path d="M16 6V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H2v13c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6h-6zm-6-2h4v2h-4V4zM9 18V9l7.5 4L9 18z"></path></g>
<g id="shop-two"><path d="M3 9H1v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2H3V9zm15-4V3c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H5v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2V5h-5zm-6-2h4v2h-4V3zm0 12V8l5.5 3-5.5 4z"></path></g>
<g id="shopping-basket"><path d="M17.21 9l-4.38-6.56c-.19-.28-.51-.42-.83-.42-.32 0-.64.14-.83.43L6.79 9H2c-.55 0-1 .45-1 1 0 .09.01.18.04.27l2.54 9.27c.23.84 1 1.46 1.92 1.46h13c.92 0 1.69-.62 1.93-1.46l2.54-9.27L23 10c0-.55-.45-1-1-1h-4.79zM9 9l3-4.4L15 9H9zm3 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"></path></g>
<g id="shopping-cart"><path d="M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"></path></g>
<g id="sort"><path d="M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z"></path></g>
<g id="speaker-notes"><path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 14H6v-2h2v2zm0-3H6V9h2v2zm0-3H6V6h2v2zm7 6h-5v-2h5v2zm3-3h-8V9h8v2zm0-3h-8V6h8v2z"></path></g>
<g id="speaker-notes-off"><path d="M10.54 11l-.54-.54L7.54 8 6 6.46 2.38 2.84 1.27 1.73 0 3l2.01 2.01L2 22l4-4h9l5.73 5.73L22 22.46 17.54 18l-7-7zM8 14H6v-2h2v2zm-2-3V9l2 2H6zm14-9H4.08L10 7.92V6h8v2h-7.92l1 1H18v2h-4.92l6.99 6.99C21.14 17.95 22 17.08 22 16V4c0-1.1-.9-2-2-2z"></path></g>
<g id="spellcheck"><path d="M12.45 16h2.09L9.43 3H7.57L2.46 16h2.09l1.12-3h5.64l1.14 3zm-6.02-5L8.5 5.48 10.57 11H6.43zm15.16.59l-8.09 8.09L9.83 16l-1.41 1.41 5.09 5.09L23 13l-1.41-1.41z"></path></g>
<g id="star"><path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"></path></g>
<g id="star-border"><path d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"></path></g>
<g id="star-half"><path d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4V6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"></path></g>
<g id="stars"><path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23L16.23 18z"></path></g>
<g id="store"><path d="M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z"></path></g>
<g id="subdirectory-arrow-left"><path d="M11 9l1.42 1.42L8.83 14H18V4h2v12H8.83l3.59 3.58L11 21l-6-6 6-6z"></path></g>
<g id="subdirectory-arrow-right"><path d="M19 15l-6 6-1.42-1.42L15.17 16H4V4h2v10h9.17l-3.59-3.58L13 9l6 6z"></path></g>
<g id="subject"><path d="M14 17H4v2h10v-2zm6-8H4v2h16V9zM4 15h16v-2H4v2zM4 5v2h16V5H4z"></path></g>
<g id="supervisor-account"><path d="M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7C15.12 7 14 8.12 14 9.5s1.12 2.5 2.5 2.5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z"></path></g>
<g id="swap-horiz"><path d="M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z"></path></g>
<g id="swap-vert"><path d="M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z"></path></g>
<g id="swap-vertical-circle"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM6.5 9L10 5.5 13.5 9H11v4H9V9H6.5zm11 6L14 18.5 10.5 15H13v-4h2v4h2.5z"></path></g>
<g id="system-update-alt"><path d="M12 16.5l4-4h-3v-9h-2v9H8l4 4zm9-13h-6v1.99h6v14.03H3V5.49h6V3.5H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2z"></path></g>
<g id="tab"><path d="M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h10v4h8v10z"></path></g>
<g id="tab-unselected"><path d="M1 9h2V7H1v2zm0 4h2v-2H1v2zm0-8h2V3c-1.1 0-2 .9-2 2zm8 16h2v-2H9v2zm-8-4h2v-2H1v2zm2 4v-2H1c0 1.1.9 2 2 2zM21 3h-8v6h10V5c0-1.1-.9-2-2-2zm0 14h2v-2h-2v2zM9 5h2V3H9v2zM5 21h2v-2H5v2zM5 5h2V3H5v2zm16 16c1.1 0 2-.9 2-2h-2v2zm0-8h2v-2h-2v2zm-8 8h2v-2h-2v2zm4 0h2v-2h-2v2z"></path></g>
<g id="text-format"><path d="M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z"></path></g>
<g id="theaters"><path d="M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z"></path></g>
<g id="thumb-down"><path d="M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v1.91l.01.01L1 14c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"></path></g>
<g id="thumb-up"><path d="M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z"></path></g>
<g id="thumbs-up-down"><path d="M12 6c0-.55-.45-1-1-1H5.82l.66-3.18.02-.23c0-.31-.13-.59-.33-.8L5.38 0 .44 4.94C.17 5.21 0 5.59 0 6v6.5c0 .83.67 1.5 1.5 1.5h6.75c.62 0 1.15-.38 1.38-.91l2.26-5.29c.07-.17.11-.36.11-.55V6zm10.5 4h-6.75c-.62 0-1.15.38-1.38.91l-2.26 5.29c-.07.17-.11.36-.11.55V18c0 .55.45 1 1 1h5.18l-.66 3.18-.02.24c0 .31.13.59.33.8l.79.78 4.94-4.94c.27-.27.44-.65.44-1.06v-6.5c0-.83-.67-1.5-1.5-1.5z"></path></g>
<g id="timeline"><path d="M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2z"></path></g>
<g id="toc"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z"></path></g>
<g id="today"><path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"></path></g>
<g id="toll"><path d="M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zM3 12c0-2.61 1.67-4.83 4-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09c-2.33-.82-4-3.04-4-5.65z"></path></g>
<g id="touch-app"><path d="M9 11.24V7.5C9 6.12 10.12 5 11.5 5S14 6.12 14 7.5v3.74c1.21-.81 2-2.18 2-3.74C16 5.01 13.99 3 11.5 3S7 5.01 7 7.5c0 1.56.79 2.93 2 3.74zm9.84 4.63l-4.54-2.26c-.17-.07-.35-.11-.54-.11H13v-6c0-.83-.67-1.5-1.5-1.5S10 6.67 10 7.5v10.74l-3.43-.72c-.08-.01-.15-.03-.24-.03-.31 0-.59.13-.79.33l-.79.8 4.94 4.94c.27.27.65.44 1.06.44h6.79c.75 0 1.33-.55 1.44-1.28l.75-5.27c.01-.07.02-.14.02-.2 0-.62-.38-1.16-.91-1.38z"></path></g>
<g id="track-changes"><path d="M19.07 4.93l-1.41 1.41C19.1 7.79 20 9.79 20 12c0 4.42-3.58 8-8 8s-8-3.58-8-8c0-4.08 3.05-7.44 7-7.93v2.02C8.16 6.57 6 9.03 6 12c0 3.31 2.69 6 6 6s6-2.69 6-6c0-1.66-.67-3.16-1.76-4.24l-1.41 1.41C15.55 9.9 16 10.9 16 12c0 2.21-1.79 4-4 4s-4-1.79-4-4c0-1.86 1.28-3.41 3-3.86v2.14c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V2h-1C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-2.76-1.12-5.26-2.93-7.07z"></path></g>
<g id="translate"><path d="M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"></path></g>
<g id="trending-down"><path d="M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z"></path></g>
<g id="trending-flat"><path d="M22 12l-4-4v3H3v2h15v3z"></path></g>
<g id="trending-up"><path d="M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z"></path></g>
<g id="turned-in"><path d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"></path></g>
<g id="turned-in-not"><path d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z"></path></g>
<g id="unarchive"><path d="M20.55 5.22l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.15.55L3.46 5.22C3.17 5.57 3 6.01 3 6.5V19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.49-.17-.93-.45-1.28zM12 9.5l5.5 5.5H14v2h-4v-2H6.5L12 9.5zM5.12 5l.82-1h12l.93 1H5.12z"></path></g>
<g id="undo"><path d="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z"></path></g>
<g id="unfold-less"><path d="M7.41 18.59L8.83 20 12 16.83 15.17 20l1.41-1.41L12 14l-4.59 4.59zm9.18-13.18L15.17 4 12 7.17 8.83 4 7.41 5.41 12 10l4.59-4.59z"></path></g>
<g id="unfold-more"><path d="M12 5.83L15.17 9l1.41-1.41L12 3 7.41 7.59 8.83 9 12 5.83zm0 12.34L8.83 15l-1.41 1.41L12 21l4.59-4.59L15.17 15 12 18.17z"></path></g>
<g id="update"><path d="M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79 2.73 2.71 7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58 3.51-3.47 9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z"></path></g>
<g id="verified-user"><path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"></path></g>
<g id="view-agenda"><path d="M20 13H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm0-10H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"></path></g>
<g id="view-array"><path d="M4 18h3V5H4v13zM18 5v13h3V5h-3zM8 18h9V5H8v13z"></path></g>
<g id="view-carousel"><path d="M7 19h10V4H7v15zm-5-2h4V6H2v11zM18 6v11h4V6h-4z"></path></g>
<g id="view-column"><path d="M10 18h5V5h-5v13zm-6 0h5V5H4v13zM16 5v13h5V5h-5z"></path></g>
<g id="view-day"><path d="M2 21h19v-3H2v3zM20 8H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zM2 3v3h19V3H2z"></path></g>
<g id="view-headline"><path d="M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z"></path></g>
<g id="view-list"><path d="M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z"></path></g>
<g id="view-module"><path d="M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z"></path></g>
<g id="view-quilt"><path d="M10 18h5v-6h-5v6zm-6 0h5V5H4v13zm12 0h5v-6h-5v6zM10 5v6h11V5H10z"></path></g>
<g id="view-stream"><path d="M4 18h17v-6H4v6zM4 5v6h17V5H4z"></path></g>
<g id="view-week"><path d="M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"></path></g>
<g id="visibility"><path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"></path></g>
<g id="visibility-off"><path d="M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"></path></g>
<g id="warning"><path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"></path></g>
<g id="watch-later"><path d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm4.2 14.2L11 13V7h1.5v5.2l4.5 2.7-.8 1.3z"></path></g>
<g id="weekend"><path d="M21 10c-1.1 0-2 .9-2 2v3H5v-3c0-1.1-.9-2-2-2s-2 .9-2 2v5c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-5c0-1.1-.9-2-2-2zm-3-5H6c-1.1 0-2 .9-2 2v2.15c1.16.41 2 1.51 2 2.82V14h12v-2.03c0-1.3.84-2.4 2-2.82V7c0-1.1-.9-2-2-2z"></path></g>
<g id="work"><path d="M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z"></path></g>
<g id="youtube-searched-for"><path d="M17.01 14h-.8l-.27-.27c.98-1.14 1.57-2.61 1.57-4.23 0-3.59-2.91-6.5-6.5-6.5s-6.5 3-6.5 6.5H2l3.84 4 4.16-4H6.51C6.51 7 8.53 5 11.01 5s4.5 2.01 4.5 4.5c0 2.48-2.02 4.5-4.5 4.5-.65 0-1.26-.14-1.82-.38L7.71 15.1c.97.57 2.09.9 3.3.9 1.61 0 3.08-.59 4.22-1.57l.27.27v.79l5.01 4.99L22 19l-4.99-5z"></path></g>
<g id="zoom-in"><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zm2.5-4h-2v2H9v-2H7V9h2V7h1v2h2v1z"></path></g>
<g id="zoom-out"><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z"></path></g>
</defs></svg>
</iron-iconset-svg>`;
document.head.appendChild(template.content);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:00</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.iron.icons" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\iron-icons.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.iron.icons.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\iron-icons.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>iron-icons.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/iron-icons.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.iron.iconset.svg">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.iron.iconset.svg.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.iron.iconset.svg.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53160.799119</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
import "/%ZWebNode.Lib.Polymer.v3.polymer.legacy.cls";
import { IronMeta } from "/%ZWebNode.Lib.Polymer.v3.iron.meta.cls";
import { Polymer } from "/%ZWebNode.Lib.Polymer.v3.polymer.fn.cls";
import { dom } from "/%ZWebNode.Lib.Polymer.v3.polymer.dom.cls";
/**
 * The `iron-iconset-svg` element allows users to define their own icon sets
 * that contain svg icons. The svg icon elements should be children of the
 * `iron-iconset-svg` element. Multiple icons should be given distinct id's.
 *
 * Using svg elements to create icons has a few advantages over traditional
 * bitmap graphics like jpg or png. Icons that use svg are vector based so
 * they are resolution independent and should look good on any device. They
 * are stylable via css. Icons can be themed, colorized, and even animated.
 *
 * Example:
 *
 *     <iron-iconset-svg name="my-svg-icons" size="24">
 *       <svg>
 *         <defs>
 *           <g id="shape">
 *             <rect x="12" y="0" width="12" height="24" />
 *             <circle cx="12" cy="12" r="12" />
 *           </g>
 *         </defs>
 *       </svg>
 *     </iron-iconset-svg>
 *
 * This will automatically register the icon set "my-svg-icons" to the iconset
 * database.  To use these icons from within another element, make a
 * `iron-iconset` element and call the `byId` method
 * to retrieve a given iconset. To apply a particular icon inside an
 * element use the `applyIcon` method. For example:
 *
 *     iconset.applyIcon(iconNode, 'car');
 *
 * @element iron-iconset-svg
 * @demo demo/index.html
 * @implements {Polymer.Iconset}
 */

Polymer({
  is: 'iron-iconset-svg',
  properties: {
    /**
     * The name of the iconset.
     */
    name: {
      type: String,
      observer: '_nameChanged'
    },

    /**
     * The size of an individual icon. Note that icons must be square.
     */
    size: {
      type: Number,
      value: 24
    },

    /**
     * Set to true to enable mirroring of icons where specified when they are
     * stamped. Icons that should be mirrored should be decorated with a
     * `mirror-in-rtl` attribute.
     *
     * NOTE: For performance reasons, direction will be resolved once per
     * document per iconset, so moving icons in and out of RTL subtrees will
     * not cause their mirrored state to change.
     */
    rtlMirroring: {
      type: Boolean,
      value: false
    },

    /**
     * Set to true to measure RTL based on the dir attribute on the body or
     * html elements (measured on document.body or document.documentElement as
     * available).
     */
    useGlobalRtlAttribute: {
      type: Boolean,
      value: false
    }
  },
  created: function () {
    this._meta = new IronMeta({
      type: 'iconset',
      key: null,
      value: null
    });
  },
  attached: function () {
    this.style.display = 'none';
  },

  /**
   * Construct an array of all icon names in this iconset.
   *
   * @return {!Array} Array of icon names.
   */
  getIconNames: function () {
    this._icons = this._createIconMap();
    return Object.keys(this._icons).map(function (n) {
      return this.name + ':' + n;
    }, this);
  },

  /**
   * Applies an icon to the given element.
   *
   * An svg icon is prepended to the element's shadowRoot if it exists,
   * otherwise to the element itself.
   *
   * If RTL mirroring is enabled, and the icon is marked to be mirrored in
   * RTL, the element will be tested (once and only once ever for each
   * iconset) to determine the direction of the subtree the element is in.
   * This direction will apply to all future icon applications, although only
   * icons marked to be mirrored will be affected.
   *
   * @method applyIcon
   * @param {Element} element Element to which the icon is applied.
   * @param {string} iconName Name of the icon to apply.
   * @return {?Element} The svg element which renders the icon.
   */
  applyIcon: function (element, iconName) {
    // Remove old svg element
    this.removeIcon(element); // install new svg element

    var svg = this._cloneIcon(iconName, this.rtlMirroring && this._targetIsRTL(element));

    if (svg) {
      // insert svg element into shadow root, if it exists
      var pde = dom(element.root || element);
      pde.insertBefore(svg, pde.childNodes[0]);
      return element._svgIcon = svg;
    }

    return null;
  },

  /**
   * Remove an icon from the given element by undoing the changes effected
   * by `applyIcon`.
   *
   * @param {Element} element The element from which the icon is removed.
   */
  removeIcon: function (element) {
    // Remove old svg element
    if (element._svgIcon) {
      dom(element.root || element).removeChild(element._svgIcon);
      element._svgIcon = null;
    }
  },

  /**
   * Measures and memoizes the direction of the element. Note that this
   * measurement is only done once and the result is memoized for future
   * invocations.
   */
  _targetIsRTL: function (target) {
    if (this.__targetIsRTL == null) {
      if (this.useGlobalRtlAttribute) {
        var globalElement = document.body && document.body.hasAttribute('dir') ? document.body : document.documentElement;
        this.__targetIsRTL = globalElement.getAttribute('dir') === 'rtl';
      } else {
        if (target && target.nodeType !== Node.ELEMENT_NODE) {
          target = target.host;
        }

        this.__targetIsRTL = target && window.getComputedStyle(target)['direction'] === 'rtl';
      }
    }

    return this.__targetIsRTL;
  },

  /**
   *
   * When name is changed, register iconset metadata
   *
   */
  _nameChanged: function () {
    this._meta.value = null;
    this._meta.key = this.name;
    this._meta.value = this;
    this.async(function () {
      this.fire('iron-iconset-added', this, {
        node: window
      });
    });
  },

  /**
   * Create a map of child SVG elements by id.
   *
   * @return {!Object} Map of id's to SVG elements.
   */
  _createIconMap: function () {
    // Objects chained to Object.prototype (`{}`) have members. Specifically,
    // on FF there is a `watch` method that confuses the icon map, so we
    // need to use a null-based object here.
    var icons = Object.create(null);
    dom(this).querySelectorAll('[id]').forEach(function (icon) {
      icons[icon.id] = icon;
    });
    return icons;
  },

  /**
   * Produce installable clone of the SVG element matching `id` in this
   * iconset, or `undefined` if there is no matching element.
   *
   * @return {Element} Returns an installable clone of the SVG element
   * matching `id`.
   */
  _cloneIcon: function (id, mirrorAllowed) {
    // create the icon map on-demand, since the iconset itself has no discrete
    // signal to know when it's children are fully parsed
    this._icons = this._icons || this._createIconMap();
    return this._prepareSvgClone(this._icons[id], this.size, mirrorAllowed);
  },

  /**
   * @param {Element} sourceSvg
   * @param {number} size
   * @param {Boolean} mirrorAllowed
   * @return {Element}
   */
  _prepareSvgClone: function (sourceSvg, size, mirrorAllowed) {
    if (sourceSvg) {
      var content = sourceSvg.cloneNode(true),
          svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),
          viewBox = content.getAttribute('viewBox') || '0 0 ' + size + ' ' + size,
          cssText = 'pointer-events: none; display: block; width: 100%; height: 100%;';

      if (mirrorAllowed && content.hasAttribute('mirror-in-rtl')) {
        cssText += '-webkit-transform:scale(-1,1);transform:scale(-1,1);transform-origin:center;';
      }

      svg.setAttribute('viewBox', viewBox);
      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');
      svg.setAttribute('focusable', 'false'); // TODO(dfreedm): `pointer-events: none` works around
      // https://crbug.com/370136
      // TODO(sjmiles): inline style may not be ideal, but avoids requiring a
      // shadow-root

      svg.style.cssText = cssText;
      svg.appendChild(content).removeAttribute('id');
      return svg;
    }

    return null;
  }
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:00</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.iron.iconset.svg" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\iron-iconset-svg.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.iron.iconset.svg.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\iron-iconset-svg.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>iron-iconset-svg.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/iron-iconset-svg.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.iron.meta">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.iron.meta.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.iron.meta.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53160.932375</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
import "/%ZWebNode.Lib.Polymer.v3.polymer.legacy.cls";
import { Polymer } from "/%ZWebNode.Lib.Polymer.v3.polymer.fn.cls";
export class IronMeta {
  /**
   * @param {{
   *   type: (string|null|undefined),
   *   key: (string|null|undefined),
   *   value: *,
   * }=} options
   */
  constructor(options) {
    IronMeta[' '](options);
    /** @type {string} */

    this.type = options && options.type || 'default';
    /** @type {string|null|undefined} */

    this.key = options && options.key;

    if (options && 'value' in options) {
      /** @type {*} */
      this.value = options.value;
    }
  }
  /** @return {*} */


  get value() {
    var type = this.type;
    var key = this.key;

    if (type && key) {
      return IronMeta.types[type] && IronMeta.types[type][key];
    }
  }
  /** @param {*} value */


  set value(value) {
    var type = this.type;
    var key = this.key;

    if (type && key) {
      type = IronMeta.types[type] = IronMeta.types[type] || {};

      if (value == null) {
        delete type[key];
      } else {
        type[key] = value;
      }
    }
  }
  /** @return {!Array<*>} */


  get list() {
    var type = this.type;

    if (type) {
      var items = IronMeta.types[this.type];

      if (!items) {
        return [];
      }

      return Object.keys(items).map(function (key) {
        return metaDatas[this.type][key];
      }, this);
    }
  }
  /**
   * @param {string} key
   * @return {*}
   */


  byKey(key) {
    this.key = key;
    return this.value;
  }

}
; // This function is used to convince Closure not to remove constructor calls
// for instances that are not held anywhere. For example, when
// `new IronMeta({...})` is used only for the side effect of adding a value.

IronMeta[' '] = function () {};

IronMeta.types = {};
var metaDatas = IronMeta.types;
/**
`iron-meta` is a generic element you can use for sharing information across the
DOM tree. It uses [monostate pattern](http://c2.com/cgi/wiki?MonostatePattern)
such that any instance of iron-meta has access to the shared information. You
can use `iron-meta` to share whatever you want (or create an extension [like
x-meta] for enhancements).

The `iron-meta` instances containing your actual data can be loaded in an
import, or constructed in any way you see fit. The only requirement is that you
create them before you try to access them.

Examples:

If I create an instance like this:

    <iron-meta key="info" value="foo/bar"></iron-meta>

Note that value="foo/bar" is the metadata I've defined. I could define more
attributes or use child nodes to define additional metadata.

Now I can access that element (and it's metadata) from any iron-meta instance
via the byKey method, e.g.

    meta.byKey('info');

Pure imperative form would be like:

    document.createElement('iron-meta').byKey('info');

Or, in a Polymer element, you can include a meta in your template:

    <iron-meta id="meta"></iron-meta>
    ...
    this.$.meta.byKey('info');

@group Iron Elements
@demo demo/index.html
@element iron-meta
*/

Polymer({
  is: 'iron-meta',
  properties: {
    /**
     * The type of meta-data.  All meta-data of the same type is stored
     * together.
     * @type {string}
     */
    type: {
      type: String,
      value: 'default'
    },

    /**
     * The key used to store `value` under the `type` namespace.
     * @type {?string}
     */
    key: {
      type: String
    },

    /**
     * The meta-data to store or retrieve.
     * @type {*}
     */
    value: {
      type: String,
      notify: true
    },

    /**
     * If true, `value` is set to the iron-meta instance itself.
     */
    self: {
      type: Boolean,
      observer: '_selfChanged'
    },
    __meta: {
      type: Boolean,
      computed: '__computeMeta(type, key, value)'
    }
  },
  hostAttributes: {
    hidden: true
  },
  __computeMeta: function (type, key, value) {
    var meta = new IronMeta({
      type: type,
      key: key
    });

    if (value !== undefined && value !== meta.value) {
      meta.value = value;
    } else if (this.value !== meta.value) {
      this.value = meta.value;
    }

    return meta;
  },

  get list() {
    return this.__meta && this.__meta.list;
  },

  _selfChanged: function (self) {
    if (self) {
      this.value = this;
    }
  },

  /**
   * Retrieves meta data value by key.
   *
   * @method byKey
   * @param {string} key The key of the meta-data to be returned.
   * @return {*}
   */
  byKey: function (key) {
    return new IronMeta({
      type: this.type,
      key: key
    }).value;
  }
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:00</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.iron.meta" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\iron-meta.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.iron.meta.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\iron-meta.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>iron-meta.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/iron-meta.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.legacy.element.mixin">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.legacy.element.mixin.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.legacy.element.mixin.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53161.054004</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import "/%ZWebNode.Lib.Polymer.v3.apply.shim.edit.cls";
import { ElementMixin } from '/%ZWebNode.Lib.Polymer.v3.element.mixin.cls';
import { GestureEventListeners } from '/%ZWebNode.Lib.Polymer.v3.gesture.event.listeners.cls';
import { DirMixin } from '/%ZWebNode.Lib.Polymer.v3.dir.mixin.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import '/%ZWebNode.Lib.Polymer.v3.render.status.cls';
import '/%ZWebNode.Lib.Polymer.v3.unresolved.cls';
import { dom, matchesSelector } from '/%ZWebNode.Lib.Polymer.v3.polymer.dom.cls';
import { setTouchAction } from '/%ZWebNode.Lib.Polymer.v3.gestures.cls';
import { Debouncer } from '/%ZWebNode.Lib.Polymer.v3.debounce.cls';
import { timeOut, microTask } from '/%ZWebNode.Lib.Polymer.v3.async.cls';
import { get } from '/%ZWebNode.Lib.Polymer.v3.path.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
import { scopeSubtree } from '/%ZWebNode.Lib.Polymer.v3.scope.subtree.cls';
let styleInterface = window.ShadyCSS;
/**
 * Element class mixin that provides Polymer's "legacy" API intended to be
 * backward-compatible to the greatest extent possible with the API
 * found on the Polymer 1.x `Polymer.Base` prototype applied to all elements
 * defined using the `Polymer({...})` function.
 *
 * @mixinFunction
 * polymer
 * @appliesMixin ElementMixin
 * @appliesMixin GestureEventListeners
 * @property isAttached {boolean} Set to `true` in this element's
 *   `connectedCallback` and `false` in `disconnectedCallback`
 * @summary Element class mixin that provides Polymer's "legacy" API
 */

export const LegacyElementMixin = dedupingMixin(base => {
  /**
   * @constructor
   * @implements {Polymer_ElementMixin}
   * @implements {Polymer_GestureEventListeners}
   * @implements {Polymer_DirMixin}
   * @extends {HTMLElement}
   * @private
   */
  const legacyElementBase = DirMixin(GestureEventListeners(ElementMixin(base)));
  /**
   * Map of simple names to touch action names
   * @dict
   */

  const DIRECTION_MAP = {
    'x': 'pan-x',
    'y': 'pan-y',
    'none': 'none',
    'all': 'auto'
  };
  /**
   * polymer
   * @mixinClass
   * @extends {legacyElementBase}
   * @implements {Polymer_LegacyElementMixin}
   * @unrestricted
   */

  class LegacyElement extends legacyElementBase {
    constructor() {
      super();
      /** @type {boolean} */

      this.isAttached;
      /** @type {?WeakMap<!Element, !Object<string, !Function>>} */

      this.__boundListeners;
      /** @type {?Object<string, ?Function>} */

      this._debouncers;
    }
    /**
     * Forwards `importMeta` from the prototype (i.e. from the info object
     * passed to `Polymer({...})`) to the static API.
     *
     * @return {!Object} The `import.meta` object set on the prototype
     * @suppress {missingProperties} `this` is always in the instance in
     *  closure for some reason even in a static method, rather than the class
     * @nocollapse
     */


    static get importMeta() {
      return this.prototype.importMeta;
    }
    /**
     * Legacy callback called during the `constructor`, for overriding
     * by the user.
     * @override
     * @return {void}
     */


    created() {}
    /**
     * Provides an implementation of `connectedCallback`
     * which adds Polymer legacy API's `attached` method.
     * @return {void}
     * @override
     */


    connectedCallback() {
      super.connectedCallback();
      this.isAttached = true;
      this.attached();
    }
    /**
     * Legacy callback called during `connectedCallback`, for overriding
     * by the user.
     * @override
     * @return {void}
     */


    attached() {}
    /**
     * Provides an implementation of `disconnectedCallback`
     * which adds Polymer legacy API's `detached` method.
     * @return {void}
     * @override
     */


    disconnectedCallback() {
      super.disconnectedCallback();
      this.isAttached = false;
      this.detached();
    }
    /**
     * Legacy callback called during `disconnectedCallback`, for overriding
     * by the user.
     * @override
     * @return {void}
     */


    detached() {}
    /**
     * Provides an override implementation of `attributeChangedCallback`
     * which adds the Polymer legacy API's `attributeChanged` method.
     * @param {string} name Name of attribute.
     * @param {?string} old Old value of attribute.
     * @param {?string} value Current value of attribute.
     * @param {?string} namespace Attribute namespace.
     * @return {void}
     * @override
     */


    attributeChangedCallback(name, old, value, namespace) {
      if (old !== value) {
        super.attributeChangedCallback(name, old, value, namespace);
        this.attributeChanged(name, old, value);
      }
    }
    /**
     * Legacy callback called during `attributeChangedChallback`, for overriding
     * by the user.
     * @param {string} name Name of attribute.
     * @param {?string} old Old value of attribute.
     * @param {?string} value Current value of attribute.
     * @return {void}
     * @override
     */


    attributeChanged(name, old, value) {} // eslint-disable-line no-unused-vars

    /**
     * Overrides the default `Polymer.PropertyEffects` implementation to
     * add support for class initialization via the `_registered` callback.
     * This is called only when the first instance of the element is created.
     *
     * @return {void}
     * @override
     * @suppress {invalidCasts}
     */


    _initializeProperties() {
      let proto = Object.getPrototypeOf(this);

      if (!proto.hasOwnProperty('__hasRegisterFinished')) {
        this._registered(); // backstop in case the `_registered` implementation does not set this


        proto.__hasRegisterFinished = true;
      }

      super._initializeProperties();

      this.root =
      /** @type {HTMLElement} */
      this;
      this.created(); // Ensure listeners are applied immediately so that they are
      // added before declarative event listeners. This allows an element to
      // decorate itself via an event prior to any declarative listeners
      // seeing the event. Note, this ensures compatibility with 1.x ordering.

      this._applyListeners();
    }
    /**
     * Called automatically when an element is initializing.
     * Users may override this method to perform class registration time
     * work. The implementation should ensure the work is performed
     * only once for the class.
     * @protected
     * @return {void}
     * @override
     */


    _registered() {}
    /**
     * Overrides the default `Polymer.PropertyEffects` implementation to
     * add support for installing `hostAttributes` and `listeners`.
     *
     * @return {void}
     * @override
     */


    ready() {
      this._ensureAttributes();

      super.ready();
    }
    /**
     * Ensures an element has required attributes. Called when the element
     * is being readied via `ready`. Users should override to set the
     * element's required attributes. The implementation should be sure
     * to check and not override existing attributes added by
     * the user of the element. Typically, setting attributes should be left
     * to the element user and not done here; reasonable exceptions include
     * setting aria roles and focusability.
     * @protected
     * @return {void}
     * @override
     */


    _ensureAttributes() {}
    /**
     * Adds element event listeners. Called when the element
     * is being readied via `ready`. Users should override to
     * add any required element event listeners.
     * In performance critical elements, the work done here should be kept
     * to a minimum since it is done before the element is rendered. In
     * these elements, consider adding listeners asynchronously so as not to
     * block render.
     * @protected
     * @return {void}
     * @override
     */


    _applyListeners() {}
    /**
     * Converts a typed JavaScript value to a string.
     *
     * Note this method is provided as backward-compatible legacy API
     * only.  It is not directly called by any Polymer features. To customize
     * how properties are serialized to attributes for attribute bindings and
     * `reflectToAttribute: true` properties as well as this method, override
     * the `_serializeValue` method provided by `Polymer.PropertyAccessors`.
     *
     * @param {*} value Value to deserialize
     * @return {string | undefined} Serialized value
     * @override
     */


    serialize(value) {
      return this._serializeValue(value);
    }
    /**
     * Converts a string to a typed JavaScript value.
     *
     * Note this method is provided as backward-compatible legacy API
     * only.  It is not directly called by any Polymer features.  To customize
     * how attributes are deserialized to properties for in
     * `attributeChangedCallback`, override `_deserializeValue` method
     * provided by `Polymer.PropertyAccessors`.
     *
     * @param {string} value String to deserialize
     * @param {*} type Type to deserialize the string to
     * @return {*} Returns the deserialized value in the `type` given.
     * @override
     */


    deserialize(value, type) {
      return this._deserializeValue(value, type);
    }
    /**
     * Serializes a property to its associated attribute.
     *
     * Note this method is provided as backward-compatible legacy API
     * only.  It is not directly called by any Polymer features.
     *
     * @param {string} property Property name to reflect.
     * @param {string=} attribute Attribute name to reflect.
     * @param {*=} value Property value to reflect.
     * @return {void}
     * @override
     */


    reflectPropertyToAttribute(property, attribute, value) {
      this._propertyToAttribute(property, attribute, value);
    }
    /**
     * Sets a typed value to an HTML attribute on a node.
     *
     * Note this method is provided as backward-compatible legacy API
     * only.  It is not directly called by any Polymer features.
     *
     * @param {*} value Value to serialize.
     * @param {string} attribute Attribute name to serialize to.
     * @param {Element} node Element to set attribute to.
     * @return {void}
     * @override
     */


    serializeValueToAttribute(value, attribute, node) {
      this._valueToNodeAttribute(
      /** @type {Element} */
      node || this, value, attribute);
    }
    /**
     * Copies own properties (including accessor descriptors) from a source
     * object to a target object.
     *
     * @param {Object} prototype Target object to copy properties to.
     * @param {Object} api Source object to copy properties from.
     * @return {Object} prototype object that was passed as first argument.
     * @override
     */


    extend(prototype, api) {
      if (!(prototype && api)) {
        return prototype || api;
      }

      let n$ = Object.getOwnPropertyNames(api);

      for (let i = 0, n; i < n$.length && (n = n$[i]); i++) {
        let pd = Object.getOwnPropertyDescriptor(api, n);

        if (pd) {
          Object.defineProperty(prototype, n, pd);
        }
      }

      return prototype;
    }
    /**
     * Copies props from a source object to a target object.
     *
     * Note, this method uses a simple `for...in` strategy for enumerating
     * properties.  To ensure only `ownProperties` are copied from source
     * to target and that accessor implementations are copied, use `extend`.
     *
     * @param {!Object} target Target object to copy properties to.
     * @param {!Object} source Source object to copy properties from.
     * @return {!Object} Target object that was passed as first argument.
     * @override
     */


    mixin(target, source) {
      for (let i in source) {
        target[i] = source[i];
      }

      return target;
    }
    /**
     * Sets the prototype of an object.
     *
     * Note this method is provided as backward-compatible legacy API
     * only.  It is not directly called by any Polymer features.
     * @param {Object} object The object on which to set the prototype.
     * @param {Object} prototype The prototype that will be set on the given
     * `object`.
     * @return {Object} Returns the given `object` with its prototype set
     * to the given `prototype` object.
     * @override
     */


    chainObject(object, prototype) {
      if (object && prototype && object !== prototype) {
        object.__proto__ = prototype;
      }

      return object;
    }
    /* **** Begin Template **** */

    /**
     * Calls `importNode` on the `content` of the `template` specified and
     * returns a document fragment containing the imported content.
     *
     * @param {HTMLTemplateElement} template HTML template element to instance.
     * @return {!DocumentFragment} Document fragment containing the imported
     *   template content.
     * @override
     * @suppress {missingProperties} go/missingfnprops
     */


    instanceTemplate(template) {
      let content = this.constructor._contentForTemplate(template);

      let dom =
      /** @type {!DocumentFragment} */
      document.importNode(content, true);
      return dom;
    }
    /* **** Begin Events **** */

    /**
     * Dispatches a custom event with an optional detail value.
     *
     * @param {string} type Name of event type.
     * @param {*=} detail Detail value containing event-specific
     *   payload.
     * @param {{ bubbles: (boolean|undefined), cancelable: (boolean|undefined),
     *     composed: (boolean|undefined) }=}
     *  options Object specifying options.  These may include:
     *  `bubbles` (boolean, defaults to `true`),
     *  `cancelable` (boolean, defaults to false), and
     *  `node` on which to fire the event (HTMLElement, defaults to `this`).
     * @return {!Event} The new event that was fired.
     * @override
     */


    fire(type, detail, options) {
      options = options || {};
      detail = detail === null || detail === undefined ? {} : detail;
      let event = new Event(type, {
        bubbles: options.bubbles === undefined ? true : options.bubbles,
        cancelable: Boolean(options.cancelable),
        composed: options.composed === undefined ? true : options.composed
      });
      event.detail = detail;
      let node = options.node || this;
      wrap(node).dispatchEvent(event);
      return event;
    }
    /**
     * Convenience method to add an event listener on a given element,
     * late bound to a named method on this element.
     *
     * @param {?EventTarget} node Element to add event listener to.
     * @param {string} eventName Name of event to listen for.
     * @param {string} methodName Name of handler method on `this` to call.
     * @return {void}
     * @override
     */


    listen(node, eventName, methodName) {
      node =
      /** @type {!EventTarget} */
      node || this;
      let hbl = this.__boundListeners || (this.__boundListeners = new WeakMap());
      let bl = hbl.get(node);

      if (!bl) {
        bl = {};
        hbl.set(node, bl);
      }

      let key = eventName + methodName;

      if (!bl[key]) {
        bl[key] = this._addMethodEventListenerToNode(
        /** @type {!Node} */
        node, eventName, methodName, this);
      }
    }
    /**
     * Convenience method to remove an event listener from a given element,
     * late bound to a named method on this element.
     *
     * @param {?EventTarget} node Element to remove event listener from.
     * @param {string} eventName Name of event to stop listening to.
     * @param {string} methodName Name of handler method on `this` to not call
     anymore.
     * @return {void}
     * @override
     */


    unlisten(node, eventName, methodName) {
      node =
      /** @type {!EventTarget} */
      node || this;

      let bl = this.__boundListeners && this.__boundListeners.get(
      /** @type {!Element} */
      node);

      let key = eventName + methodName;
      let handler = bl && bl[key];

      if (handler) {
        this._removeEventListenerFromNode(
        /** @type {!Node} */
        node, eventName, handler);

        bl[key] =
        /** @type {?} */
        null;
      }
    }
    /**
     * Override scrolling behavior to all direction, one direction, or none.
     *
     * Valid scroll directions:
     *   - 'all': scroll in any direction
     *   - 'x': scroll only in the 'x' direction
     *   - 'y': scroll only in the 'y' direction
     *   - 'none': disable scrolling for this node
     *
     * @param {string=} direction Direction to allow scrolling
     * Defaults to `all`.
     * @param {Element=} node Element to apply scroll direction setting.
     * Defaults to `this`.
     * @return {void}
     * @override
     */


    setScrollDirection(direction, node) {
      setTouchAction(
      /** @type {!Element} */
      node || this, DIRECTION_MAP[direction] || 'auto');
    }
    /* **** End Events **** */

    /**
     * Convenience method to run `querySelector` on this local DOM scope.
     *
     * This function calls `Polymer.dom(this.root).querySelector(slctr)`.
     *
     * @param {string} slctr Selector to run on this local DOM scope
     * @return {Element} Element found by the selector, or null if not found.
     * @override
     */


    $$(slctr) {
      // Note, no need to `wrap` this because root is always patched
      return this.root.querySelector(slctr);
    }
    /**
     * Return the element whose local dom within which this element
     * is contained. This is a shorthand for
     * `this.getRootNode().host`.
     * @this {Element}
     * @return {?Node} The element whose local dom within which this element is
     * contained.
     * @override
     */


    get domHost() {
      let root = wrap(this).getRootNode();
      return root instanceof DocumentFragment ?
      /** @type {ShadowRoot} */
      root.host : root;
    }
    /**
     * Force this element to distribute its children to its local dom.
     * This should not be necessary as of Polymer 2.0.2 and is provided only
     * for backwards compatibility.
     * @return {void}
     * @override
     */


    distributeContent() {
      const thisEl =
      /** @type {Element} */
      this;
      const domApi =
      /** @type {PolymerDomApi} */
      dom(thisEl);

      if (window.ShadyDOM && domApi.shadowRoot) {
        ShadyDOM.flush();
      }
    }
    /**
     * Returns a list of nodes that are the effective childNodes. The effective
     * childNodes list is the same as the element's childNodes except that
     * any `<content>` elements are replaced with the list of nodes distributed
     * to the `<content>`, the result of its `getDistributedNodes` method.
     * @return {!Array<!Node>} List of effective child nodes.
     * @suppress {invalidCasts} LegacyElementMixin must be applied to an
     *     HTMLElement
     * @override
     */


    getEffectiveChildNodes() {
      const thisEl =
      /** @type {Element} */
      this;
      const domApi =
      /** @type {PolymerDomApi} */
      dom(thisEl);
      return domApi.getEffectiveChildNodes();
    }
    /**
     * Returns a list of nodes distributed within this element that match
     * `selector`. These can be dom children or elements distributed to
     * children that are insertion points.
     * @param {string} selector Selector to run.
     * @return {!Array<!Node>} List of distributed elements that match selector.
     * @suppress {invalidCasts} LegacyElementMixin must be applied to an
     * HTMLElement
     * @override
     */


    queryDistributedElements(selector) {
      const thisEl =
      /** @type {Element} */
      this;
      const domApi =
      /** @type {PolymerDomApi} */
      dom(thisEl);
      return domApi.queryDistributedElements(selector);
    }
    /**
     * Returns a list of elements that are the effective children. The effective
     * children list is the same as the element's children except that
     * any `<content>` elements are replaced with the list of elements
     * distributed to the `<content>`.
     *
     * @return {!Array<!Node>} List of effective children.
     * @override
     */


    getEffectiveChildren() {
      let list = this.getEffectiveChildNodes();
      return list.filter(function (
      /** @type {!Node} */
      n) {
        return n.nodeType === Node.ELEMENT_NODE;
      });
    }
    /**
     * Returns a string of text content that is the concatenation of the
     * text content's of the element's effective childNodes (the elements
     * returned by <a href="v3/#getEffectiveChildNodes>getEffectiveChildNodes</a>.
     *
     * @return {string} List of effective children.
     * @override
     */


    getEffectiveTextContent() {
      let cn = this.getEffectiveChildNodes();
      let tc = [];

      for (let i = 0, c; c = cn[i]; i++) {
        if (c.nodeType !== Node.COMMENT_NODE) {
          tc.push(c.textContent);
        }
      }

      return tc.join('');
    }
    /**
     * Returns the first effective childNode within this element that
     * match `selector`. These can be dom child nodes or elements distributed
     * to children that are insertion points.
     * @param {string} selector Selector to run.
     * @return {Node} First effective child node that matches selector.
     * @override
     */


    queryEffectiveChildren(selector) {
      let e$ = this.queryDistributedElements(selector);
      return e$ && e$[0];
    }
    /**
     * Returns a list of effective childNodes within this element that
     * match `selector`. These can be dom child nodes or elements distributed
     * to children that are insertion points.
     * @param {string} selector Selector to run.
     * @return {!Array<!Node>} List of effective child nodes that match
     *     selector.
     * @override
     */


    queryAllEffectiveChildren(selector) {
      return this.queryDistributedElements(selector);
    }
    /**
     * Returns a list of nodes distributed to this element's `<slot>`.
     *
     * If this element contains more than one `<slot>` in its local DOM,
     * an optional selector may be passed to choose the desired content.
     *
     * @param {string=} slctr CSS selector to choose the desired
     *   `<slot>`.  Defaults to `content`.
     * @return {!Array<!Node>} List of distributed nodes for the `<slot>`.
     * @override
     */


    getContentChildNodes(slctr) {
      // Note, no need to `wrap` this because root is always
      let content = this.root.querySelector(slctr || 'slot');
      return content ?
      /** @type {PolymerDomApi} */
      dom(content).getDistributedNodes() : [];
    }
    /**
     * Returns a list of element children distributed to this element's
     * `<slot>`.
     *
     * If this element contains more than one `<slot>` in its
     * local DOM, an optional selector may be passed to choose the desired
     * content.  This method differs from `getContentChildNodes` in that only
     * elements are returned.
     *
     * @param {string=} slctr CSS selector to choose the desired
     *   `<content>`.  Defaults to `content`.
     * @return {!Array<!HTMLElement>} List of distributed nodes for the
     *   `<slot>`.
     * @suppress {invalidCasts}
     * @override
     */


    getContentChildren(slctr) {
      let children =
      /** @type {!Array<!HTMLElement>} */
      this.getContentChildNodes(slctr).filter(function (n) {
        return n.nodeType === Node.ELEMENT_NODE;
      });
      return children;
    }
    /**
     * Checks whether an element is in this element's light DOM tree.
     *
     * @param {?Node} node The element to be checked.
     * @return {boolean} true if node is in this element's light DOM tree.
     * @suppress {invalidCasts} LegacyElementMixin must be applied to an
     * HTMLElement
     * @override
     */


    isLightDescendant(node) {
      const thisNode =
      /** @type {Node} */
      this;
      return thisNode !== node && wrap(thisNode).contains(node) && wrap(thisNode).getRootNode() === wrap(node).getRootNode();
    }
    /**
     * Checks whether an element is in this element's local DOM tree.
     *
     * @param {!Element} node The element to be checked.
     * @return {boolean} true if node is in this element's local DOM tree.
     * @override
     */


    isLocalDescendant(node) {
      return this.root === wrap(node).getRootNode();
    }
    /**
     * No-op for backwards compatibility. This should now be handled by
     * ShadyCss library.
     * @param  {!Element} container Container element to scope
     * @param  {boolean=} shouldObserve if true, start a mutation observer for added nodes to the container
     * @return {?MutationObserver} Returns a new MutationObserver on `container` if `shouldObserve` is true.
     * @override
     */


    scopeSubtree(container, shouldObserve = false) {
      return scopeSubtree(container, shouldObserve);
    }
    /**
     * Returns the computed style value for the given property.
     * @param {string} property The css property name.
     * @return {string} Returns the computed css property value for the given
     * `property`.
     * @suppress {invalidCasts} LegacyElementMixin must be applied to an
     *     HTMLElement
     * @override
     */


    getComputedStyleValue(property) {
      return styleInterface.getComputedStyleValue(
      /** @type {!Element} */
      this, property);
    } // debounce

    /**
     * Call `debounce` to collapse multiple requests for a named task into
     * one invocation which is made after the wait time has elapsed with
     * no new request.  If no wait time is given, the callback will be called
     * at microtask timing (guaranteed before paint).
     *
     *     debouncedClickAction(e) {
     *       // will not call `processClick` more than once per 100ms
     *       this.debounce('click', function() {
     *        this.processClick();
     *       } 100);
     *     }
     *
     * @param {string} jobName String to identify the debounce job.
     * @param {function():void} callback Function that is called (with `this`
     *   context) when the wait time elapses.
     * @param {number=} wait Optional wait time in milliseconds (ms) after the
     *   last signal that must elapse before invoking `callback`
     * @return {!Object} Returns a debouncer object on which exists the
     * following methods: `isActive()` returns true if the debouncer is
     * active; `cancel()` cancels the debouncer if it is active;
     * `flush()` immediately invokes the debounced callback if the debouncer
     * is active.
     * @override
     */


    debounce(jobName, callback, wait) {
      this._debouncers = this._debouncers || {};
      return this._debouncers[jobName] = Debouncer.debounce(this._debouncers[jobName], wait > 0 ? timeOut.after(wait) : microTask, callback.bind(this));
    }
    /**
     * Returns whether a named debouncer is active.
     *
     * @param {string} jobName The name of the debouncer started with `debounce`
     * @return {boolean} Whether the debouncer is active (has not yet fired).
     * @override
     */


    isDebouncerActive(jobName) {
      this._debouncers = this._debouncers || {};
      let debouncer = this._debouncers[jobName];
      return !!(debouncer && debouncer.isActive());
    }
    /**
     * Immediately calls the debouncer `callback` and inactivates it.
     *
     * @param {string} jobName The name of the debouncer started with `debounce`
     * @return {void}
     * @override
     */


    flushDebouncer(jobName) {
      this._debouncers = this._debouncers || {};
      let debouncer = this._debouncers[jobName];

      if (debouncer) {
        debouncer.flush();
      }
    }
    /**
     * Cancels an active debouncer.  The `callback` will not be called.
     *
     * @param {string} jobName The name of the debouncer started with `debounce`
     * @return {void}
     * @override
     */


    cancelDebouncer(jobName) {
      this._debouncers = this._debouncers || {};
      let debouncer = this._debouncers[jobName];

      if (debouncer) {
        debouncer.cancel();
      }
    }
    /**
     * Runs a callback function asynchronously.
     *
     * By default (if no waitTime is specified), async callbacks are run at
     * microtask timing, which will occur before paint.
     *
     * @param {!Function} callback The callback function to run, bound to
     *     `this`.
     * @param {number=} waitTime Time to wait before calling the
     *   `callback`.  If unspecified or 0, the callback will be run at microtask
     *   timing (before paint).
     * @return {number} Handle that may be used to cancel the async job.
     * @override
     */


    async(callback, waitTime) {
      return waitTime > 0 ? timeOut.run(callback.bind(this), waitTime) : ~microTask.run(callback.bind(this));
    }
    /**
     * Cancels an async operation started with `async`.
     *
     * @param {number} handle Handle returned from original `async` call to
     *   cancel.
     * @return {void}
     * @override
     */


    cancelAsync(handle) {
      handle < 0 ? microTask.cancel(~handle) : timeOut.cancel(handle);
    } // other

    /**
     * Convenience method for creating an element and configuring it.
     *
     * @param {string} tag HTML element tag to create.
     * @param {Object=} props Object of properties to configure on the
     *    instance.
     * @return {!Element} Newly created and configured element.
     * @override
     */


    create(tag, props) {
      let elt = document.createElement(tag);

      if (props) {
        if (elt.setProperties) {
          elt.setProperties(props);
        } else {
          for (let n in props) {
            elt[n] = props[n];
          }
        }
      }

      return elt;
    }
    /**
     * Polyfill for Element.prototype.matches, which is sometimes still
     * prefixed.
     *
     * @param {string} selector Selector to test.
     * @param {!Element=} node Element to test the selector against.
     * @return {boolean} Whether the element matches the selector.
     * @override
     */


    elementMatches(selector, node) {
      return matchesSelector(node || this, selector);
    }
    /**
     * Toggles an HTML attribute on or off.
     *
     * @param {string} name HTML attribute name
     * @param {boolean=} bool Boolean to force the attribute on or off.
     *    When unspecified, the state of the attribute will be reversed.
     * @return {boolean} true if the attribute now exists
     * @override
     */


    toggleAttribute(name, bool) {
      let node =
      /** @type {Element} */
      this;

      if (arguments.length === 3) {
        node =
        /** @type {Element} */
        arguments[2];
      }

      if (arguments.length == 1) {
        bool = !node.hasAttribute(name);
      }

      if (bool) {
        wrap(node).setAttribute(name, '');
        return true;
      } else {
        wrap(node).removeAttribute(name);
        return false;
      }
    }
    /**
     * Toggles a CSS class on or off.
     *
     * @param {string} name CSS class name
     * @param {boolean=} bool Boolean to force the class on or off.
     *    When unspecified, the state of the class will be reversed.
     * @param {Element=} node Node to target.  Defaults to `this`.
     * @return {void}
     * @override
     */


    toggleClass(name, bool, node) {
      node =
      /** @type {Element} */
      node || this;

      if (arguments.length == 1) {
        bool = !node.classList.contains(name);
      }

      if (bool) {
        node.classList.add(name);
      } else {
        node.classList.remove(name);
      }
    }
    /**
     * Cross-platform helper for setting an element's CSS `transform` property.
     *
     * @param {string} transformText Transform setting.
     * @param {Element=} node Element to apply the transform to.
     * Defaults to `this`
     * @return {void}
     * @override
     */


    transform(transformText, node) {
      node =
      /** @type {Element} */
      node || this;
      node.style.webkitTransform = transformText;
      node.style.transform = transformText;
    }
    /**
     * Cross-platform helper for setting an element's CSS `translate3d`
     * property.
     *
     * @param {number|string} x X offset.
     * @param {number|string} y Y offset.
     * @param {number|string} z Z offset.
     * @param {Element=} node Element to apply the transform to.
     * Defaults to `this`.
     * @return {void}
     * @override
     */


    translate3d(x, y, z, node) {
      node =
      /** @type {Element} */
      node || this;
      this.transform('translate3d(' + x + ',' + y + ',' + z + ')', node);
    }
    /**
     * Removes an item from an array, if it exists.
     *
     * If the array is specified by path, a change notification is
     * generated, so that observers, data bindings and computed
     * properties watching that path can update.
     *
     * If the array is passed directly, **no change
     * notification is generated**.
     *
     * @param {string | !Array<number|string>} arrayOrPath Path to array from
     *     which to remove the item
     *   (or the array itself).
     * @param {*} item Item to remove.
     * @return {Array} Array containing item removed.
     * @override
     */


    arrayDelete(arrayOrPath, item) {
      let index;

      if (Array.isArray(arrayOrPath)) {
        index = arrayOrPath.indexOf(item);

        if (index >= 0) {
          return arrayOrPath.splice(index, 1);
        }
      } else {
        let arr = get(this, arrayOrPath);
        index = arr.indexOf(item);

        if (index >= 0) {
          return this.splice(arrayOrPath, index, 1);
        }
      }

      return null;
    } // logging

    /**
     * Facades `console.log`/`warn`/`error` as override point.
     *
     * @param {string} level One of 'log', 'warn', 'error'
     * @param {Array} args Array of strings or objects to log
     * @return {void}
     * @override
     */


    _logger(level, args) {
      // accept ['foo', 'bar'] and [['foo', 'bar']]
      if (Array.isArray(args) && args.length === 1 && Array.isArray(args[0])) {
        args = args[0];
      }

      switch (level) {
        case 'log':
        case 'warn':
        case 'error':
          console[level](...args);
      }
    }
    /**
     * Facades `console.log` as an override point.
     *
     * @param {...*} args Array of strings or objects to log
     * @return {void}
     * @override
     */


    _log(...args) {
      this._logger('log', args);
    }
    /**
     * Facades `console.warn` as an override point.
     *
     * @param {...*} args Array of strings or objects to log
     * @return {void}
     * @override
     */


    _warn(...args) {
      this._logger('warn', args);
    }
    /**
     * Facades `console.error` as an override point.
     *
     * @param {...*} args Array of strings or objects to log
     * @return {void}
     * @override
     */


    _error(...args) {
      this._logger('error', args);
    }
    /**
     * Formats a message using the element type an a method name.
     *
     * @param {string} methodName Method name to associate with message
     * @param {...*} args Array of strings or objects to log
     * @return {Array} Array with formatting information for `console`
     *   logging.
     * @override
     */


    _logf(methodName, ...args) {
      return ['[%s::%s]', this.is, methodName, ...args];
    }

  }

  LegacyElement.prototype.is = '';
  return LegacyElement;
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:01</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.legacy.element.mixin" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\legacy-element-mixin.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.legacy.element.mixin.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\legacy-element-mixin.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>legacy-element-mixin.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/legacy-element-mixin.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.mixin">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.mixin.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.mixin.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53161.427928</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls'; // unique global id for deduping mixins.

let dedupeId = 0;
/**
 * @constructor
 * @extends {Function}
 * @private
 */

function MixinFunction() {}
/** @type {(WeakMap | undefined)} */


MixinFunction.prototype.__mixinApplications;
/** @type {(Object | undefined)} */

MixinFunction.prototype.__mixinSet;
/* eslint-disable valid-jsdoc */

/**
 * Wraps an ES6 class expression mixin such that the mixin is only applied
 * if it has not already been applied its base argument. Also memoizes mixin
 * applications.
 *
 * @template T
 * @param {T} mixin ES6 class expression mixin to wrap
 * @return {T}
 * @suppress {invalidCasts}
 */

export const dedupingMixin = function (mixin) {
  let mixinApplications =
  /** @type {!MixinFunction} */
  mixin.__mixinApplications;

  if (!mixinApplications) {
    mixinApplications = new WeakMap();
    /** @type {!MixinFunction} */

    mixin.__mixinApplications = mixinApplications;
  } // maintain a unique id for each mixin


  let mixinDedupeId = dedupeId++;

  function dedupingMixin(base) {
    let baseSet =
    /** @type {!MixinFunction} */
    base.__mixinSet;

    if (baseSet && baseSet[mixinDedupeId]) {
      return base;
    }

    let map = mixinApplications;
    let extended = map.get(base);

    if (!extended) {
      extended =
      /** @type {!Function} */
      mixin(base);
      map.set(base, extended);
    } // copy inherited mixin set from the extended class, or the base class
    // NOTE: we avoid use of Set here because some browser (IE11)
    // cannot extend a base Set via the constructor.


    let mixinSet = Object.create(
    /** @type {!MixinFunction} */
    extended.__mixinSet || baseSet || null);
    mixinSet[mixinDedupeId] = true;
    /** @type {!MixinFunction} */

    extended.__mixinSet = mixinSet;
    return extended;
  }

  return dedupingMixin;
};
/* eslint-enable valid-jsdoc */
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:01</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.mixin" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\mixin.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.mixin.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\mixin.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>mixin.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/mixin.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.mutable.data.behavior">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.mutable.data.behavior.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.mutable.data.behavior.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53161.622789</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { MutableData } from '/%ZWebNode.Lib.Polymer.v3.mutable.data.cls';
let mutablePropertyChange;
/** @suppress {missingProperties} */

(() => {
  mutablePropertyChange = MutableData._mutablePropertyChange;
})();
/**
 * Legacy element behavior to skip strict dirty-checking for objects and arrays,
 * (always consider them to be "dirty") for use on legacy API Polymer elements.
 *
 * By default, `Polymer.PropertyEffects` performs strict dirty checking on
 * objects, which means that any deep modifications to an object or array will
 * not be propagated unless "immutable" data patterns are used (i.e. all object
 * references from the root to the mutation were changed).
 *
 * Polymer also provides a proprietary data mutation and path notification API
 * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient
 * mutation and notification of deep changes in an object graph to all elements
 * bound to the same object graph.
 *
 * In cases where neither immutable patterns nor the data mutation API can be
 * used, applying this mixin will cause Polymer to skip dirty checking for
 * objects and arrays (always consider them to be "dirty").  This allows a
 * user to make a deep modification to a bound object graph, and then either
 * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`
 * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all
 * elements that wish to be updated based on deep mutations must apply this
 * mixin or otherwise skip strict dirty checking for objects/arrays.
 * Specifically, any elements in the binding tree between the source of a
 * mutation and the consumption of it must apply this behavior or enable the
 * `Polymer.OptionalMutableDataBehavior`.
 *
 * In order to make the dirty check strategy configurable, see
 * `Polymer.OptionalMutableDataBehavior`.
 *
 * Note, the performance characteristics of propagating large object graphs
 * will be worse as opposed to using strict dirty checking with immutable
 * patterns or Polymer's path notification API.
 *
 * polymerBehavior
 * @summary Behavior to skip strict dirty-checking for objects and
 *   arrays
 */


export const MutableDataBehavior = {
  /**
   * Overrides `Polymer.PropertyEffects` to provide option for skipping
   * strict equality checking for Objects and Arrays.
   *
   * This method pulls the value to dirty check against from the `__dataTemp`
   * cache (rather than the normal `__data` cache) for Objects.  Since the temp
   * cache is cleared at the end of a turn, this implementation allows
   * side-effects of deep object changes to be processed by re-setting the
   * same object (using the temp cache as an in-turn backstop to prevent
   * cycles due to 2-way notification).
   *
   * @param {string} property Property name
   * @param {*} value New property value
   * @param {*} old Previous property value
   * @return {boolean} Whether the property should be considered a change
   * @protected
   * @override
   */
  _shouldPropertyChange(property, value, old) {
    return mutablePropertyChange(this, property, value, old, true);
  }

};
/**
 * Legacy element behavior to add the optional ability to skip strict
 * dirty-checking for objects and arrays (always consider them to be
 * "dirty") by setting a `mutable-data` attribute on an element instance.
 *
 * By default, `Polymer.PropertyEffects` performs strict dirty checking on
 * objects, which means that any deep modifications to an object or array will
 * not be propagated unless "immutable" data patterns are used (i.e. all object
 * references from the root to the mutation were changed).
 *
 * Polymer also provides a proprietary data mutation and path notification API
 * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient
 * mutation and notification of deep changes in an object graph to all elements
 * bound to the same object graph.
 *
 * In cases where neither immutable patterns nor the data mutation API can be
 * used, applying this mixin will allow Polymer to skip dirty checking for
 * objects and arrays (always consider them to be "dirty").  This allows a
 * user to make a deep modification to a bound object graph, and then either
 * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`
 * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all
 * elements that wish to be updated based on deep mutations must apply this
 * mixin or otherwise skip strict dirty checking for objects/arrays.
 * Specifically, any elements in the binding tree between the source of a
 * mutation and the consumption of it must enable this behavior or apply the
 * `Polymer.OptionalMutableDataBehavior`.
 *
 * While this behavior adds the ability to forgo Object/Array dirty checking,
 * the `mutableData` flag defaults to false and must be set on the instance.
 *
 * Note, the performance characteristics of propagating large object graphs
 * will be worse by relying on `mutableData: true` as opposed to using
 * strict dirty checking with immutable patterns or Polymer's path notification
 * API.
 *
 * polymerBehavior
 * @summary Behavior to optionally skip strict dirty-checking for objects and
 *   arrays
 */

export const OptionalMutableDataBehavior = {
  properties: {
    /**
     * Instance-level flag for configuring the dirty-checking strategy
     * for this element.  When true, Objects and Arrays will skip dirty
     * checking, otherwise strict equality checking will be used.
     */
    mutableData: Boolean
  },

  /**
   * Overrides `Polymer.PropertyEffects` to skip strict equality checking
   * for Objects and Arrays.
   *
   * Pulls the value to dirty check against from the `__dataTemp` cache
   * (rather than the normal `__data` cache) for Objects.  Since the temp
   * cache is cleared at the end of a turn, this implementation allows
   * side-effects of deep object changes to be processed by re-setting the
   * same object (using the temp cache as an in-turn backstop to prevent
   * cycles due to 2-way notification).
   *
   * @param {string} property Property name
   * @param {*} value New property value
   * @param {*} old Previous property value
   * @return {boolean} Whether the property should be considered a change
   * @protected
   * @override
   */
  _shouldPropertyChange(property, value, old) {
    return mutablePropertyChange(this, property, value, old, this.mutableData);
  }

};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:01</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.mutable.data.behavior" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\mutable-data-behavior.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.mutable.data.behavior.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\mutable-data-behavior.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>mutable-data-behavior.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/mutable-data-behavior.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.mutable.data">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.mutable.data.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.mutable.data.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53161.507183</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls'; // Common implementation for mixin & behavior

function mutablePropertyChange(inst, property, value, old, mutableData) {
  let isObject;

  if (mutableData) {
    isObject = typeof value === 'object' && value !== null; // Pull `old` for Objects from temp cache, but treat `null` as a primitive

    if (isObject) {
      old = inst.__dataTemp[property];
    }
  } // Strict equality check, but return false for NaN===NaN


  let shouldChange = old !== value && (old === old || value === value); // Objects are stored in temporary cache (cleared at end of
  // turn), which is used for dirty-checking

  if (isObject && shouldChange) {
    inst.__dataTemp[property] = value;
  }

  return shouldChange;
}
/**
 * Element class mixin to skip strict dirty-checking for objects and arrays
 * (always consider them to be "dirty"), for use on elements utilizing
 * `PropertyEffects`
 *
 * By default, `PropertyEffects` performs strict dirty checking on
 * objects, which means that any deep modifications to an object or array will
 * not be propagated unless "immutable" data patterns are used (i.e. all object
 * references from the root to the mutation were changed).
 *
 * Polymer also provides a proprietary data mutation and path notification API
 * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient
 * mutation and notification of deep changes in an object graph to all elements
 * bound to the same object graph.
 *
 * In cases where neither immutable patterns nor the data mutation API can be
 * used, applying this mixin will cause Polymer to skip dirty checking for
 * objects and arrays (always consider them to be "dirty").  This allows a
 * user to make a deep modification to a bound object graph, and then either
 * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`
 * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all
 * elements that wish to be updated based on deep mutations must apply this
 * mixin or otherwise skip strict dirty checking for objects/arrays.
 * Specifically, any elements in the binding tree between the source of a
 * mutation and the consumption of it must apply this mixin or enable the
 * `OptionalMutableData` mixin.
 *
 * In order to make the dirty check strategy configurable, see
 * `OptionalMutableData`.
 *
 * Note, the performance characteristics of propagating large object graphs
 * will be worse as opposed to using strict dirty checking with immutable
 * patterns or Polymer's path notification API.
 *
 * @mixinFunction
 * polymer
 * @summary Element class mixin to skip strict dirty-checking for objects
 *   and arrays
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */


export const MutableData = dedupingMixin(superClass => {
  /**
   * polymer
   * @mixinClass
   * @implements {Polymer_MutableData}
   */
  class MutableData extends superClass {
    /**
     * Overrides `PropertyEffects` to provide option for skipping
     * strict equality checking for Objects and Arrays.
     *
     * This method pulls the value to dirty check against from the `__dataTemp`
     * cache (rather than the normal `__data` cache) for Objects.  Since the temp
     * cache is cleared at the end of a turn, this implementation allows
     * side-effects of deep object changes to be processed by re-setting the
     * same object (using the temp cache as an in-turn backstop to prevent
     * cycles due to 2-way notification).
     *
     * @param {string} property Property name
     * @param {*} value New property value
     * @param {*} old Previous property value
     * @return {boolean} Whether the property should be considered a change
     * @protected
     */
    _shouldPropertyChange(property, value, old) {
      return mutablePropertyChange(this, property, value, old, true);
    }

  }

  return MutableData;
});
/**
 * Element class mixin to add the optional ability to skip strict
 * dirty-checking for objects and arrays (always consider them to be
 * "dirty") by setting a `mutable-data` attribute on an element instance.
 *
 * By default, `PropertyEffects` performs strict dirty checking on
 * objects, which means that any deep modifications to an object or array will
 * not be propagated unless "immutable" data patterns are used (i.e. all object
 * references from the root to the mutation were changed).
 *
 * Polymer also provides a proprietary data mutation and path notification API
 * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient
 * mutation and notification of deep changes in an object graph to all elements
 * bound to the same object graph.
 *
 * In cases where neither immutable patterns nor the data mutation API can be
 * used, applying this mixin will allow Polymer to skip dirty checking for
 * objects and arrays (always consider them to be "dirty").  This allows a
 * user to make a deep modification to a bound object graph, and then either
 * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`
 * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all
 * elements that wish to be updated based on deep mutations must apply this
 * mixin or otherwise skip strict dirty checking for objects/arrays.
 * Specifically, any elements in the binding tree between the source of a
 * mutation and the consumption of it must enable this mixin or apply the
 * `MutableData` mixin.
 *
 * While this mixin adds the ability to forgo Object/Array dirty checking,
 * the `mutableData` flag defaults to false and must be set on the instance.
 *
 * Note, the performance characteristics of propagating large object graphs
 * will be worse by relying on `mutableData: true` as opposed to using
 * strict dirty checking with immutable patterns or Polymer's path notification
 * API.
 *
 * @mixinFunction
 * polymer
 * @summary Element class mixin to optionally skip strict dirty-checking
 *   for objects and arrays
 */

export const OptionalMutableData = dedupingMixin(superClass => {
  /**
   * @mixinClass
   * polymer
   * @implements {Polymer_OptionalMutableData}
   */
  class OptionalMutableData extends superClass {
    /** @nocollapse */
    static get properties() {
      return {
        /**
         * Instance-level flag for configuring the dirty-checking strategy
         * for this element.  When true, Objects and Arrays will skip dirty
         * checking, otherwise strict equality checking will be used.
         */
        mutableData: Boolean
      };
    }
    /**
     * Overrides `PropertyEffects` to provide option for skipping
     * strict equality checking for Objects and Arrays.
     *
     * When `this.mutableData` is true on this instance, this method
     * pulls the value to dirty check against from the `__dataTemp` cache
     * (rather than the normal `__data` cache) for Objects.  Since the temp
     * cache is cleared at the end of a turn, this implementation allows
     * side-effects of deep object changes to be processed by re-setting the
     * same object (using the temp cache as an in-turn backstop to prevent
     * cycles due to 2-way notification).
     *
     * @param {string} property Property name
     * @param {*} value New property value
     * @param {*} old Previous property value
     * @return {boolean} Whether the property should be considered a change
     * @protected
     */


    _shouldPropertyChange(property, value, old) {
      return mutablePropertyChange(this, property, value, old, this.mutableData);
    }

  }

  return OptionalMutableData;
}); // Export for use by legacy behavior

MutableData._mutablePropertyChange = mutablePropertyChange;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:01</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.mutable.data" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\mutable-data.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.mutable.data.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\mutable-data.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>mutable-data.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/mutable-data.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.path">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.path.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.path.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53161.720958</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
/**
 * Module with utilities for manipulating structured data path strings.
 *
 * @summary Module with utilities for manipulating structured data path strings.
 */

/**
 * Returns true if the given string is a structured data path (has dots).
 *
 * Example:
 *
 * ```
 * isPath('foo.bar.baz') // true
 * isPath('foo')         // false
 * ```
 *
 * @param {string} path Path string
 * @return {boolean} True if the string contained one or more dots
 */

export function isPath(path) {
  return path.indexOf('.') >= 0;
}
/**
 * Returns the root property name for the given path.
 *
 * Example:
 *
 * ```
 * root('foo.bar.baz') // 'foo'
 * root('foo')         // 'foo'
 * ```
 *
 * @param {string} path Path string
 * @return {string} Root property name
 */

export function root(path) {
  let dotIndex = path.indexOf('.');

  if (dotIndex === -1) {
    return path;
  }

  return path.slice(0, dotIndex);
}
/**
 * Given `base` is `foo.bar`, `foo` is an ancestor, `foo.bar` is not
 * Returns true if the given path is an ancestor of the base path.
 *
 * Example:
 *
 * ```
 * isAncestor('foo.bar', 'foo')         // true
 * isAncestor('foo.bar', 'foo.bar')     // false
 * isAncestor('foo.bar', 'foo.bar.baz') // false
 * ```
 *
 * @param {string} base Path string to test against.
 * @param {string} path Path string to test.
 * @return {boolean} True if `path` is an ancestor of `base`.
 */

export function isAncestor(base, path) {
  //     base.startsWith(path + '.');
  return base.indexOf(path + '.') === 0;
}
/**
 * Given `base` is `foo.bar`, `foo.bar.baz` is an descendant
 *
 * Example:
 *
 * ```
 * isDescendant('foo.bar', 'foo.bar.baz') // true
 * isDescendant('foo.bar', 'foo.bar')     // false
 * isDescendant('foo.bar', 'foo')         // false
 * ```
 *
 * @param {string} base Path string to test against.
 * @param {string} path Path string to test.
 * @return {boolean} True if `path` is a descendant of `base`.
 */

export function isDescendant(base, path) {
  //     path.startsWith(base + '.');
  return path.indexOf(base + '.') === 0;
}
/**
 * Replaces a previous base path with a new base path, preserving the
 * remainder of the path.
 *
 * User must ensure `path` has a prefix of `base`.
 *
 * Example:
 *
 * ```
 * translate('foo.bar', 'zot', 'foo.bar.baz') // 'zot.baz'
 * ```
 *
 * @param {string} base Current base string to remove
 * @param {string} newBase New base string to replace with
 * @param {string} path Path to translate
 * @return {string} Translated string
 */

export function translate(base, newBase, path) {
  return newBase + path.slice(base.length);
}
/**
 * @param {string} base Path string to test against
 * @param {string} path Path string to test
 * @return {boolean} True if `path` is equal to `base`
 */

export function matches(base, path) {
  return base === path || isAncestor(base, path) || isDescendant(base, path);
}
/**
 * Converts array-based paths to flattened path.  String-based paths
 * are returned as-is.
 *
 * Example:
 *
 * ```
 * normalize(['foo.bar', 0, 'baz'])  // 'foo.bar.0.baz'
 * normalize('foo.bar.0.baz')        // 'foo.bar.0.baz'
 * ```
 *
 * @param {string | !Array<string|number>} path Input path
 * @return {string} Flattened path
 */

export function normalize(path) {
  if (Array.isArray(path)) {
    let parts = [];

    for (let i = 0; i < path.length; i++) {
      let args = path[i].toString().split('.');

      for (let j = 0; j < args.length; j++) {
        parts.push(args[j]);
      }
    }

    return parts.join('.');
  } else {
    return path;
  }
}
/**
 * Splits a path into an array of property names. Accepts either arrays
 * of path parts or strings.
 *
 * Example:
 *
 * ```
 * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']
 * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']
 * ```
 *
 * @param {string | !Array<string|number>} path Input path
 * @return {!Array<string>} Array of path parts
 * @suppress {checkTypes}
 */

export function split(path) {
  if (Array.isArray(path)) {
    return normalize(path).split('.');
  }

  return path.toString().split('.');
}
/**
 * Reads a value from a path.  If any sub-property in the path is `undefined`,
 * this method returns `undefined` (will never throw.
 *
 * @param {Object} root Object from which to dereference path from
 * @param {string | !Array<string|number>} path Path to read
 * @param {Object=} info If an object is provided to `info`, the normalized
 *  (flattened) path will be set to `info.path`.
 * @return {*} Value at path, or `undefined` if the path could not be
 *  fully dereferenced.
 */

export function get(root, path, info) {
  let prop = root;
  let parts = split(path); // Loop over path parts[0..n-1] and dereference

  for (let i = 0; i < parts.length; i++) {
    if (!prop) {
      return;
    }

    let part = parts[i];
    prop = prop[part];
  }

  if (info) {
    info.path = parts.join('.');
  }

  return prop;
}
/**
 * Sets a value to a path.  If any sub-property in the path is `undefined`,
 * this method will no-op.
 *
 * @param {Object} root Object from which to dereference path from
 * @param {string | !Array<string|number>} path Path to set
 * @param {*} value Value to set to path
 * @return {string | undefined} The normalized version of the input path
 */

export function set(root, path, value) {
  let prop = root;
  let parts = split(path);
  let last = parts[parts.length - 1];

  if (parts.length > 1) {
    // Loop over path parts[0..n-2] and dereference
    for (let i = 0; i < parts.length - 1; i++) {
      let part = parts[i];
      prop = prop[part];

      if (!prop) {
        return;
      }
    } // Set value to object at end of path


    prop[last] = value;
  } else {
    // Simple property set
    prop[path] = value;
  }

  return parts.join('.');
}
/**
 * Returns true if the given string is a structured data path (has dots).
 *
 * This function is deprecated.  Use `isPath` instead.
 *
 * Example:
 *
 * ```
 * isDeep('foo.bar.baz') // true
 * isDeep('foo')         // false
 * ```
 *
 * @deprecated
 * @param {string} path Path string
 * @return {boolean} True if the string contained one or more dots
 */

export const isDeep = isPath;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:01</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.path" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\path.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.path.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\path.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>path.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/path.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.polymer.dom">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.polymer.dom.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.polymer.dom.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53161.846256</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
import '/%ZWebNode.Lib.Polymer.v3.settings.cls';
import { FlattenedNodesObserver } from '/%ZWebNode.Lib.Polymer.v3.flattened.nodes.observer.cls';
export { flush, enqueueDebouncer as addDebouncer } from '/%ZWebNode.Lib.Polymer.v3.flush.cls';
/* eslint-disable no-unused-vars */

import { Debouncer } from '/%ZWebNode.Lib.Polymer.v3.debounce.cls'; // used in type annotations

/* eslint-enable no-unused-vars */

const p = Element.prototype;
/**
 * @const {function(this:Node, string): boolean}
 */

const normalizedMatchesSelector = p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;
/**
 * Cross-platform `element.matches` shim.
 *
 * @function matchesSelector
 * @param {!Node} node Node to check selector against
 * @param {string} selector Selector to match
 * @return {boolean} True if node matched selector
 */

export const matchesSelector = function (node, selector) {
  return normalizedMatchesSelector.call(node, selector);
};
/**
 * Node API wrapper class returned from `Polymer.dom.(target)` when
 * `target` is a `Node`.
 * @implements {PolymerDomApi}
 * @unrestricted
 */

class DomApiNative {
  /**
   * @param {Node} node Node for which to create a Polymer.dom helper object.
   */
  constructor(node) {
    if (window['ShadyDOM'] && window['ShadyDOM']['inUse']) {
      window['ShadyDOM']['patch'](node);
    }

    this.node = node;
  }
  /**
   * Returns an instance of `FlattenedNodesObserver` that
   * listens for node changes on this element.
   *
   * @param {function(this:HTMLElement, { target: !HTMLElement, addedNodes: !Array<!Element>, removedNodes: !Array<!Element> }):void} callback Called when direct or distributed children
   *   of this element changes
   * @return {!PolymerDomApi.ObserveHandle} Observer instance
   * @override
   */


  observeNodes(callback) {
    return new FlattenedNodesObserver(
    /** @type {!HTMLElement} */
    this.node, callback);
  }
  /**
   * Disconnects an observer previously created via `observeNodes`
   *
   * @param {!PolymerDomApi.ObserveHandle} observerHandle Observer instance
   *   to disconnect.
   * @return {void}
   * @override
   */


  unobserveNodes(observerHandle) {
    observerHandle.disconnect();
  }
  /**
   * Provided as a backwards-compatible API only.  This method does nothing.
   * @return {void}
   */


  notifyObserver() {}
  /**
   * Returns true if the provided node is contained with this element's
   * light-DOM children or shadow root, including any nested shadow roots
   * of children therein.
   *
   * @param {Node} node Node to test
   * @return {boolean} Returns true if the given `node` is contained within
   *   this element's light or shadow DOM.
   * @override
   */


  deepContains(node) {
    if (wrap(this.node).contains(node)) {
      return true;
    }

    let n = node;
    let doc = node.ownerDocument; // walk from node to `this` or `document`

    while (n && n !== doc && n !== this.node) {
      // use logical parentnode, or native ShadowRoot host
      n = wrap(n).parentNode || wrap(n).host;
    }

    return n === this.node;
  }
  /**
   * Returns the root node of this node.  Equivalent to `getRootNode()`.
   *
   * @return {Node} Top most element in the dom tree in which the node
   * exists. If the node is connected to a document this is either a
   * shadowRoot or the document; otherwise, it may be the node
   * itself or a node or document fragment containing it.
   * @override
   */


  getOwnerRoot() {
    return wrap(this.node).getRootNode();
  }
  /**
   * For slot elements, returns the nodes assigned to the slot; otherwise
   * an empty array. It is equivalent to `<slot>.addignedNodes({flatten:true})`.
   *
   * @return {!Array<!Node>} Array of assigned nodes
   * @override
   */


  getDistributedNodes() {
    return this.node.localName === 'slot' ? wrap(this.node).assignedNodes({
      flatten: true
    }) : [];
  }
  /**
   * Returns an array of all slots this element was distributed to.
   *
   * @return {!Array<!HTMLSlotElement>} Description
   * @override
   */


  getDestinationInsertionPoints() {
    let ip$ = [];
    let n = wrap(this.node).assignedSlot;

    while (n) {
      ip$.push(n);
      n = wrap(n).assignedSlot;
    }

    return ip$;
  }
  /**
   * Calls `importNode` on the `ownerDocument` for this node.
   *
   * @param {!Node} node Node to import
   * @param {boolean} deep True if the node should be cloned deeply during
   *   import
   * @return {Node} Clone of given node imported to this owner document
   */


  importNode(node, deep) {
    let doc = this.node instanceof Document ? this.node : this.node.ownerDocument;
    return wrap(doc).importNode(node, deep);
  }
  /**
   * @return {!Array<!Node>} Returns a flattened list of all child nodes and
   * nodes assigned to child slots.
   * @override
   */


  getEffectiveChildNodes() {
    return FlattenedNodesObserver.getFlattenedNodes(
    /** @type {!HTMLElement} */
    this.node);
  }
  /**
   * Returns a filtered list of flattened child elements for this element based
   * on the given selector.
   *
   * @param {string} selector Selector to filter nodes against
   * @return {!Array<!HTMLElement>} List of flattened child elements
   * @override
   */


  queryDistributedElements(selector) {
    let c$ = this.getEffectiveChildNodes();
    let list = [];

    for (let i = 0, l = c$.length, c; i < l && (c = c$[i]); i++) {
      if (c.nodeType === Node.ELEMENT_NODE && matchesSelector(c, selector)) {
        list.push(c);
      }
    }

    return list;
  }
  /**
   * For shadow roots, returns the currently focused element within this
   * shadow root.
   *
   * return {Node|undefined} Currently focused element
   * @override
   */


  get activeElement() {
    let node = this.node;
    return node._activeElement !== undefined ? node._activeElement : node.activeElement;
  }

}

function forwardMethods(proto, methods) {
  for (let i = 0; i < methods.length; i++) {
    let method = methods[i];
    /* eslint-disable valid-jsdoc */

    proto[method] =
    /** @this {DomApiNative} */
    function () {
      return this.node[method].apply(this.node, arguments);
    };
    /* eslint-enable */

  }
}

function forwardReadOnlyProperties(proto, properties) {
  for (let i = 0; i < properties.length; i++) {
    let name = properties[i];
    Object.defineProperty(proto, name, {
      get: function () {
        const domApi =
        /** @type {DomApiNative} */
        this;
        return domApi.node[name];
      },
      configurable: true
    });
  }
}

function forwardProperties(proto, properties) {
  for (let i = 0; i < properties.length; i++) {
    let name = properties[i];
    Object.defineProperty(proto, name, {
      /**
       * @this {DomApiNative}
       * @return {*} .
       */
      get: function () {
        return this.node[name];
      },

      /**
       * @this {DomApiNative}
       * @param {*} value .
       */
      set: function (value) {
        this.node[name] = value;
      },
      configurable: true
    });
  }
}
/**
 * Event API wrapper class returned from `dom.(target)` when
 * `target` is an `Event`.
 */


export class EventApi {
  constructor(event) {
    this.event = event;
  }
  /**
   * Returns the first node on the `composedPath` of this event.
   *
   * @return {!EventTarget} The node this event was dispatched to
   */


  get rootTarget() {
    return this.path[0];
  }
  /**
   * Returns the local (re-targeted) target for this event.
   *
   * @return {!EventTarget} The local (re-targeted) target for this event.
   */


  get localTarget() {
    return this.event.target;
  }
  /**
   * Returns the `composedPath` for this event.
   * @return {!Array<!EventTarget>} The nodes this event propagated through
   */


  get path() {
    return this.event.composedPath();
  }

}
/**
 * @function
 * @param {boolean=} deep
 * @return {!Node}
 */

DomApiNative.prototype.cloneNode;
/**
 * @function
 * @param {!Node} node
 * @return {!Node}
 */

DomApiNative.prototype.appendChild;
/**
 * @function
 * @param {!Node} newChild
 * @param {Node} refChild
 * @return {!Node}
 */

DomApiNative.prototype.insertBefore;
/**
 * @function
 * @param {!Node} node
 * @return {!Node}
 */

DomApiNative.prototype.removeChild;
/**
 * @function
 * @param {!Node} oldChild
 * @param {!Node} newChild
 * @return {!Node}
 */

DomApiNative.prototype.replaceChild;
/**
 * @function
 * @param {string} name
 * @param {string} value
 * @return {void}
 */

DomApiNative.prototype.setAttribute;
/**
 * @function
 * @param {string} name
 * @return {void}
 */

DomApiNative.prototype.removeAttribute;
/**
 * @function
 * @param {string} selector
 * @return {?Element}
 */

DomApiNative.prototype.querySelector;
/**
 * @function
 * @param {string} selector
 * @return {!NodeList<!Element>}
 */

DomApiNative.prototype.querySelectorAll;
/** @type {?Node} */

DomApiNative.prototype.parentNode;
/** @type {?Node} */

DomApiNative.prototype.firstChild;
/** @type {?Node} */

DomApiNative.prototype.lastChild;
/** @type {?Node} */

DomApiNative.prototype.nextSibling;
/** @type {?Node} */

DomApiNative.prototype.previousSibling;
/** @type {?HTMLElement} */

DomApiNative.prototype.firstElementChild;
/** @type {?HTMLElement} */

DomApiNative.prototype.lastElementChild;
/** @type {?HTMLElement} */

DomApiNative.prototype.nextElementSibling;
/** @type {?HTMLElement} */

DomApiNative.prototype.previousElementSibling;
/** @type {!Array<!Node>} */

DomApiNative.prototype.childNodes;
/** @type {!Array<!HTMLElement>} */

DomApiNative.prototype.children;
/** @type {?DOMTokenList} */

DomApiNative.prototype.classList;
/** @type {string} */

DomApiNative.prototype.textContent;
/** @type {string} */

DomApiNative.prototype.innerHTML;
let DomApiImpl = DomApiNative;

if (window['ShadyDOM'] && window['ShadyDOM']['inUse'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['Wrapper']) {
  /**
   * @private
   * @extends {HTMLElement}
   */
  class Wrapper extends window['ShadyDOM']['Wrapper'] {} // copy bespoke API onto wrapper


  Object.getOwnPropertyNames(DomApiNative.prototype).forEach(prop => {
    if (prop != 'activeElement') {
      Wrapper.prototype[prop] = DomApiNative.prototype[prop];
    }
  }); // Note, `classList` is here only for legacy compatibility since it does not
  // trigger distribution in v1 Shadow DOM.

  forwardReadOnlyProperties(Wrapper.prototype, ['classList']);
  DomApiImpl = Wrapper;
  Object.defineProperties(EventApi.prototype, {
    // Returns the "lowest" node in the same root as the event's currentTarget.
    // When in `noPatch` mode, this must be calculated by walking the event's
    // path.
    localTarget: {
      get() {
        const current = this.event.currentTarget;
        const currentRoot = current && dom(current).getOwnerRoot();
        const p$ = this.path;

        for (let i = 0; i < p$.length; i++) {
          const e = p$[i];

          if (dom(e).getOwnerRoot() === currentRoot) {
            return e;
          }
        }
      },

      configurable: true
    },
    path: {
      get() {
        return window['ShadyDOM']['composedPath'](this.event);
      },

      configurable: true
    }
  });
} else {
  // Methods that can provoke distribution or must return the logical, not
  // composed tree.
  forwardMethods(DomApiNative.prototype, ['cloneNode', 'appendChild', 'insertBefore', 'removeChild', 'replaceChild', 'setAttribute', 'removeAttribute', 'querySelector', 'querySelectorAll']); // Properties that should return the logical, not composed tree. Note, `classList`
  // is here only for legacy compatibility since it does not trigger distribution
  // in v1 Shadow DOM.

  forwardReadOnlyProperties(DomApiNative.prototype, ['parentNode', 'firstChild', 'lastChild', 'nextSibling', 'previousSibling', 'firstElementChild', 'lastElementChild', 'nextElementSibling', 'previousElementSibling', 'childNodes', 'children', 'classList']);
  forwardProperties(DomApiNative.prototype, ['textContent', 'innerHTML', 'className']);
}

export const DomApi = DomApiImpl;
/**
 * Legacy DOM and Event manipulation API wrapper factory used to abstract
 * differences between native Shadow DOM and "Shady DOM" when polyfilling on
 * older browsers.
 *
 * Note that in Polymer 2.x use of `Polymer.dom` is no longer required and
 * in the majority of cases simply facades directly to the standard native
 * API.
 *
 * @summary Legacy DOM and Event manipulation API wrapper factory used to
 * abstract differences between native Shadow DOM and "Shady DOM."
 * @param {(Node|Event|DomApiNative|EventApi)=} obj Node or event to operate on
 * @return {!DomApiNative|!EventApi} Wrapper providing either node API or event API
 */

export const dom = function (obj) {
  obj = obj || document;

  if (obj instanceof DomApiImpl) {
    return (
      /** @type {!DomApi} */
      obj
    );
  }

  if (obj instanceof EventApi) {
    return (
      /** @type {!EventApi} */
      obj
    );
  }

  let helper = obj['__domApi'];

  if (!helper) {
    if (obj instanceof Event) {
      helper = new EventApi(obj);
    } else {
      helper = new DomApiImpl(
      /** @type {Node} */
      obj);
    }

    obj['__domApi'] = helper;
  }

  return helper;
};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:01</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.polymer.dom" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\polymer.dom.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.polymer.dom.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\polymer.dom.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>polymer.dom.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/polymer.dom.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.polymer.element">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.polymer.element.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.polymer.element.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53162.047191</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { ElementMixin, version } from '/%ZWebNode.Lib.Polymer.v3.element.mixin.cls';
export { html } from '/%ZWebNode.Lib.Polymer.v3.html.tag.cls';
export { version };
/**
 * Base class that provides the core API for Polymer's meta-programming
 * features including template stamping, data-binding, attribute deserialization,
 * and property change observation.
 *
 * @customElement
 * polymer
 * @constructor
 * @implements {Polymer_ElementMixin}
 * @extends HTMLElement
 * @appliesMixin ElementMixin
 * @summary Custom element base class that provides the core API for Polymer's
 *   key meta-programming features including template stamping, data-binding,
 *   attribute deserialization, and property change observation
 */

export const PolymerElement = ElementMixin(HTMLElement);
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:02</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.polymer.element" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\polymer-element.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.polymer.element.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\polymer-element.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>polymer-element.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/polymer-element.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.polymer.fn">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.polymer.fn.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.polymer.fn.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53162.118987</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { Class } from '/%ZWebNode.Lib.Polymer.v3.class.cls';
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
/**
 * Legacy class factory and registration helper for defining Polymer
 * elements.
 *
 * This method is equivalent to
 *
 *     import {Class} from 'polymer/polymer/lib/legacy/class.js';
 *     customElements.define(info.is, Class(info));
 *
 * See `Class` for details on valid legacy metadata format for `info`.
 *
 * @global
 * @override
 * @function
 * @param {!PolymerInit} info Object containing Polymer metadata and functions
 *   to become class methods.
 * @return {function(new: HTMLElement)} Generated class
 * @suppress {duplicate, invalidCasts, checkTypes}
 */

const Polymer = function (info) {
  // if input is a `class` (aka a function with a prototype), use the prototype
  // remember that the `constructor` will never be called
  let klass;

  if (typeof info === 'function') {
    klass = info;
  } else {
    klass = Polymer.Class(info);
  }

  customElements.define(klass.is,
  /** @type {!HTMLElement} */
  klass);
  return klass;
};

Polymer.Class = Class;
export { Polymer };
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:02</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.polymer.fn" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\polymer-fn.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.polymer.fn.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\polymer-fn.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>polymer-fn.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/polymer-fn.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.polymer.legacy">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.polymer.legacy.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.polymer.legacy.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53162.195128</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { LegacyElementMixin } from '/%ZWebNode.Lib.Polymer.v3.legacy.element.mixin.cls';
export { Polymer } from '/%ZWebNode.Lib.Polymer.v3.polymer.fn.cls';
/* template elements */

import '/%ZWebNode.Lib.Polymer.v3.templatizer.behavior.cls';
import '/%ZWebNode.Lib.Polymer.v3.dom.bind.cls';
import '/%ZWebNode.Lib.Polymer.v3.dom.repeat.cls';
import '/%ZWebNode.Lib.Polymer.v3.dom.if.cls';
import '/%ZWebNode.Lib.Polymer.v3.array.selector.cls';
/* custom-style */

import '/%ZWebNode.Lib.Polymer.v3.custom.style.cls';
/* bc behaviors */

import '/%ZWebNode.Lib.Polymer.v3.mutable.data.behavior.cls';
/* import html-tag to export html */

export { html } from '/%ZWebNode.Lib.Polymer.v3.html.tag.cls'; // bc

export const Base = LegacyElementMixin(HTMLElement).prototype;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:02</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.polymer.legacy" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\polymer-legacy.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.polymer.legacy.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\polymer-legacy.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>polymer-legacy.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/polymer-legacy.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.properties.changed">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.properties.changed.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.properties.changed.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53162.266484</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import { microTask } from '/%ZWebNode.Lib.Polymer.v3.async.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
/** @const {!AsyncInterface} */

const microtask = microTask;
/**
 * Element class mixin that provides basic meta-programming for creating one
 * or more property accessors (getter/setter pair) that enqueue an async
 * (batched) `_propertiesChanged` callback.
 *
 * For basic usage of this mixin, call `MyClass.createProperties(props)`
 * once at class definition time to create property accessors for properties
 * named in props, implement `_propertiesChanged` to react as desired to
 * property changes, and implement `static get observedAttributes()` and
 * include lowercase versions of any property names that should be set from
 * attributes. Last, call `this._enableProperties()` in the element's
 * `connectedCallback` to enable the accessors.
 *
 * @mixinFunction
 * polymer
 * @summary Element class mixin for reacting to property changes from
 *   generated property accessors.
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */

export const PropertiesChanged = dedupingMixin(
/**
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */
superClass => {
  /**
   * polymer
   * @mixinClass
   * @implements {Polymer_PropertiesChanged}
   * @unrestricted
   */
  class PropertiesChanged extends superClass {
    /**
     * Creates property accessors for the given property names.
     * @param {!Object} props Object whose keys are names of accessors.
     * @return {void}
     * @protected
     * @nocollapse
     */
    static createProperties(props) {
      const proto = this.prototype;

      for (let prop in props) {
        // don't stomp an existing accessor
        if (!(prop in proto)) {
          proto._createPropertyAccessor(prop);
        }
      }
    }
    /**
     * Returns an attribute name that corresponds to the given property.
     * The attribute name is the lowercased property name. Override to
     * customize this mapping.
     * @param {string} property Property to convert
     * @return {string} Attribute name corresponding to the given property.
     *
     * @protected
     * @nocollapse
     */


    static attributeNameForProperty(property) {
      return property.toLowerCase();
    }
    /**
     * Override point to provide a type to which to deserialize a value to
     * a given property.
     * @param {string} name Name of property
     *
     * @protected
     * @nocollapse
     */


    static typeForProperty(name) {} //eslint-disable-line no-unused-vars

    /**
     * Creates a setter/getter pair for the named property with its own
     * local storage.  The getter returns the value in the local storage,
     * and the setter calls `_setProperty`, which updates the local storage
     * for the property and enqueues a `_propertiesChanged` callback.
     *
     * This method may be called on a prototype or an instance.  Calling
     * this method may overwrite a property value that already exists on
     * the prototype/instance by creating the accessor.
     *
     * @param {string} property Name of the property
     * @param {boolean=} readOnly When true, no setter is created; the
     *   protected `_setProperty` function must be used to set the property
     * @return {void}
     * @protected
     * @override
     */


    _createPropertyAccessor(property, readOnly) {
      this._addPropertyToAttributeMap(property);

      if (!this.hasOwnProperty('__dataHasAccessor')) {
        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);
      }

      if (!this.__dataHasAccessor[property]) {
        this.__dataHasAccessor[property] = true;

        this._definePropertyAccessor(property, readOnly);
      }
    }
    /**
     * Adds the given `property` to a map matching attribute names
     * to property names, using `attributeNameForProperty`. This map is
     * used when deserializing attribute values to properties.
     *
     * @param {string} property Name of the property
     * @override
     */


    _addPropertyToAttributeMap(property) {
      if (!this.hasOwnProperty('__dataAttributes')) {
        this.__dataAttributes = Object.assign({}, this.__dataAttributes);
      }

      if (!this.__dataAttributes[property]) {
        const attr = this.constructor.attributeNameForProperty(property);
        this.__dataAttributes[attr] = property;
      }
    }
    /**
     * Defines a property accessor for the given property.
     * @param {string} property Name of the property
     * @param {boolean=} readOnly When true, no setter is created
     * @return {void}
     * @override
     */


    _definePropertyAccessor(property, readOnly) {
      Object.defineProperty(this, property, {
        /* eslint-disable valid-jsdoc */

        /** @this {PropertiesChanged} */
        get() {
          return this._getProperty(property);
        },

        /** @this {PropertiesChanged} */
        set: readOnly ? function () {} : function (value) {
          this._setProperty(property, value);
        }
        /* eslint-enable */

      });
    }

    constructor() {
      super();
      /** @type {boolean} */

      this.__dataEnabled = false;
      this.__dataReady = false;
      this.__dataInvalid = false;
      this.__data = {};
      this.__dataPending = null;
      this.__dataOld = null;
      this.__dataInstanceProps = null;
      this.__serializing = false;

      this._initializeProperties();
    }
    /**
     * Lifecycle callback called when properties are enabled via
     * `_enableProperties`.
     *
     * Users may override this function to implement behavior that is
     * dependent on the element having its property data initialized, e.g.
     * from defaults (initialized from `constructor`, `_initializeProperties`),
     * `attributeChangedCallback`, or values propagated from host e.g. via
     * bindings.  `super.ready()` must be called to ensure the data system
     * becomes enabled.
     *
     * @return {void}
     * @public
     * @override
     */


    ready() {
      this.__dataReady = true;

      this._flushProperties();
    }
    /**
     * Initializes the local storage for property accessors.
     *
     * Provided as an override point for performing any setup work prior
     * to initializing the property accessor system.
     *
     * @return {void}
     * @protected
     * @override
     */


    _initializeProperties() {
      // Capture instance properties; these will be set into accessors
      // during first flush. Don't set them here, since we want
      // these to overwrite defaults/constructor assignments
      for (let p in this.__dataHasAccessor) {
        if (this.hasOwnProperty(p)) {
          this.__dataInstanceProps = this.__dataInstanceProps || {};
          this.__dataInstanceProps[p] = this[p];
          delete this[p];
        }
      }
    }
    /**
     * Called at ready time with bag of instance properties that overwrote
     * accessors when the element upgraded.
     *
     * The default implementation sets these properties back into the
     * setter at ready time.  This method is provided as an override
     * point for customizing or providing more efficient initialization.
     *
     * @param {Object} props Bag of property values that were overwritten
     *   when creating property accessors.
     * @return {void}
     * @protected
     * @override
     */


    _initializeInstanceProperties(props) {
      Object.assign(this, props);
    }
    /**
     * Updates the local storage for a property (via `_setPendingProperty`)
     * and enqueues a `_proeprtiesChanged` callback.
     *
     * @param {string} property Name of the property
     * @param {*} value Value to set
     * @return {void}
     * @protected
     * @override
     */


    _setProperty(property, value) {
      if (this._setPendingProperty(property, value)) {
        this._invalidateProperties();
      }
    }
    /**
     * Returns the value for the given property.
     * @param {string} property Name of property
     * @return {*} Value for the given property
     * @protected
     * @override
     */


    _getProperty(property) {
      return this.__data[property];
    }
    /* eslint-disable no-unused-vars */

    /**
     * Updates the local storage for a property, records the previous value,
     * and adds it to the set of "pending changes" that will be passed to the
     * `_propertiesChanged` callback.  This method does not enqueue the
     * `_propertiesChanged` callback.
     *
     * @param {string} property Name of the property
     * @param {*} value Value to set
     * @param {boolean=} ext Not used here; affordance for closure
     * @return {boolean} Returns true if the property changed
     * @protected
     * @override
     */


    _setPendingProperty(property, value, ext) {
      let old = this.__data[property];

      let changed = this._shouldPropertyChange(property, value, old);

      if (changed) {
        if (!this.__dataPending) {
          this.__dataPending = {};
          this.__dataOld = {};
        } // Ensure old is captured from the last turn


        if (this.__dataOld && !(property in this.__dataOld)) {
          this.__dataOld[property] = old;
        }

        this.__data[property] = value;
        this.__dataPending[property] = value;
      }

      return changed;
    }
    /* eslint-enable */

    /**
     * Marks the properties as invalid, and enqueues an async
     * `_propertiesChanged` callback.
     *
     * @return {void}
     * @protected
     * @override
     */


    _invalidateProperties() {
      if (!this.__dataInvalid && this.__dataReady) {
        this.__dataInvalid = true;
        microtask.run(() => {
          if (this.__dataInvalid) {
            this.__dataInvalid = false;

            this._flushProperties();
          }
        });
      }
    }
    /**
     * Call to enable property accessor processing. Before this method is
     * called accessor values will be set but side effects are
     * queued. When called, any pending side effects occur immediately.
     * For elements, generally `connectedCallback` is a normal spot to do so.
     * It is safe to call this method multiple times as it only turns on
     * property accessors once.
     *
     * @return {void}
     * @protected
     * @override
     */


    _enableProperties() {
      if (!this.__dataEnabled) {
        this.__dataEnabled = true;

        if (this.__dataInstanceProps) {
          this._initializeInstanceProperties(this.__dataInstanceProps);

          this.__dataInstanceProps = null;
        }

        this.ready();
      }
    }
    /**
     * Calls the `_propertiesChanged` callback with the current set of
     * pending changes (and old values recorded when pending changes were
     * set), and resets the pending set of changes. Generally, this method
     * should not be called in user code.
     *
     * @return {void}
     * @protected
     * @override
     */


    _flushProperties() {
      const props = this.__data;
      const changedProps = this.__dataPending;
      const old = this.__dataOld;

      if (this._shouldPropertiesChange(props, changedProps, old)) {
        this.__dataPending = null;
        this.__dataOld = null;

        this._propertiesChanged(props, changedProps, old);
      }
    }
    /**
     * Called in `_flushProperties` to determine if `_propertiesChanged`
     * should be called. The default implementation returns true if
     * properties are pending. Override to customize when
     * `_propertiesChanged` is called.
     * @param {!Object} currentProps Bag of all current accessor values
     * @param {?Object} changedProps Bag of properties changed since the last
     *   call to `_propertiesChanged`
     * @param {?Object} oldProps Bag of previous values for each property
     *   in `changedProps`
     * @return {boolean} true if changedProps is truthy
     * @override
     */


    _shouldPropertiesChange(currentProps, changedProps, oldProps) {
      // eslint-disable-line no-unused-vars
      return Boolean(changedProps);
    }
    /**
     * Callback called when any properties with accessors created via
     * `_createPropertyAccessor` have been set.
     *
     * @param {!Object} currentProps Bag of all current accessor values
     * @param {?Object} changedProps Bag of properties changed since the last
     *   call to `_propertiesChanged`
     * @param {?Object} oldProps Bag of previous values for each property
     *   in `changedProps`
     * @return {void}
     * @protected
     * @override
     */


    _propertiesChanged(currentProps, changedProps, oldProps) {} // eslint-disable-line no-unused-vars

    /**
     * Method called to determine whether a property value should be
     * considered as a change and cause the `_propertiesChanged` callback
     * to be enqueued.
     *
     * The default implementation returns `true` if a strict equality
     * check fails. The method always returns false for `NaN`.
     *
     * Override this method to e.g. provide stricter checking for
     * Objects/Arrays when using immutable patterns.
     *
     * @param {string} property Property name
     * @param {*} value New property value
     * @param {*} old Previous property value
     * @return {boolean} Whether the property should be considered a change
     *   and enqueue a `_proeprtiesChanged` callback
     * @protected
     * @override
     */


    _shouldPropertyChange(property, value, old) {
      return (// Strict equality check
        old !== value && ( // This ensures (old==NaN, value==NaN) always returns false
        old === old || value === value)
      );
    }
    /**
     * Implements native Custom Elements `attributeChangedCallback` to
     * set an attribute value to a property via `_attributeToProperty`.
     *
     * @param {string} name Name of attribute that changed
     * @param {?string} old Old attribute value
     * @param {?string} value New attribute value
     * @param {?string} namespace Attribute namespace.
     * @return {void}
     * @suppress {missingProperties} Super may or may not implement the callback
     * @override
     */


    attributeChangedCallback(name, old, value, namespace) {
      if (old !== value) {
        this._attributeToProperty(name, value);
      }

      if (super.attributeChangedCallback) {
        super.attributeChangedCallback(name, old, value, namespace);
      }
    }
    /**
     * Deserializes an attribute to its associated property.
     *
     * This method calls the `_deserializeValue` method to convert the string to
     * a typed value.
     *
     * @param {string} attribute Name of attribute to deserialize.
     * @param {?string} value of the attribute.
     * @param {*=} type type to deserialize to, defaults to the value
     * returned from `typeForProperty`
     * @return {void}
     * @override
     */


    _attributeToProperty(attribute, value, type) {
      if (!this.__serializing) {
        const map = this.__dataAttributes;
        const property = map && map[attribute] || attribute;
        this[property] = this._deserializeValue(value, type || this.constructor.typeForProperty(property));
      }
    }
    /**
     * Serializes a property to its associated attribute.
     *
     * @suppress {invalidCasts} Closure can't figure out `this` is an element.
     *
     * @param {string} property Property name to reflect.
     * @param {string=} attribute Attribute name to reflect to.
     * @param {*=} value Property value to refect.
     * @return {void}
     * @override
     */


    _propertyToAttribute(property, attribute, value) {
      this.__serializing = true;
      value = arguments.length < 3 ? this[property] : value;

      this._valueToNodeAttribute(
      /** @type {!HTMLElement} */
      this, value, attribute || this.constructor.attributeNameForProperty(property));

      this.__serializing = false;
    }
    /**
     * Sets a typed value to an HTML attribute on a node.
     *
     * This method calls the `_serializeValue` method to convert the typed
     * value to a string.  If the `_serializeValue` method returns `undefined`,
     * the attribute will be removed (this is the default for boolean
     * type `false`).
     *
     * @param {Element} node Element to set attribute to.
     * @param {*} value Value to serialize.
     * @param {string} attribute Attribute name to serialize to.
     * @return {void}
     * @override
     */


    _valueToNodeAttribute(node, value, attribute) {
      const str = this._serializeValue(value);

      if (attribute === 'class' || attribute === 'name' || attribute === 'slot') {
        node =
        /** @type {?Element} */
        wrap(node);
      }

      if (str === undefined) {
        node.removeAttribute(attribute);
      } else {
        node.setAttribute(attribute, str);
      }
    }
    /**
     * Converts a typed JavaScript value to a string.
     *
     * This method is called when setting JS property values to
     * HTML attributes.  Users may override this method to provide
     * serialization for custom types.
     *
     * @param {*} value Property value to serialize.
     * @return {string | undefined} String serialized from the provided
     * property  value.
     * @override
     */


    _serializeValue(value) {
      switch (typeof value) {
        case 'boolean':
          return value ? '' : undefined;

        default:
          return value != null ? value.toString() : undefined;
      }
    }
    /**
     * Converts a string to a typed JavaScript value.
     *
     * This method is called when reading HTML attribute values to
     * JS properties.  Users may override this method to provide
     * deserialization for custom `type`s. Types for `Boolean`, `String`,
     * and `Number` convert attributes to the expected types.
     *
     * @param {?string} value Value to deserialize.
     * @param {*=} type Type to deserialize the string to.
     * @return {*} Typed value deserialized from the provided string.
     * @override
     */


    _deserializeValue(value, type) {
      switch (type) {
        case Boolean:
          return value !== null;

        case Number:
          return Number(value);

        default:
          return value;
      }
    }

  }

  return PropertiesChanged;
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:02</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.properties.changed" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\properties-changed.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.properties.changed.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\properties-changed.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>properties-changed.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/properties-changed.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.properties.mixin">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.properties.mixin.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.properties.mixin.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53162.480767</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import { register, incrementInstanceCount } from '/%ZWebNode.Lib.Polymer.v3.telemetry.cls';
import { PropertiesChanged } from '/%ZWebNode.Lib.Polymer.v3.properties.changed.cls';
/**
 * Creates a copy of `props` with each property normalized such that
 * upgraded it is an object with at least a type property { type: Type}.
 *
 * @param {Object} props Properties to normalize
 * @return {Object} Copy of input `props` with normalized properties that
 * are in the form {type: Type}
 * @private
 */

function normalizeProperties(props) {
  const output = {};

  for (let p in props) {
    const o = props[p];
    output[p] = typeof o === 'function' ? {
      type: o
    } : o;
  }

  return output;
}
/**
 * Mixin that provides a minimal starting point to using the PropertiesChanged
 * mixin by providing a mechanism to declare properties in a static
 * getter (e.g. static get properties() { return { foo: String } }). Changes
 * are reported via the `_propertiesChanged` method.
 *
 * This mixin provides no specific support for rendering. Users are expected
 * to create a ShadowRoot and put content into it and update it in whatever
 * way makes sense. This can be done in reaction to properties changing by
 * implementing `_propertiesChanged`.
 *
 * @mixinFunction
 * polymer
 * @appliesMixin PropertiesChanged
 * @summary Mixin that provides a minimal starting point for using
 * the PropertiesChanged mixin by providing a declarative `properties` object.
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */


export const PropertiesMixin = dedupingMixin(superClass => {
  /**
   * @constructor
   * @implements {Polymer_PropertiesChanged}
   * @private
   */
  const base = PropertiesChanged(superClass);
  /**
   * Returns the super class constructor for the given class, if it is an
   * instance of the PropertiesMixin.
   *
   * @param {!PropertiesMixinConstructor} constructor PropertiesMixin constructor
   * @return {?PropertiesMixinConstructor} Super class constructor
   */

  function superPropertiesClass(constructor) {
    const superCtor = Object.getPrototypeOf(constructor); // Note, the `PropertiesMixin` class below only refers to the class
    // generated by this call to the mixin; the instanceof test only works
    // because the mixin is deduped and guaranteed only to apply once, hence
    // all constructors in a proto chain will see the same `PropertiesMixin`

    return superCtor.prototype instanceof PropertiesMixin ?
    /** @type {!PropertiesMixinConstructor} */
    superCtor : null;
  }
  /**
   * Returns a memoized version of the `properties` object for the
   * given class. Properties not in object format are converted to at
   * least {type}.
   *
   * @param {PropertiesMixinConstructor} constructor PropertiesMixin constructor
   * @return {Object} Memoized properties object
   */


  function ownProperties(constructor) {
    if (!constructor.hasOwnProperty(JSCompiler_renameProperty('__ownProperties', constructor))) {
      let props = null;

      if (constructor.hasOwnProperty(JSCompiler_renameProperty('properties', constructor))) {
        const properties = constructor.properties;

        if (properties) {
          props = normalizeProperties(properties);
        }
      }

      constructor.__ownProperties = props;
    }

    return constructor.__ownProperties;
  }
  /**
   * polymer
   * @mixinClass
   * @extends {base}
   * @implements {Polymer_PropertiesMixin}
   * @unrestricted
   */


  class PropertiesMixin extends base {
    /**
     * Implements standard custom elements getter to observes the attributes
     * listed in `properties`.
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */
    static get observedAttributes() {
      if (!this.hasOwnProperty('__observedAttributes')) {
        register(this.prototype);
        const props = this._properties;
        this.__observedAttributes = props ? Object.keys(props).map(p => this.attributeNameForProperty(p)) : [];
      }

      return this.__observedAttributes;
    }
    /**
     * Finalizes an element definition, including ensuring any super classes
     * are also finalized. This includes ensuring property
     * accessors exist on the element prototype. This method calls
     * `_finalizeClass` to finalize each constructor in the prototype chain.
     * @return {void}
     * @nocollapse
     */


    static finalize() {
      if (!this.hasOwnProperty(JSCompiler_renameProperty('__finalized', this))) {
        const superCtor = superPropertiesClass(
        /** @type {!PropertiesMixinConstructor} */
        this);

        if (superCtor) {
          superCtor.finalize();
        }

        this.__finalized = true;

        this._finalizeClass();
      }
    }
    /**
     * Finalize an element class. This includes ensuring property
     * accessors exist on the element prototype. This method is called by
     * `finalize` and finalizes the class constructor.
     *
     * @protected
     * @nocollapse
     */


    static _finalizeClass() {
      const props = ownProperties(
      /** @type {!PropertiesMixinConstructor} */
      this);

      if (props) {
        /** @type {?} */
        this.createProperties(props);
      }
    }
    /**
     * Returns a memoized version of all properties, including those inherited
     * from super classes. Properties not in object format are converted to
     * at least {type}.
     *
     * @return {Object} Object containing properties for this class
     * @protected
     * @nocollapse
     */


    static get _properties() {
      if (!this.hasOwnProperty(JSCompiler_renameProperty('__properties', this))) {
        const superCtor = superPropertiesClass(
        /** @type {!PropertiesMixinConstructor} */
        this);
        this.__properties = Object.assign({}, superCtor && superCtor._properties, ownProperties(
        /** @type {PropertiesMixinConstructor} */
        this));
      }

      return this.__properties;
    }
    /**
     * Overrides `PropertiesChanged` method to return type specified in the
     * static `properties` object for the given property.
     * @param {string} name Name of property
     * @return {*} Type to which to deserialize attribute
     *
     * @protected
     * @nocollapse
     */


    static typeForProperty(name) {
      const info = this._properties[name];
      return info && info.type;
    }
    /**
     * Overrides `PropertiesChanged` method and adds a call to
     * `finalize` which lazily configures the element's property accessors.
     * @override
     * @return {void}
     */


    _initializeProperties() {
      incrementInstanceCount();
      this.constructor.finalize();

      super._initializeProperties();
    }
    /**
     * Called when the element is added to a document.
     * Calls `_enableProperties` to turn on property system from
     * `PropertiesChanged`.
     * @suppress {missingProperties} Super may or may not implement the callback
     * @return {void}
     * @override
     */


    connectedCallback() {
      if (super.connectedCallback) {
        super.connectedCallback();
      }

      this._enableProperties();
    }
    /**
     * Called when the element is removed from a document
     * @suppress {missingProperties} Super may or may not implement the callback
     * @return {void}
     * @override
     */


    disconnectedCallback() {
      if (super.disconnectedCallback) {
        super.disconnectedCallback();
      }
    }

  }

  return PropertiesMixin;
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:02</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.properties.mixin" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\properties-mixin.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.properties.mixin.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\properties-mixin.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>properties-mixin.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/properties-mixin.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.property.accessors">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.property.accessors.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.property.accessors.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53162.620729</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import { camelToDashCase, dashToCamelCase } from '/%ZWebNode.Lib.Polymer.v3.case.map.cls';
import { PropertiesChanged } from '/%ZWebNode.Lib.Polymer.v3.properties.changed.cls'; // Save map of native properties; this forms a blacklist or properties
// that won't have their values "saved" by `saveAccessorValue`, since
// reading from an HTMLElement accessor from the context of a prototype throws

const nativeProperties = {};
let proto = HTMLElement.prototype;

while (proto) {
  let props = Object.getOwnPropertyNames(proto);

  for (let i = 0; i < props.length; i++) {
    nativeProperties[props[i]] = true;
  }

  proto = Object.getPrototypeOf(proto);
}
/**
 * Used to save the value of a property that will be overridden with
 * an accessor. If the `model` is a prototype, the values will be saved
 * in `__dataProto`, and it's up to the user (or downstream mixin) to
 * decide how/when to set these values back into the accessors.
 * If `model` is already an instance (it has a `__data` property), then
 * the value will be set as a pending property, meaning the user should
 * call `_invalidateProperties` or `_flushProperties` to take effect
 *
 * @param {Object} model Prototype or instance
 * @param {string} property Name of property
 * @return {void}
 * @private
 */


function saveAccessorValue(model, property) {
  // Don't read/store value for any native properties since they could throw
  if (!nativeProperties[property]) {
    let value = model[property];

    if (value !== undefined) {
      if (model.__data) {
        // Adding accessor to instance; update the property
        // It is the user's responsibility to call _flushProperties
        model._setPendingProperty(property, value);
      } else {
        // Adding accessor to proto; save proto's value for instance-time use
        if (!model.__dataProto) {
          model.__dataProto = {};
        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {
          model.__dataProto = Object.create(model.__dataProto);
        }

        model.__dataProto[property] = value;
      }
    }
  }
}
/**
 * Element class mixin that provides basic meta-programming for creating one
 * or more property accessors (getter/setter pair) that enqueue an async
 * (batched) `_propertiesChanged` callback.
 *
 * For basic usage of this mixin:
 *
 * -   Declare attributes to observe via the standard `static get
 *     observedAttributes()`. Use `dash-case` attribute names to represent
 *     `camelCase` property names.
 * -   Implement the `_propertiesChanged` callback on the class.
 * -   Call `MyClass.createPropertiesForAttributes()` **once** on the class to
 *     generate property accessors for each observed attribute. This must be
 *     called before the first instance is created, for example, by calling it
 *     before calling `customElements.define`. It can also be called lazily from
 *     the element's `constructor`, as long as it's guarded so that the call is
 *     only made once, when the first instance is created.
 * -   Call `this._enableProperties()` in the element's `connectedCallback` to
 *     enable the accessors.
 *
 * Any `observedAttributes` will automatically be
 * deserialized via `attributeChangedCallback` and set to the associated
 * property using `dash-case`-to-`camelCase` convention.
 *
 * @mixinFunction
 * polymer
 * @appliesMixin PropertiesChanged
 * @summary Element class mixin for reacting to property changes from
 *   generated property accessors.
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */


export const PropertyAccessors = dedupingMixin(superClass => {
  /**
   * @constructor
   * @implements {Polymer_PropertiesChanged}
   * @unrestricted
   * @private
   */
  const base = PropertiesChanged(superClass);
  /**
   * polymer
   * @mixinClass
   * @implements {Polymer_PropertyAccessors}
   * @extends {base}
   * @unrestricted
   */

  class PropertyAccessors extends base {
    /**
     * Generates property accessors for all attributes in the standard
     * static `observedAttributes` array.
     *
     * Attribute names are mapped to property names using the `dash-case` to
     * `camelCase` convention
     *
     * @return {void}
     * @nocollapse
     */
    static createPropertiesForAttributes() {
      let a$ =
      /** @type {?} */
      this.observedAttributes;

      for (let i = 0; i < a$.length; i++) {
        this.prototype._createPropertyAccessor(dashToCamelCase(a$[i]));
      }
    }
    /**
     * Returns an attribute name that corresponds to the given property.
     * By default, converts camel to dash case, e.g. `fooBar` to `foo-bar`.
     * @param {string} property Property to convert
     * @return {string} Attribute name corresponding to the given property.
     *
     * @protected
     * @nocollapse
     */


    static attributeNameForProperty(property) {
      return camelToDashCase(property);
    }
    /**
     * Overrides PropertiesChanged implementation to initialize values for
     * accessors created for values that already existed on the element
     * prototype.
     *
     * @return {void}
     * @protected
     * @override
     */


    _initializeProperties() {
      if (this.__dataProto) {
        this._initializeProtoProperties(this.__dataProto);

        this.__dataProto = null;
      }

      super._initializeProperties();
    }
    /**
     * Called at instance time with bag of properties that were overwritten
     * by accessors on the prototype when accessors were created.
     *
     * The default implementation sets these properties back into the
     * setter at instance time.  This method is provided as an override
     * point for customizing or providing more efficient initialization.
     *
     * @param {Object} props Bag of property values that were overwritten
     *   when creating property accessors.
     * @return {void}
     * @protected
     * @override
     */


    _initializeProtoProperties(props) {
      for (let p in props) {
        this._setProperty(p, props[p]);
      }
    }
    /**
     * Ensures the element has the given attribute. If it does not,
     * assigns the given value to the attribute.
     *
     * @suppress {invalidCasts} Closure can't figure out `this` is infact an
     *     element
     *
     * @param {string} attribute Name of attribute to ensure is set.
     * @param {string} value of the attribute.
     * @return {void}
     * @override
     */


    _ensureAttribute(attribute, value) {
      const el =
      /** @type {!HTMLElement} */
      this;

      if (!el.hasAttribute(attribute)) {
        this._valueToNodeAttribute(el, value, attribute);
      }
    }
    /**
     * Overrides PropertiesChanged implemention to serialize objects as JSON.
     *
     * @param {*} value Property value to serialize.
     * @return {string | undefined} String serialized from the provided property
     *     value.
     * @override
     */


    _serializeValue(value) {
      /* eslint-disable no-fallthrough */
      switch (typeof value) {
        case 'object':
          if (value instanceof Date) {
            return value.toString();
          } else if (value) {
            try {
              return JSON.stringify(value);
            } catch (x) {
              return '';
            }
          }

        default:
          return super._serializeValue(value);
      }
    }
    /**
     * Converts a string to a typed JavaScript value.
     *
     * This method is called by Polymer when reading HTML attribute values to
     * JS properties.  Users may override this method on Polymer element
     * prototypes to provide deserialization for custom `type`s.  Note,
     * the `type` argument is the value of the `type` field provided in the
     * `properties` configuration object for a given property, and is
     * by convention the constructor for the type to deserialize.
     *
     *
     * @param {?string} value Attribute value to deserialize.
     * @param {*=} type Type to deserialize the string to.
     * @return {*} Typed value deserialized from the provided string.
     * @override
     */


    _deserializeValue(value, type) {
      /**
       * @type {*}
       */
      let outValue;

      switch (type) {
        case Object:
          try {
            outValue = JSON.parse(
            /** @type {string} */
            value);
          } catch (x) {
            // allow non-JSON literals like Strings and Numbers
            outValue = value;
          }

          break;

        case Array:
          try {
            outValue = JSON.parse(
            /** @type {string} */
            value);
          } catch (x) {
            outValue = null;
            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);
          }

          break;

        case Date:
          outValue = isNaN(value) ? String(value) : Number(value);
          outValue = new Date(outValue);
          break;

        default:
          outValue = super._deserializeValue(value, type);
          break;
      }

      return outValue;
    }
    /* eslint-enable no-fallthrough */

    /**
     * Overrides PropertiesChanged implementation to save existing prototype
     * property value so that it can be reset.
     * @param {string} property Name of the property
     * @param {boolean=} readOnly When true, no setter is created
     *
     * When calling on a prototype, any overwritten values are saved in
     * `__dataProto`, and it is up to the subclasser to decide how/when
     * to set those properties back into the accessor.  When calling on an
     * instance, the overwritten value is set via `_setPendingProperty`,
     * and the user should call `_invalidateProperties` or `_flushProperties`
     * for the values to take effect.
     * @protected
     * @return {void}
     * @override
     */


    _definePropertyAccessor(property, readOnly) {
      saveAccessorValue(this, property);

      super._definePropertyAccessor(property, readOnly);
    }
    /**
     * Returns true if this library created an accessor for the given property.
     *
     * @param {string} property Property name
     * @return {boolean} True if an accessor was created
     * @override
     */


    _hasAccessor(property) {
      return this.__dataHasAccessor && this.__dataHasAccessor[property];
    }
    /**
     * Returns true if the specified property has a pending change.
     *
     * @param {string} prop Property name
     * @return {boolean} True if property has a pending change
     * @protected
     * @override
     */


    _isPropertyPending(prop) {
      return Boolean(this.__dataPending && prop in this.__dataPending);
    }

  }

  return PropertyAccessors;
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:02</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.property.accessors" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\property-accessors.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.property.accessors.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\property-accessors.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>property-accessors.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/property-accessors.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.property.effects">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.property.effects.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.property.effects.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53162.778243</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 * @fileoverview
 * @suppress {checkPrototypalTypes}
 * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt The complete set of authors may be found
 * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may
 * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by
 * Google as part of the polymer project is also subject to an additional IP
 * rights grant found at http://polymer.github.io/PATENTS.txt
 */
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls';
import { root, isAncestor, isDescendant, get, translate, isPath, set, normalize } from '/%ZWebNode.Lib.Polymer.v3.path.cls';
/* for notify, reflect */

import { camelToDashCase, dashToCamelCase } from '/%ZWebNode.Lib.Polymer.v3.case.map.cls';
import { PropertyAccessors } from '/%ZWebNode.Lib.Polymer.v3.property.accessors.cls';
/* for annotated effects */

import { TemplateStamp } from '/%ZWebNode.Lib.Polymer.v3.template.stamp.cls';
import { sanitizeDOMValue } from '/%ZWebNode.Lib.Polymer.v3.settings.cls'; // Monotonically increasing unique ID used for de-duping effects triggered
// from multiple properties in the same turn

let dedupeId = 0;
/**
 * Property effect types; effects are stored on the prototype using these keys
 * @enum {string}
 */

const TYPES = {
  COMPUTE: '__computeEffects',
  REFLECT: '__reflectEffects',
  NOTIFY: '__notifyEffects',
  PROPAGATE: '__propagateEffects',
  OBSERVE: '__observeEffects',
  READ_ONLY: '__readOnly'
};
/** @const {!RegExp} */

const capitalAttributeRegex = /[A-Z]/;
/**
 * @typedef {{
 * name: (string | undefined),
 * structured: (boolean | undefined),
 * wildcard: (boolean | undefined)
 * }}
 */

let DataTrigger; //eslint-disable-line no-unused-vars

/**
 * @typedef {{
 * info: ?,
 * trigger: (!DataTrigger | undefined),
 * fn: (!Function | undefined)
 * }}
 */

let DataEffect; //eslint-disable-line no-unused-vars

/**
 * Ensures that the model has an own-property map of effects for the given type.
 * The model may be a prototype or an instance.
 *
 * Property effects are stored as arrays of effects by property in a map,
 * by named type on the model. e.g.
 *
 *   __computeEffects: {
 *     foo: [ ... ],
 *     bar: [ ... ]
 *   }
 *
 * If the model does not yet have an effect map for the type, one is created
 * and returned.  If it does, but it is not an own property (i.e. the
 * prototype had effects), the the map is deeply cloned and the copy is
 * set on the model and returned, ready for new effects to be added.
 *
 * @param {Object} model Prototype or instance
 * @param {string} type Property effect type
 * @return {Object} The own-property map of effects for the given type
 * @private
 */

function ensureOwnEffectMap(model, type) {
  let effects = model[type];

  if (!effects) {
    effects = model[type] = {};
  } else if (!model.hasOwnProperty(type)) {
    effects = model[type] = Object.create(model[type]);

    for (let p in effects) {
      let protoFx = effects[p];
      let instFx = effects[p] = Array(protoFx.length);

      for (let i = 0; i < protoFx.length; i++) {
        instFx[i] = protoFx[i];
      }
    }
  }

  return effects;
} // -- effects ----------------------------------------------

/**
 * Runs all effects of a given type for the given set of property changes
 * on an instance.
 *
 * @param {!Polymer_PropertyEffects} inst The instance with effects to run
 * @param {?Object} effects Object map of property-to-Array of effects
 * @param {?Object} props Bag of current property changes
 * @param {?Object=} oldProps Bag of previous values for changed properties
 * @param {boolean=} hasPaths True with `props` contains one or more paths
 * @param {*=} extraArgs Additional metadata to pass to effect function
 * @return {boolean} True if an effect ran for this property
 * @private
 */


function runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {
  if (effects) {
    let ran = false;
    let id = dedupeId++;

    for (let prop in props) {
      if (runEffectsForProperty(inst,
      /** @type {!Object} */
      effects, id, prop, props, oldProps, hasPaths, extraArgs)) {
        ran = true;
      }
    }

    return ran;
  }

  return false;
}
/**
 * Runs a list of effects for a given property.
 *
 * @param {!Polymer_PropertyEffects} inst The instance with effects to run
 * @param {!Object} effects Object map of property-to-Array of effects
 * @param {number} dedupeId Counter used for de-duping effects
 * @param {string} prop Name of changed property
 * @param {*} props Changed properties
 * @param {*} oldProps Old properties
 * @param {boolean=} hasPaths True with `props` contains one or more paths
 * @param {*=} extraArgs Additional metadata to pass to effect function
 * @return {boolean} True if an effect ran for this property
 * @private
 */


function runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {
  let ran = false;
  let rootProperty = hasPaths ? root(prop) : prop;
  let fxs = effects[rootProperty];

  if (fxs) {
    for (let i = 0, l = fxs.length, fx; i < l && (fx = fxs[i]); i++) {
      if ((!fx.info || fx.info.lastRun !== dedupeId) && (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {
        if (fx.info) {
          fx.info.lastRun = dedupeId;
        }

        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);
        ran = true;
      }
    }
  }

  return ran;
}
/**
 * Determines whether a property/path that has changed matches the trigger
 * criteria for an effect.  A trigger is a descriptor with the following
 * structure, which matches the descriptors returned from `parseArg`.
 * e.g. for `foo.bar.*`:
 * ```
 * trigger: {
 *   name: 'a.b',
 *   structured: true,
 *   wildcard: true
 * }
 * ```
 * If no trigger is given, the path is deemed to match.
 *
 * @param {string} path Path or property that changed
 * @param {?DataTrigger} trigger Descriptor
 * @return {boolean} Whether the path matched the trigger
 */


function pathMatchesTrigger(path, trigger) {
  if (trigger) {
    let triggerPath =
    /** @type {string} */
    trigger.name;
    return triggerPath == path || !!(trigger.structured && isAncestor(triggerPath, path)) || !!(trigger.wildcard && isDescendant(triggerPath, path));
  } else {
    return true;
  }
}
/**
 * Implements the "observer" effect.
 *
 * Calls the method with `info.methodName` on the instance, passing the
 * new and old values.
 *
 * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
 * @param {string} property Name of property
 * @param {Object} props Bag of current property changes
 * @param {Object} oldProps Bag of previous values for changed properties
 * @param {?} info Effect metadata
 * @return {void}
 * @private
 */


function runObserverEffect(inst, property, props, oldProps, info) {
  let fn = typeof info.method === "string" ? inst[info.method] : info.method;
  let changedProp = info.property;

  if (fn) {
    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);
  } else if (!info.dynamicFn) {
    console.warn('observer method `' + info.method + '` not defined');
  }
}
/**
 * Runs "notify" effects for a set of changed properties.
 *
 * This method differs from the generic `runEffects` method in that it
 * will dispatch path notification events in the case that the property
 * changed was a path and the root property for that path didn't have a
 * "notify" effect.  This is to maintain 1.0 behavior that did not require
 * `notify: true` to ensure object sub-property notifications were
 * sent.
 *
 * @param {!Polymer_PropertyEffects} inst The instance with effects to run
 * @param {Object} notifyProps Bag of properties to notify
 * @param {Object} props Bag of current property changes
 * @param {Object} oldProps Bag of previous values for changed properties
 * @param {boolean} hasPaths True with `props` contains one or more paths
 * @return {void}
 * @private
 */


function runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {
  // Notify
  let fxs = inst[TYPES.NOTIFY];
  let notified;
  let id = dedupeId++; // Try normal notify effects; if none, fall back to try path notification

  for (let prop in notifyProps) {
    if (notifyProps[prop]) {
      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {
        notified = true;
      } else if (hasPaths && notifyPath(inst, prop, props)) {
        notified = true;
      }
    }
  } // Flush host if we actually notified and host was batching
  // And the host has already initialized clients; this prevents
  // an issue with a host observing data changes before clients are ready.


  let host;

  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {
    host._invalidateProperties();
  }
}
/**
 * Dispatches {property}-changed events with path information in the detail
 * object to indicate a sub-path of the property was changed.
 *
 * @param {!Polymer_PropertyEffects} inst The element from which to fire the
 *     event
 * @param {string} path The path that was changed
 * @param {Object} props Bag of current property changes
 * @return {boolean} Returns true if the path was notified
 * @private
 */


function notifyPath(inst, path, props) {
  let rootProperty = root(path);

  if (rootProperty !== path) {
    let eventName = camelToDashCase(rootProperty) + '-changed';
    dispatchNotifyEvent(inst, eventName, props[path], path);
    return true;
  }

  return false;
}
/**
 * Dispatches {property}-changed events to indicate a property (or path)
 * changed.
 *
 * @param {!Polymer_PropertyEffects} inst The element from which to fire the
 *     event
 * @param {string} eventName The name of the event to send
 *     ('{property}-changed')
 * @param {*} value The value of the changed property
 * @param {string | null | undefined} path If a sub-path of this property
 *     changed, the path that changed (optional).
 * @return {void}
 * @private
 * @suppress {invalidCasts}
 */


function dispatchNotifyEvent(inst, eventName, value, path) {
  let detail = {
    value: value,
    queueProperty: true
  };

  if (path) {
    detail.path = path;
  }

  wrap(
  /** @type {!HTMLElement} */
  inst).dispatchEvent(new CustomEvent(eventName, {
    detail
  }));
}
/**
 * Implements the "notify" effect.
 *
 * Dispatches a non-bubbling event named `info.eventName` on the instance
 * with a detail object containing the new `value`.
 *
 * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
 * @param {string} property Name of property
 * @param {Object} props Bag of current property changes
 * @param {Object} oldProps Bag of previous values for changed properties
 * @param {?} info Effect metadata
 * @param {boolean} hasPaths True with `props` contains one or more paths
 * @return {void}
 * @private
 */


function runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {
  let rootProperty = hasPaths ? root(property) : property;
  let path = rootProperty != property ? property : null;
  let value = path ? get(inst, path) : inst.__data[property];

  if (path && value === undefined) {
    value = props[property]; // specifically for .splices
  }

  dispatchNotifyEvent(inst, info.eventName, value, path);
}
/**
 * Handler function for 2-way notification events. Receives context
 * information captured in the `addNotifyListener` closure from the
 * `__notifyListeners` metadata.
 *
 * Sets the value of the notified property to the host property or path.  If
 * the event contained path information, translate that path to the host
 * scope's name for that path first.
 *
 * @param {CustomEvent} event Notification event (e.g. '<property>-changed')
 * @param {!Polymer_PropertyEffects} inst Host element instance handling the
 *     notification event
 * @param {string} fromProp Child element property that was bound
 * @param {string} toPath Host property/path that was bound
 * @param {boolean} negate Whether the binding was negated
 * @return {void}
 * @private
 */


function handleNotification(event, inst, fromProp, toPath, negate) {
  let value;
  let detail =
  /** @type {Object} */
  event.detail;
  let fromPath = detail && detail.path;

  if (fromPath) {
    toPath = translate(fromProp, toPath, fromPath);
    value = detail && detail.value;
  } else {
    value = event.currentTarget[fromProp];
  }

  value = negate ? !value : value;

  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {
    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath)) && (!detail || !detail.queueProperty)) {
      inst._invalidateProperties();
    }
  }
}
/**
 * Implements the "reflect" effect.
 *
 * Sets the attribute named `info.attrName` to the given property value.
 *
 * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
 * @param {string} property Name of property
 * @param {Object} props Bag of current property changes
 * @param {Object} oldProps Bag of previous values for changed properties
 * @param {?} info Effect metadata
 * @return {void}
 * @private
 */


function runReflectEffect(inst, property, props, oldProps, info) {
  let value = inst.__data[property];

  if (sanitizeDOMValue) {
    value = sanitizeDOMValue(value, info.attrName, 'attribute',
    /** @type {Node} */
    inst);
  }

  inst._propertyToAttribute(property, info.attrName, value);
}
/**
 * Runs "computed" effects for a set of changed properties.
 *
 * This method differs from the generic `runEffects` method in that it
 * continues to run computed effects based on the output of each pass until
 * there are no more newly computed properties.  This ensures that all
 * properties that will be computed by the initial set of changes are
 * computed before other effects (binding propagation, observers, and notify)
 * run.
 *
 * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
 * @param {?Object} changedProps Bag of changed properties
 * @param {?Object} oldProps Bag of previous values for changed properties
 * @param {boolean} hasPaths True with `props` contains one or more paths
 * @return {void}
 * @private
 */


function runComputedEffects(inst, changedProps, oldProps, hasPaths) {
  let computeEffects = inst[TYPES.COMPUTE];

  if (computeEffects) {
    let inputProps = changedProps;

    while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {
      Object.assign(
      /** @type {!Object} */
      oldProps, inst.__dataOld);
      Object.assign(
      /** @type {!Object} */
      changedProps, inst.__dataPending);
      inputProps = inst.__dataPending;
      inst.__dataPending = null;
    }
  }
}
/**
 * Implements the "computed property" effect by running the method with the
 * values of the arguments specified in the `info` object and setting the
 * return value to the computed property specified.
 *
 * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
 * @param {string} property Name of property
 * @param {?Object} props Bag of current property changes
 * @param {?Object} oldProps Bag of previous values for changed properties
 * @param {?} info Effect metadata
 * @return {void}
 * @private
 */


function runComputedEffect(inst, property, props, oldProps, info) {
  let result = runMethodEffect(inst, property, props, oldProps, info);
  let computedProp = info.methodInfo;

  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {
    inst._setPendingProperty(computedProp, result, true);
  } else {
    inst[computedProp] = result;
  }
}
/**
 * Computes path changes based on path links set up using the `linkPaths`
 * API.
 *
 * @param {!Polymer_PropertyEffects} inst The instance whose props are changing
 * @param {string} path Path that has changed
 * @param {*} value Value of changed path
 * @return {void}
 * @private
 */


function computeLinkedPaths(inst, path, value) {
  let links = inst.__dataLinkedPaths;

  if (links) {
    let link;

    for (let a in links) {
      let b = links[a];

      if (isDescendant(a, path)) {
        link = translate(a, b, path);

        inst._setPendingPropertyOrPath(link, value, true, true);
      } else if (isDescendant(b, path)) {
        link = translate(b, a, path);

        inst._setPendingPropertyOrPath(link, value, true, true);
      }
    }
  }
} // -- bindings ----------------------------------------------

/**
 * Adds binding metadata to the current `nodeInfo`, and binding effects
 * for all part dependencies to `templateInfo`.
 *
 * @param {Function} constructor Class that `_parseTemplate` is currently
 *   running on
 * @param {TemplateInfo} templateInfo Template metadata for current template
 * @param {NodeInfo} nodeInfo Node metadata for current template node
 * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'
 * @param {string} target Target property name
 * @param {!Array<!BindingPart>} parts Array of binding part metadata
 * @param {string=} literal Literal text surrounding binding parts (specified
 *   only for 'property' bindings, since these must be initialized as part
 *   of boot-up)
 * @return {void}
 * @private
 */


function addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {
  // Create binding metadata and add to nodeInfo
  nodeInfo.bindings = nodeInfo.bindings || [];
  let
  /** Binding */
  binding = {
    kind,
    target,
    parts,
    literal,
    isCompound: parts.length !== 1
  };
  nodeInfo.bindings.push(binding); // Add listener info to binding metadata

  if (shouldAddListener(binding)) {
    let {
      event,
      negate
    } = binding.parts[0];
    binding.listenerEvent = event || camelToDashCase(target) + '-changed';
    binding.listenerNegate = negate;
  } // Add "propagate" property effects to templateInfo


  let index = templateInfo.nodeInfoList.length;

  for (let i = 0; i < binding.parts.length; i++) {
    let part = binding.parts[i];
    part.compoundIndex = i;
    addEffectForBindingPart(constructor, templateInfo, binding, part, index);
  }
}
/**
 * Adds property effects to the given `templateInfo` for the given binding
 * part.
 *
 * @param {Function} constructor Class that `_parseTemplate` is currently
 *   running on
 * @param {TemplateInfo} templateInfo Template metadata for current template
 * @param {!Binding} binding Binding metadata
 * @param {!BindingPart} part Binding part metadata
 * @param {number} index Index into `nodeInfoList` for this node
 * @return {void}
 */


function addEffectForBindingPart(constructor, templateInfo, binding, part, index) {
  if (!part.literal) {
    if (binding.kind === 'attribute' && binding.target[0] === '-') {
      console.warn('Cannot set attribute ' + binding.target + ' because "-" is not a valid attribute starting character');
    } else {
      let dependencies = part.dependencies;
      let info = {
        index,
        binding,
        part,
        evaluator: constructor
      };

      for (let j = 0; j < dependencies.length; j++) {
        let trigger = dependencies[j];

        if (typeof trigger == 'string') {
          trigger = parseArg(trigger);
          trigger.wildcard = true;
        }

        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {
          fn: runBindingEffect,
          info,
          trigger
        });
      }
    }
  }
}
/**
 * Implements the "binding" (property/path binding) effect.
 *
 * Note that binding syntax is overridable via `_parseBindings` and
 * `_evaluateBinding`.  This method will call `_evaluateBinding` for any
 * non-literal parts returned from `_parseBindings`.  However,
 * there is no support for _path_ bindings via custom binding parts,
 * as this is specific to Polymer's path binding syntax.
 *
 * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
 * @param {string} path Name of property
 * @param {Object} props Bag of current property changes
 * @param {Object} oldProps Bag of previous values for changed properties
 * @param {?} info Effect metadata
 * @param {boolean} hasPaths True with `props` contains one or more paths
 * @param {Array} nodeList List of nodes associated with `nodeInfoList` template
 *   metadata
 * @return {void}
 * @private
 */


function runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {
  let node = nodeList[info.index];
  let binding = info.binding;
  let part = info.part; // Subpath notification: transform path and set to client
  // e.g.: foo="{{obj.sub}}", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop

  if (hasPaths && part.source && path.length > part.source.length && binding.kind == 'property' && !binding.isCompound && node.__isPropertyEffectsClient && node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {
    let value = props[path];
    path = translate(part.source, binding.target, path);

    if (node._setPendingPropertyOrPath(path, value, false, true)) {
      inst._enqueueClient(node);
    }
  } else {
    let value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths); // Propagate value to child


    applyBindingValue(inst, node, binding, part, value);
  }
}
/**
 * Sets the value for an "binding" (binding) effect to a node,
 * either as a property or attribute.
 *
 * @param {!Polymer_PropertyEffects} inst The instance owning the binding effect
 * @param {Node} node Target node for binding
 * @param {!Binding} binding Binding metadata
 * @param {!BindingPart} part Binding part metadata
 * @param {*} value Value to set
 * @return {void}
 * @private
 */


function applyBindingValue(inst, node, binding, part, value) {
  value = computeBindingValue(node, value, binding, part);

  if (sanitizeDOMValue) {
    value = sanitizeDOMValue(value, binding.target, binding.kind, node);
  }

  if (binding.kind == 'attribute') {
    // Attribute binding
    inst._valueToNodeAttribute(
    /** @type {Element} */
    node, value, binding.target);
  } else {
    // Property binding
    let prop = binding.target;

    if (node.__isPropertyEffectsClient && node.__dataHasAccessor && node.__dataHasAccessor[prop]) {
      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {
        if (node._setPendingProperty(prop, value)) {
          inst._enqueueClient(node);
        }
      }
    } else {
      inst._setUnmanagedPropertyToNode(node, prop, value);
    }
  }
}
/**
 * Transforms an "binding" effect value based on compound & negation
 * effect metadata, as well as handling for special-case properties
 *
 * @param {Node} node Node the value will be set to
 * @param {*} value Value to set
 * @param {!Binding} binding Binding metadata
 * @param {!BindingPart} part Binding part metadata
 * @return {*} Transformed value to set
 * @private
 */


function computeBindingValue(node, value, binding, part) {
  if (binding.isCompound) {
    let storage = node.__dataCompoundStorage[binding.target];
    storage[part.compoundIndex] = value;
    value = storage.join('');
  }

  if (binding.kind !== 'attribute') {
    // Some browsers serialize `undefined` to `"undefined"`
    if (binding.target === 'textContent' || binding.target === 'value' && (node.localName === 'input' || node.localName === 'textarea')) {
      value = value == undefined ? '' : value;
    }
  }

  return value;
}
/**
 * Returns true if a binding's metadata meets all the requirements to allow
 * 2-way binding, and therefore a `<property>-changed` event listener should be
 * added:
 * - used curly braces
 * - is a property (not attribute) binding
 * - is not a textContent binding
 * - is not compound
 *
 * @param {!Binding} binding Binding metadata
 * @return {boolean} True if 2-way listener should be added
 * @private
 */


function shouldAddListener(binding) {
  return Boolean(binding.target) && binding.kind != 'attribute' && binding.kind != 'text' && !binding.isCompound && binding.parts[0].mode === '{';
}
/**
 * Setup compound binding storage structures, notify listeners, and dataHost
 * references onto the bound nodeList.
 *
 * @param {!Polymer_PropertyEffects} inst Instance that bas been previously
 *     bound
 * @param {TemplateInfo} templateInfo Template metadata
 * @return {void}
 * @private
 */


function setupBindings(inst, templateInfo) {
  // Setup compound storage, dataHost, and notify listeners
  let {
    nodeList,
    nodeInfoList
  } = templateInfo;

  if (nodeInfoList.length) {
    for (let i = 0; i < nodeInfoList.length; i++) {
      let info = nodeInfoList[i];
      let node = nodeList[i];
      let bindings = info.bindings;

      if (bindings) {
        for (let i = 0; i < bindings.length; i++) {
          let binding = bindings[i];
          setupCompoundStorage(node, binding);
          addNotifyListener(node, inst, binding);
        }
      }

      node.__dataHost = inst;
    }
  }
}
/**
 * Initializes `__dataCompoundStorage` local storage on a bound node with
 * initial literal data for compound bindings, and sets the joined
 * literal parts to the bound property.
 *
 * When changes to compound parts occur, they are first set into the compound
 * storage array for that property, and then the array is joined to result in
 * the final value set to the property/attribute.
 *
 * @param {Node} node Bound node to initialize
 * @param {Binding} binding Binding metadata
 * @return {void}
 * @private
 */


function setupCompoundStorage(node, binding) {
  if (binding.isCompound) {
    // Create compound storage map
    let storage = node.__dataCompoundStorage || (node.__dataCompoundStorage = {});
    let parts = binding.parts; // Copy literals from parts into storage for this binding

    let literals = new Array(parts.length);

    for (let j = 0; j < parts.length; j++) {
      literals[j] = parts[j].literal;
    }

    let target = binding.target;
    storage[target] = literals; // Configure properties with their literal parts

    if (binding.literal && binding.kind == 'property') {
      // Note, className needs style scoping so this needs wrapping.
      // We may also want to consider doing this for `textContent` and
      // `innerHTML`.
      if (target === 'className') {
        node = wrap(node);
      }

      node[target] = binding.literal;
    }
  }
}
/**
 * Adds a 2-way binding notification event listener to the node specified
 *
 * @param {Object} node Child element to add listener to
 * @param {!Polymer_PropertyEffects} inst Host element instance to handle
 *     notification event
 * @param {Binding} binding Binding metadata
 * @return {void}
 * @private
 */


function addNotifyListener(node, inst, binding) {
  if (binding.listenerEvent) {
    let part = binding.parts[0];
    node.addEventListener(binding.listenerEvent, function (e) {
      handleNotification(e, inst, binding.target, part.source, part.negate);
    });
  }
} // -- for method-based effects (complexObserver & computed) --------------

/**
 * Adds property effects for each argument in the method signature (and
 * optionally, for the method name if `dynamic` is true) that calls the
 * provided effect function.
 *
 * @param {Element | Object} model Prototype or instance
 * @param {!MethodSignature} sig Method signature metadata
 * @param {string} type Type of property effect to add
 * @param {Function} effectFn Function to run when arguments change
 * @param {*=} methodInfo Effect-specific information to be included in
 *   method effect metadata
 * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether
 *   method names should be included as a dependency to the effect. Note,
 *   defaults to true if the signature is static (sig.static is true).
 * @return {void}
 * @private
 */


function createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {
  dynamicFn = sig.static || dynamicFn && (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]);
  let info = {
    methodName: sig.methodName,
    args: sig.args,
    methodInfo,
    dynamicFn
  };

  for (let i = 0, arg; i < sig.args.length && (arg = sig.args[i]); i++) {
    if (!arg.literal) {
      model._addPropertyEffect(arg.rootProperty, type, {
        fn: effectFn,
        info: info,
        trigger: arg
      });
    }
  }

  if (dynamicFn) {
    model._addPropertyEffect(sig.methodName, type, {
      fn: effectFn,
      info: info
    });
  }
}
/**
 * Calls a method with arguments marshaled from properties on the instance
 * based on the method signature contained in the effect metadata.
 *
 * Multi-property observers, computed properties, and inline computing
 * functions call this function to invoke the method, then use the return
 * value accordingly.
 *
 * @param {!Polymer_PropertyEffects} inst The instance the effect will be run on
 * @param {string} property Name of property
 * @param {Object} props Bag of current property changes
 * @param {Object} oldProps Bag of previous values for changed properties
 * @param {?} info Effect metadata
 * @return {*} Returns the return value from the method invocation
 * @private
 */


function runMethodEffect(inst, property, props, oldProps, info) {
  // Instances can optionally have a _methodHost which allows redirecting where
  // to find methods. Currently used by `templatize`.
  let context = inst._methodHost || inst;
  let fn = context[info.methodName];

  if (fn) {
    let args = inst._marshalArgs(info.args, property, props);

    return fn.apply(context, args);
  } else if (!info.dynamicFn) {
    console.warn('method `' + info.methodName + '` not defined');
  }
}

const emptyArray = []; // Regular expressions used for binding

const IDENT = '(?:' + '[a-zA-Z_$][\\w.:$\\-*]*' + ')';
const NUMBER = '(?:' + '[-+]?[0-9]*\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';
const SQUOTE_STRING = '(?:' + '\'(?:[^\'\\\\]|\\\\.)*\'' + ')';
const DQUOTE_STRING = '(?:' + '"(?:[^"\\\\]|\\\\.)*"' + ')';
const STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';
const ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' + STRING + ')\\s*' + ')';
const ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\s*' + ARGUMENT + ')*' + ')';
const ARGUMENT_LIST = '(?:' + '\\(\\s*' + '(?:' + ARGUMENTS + '?' + ')' + '\\)\\s*' + ')';
const BINDING = '(' + IDENT + '\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3

const OPEN_BRACKET = '(\\[\\[|{{)' + '\\s*';
const CLOSE_BRACKET = '(?:]]|}})';
const NEGATE = '(?:(!)\\s*)?'; // Group 2

const EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;
const bindingRegex = new RegExp(EXPRESSION, "g");
/**
 * Create a string from binding parts of all the literal parts
 *
 * @param {!Array<BindingPart>} parts All parts to stringify
 * @return {string} String made from the literal parts
 */

function literalFromParts(parts) {
  let s = '';

  for (let i = 0; i < parts.length; i++) {
    let literal = parts[i].literal;
    s += literal || '';
  }

  return s;
}
/**
 * Parses an expression string for a method signature, and returns a metadata
 * describing the method in terms of `methodName`, `static` (whether all the
 * arguments are literals), and an array of `args`
 *
 * @param {string} expression The expression to parse
 * @return {?MethodSignature} The method metadata object if a method expression was
 *   found, otherwise `undefined`
 * @private
 */


function parseMethod(expression) {
  // tries to match valid javascript property names
  let m = expression.match(/([^\s]+?)\(([\s\S]*)\)/);

  if (m) {
    let methodName = m[1];
    let sig = {
      methodName,
      static: true,
      args: emptyArray
    };

    if (m[2].trim()) {
      // replace escaped commas with comma entity, split on un-escaped commas
      let args = m[2].replace(/\\,/g, '&comma;').split(',');
      return parseArgs(args, sig);
    } else {
      return sig;
    }
  }

  return null;
}
/**
 * Parses an array of arguments and sets the `args` property of the supplied
 * signature metadata object. Sets the `static` property to false if any
 * argument is a non-literal.
 *
 * @param {!Array<string>} argList Array of argument names
 * @param {!MethodSignature} sig Method signature metadata object
 * @return {!MethodSignature} The updated signature metadata object
 * @private
 */


function parseArgs(argList, sig) {
  sig.args = argList.map(function (rawArg) {
    let arg = parseArg(rawArg);

    if (!arg.literal) {
      sig.static = false;
    }

    return arg;
  }, this);
  return sig;
}
/**
 * Parses an individual argument, and returns an argument metadata object
 * with the following fields:
 *
 *   {
 *     value: 'prop',        // property/path or literal value
 *     literal: false,       // whether argument is a literal
 *     structured: false,    // whether the property is a path
 *     rootProperty: 'prop', // the root property of the path
 *     wildcard: false       // whether the argument was a wildcard '.*' path
 *   }
 *
 * @param {string} rawArg The string value of the argument
 * @return {!MethodArg} Argument metadata object
 * @private
 */


function parseArg(rawArg) {
  // clean up whitespace
  let arg = rawArg.trim() // replace comma entity with comma
  .replace(/&comma;/g, ',') // repair extra escape sequences; note only commas strictly need
  // escaping, but we allow any other char to be escaped since its
  // likely users will do this
  .replace(/\\(.)/g, '\$1'); // basic argument descriptor

  let a = {
    name: arg,
    value: '',
    literal: false
  }; // detect literal value (must be String or Number)

  let fc = arg[0];

  if (fc === '-') {
    fc = arg[1];
  }

  if (fc >= '0' && fc <= '9') {
    fc = '#';
  }

  switch (fc) {
    case "'":
    case '"':
      a.value = arg.slice(1, -1);
      a.literal = true;
      break;

    case '#':
      a.value = Number(arg);
      a.literal = true;
      break;
  } // if not literal, look for structured path


  if (!a.literal) {
    a.rootProperty = root(arg); // detect structured path (has dots)

    a.structured = isPath(arg);

    if (a.structured) {
      a.wildcard = arg.slice(-2) == '.*';

      if (a.wildcard) {
        a.name = arg.slice(0, -2);
      }
    }
  }

  return a;
}

function getArgValue(data, props, path) {
  let value = get(data, path); // when data is not stored e.g. `splices`, get the value from changedProps
  // TODO(kschaaf): Note, this can cause a rare issue where the wildcard
  // info.value could pull a stale value out of changedProps during a reentrant
  // change that sets the value back to undefined.
  // https://github.com/Polymer/polymer/issues/5479

  if (value === undefined) {
    value = props[path];
  }

  return value;
} // data api

/**
 * Sends array splice notifications (`.splices` and `.length`)
 *
 * Note: this implementation only accepts normalized paths
 *
 * @param {!Polymer_PropertyEffects} inst Instance to send notifications to
 * @param {Array} array The array the mutations occurred on
 * @param {string} path The path to the array that was mutated
 * @param {Array} splices Array of splice records
 * @return {void}
 * @private
 */


function notifySplices(inst, array, path, splices) {
  inst.notifyPath(path + '.splices', {
    indexSplices: splices
  });
  inst.notifyPath(path + '.length', array.length);
}
/**
 * Creates a splice record and sends an array splice notification for
 * the described mutation
 *
 * Note: this implementation only accepts normalized paths
 *
 * @param {!Polymer_PropertyEffects} inst Instance to send notifications to
 * @param {Array} array The array the mutations occurred on
 * @param {string} path The path to the array that was mutated
 * @param {number} index Index at which the array mutation occurred
 * @param {number} addedCount Number of added items
 * @param {Array} removed Array of removed items
 * @return {void}
 * @private
 */


function notifySplice(inst, array, path, index, addedCount, removed) {
  notifySplices(inst, array, path, [{
    index: index,
    addedCount: addedCount,
    removed: removed,
    object: array,
    type: 'splice'
  }]);
}
/**
 * Returns an upper-cased version of the string.
 *
 * @param {string} name String to uppercase
 * @return {string} Uppercased string
 * @private
 */


function upper(name) {
  return name[0].toUpperCase() + name.substring(1);
}
/**
 * Element class mixin that provides meta-programming for Polymer's template
 * binding and data observation (collectively, "property effects") system.
 *
 * This mixin uses provides the following key static methods for adding
 * property effects to an element class:
 * - `addPropertyEffect`
 * - `createPropertyObserver`
 * - `createMethodObserver`
 * - `createNotifyingProperty`
 * - `createReadOnlyProperty`
 * - `createReflectedProperty`
 * - `createComputedProperty`
 * - `bindTemplate`
 *
 * Each method creates one or more property accessors, along with metadata
 * used by this mixin's implementation of `_propertiesChanged` to perform
 * the property effects.
 *
 * Underscored versions of the above methods also exist on the element
 * prototype for adding property effects on instances at runtime.
 *
 * Note that this mixin overrides several `PropertyAccessors` methods, in
 * many cases to maintain guarantees provided by the Polymer 1.x features;
 * notably it changes property accessors to be synchronous by default
 * whereas the default when using `PropertyAccessors` standalone is to be
 * async by default.
 *
 * @mixinFunction
 * polymer
 * @appliesMixin TemplateStamp
 * @appliesMixin PropertyAccessors
 * @summary Element class mixin that provides meta-programming for Polymer's
 * template binding and data observation system.
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */


export const PropertyEffects = dedupingMixin(superClass => {
  /**
   * @constructor
   * @implements {Polymer_PropertyAccessors}
   * @implements {Polymer_TemplateStamp}
   * @unrestricted
   * @private
   */
  const propertyEffectsBase = TemplateStamp(PropertyAccessors(superClass));
  /**
   * polymer
   * @mixinClass
   * @implements {Polymer_PropertyEffects}
   * @extends {propertyEffectsBase}
   * @unrestricted
   */

  class PropertyEffects extends propertyEffectsBase {
    constructor() {
      super();
      /** @type {boolean} */
      // Used to identify users of this mixin, ala instanceof

      this.__isPropertyEffectsClient = true;
      /** @type {number} */
      // NOTE: used to track re-entrant calls to `_flushProperties`
      // path changes dirty check against `__dataTemp` only during one "turn"
      // and are cleared when `__dataCounter` returns to 0.

      this.__dataCounter = 0;
      /** @type {boolean} */

      this.__dataClientsReady;
      /** @type {Array} */

      this.__dataPendingClients;
      /** @type {Object} */

      this.__dataToNotify;
      /** @type {Object} */

      this.__dataLinkedPaths;
      /** @type {boolean} */

      this.__dataHasPaths;
      /** @type {Object} */

      this.__dataCompoundStorage;
      /** @type {Polymer_PropertyEffects} */

      this.__dataHost;
      /** @type {!Object} */

      this.__dataTemp;
      /** @type {boolean} */

      this.__dataClientsInitialized;
      /** @type {!Object} */

      this.__data;
      /** @type {!Object|null} */

      this.__dataPending;
      /** @type {!Object} */

      this.__dataOld;
      /** @type {Object} */

      this.__computeEffects;
      /** @type {Object} */

      this.__reflectEffects;
      /** @type {Object} */

      this.__notifyEffects;
      /** @type {Object} */

      this.__propagateEffects;
      /** @type {Object} */

      this.__observeEffects;
      /** @type {Object} */

      this.__readOnly;
      /** @type {!TemplateInfo} */

      this.__templateInfo;
    }
    /**
     * @return {!Object<string, string>} Effect prototype property name map.
     */


    get PROPERTY_EFFECT_TYPES() {
      return TYPES;
    }
    /**
     * @override
     * @return {void}
     */


    _initializeProperties() {
      super._initializeProperties();

      hostStack.registerHost(this);
      this.__dataClientsReady = false;
      this.__dataPendingClients = null;
      this.__dataToNotify = null;
      this.__dataLinkedPaths = null;
      this.__dataHasPaths = false; // May be set on instance prior to upgrade

      this.__dataCompoundStorage = this.__dataCompoundStorage || null;
      this.__dataHost = this.__dataHost || null;
      this.__dataTemp = {};
      this.__dataClientsInitialized = false;
    }
    /**
     * Overrides `PropertyAccessors` implementation to provide a
     * more efficient implementation of initializing properties from
     * the prototype on the instance.
     *
     * @override
     * @param {Object} props Properties to initialize on the prototype
     * @return {void}
     */


    _initializeProtoProperties(props) {
      this.__data = Object.create(props);
      this.__dataPending = Object.create(props);
      this.__dataOld = {};
    }
    /**
     * Overrides `PropertyAccessors` implementation to avoid setting
     * `_setProperty`'s `shouldNotify: true`.
     *
     * @override
     * @param {Object} props Properties to initialize on the instance
     * @return {void}
     */


    _initializeInstanceProperties(props) {
      let readOnly = this[TYPES.READ_ONLY];

      for (let prop in props) {
        if (!readOnly || !readOnly[prop]) {
          this.__dataPending = this.__dataPending || {};
          this.__dataOld = this.__dataOld || {};
          this.__data[prop] = this.__dataPending[prop] = props[prop];
        }
      }
    } // Prototype setup ----------------------------------------

    /**
     * Equivalent to static `addPropertyEffect` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * @override
     * @param {string} property Property that should trigger the effect
     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES
     * @param {Object=} effect Effect metadata object
     * @return {void}
     * @protected
     */


    _addPropertyEffect(property, type, effect) {
      this._createPropertyAccessor(property, type == TYPES.READ_ONLY); // effects are accumulated into arrays per property based on type


      let effects = ensureOwnEffectMap(this, type)[property];

      if (!effects) {
        effects = this[type][property] = [];
      }

      effects.push(effect);
    }
    /**
     * Removes the given property effect.
     *
     * @override
     * @param {string} property Property the effect was associated with
     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES
     * @param {Object=} effect Effect metadata object to remove
     * @return {void}
     */


    _removePropertyEffect(property, type, effect) {
      let effects = ensureOwnEffectMap(this, type)[property];
      let idx = effects.indexOf(effect);

      if (idx >= 0) {
        effects.splice(idx, 1);
      }
    }
    /**
     * Returns whether the current prototype/instance has a property effect
     * of a certain type.
     *
     * @override
     * @param {string} property Property name
     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES
     * @return {boolean} True if the prototype/instance has an effect of this
     *     type
     * @protected
     */


    _hasPropertyEffect(property, type) {
      let effects = this[type];
      return Boolean(effects && effects[property]);
    }
    /**
     * Returns whether the current prototype/instance has a "read only"
     * accessor for the given property.
     *
     * @override
     * @param {string} property Property name
     * @return {boolean} True if the prototype/instance has an effect of this
     *     type
     * @protected
     */


    _hasReadOnlyEffect(property) {
      return this._hasPropertyEffect(property, TYPES.READ_ONLY);
    }
    /**
     * Returns whether the current prototype/instance has a "notify"
     * property effect for the given property.
     *
     * @override
     * @param {string} property Property name
     * @return {boolean} True if the prototype/instance has an effect of this
     *     type
     * @protected
     */


    _hasNotifyEffect(property) {
      return this._hasPropertyEffect(property, TYPES.NOTIFY);
    }
    /**
     * Returns whether the current prototype/instance has a "reflect to
     * attribute" property effect for the given property.
     *
     * @override
     * @param {string} property Property name
     * @return {boolean} True if the prototype/instance has an effect of this
     *     type
     * @protected
     */


    _hasReflectEffect(property) {
      return this._hasPropertyEffect(property, TYPES.REFLECT);
    }
    /**
     * Returns whether the current prototype/instance has a "computed"
     * property effect for the given property.
     *
     * @override
     * @param {string} property Property name
     * @return {boolean} True if the prototype/instance has an effect of this
     *     type
     * @protected
     */


    _hasComputedEffect(property) {
      return this._hasPropertyEffect(property, TYPES.COMPUTE);
    } // Runtime ----------------------------------------

    /**
     * Sets a pending property or path.  If the root property of the path in
     * question had no accessor, the path is set, otherwise it is enqueued
     * via `_setPendingProperty`.
     *
     * This function isolates relatively expensive functionality necessary
     * for the public API (`set`, `setProperties`, `notifyPath`, and property
     * change listeners via {{...}} bindings), such that it is only done
     * when paths enter the system, and not at every propagation step.  It
     * also sets a `__dataHasPaths` flag on the instance which is used to
     * fast-path slower path-matching code in the property effects host paths.
     *
     * `path` can be a path string or array of path parts as accepted by the
     * public API.
     *
     * @override
     * @param {string | !Array<number|string>} path Path to set
     * @param {*} value Value to set
     * @param {boolean=} shouldNotify Set to true if this change should
     *  cause a property notification event dispatch
     * @param {boolean=} isPathNotification If the path being set is a path
     *   notification of an already changed value, as opposed to a request
     *   to set and notify the change.  In the latter `false` case, a dirty
     *   check is performed and then the value is set to the path before
     *   enqueuing the pending property change.
     * @return {boolean} Returns true if the property/path was enqueued in
     *   the pending changes bag.
     * @protected
     */


    _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {
      if (isPathNotification || root(Array.isArray(path) ? path[0] : path) !== path) {
        // Dirty check changes being set to a path against the actual object,
        // since this is the entry point for paths into the system; from here
        // the only dirty checks are against the `__dataTemp` cache to prevent
        // duplicate work in the same turn only. Note, if this was a notification
        // of a change already set to a path (isPathNotification: true),
        // we always let the change through and skip the `set` since it was
        // already dirty checked at the point of entry and the underlying
        // object has already been updated
        if (!isPathNotification) {
          let old = get(this, path);
          path =
          /** @type {string} */
          set(this, path, value); // Use property-accessor's simpler dirty check

          if (!path || !super._shouldPropertyChange(path, value, old)) {
            return false;
          }
        }

        this.__dataHasPaths = true;

        if (this._setPendingProperty(
        /**@type{string}*/
        path, value, shouldNotify)) {
          computeLinkedPaths(this,
          /**@type{string}*/
          path, value);
          return true;
        }
      } else {
        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {
          return this._setPendingProperty(
          /**@type{string}*/
          path, value, shouldNotify);
        } else {
          this[path] = value;
        }
      }

      return false;
    }
    /**
     * Applies a value to a non-Polymer element/node's property.
     *
     * The implementation makes a best-effort at binding interop:
     * Some native element properties have side-effects when
     * re-setting the same value (e.g. setting `<input>.value` resets the
     * cursor position), so we do a dirty-check before setting the value.
     * However, for better interop with non-Polymer custom elements that
     * accept objects, we explicitly re-set object changes coming from the
     * Polymer world (which may include deep object changes without the
     * top reference changing), erring on the side of providing more
     * information.
     *
     * Users may override this method to provide alternate approaches.
     *
     * @override
     * @param {!Node} node The node to set a property on
     * @param {string} prop The property to set
     * @param {*} value The value to set
     * @return {void}
     * @protected
     */


    _setUnmanagedPropertyToNode(node, prop, value) {
      // It is a judgment call that resetting primitives is
      // "bad" and resettings objects is also "good"; alternatively we could
      // implement a whitelist of tag & property values that should never
      // be reset (e.g. <input>.value && <select>.value)
      if (value !== node[prop] || typeof value == 'object') {
        // Note, className needs style scoping so this needs wrapping.
        if (prop === 'className') {
          node =
          /** @type {!Node} */
          wrap(node);
        }

        node[prop] = value;
      }
    }
    /**
     * Overrides the `PropertiesChanged` implementation to introduce special
     * dirty check logic depending on the property & value being set:
     *
     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})
     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`
     * 2. Object set to simple property (e.g. 'prop': {...})
     *    Stored in `__dataTemp` and `__data`, dirty checked against
     *    `__dataTemp` by default implementation of `_shouldPropertyChange`
     * 3. Primitive value set to simple property (e.g. 'prop': 42)
     *    Stored in `__data`, dirty checked against `__data`
     *
     * The dirty-check is important to prevent cycles due to two-way
     * notification, but paths and objects are only dirty checked against any
     * previous value set during this turn via a "temporary cache" that is
     * cleared when the last `_propertiesChanged` exits. This is so:
     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated
     *    due to array mutations like shift/unshift/splice; this is fine
     *    since path changes are dirty-checked at user entry points like `set`
     * b. dirty-checking for objects only lasts one turn to allow the user
     *    to mutate the object in-place and re-set it with the same identity
     *    and have all sub-properties re-propagated in a subsequent turn.
     *
     * The temp cache is not necessarily sufficient to prevent invalid array
     * paths, since a splice can happen during the same turn (with pathological
     * user code); we could introduce a "fixup" for temporarily cached array
     * paths if needed: https://github.com/Polymer/polymer/issues/4227
     *
     * @override
     * @param {string} property Name of the property
     * @param {*} value Value to set
     * @param {boolean=} shouldNotify True if property should fire notification
     *   event (applies only for `notify: true` properties)
     * @return {boolean} Returns true if the property changed
     */


    _setPendingProperty(property, value, shouldNotify) {
      let propIsPath = this.__dataHasPaths && isPath(property);
      let prevProps = propIsPath ? this.__dataTemp : this.__data;

      if (this._shouldPropertyChange(property, value, prevProps[property])) {
        if (!this.__dataPending) {
          this.__dataPending = {};
          this.__dataOld = {};
        } // Ensure old is captured from the last turn


        if (!(property in this.__dataOld)) {
          this.__dataOld[property] = this.__data[property];
        } // Paths are stored in temporary cache (cleared at end of turn),
        // which is used for dirty-checking, all others stored in __data


        if (propIsPath) {
          this.__dataTemp[property] = value;
        } else {
          this.__data[property] = value;
        } // All changes go into pending property bag, passed to _propertiesChanged


        this.__dataPending[property] = value; // Track properties that should notify separately

        if (propIsPath || this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property]) {
          this.__dataToNotify = this.__dataToNotify || {};
          this.__dataToNotify[property] = shouldNotify;
        }

        return true;
      }

      return false;
    }
    /**
     * Overrides base implementation to ensure all accessors set `shouldNotify`
     * to true, for per-property notification tracking.
     *
     * @override
     * @param {string} property Name of the property
     * @param {*} value Value to set
     * @return {void}
     */


    _setProperty(property, value) {
      if (this._setPendingProperty(property, value, true)) {
        this._invalidateProperties();
      }
    }
    /**
     * Overrides `PropertyAccessor`'s default async queuing of
     * `_propertiesChanged`: if `__dataReady` is false (has not yet been
     * manually flushed), the function no-ops; otherwise flushes
     * `_propertiesChanged` synchronously.
     *
     * @override
     * @return {void}
     */


    _invalidateProperties() {
      if (this.__dataReady) {
        this._flushProperties();
      }
    }
    /**
     * Enqueues the given client on a list of pending clients, whose
     * pending property changes can later be flushed via a call to
     * `_flushClients`.
     *
     * @override
     * @param {Object} client PropertyEffects client to enqueue
     * @return {void}
     * @protected
     */


    _enqueueClient(client) {
      this.__dataPendingClients = this.__dataPendingClients || [];

      if (client !== this) {
        this.__dataPendingClients.push(client);
      }
    }
    /**
     * Overrides superclass implementation.
     *
     * @override
     * @return {void}
     * @protected
     */


    _flushProperties() {
      this.__dataCounter++;

      super._flushProperties();

      this.__dataCounter--;
    }
    /**
     * Flushes any clients previously enqueued via `_enqueueClient`, causing
     * their `_flushProperties` method to run.
     *
     * @override
     * @return {void}
     * @protected
     */


    _flushClients() {
      if (!this.__dataClientsReady) {
        this.__dataClientsReady = true;

        this._readyClients(); // Override point where accessors are turned on; importantly,
        // this is after clients have fully readied, providing a guarantee
        // that any property effects occur only after all clients are ready.


        this.__dataReady = true;
      } else {
        this.__enableOrFlushClients();
      }
    } // NOTE: We ensure clients either enable or flush as appropriate. This
    // handles two corner cases:
    // (1) clients flush properly when connected/enabled before the host
    // enables; e.g.
    //   (a) Templatize stamps with no properties and does not flush and
    //   (b) the instance is inserted into dom and
    //   (c) then the instance flushes.
    // (2) clients enable properly when not connected/enabled when the host
    // flushes; e.g.
    //   (a) a template is runtime stamped and not yet connected/enabled
    //   (b) a host sets a property, causing stamped dom to flush
    //   (c) the stamped dom enables.


    __enableOrFlushClients() {
      let clients = this.__dataPendingClients;

      if (clients) {
        this.__dataPendingClients = null;

        for (let i = 0; i < clients.length; i++) {
          let client = clients[i];

          if (!client.__dataEnabled) {
            client._enableProperties();
          } else if (client.__dataPending) {
            client._flushProperties();
          }
        }
      }
    }
    /**
     * Perform any initial setup on client dom. Called before the first
     * `_flushProperties` call on client dom and before any element
     * observers are called.
     *
     * @override
     * @return {void}
     * @protected
     */


    _readyClients() {
      this.__enableOrFlushClients();
    }
    /**
     * Sets a bag of property changes to this instance, and
     * synchronously processes all effects of the properties as a batch.
     *
     * Property names must be simple properties, not paths.  Batched
     * path propagation is not supported.
     *
     * @override
     * @param {Object} props Bag of one or more key-value pairs whose key is
     *   a property and value is the new value to set for that property.
     * @param {boolean=} setReadOnly When true, any private values set in
     *   `props` will be set. By default, `setProperties` will not set
     *   `readOnly: true` root properties.
     * @return {void}
     * @public
     */


    setProperties(props, setReadOnly) {
      for (let path in props) {
        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {
          //TODO(kschaaf): explicitly disallow paths in setProperty?
          // wildcard observers currently only pass the first changed path
          // in the `info` object, and you could do some odd things batching
          // paths, e.g. {'foo.bar': {...}, 'foo': null}
          this._setPendingPropertyOrPath(path, props[path], true);
        }
      }

      this._invalidateProperties();
    }
    /**
     * Overrides `PropertyAccessors` so that property accessor
     * side effects are not enabled until after client dom is fully ready.
     * Also calls `_flushClients` callback to ensure client dom is enabled
     * that was not enabled as a result of flushing properties.
     *
     * @override
     * @return {void}
     */


    ready() {
      // It is important that `super.ready()` is not called here as it
      // immediately turns on accessors. Instead, we wait until `readyClients`
      // to enable accessors to provide a guarantee that clients are ready
      // before processing any accessors side effects.
      this._flushProperties(); // If no data was pending, `_flushProperties` will not `flushClients`
      // so ensure this is done.


      if (!this.__dataClientsReady) {
        this._flushClients();
      } // Before ready, client notifications do not trigger _flushProperties.
      // Therefore a flush is necessary here if data has been set.


      if (this.__dataPending) {
        this._flushProperties();
      }
    }
    /**
     * Implements `PropertyAccessors`'s properties changed callback.
     *
     * Runs each class of effects for the batch of changed properties in
     * a specific order (compute, propagate, reflect, observe, notify).
     *
     * @override
     * @param {!Object} currentProps Bag of all current accessor values
     * @param {?Object} changedProps Bag of properties changed since the last
     *   call to `_propertiesChanged`
     * @param {?Object} oldProps Bag of previous values for each property
     *   in `changedProps`
     * @return {void}
     */


    _propertiesChanged(currentProps, changedProps, oldProps) {
      // ----------------------------
      // let c = Object.getOwnPropertyNames(changedProps || {});
      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);
      // if (window.debug) { debugger; }
      // ----------------------------
      let hasPaths = this.__dataHasPaths;
      this.__dataHasPaths = false; // Compute properties

      runComputedEffects(this, changedProps, oldProps, hasPaths); // Clear notify properties prior to possible reentry (propagate, observe),
      // but after computing effects have a chance to add to them

      let notifyProps = this.__dataToNotify;
      this.__dataToNotify = null; // Propagate properties to clients

      this._propagatePropertyChanges(changedProps, oldProps, hasPaths); // Flush clients


      this._flushClients(); // Reflect properties


      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths); // Observe properties

      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths); // Notify properties to host

      if (notifyProps) {
        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);
      } // Clear temporary cache at end of turn


      if (this.__dataCounter == 1) {
        this.__dataTemp = {};
      } // ----------------------------
      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);
      // ----------------------------

    }
    /**
     * Called to propagate any property changes to stamped template nodes
     * managed by this element.
     *
     * @override
     * @param {Object} changedProps Bag of changed properties
     * @param {Object} oldProps Bag of previous values for changed properties
     * @param {boolean} hasPaths True with `props` contains one or more paths
     * @return {void}
     * @protected
     */


    _propagatePropertyChanges(changedProps, oldProps, hasPaths) {
      if (this[TYPES.PROPAGATE]) {
        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);
      }

      let templateInfo = this.__templateInfo;

      while (templateInfo) {
        runEffects(this, templateInfo.propertyEffects, changedProps, oldProps, hasPaths, templateInfo.nodeList);
        templateInfo = templateInfo.nextTemplateInfo;
      }
    }
    /**
     * Aliases one data path as another, such that path notifications from one
     * are routed to the other.
     *
     * @override
     * @param {string | !Array<string|number>} to Target path to link.
     * @param {string | !Array<string|number>} from Source path to link.
     * @return {void}
     * @public
     */


    linkPaths(to, from) {
      to = normalize(to);
      from = normalize(from);
      this.__dataLinkedPaths = this.__dataLinkedPaths || {};
      this.__dataLinkedPaths[to] = from;
    }
    /**
     * Removes a data path alias previously established with `_linkPaths`.
     *
     * Note, the path to unlink should be the target (`to`) used when
     * linking the paths.
     *
     * @override
     * @param {string | !Array<string|number>} path Target path to unlink.
     * @return {void}
     * @public
     */


    unlinkPaths(path) {
      path = normalize(path);

      if (this.__dataLinkedPaths) {
        delete this.__dataLinkedPaths[path];
      }
    }
    /**
     * Notify that an array has changed.
     *
     * Example:
     *
     *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];
     *     ...
     *     this.items.splice(1, 1, {name: 'Sam'});
     *     this.items.push({name: 'Bob'});
     *     this.notifySplices('items', [
     *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1,
     *         object: this.items, type: 'splice' },
     *       { index: 3, removed: [], addedCount: 1,
     *         object: this.items, type: 'splice'}
     *     ]);
     *
     * @param {string} path Path that should be notified.
     * @param {Array} splices Array of splice records indicating ordered
     *   changes that occurred to the array. Each record should have the
     *   following fields:
     *    * index: index at which the change occurred
     *    * removed: array of items that were removed from this index
     *    * addedCount: number of new items added at this index
     *    * object: a reference to the array in question
     *    * type: the string literal 'splice'
     *
     *   Note that splice records _must_ be normalized such that they are
     *   reported in index order (raw results from `Object.observe` are not
     *   ordered and must be normalized/merged before notifying).
     *
     * @override
     * @return {void}
     * @public
     */


    notifySplices(path, splices) {
      let info = {
        path: ''
      };
      let array =
      /** @type {Array} */
      get(this, path, info);
      notifySplices(this, array, info.path, splices);
    }
    /**
     * Convenience method for reading a value from a path.
     *
     * Note, if any part in the path is undefined, this method returns
     * `undefined` (this method does not throw when dereferencing undefined
     * paths).
     *
     * @override
     * @param {(string|!Array<(string|number)>)} path Path to the value
     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)
     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that
     *   bracketed expressions are not supported; string-based path parts
     *   *must* be separated by dots.  Note that when dereferencing array
     *   indices, the index may be used as a dotted part directly
     *   (e.g. `users.12.name` or `['users', 12, 'name']`).
     * @param {Object=} root Root object from which the path is evaluated.
     * @return {*} Value at the path, or `undefined` if any part of the path
     *   is undefined.
     * @public
     */


    get(path, root) {
      return get(root || this, path);
    }
    /**
     * Convenience method for setting a value to a path and notifying any
     * elements bound to the same path.
     *
     * Note, if any part in the path except for the last is undefined,
     * this method does nothing (this method does not throw when
     * dereferencing undefined paths).
     *
     * @override
     * @param {(string|!Array<(string|number)>)} path Path to the value
     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)
     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that
     *   bracketed expressions are not supported; string-based path parts
     *   *must* be separated by dots.  Note that when dereferencing array
     *   indices, the index may be used as a dotted part directly
     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).
     * @param {*} value Value to set at the specified path.
     * @param {Object=} root Root object from which the path is evaluated.
     *   When specified, no notification will occur.
     * @return {void}
     * @public
     */


    set(path, value, root) {
      if (root) {
        set(root, path, value);
      } else {
        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][
        /** @type {string} */
        path]) {
          if (this._setPendingPropertyOrPath(path, value, true)) {
            this._invalidateProperties();
          }
        }
      }
    }
    /**
     * Adds items onto the end of the array at the path specified.
     *
     * The arguments after `path` and return value match that of
     * `Array.prototype.push`.
     *
     * This method notifies other paths to the same array that a
     * splice occurred to the array.
     *
     * @override
     * @param {string | !Array<string|number>} path Path to array.
     * @param {...*} items Items to push onto array
     * @return {number} New length of the array.
     * @public
     */


    push(path, ...items) {
      let info = {
        path: ''
      };
      let array =
      /** @type {Array}*/
      get(this, path, info);
      let len = array.length;
      let ret = array.push(...items);

      if (items.length) {
        notifySplice(this, array, info.path, len, items.length, []);
      }

      return ret;
    }
    /**
     * Removes an item from the end of array at the path specified.
     *
     * The arguments after `path` and return value match that of
     * `Array.prototype.pop`.
     *
     * This method notifies other paths to the same array that a
     * splice occurred to the array.
     *
     * @override
     * @param {string | !Array<string|number>} path Path to array.
     * @return {*} Item that was removed.
     * @public
     */


    pop(path) {
      let info = {
        path: ''
      };
      let array =
      /** @type {Array} */
      get(this, path, info);
      let hadLength = Boolean(array.length);
      let ret = array.pop();

      if (hadLength) {
        notifySplice(this, array, info.path, array.length, 0, [ret]);
      }

      return ret;
    }
    /**
     * Starting from the start index specified, removes 0 or more items
     * from the array and inserts 0 or more new items in their place.
     *
     * The arguments after `path` and return value match that of
     * `Array.prototype.splice`.
     *
     * This method notifies other paths to the same array that a
     * splice occurred to the array.
     *
     * @override
     * @param {string | !Array<string|number>} path Path to array.
     * @param {number} start Index from which to start removing/inserting.
     * @param {number=} deleteCount Number of items to remove.
     * @param {...*} items Items to insert into array.
     * @return {Array} Array of removed items.
     * @public
     */


    splice(path, start, deleteCount, ...items) {
      let info = {
        path: ''
      };
      let array =
      /** @type {Array} */
      get(this, path, info); // Normalize fancy native splice handling of crazy start values

      if (start < 0) {
        start = array.length - Math.floor(-start);
      } else if (start) {
        start = Math.floor(start);
      } // array.splice does different things based on the number of arguments
      // you pass in. Therefore, array.splice(0) and array.splice(0, undefined)
      // do different things. In the former, the whole array is cleared. In the
      // latter, no items are removed.
      // This means that we need to detect whether 1. one of the arguments
      // is actually passed in and then 2. determine how many arguments
      // we should pass on to the native array.splice
      //


      let ret; // Omit any additional arguments if they were not passed in

      if (arguments.length === 2) {
        ret = array.splice(start); // Either start was undefined and the others were defined, but in this
        // case we can safely pass on all arguments
        //
        // Note: this includes the case where none of the arguments were passed in,
        // e.g. this.splice('array'). However, if both start and deleteCount
        // are undefined, array.splice will not modify the array (as expected)
      } else {
        ret = array.splice(start, deleteCount, ...items);
      } // At the end, check whether any items were passed in (e.g. insertions)
      // or if the return array contains items (e.g. deletions).
      // Only notify if items were added or deleted.


      if (items.length || ret.length) {
        notifySplice(this, array, info.path, start, items.length, ret);
      }

      return ret;
    }
    /**
     * Removes an item from the beginning of array at the path specified.
     *
     * The arguments after `path` and return value match that of
     * `Array.prototype.pop`.
     *
     * This method notifies other paths to the same array that a
     * splice occurred to the array.
     *
     * @override
     * @param {string | !Array<string|number>} path Path to array.
     * @return {*} Item that was removed.
     * @public
     */


    shift(path) {
      let info = {
        path: ''
      };
      let array =
      /** @type {Array} */
      get(this, path, info);
      let hadLength = Boolean(array.length);
      let ret = array.shift();

      if (hadLength) {
        notifySplice(this, array, info.path, 0, 0, [ret]);
      }

      return ret;
    }
    /**
     * Adds items onto the beginning of the array at the path specified.
     *
     * The arguments after `path` and return value match that of
     * `Array.prototype.push`.
     *
     * This method notifies other paths to the same array that a
     * splice occurred to the array.
     *
     * @override
     * @param {string | !Array<string|number>} path Path to array.
     * @param {...*} items Items to insert info array
     * @return {number} New length of the array.
     * @public
     */


    unshift(path, ...items) {
      let info = {
        path: ''
      };
      let array =
      /** @type {Array} */
      get(this, path, info);
      let ret = array.unshift(...items);

      if (items.length) {
        notifySplice(this, array, info.path, 0, items.length, []);
      }

      return ret;
    }
    /**
     * Notify that a path has changed.
     *
     * Example:
     *
     *     this.item.user.name = 'Bob';
     *     this.notifyPath('item.user.name');
     *
     * @override
     * @param {string} path Path that should be notified.
     * @param {*=} value Value at the path (optional).
     * @return {void}
     * @public
     */


    notifyPath(path, value) {
      /** @type {string} */
      let propPath;

      if (arguments.length == 1) {
        // Get value if not supplied
        let info = {
          path: ''
        };
        value = get(this, path, info);
        propPath = info.path;
      } else if (Array.isArray(path)) {
        // Normalize path if needed
        propPath = normalize(path);
      } else {
        propPath =
        /** @type{string} */
        path;
      }

      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {
        this._invalidateProperties();
      }
    }
    /**
     * Equivalent to static `createReadOnlyProperty` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * @override
     * @param {string} property Property name
     * @param {boolean=} protectedSetter Creates a custom protected setter
     *   when `true`.
     * @return {void}
     * @protected
     */


    _createReadOnlyProperty(property, protectedSetter) {
      this._addPropertyEffect(property, TYPES.READ_ONLY);

      if (protectedSetter) {
        this['_set' + upper(property)] =
        /** @this {PropertyEffects} */
        function (value) {
          this._setProperty(property, value);
        };
      }
    }
    /**
     * Equivalent to static `createPropertyObserver` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * @override
     * @param {string} property Property name
     * @param {string|function(*,*)} method Function or name of observer method
     *     to call
     * @param {boolean=} dynamicFn Whether the method name should be included as
     *   a dependency to the effect.
     * @return {void}
     * @protected
     */


    _createPropertyObserver(property, method, dynamicFn) {
      let info = {
        property,
        method,
        dynamicFn: Boolean(dynamicFn)
      };

      this._addPropertyEffect(property, TYPES.OBSERVE, {
        fn: runObserverEffect,
        info,
        trigger: {
          name: property
        }
      });

      if (dynamicFn) {
        this._addPropertyEffect(
        /** @type {string} */
        method, TYPES.OBSERVE, {
          fn: runObserverEffect,
          info,
          trigger: {
            name: method
          }
        });
      }
    }
    /**
     * Equivalent to static `createMethodObserver` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * @override
     * @param {string} expression Method expression
     * @param {boolean|Object=} dynamicFn Boolean or object map indicating
     *   whether method names should be included as a dependency to the effect.
     * @return {void}
     * @protected
     */


    _createMethodObserver(expression, dynamicFn) {
      let sig = parseMethod(expression);

      if (!sig) {
        throw new Error("Malformed observer expression '" + expression + "'");
      }

      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);
    }
    /**
     * Equivalent to static `createNotifyingProperty` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * @override
     * @param {string} property Property name
     * @return {void}
     * @protected
     */


    _createNotifyingProperty(property) {
      this._addPropertyEffect(property, TYPES.NOTIFY, {
        fn: runNotifyEffect,
        info: {
          eventName: camelToDashCase(property) + '-changed',
          property: property
        }
      });
    }
    /**
     * Equivalent to static `createReflectedProperty` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * @override
     * @param {string} property Property name
     * @return {void}
     * @protected
     * @suppress {missingProperties} go/missingfnprops
     */


    _createReflectedProperty(property) {
      let attr = this.constructor.attributeNameForProperty(property);

      if (attr[0] === '-') {
        console.warn('Property ' + property + ' cannot be reflected to attribute ' + attr + ' because "-" is not a valid starting attribute name. Use a lowercase first letter for the property instead.');
      } else {
        this._addPropertyEffect(property, TYPES.REFLECT, {
          fn: runReflectEffect,
          info: {
            attrName: attr
          }
        });
      }
    }
    /**
     * Equivalent to static `createComputedProperty` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * @override
     * @param {string} property Name of computed property to set
     * @param {string} expression Method expression
     * @param {boolean|Object=} dynamicFn Boolean or object map indicating
     *   whether method names should be included as a dependency to the effect.
     * @return {void}
     * @protected
     */


    _createComputedProperty(property, expression, dynamicFn) {
      let sig = parseMethod(expression);

      if (!sig) {
        throw new Error("Malformed computed expression '" + expression + "'");
      }

      createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);
    }
    /**
     * Gather the argument values for a method specified in the provided array
     * of argument metadata.
     *
     * The `path` and `value` arguments are used to fill in wildcard descriptor
     * when the method is being called as a result of a path notification.
     *
     * @param {!Array<!MethodArg>} args Array of argument metadata
     * @param {string} path Property/path name that triggered the method effect
     * @param {Object} props Bag of current property changes
     * @return {Array<*>} Array of argument values
     * @private
     */


    _marshalArgs(args, path, props) {
      const data = this.__data;
      const values = [];

      for (let i = 0, l = args.length; i < l; i++) {
        let {
          name,
          structured,
          wildcard,
          value,
          literal
        } = args[i];

        if (!literal) {
          if (wildcard) {
            const matches = isDescendant(name, path);
            const pathValue = getArgValue(data, props, matches ? path : name);
            value = {
              path: matches ? path : name,
              value: pathValue,
              base: matches ? get(data, name) : pathValue
            };
          } else {
            value = structured ? getArgValue(data, props, name) : data[name];
          }
        }

        values[i] = value;
      }

      return values;
    } // -- static class methods ------------

    /**
     * Ensures an accessor exists for the specified property, and adds
     * to a list of "property effects" that will run when the accessor for
     * the specified property is set.  Effects are grouped by "type", which
     * roughly corresponds to a phase in effect processing.  The effect
     * metadata should be in the following form:
     *
     *     {
     *       fn: effectFunction, // Reference to function to call to perform effect
     *       info: { ... }       // Effect metadata passed to function
     *       trigger: {          // Optional triggering metadata; if not provided
     *         name: string      // the property is treated as a wildcard
     *         structured: boolean
     *         wildcard: boolean
     *       }
     *     }
     *
     * Effects are called from `_propertiesChanged` in the following order by
     * type:
     *
     * 1. COMPUTE
     * 2. PROPAGATE
     * 3. REFLECT
     * 4. OBSERVE
     * 5. NOTIFY
     *
     * Effect functions are called with the following signature:
     *
     *     effectFunction(inst, path, props, oldProps, info, hasPaths)
     *
     * @param {string} property Property that should trigger the effect
     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES
     * @param {Object=} effect Effect metadata object
     * @return {void}
     * @protected
     * @nocollapse
     */


    static addPropertyEffect(property, type, effect) {
      this.prototype._addPropertyEffect(property, type, effect);
    }
    /**
     * Creates a single-property observer for the given property.
     *
     * @param {string} property Property name
     * @param {string|function(*,*)} method Function or name of observer method to call
     * @param {boolean=} dynamicFn Whether the method name should be included as
     *   a dependency to the effect.
     * @return {void}
     * @protected
     * @nocollapse
     */


    static createPropertyObserver(property, method, dynamicFn) {
      this.prototype._createPropertyObserver(property, method, dynamicFn);
    }
    /**
     * Creates a multi-property "method observer" based on the provided
     * expression, which should be a string in the form of a normal JavaScript
     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument
     * should correspond to a property or path in the context of this
     * prototype (or instance), or may be a literal string or number.
     *
     * @param {string} expression Method expression
     * @param {boolean|Object=} dynamicFn Boolean or object map indicating
     * @return {void}
     *   whether method names should be included as a dependency to the effect.
     * @protected
     * @nocollapse
     */


    static createMethodObserver(expression, dynamicFn) {
      this.prototype._createMethodObserver(expression, dynamicFn);
    }
    /**
     * Causes the setter for the given property to dispatch `<property>-changed`
     * events to notify of changes to the property.
     *
     * @param {string} property Property name
     * @return {void}
     * @protected
     * @nocollapse
     */


    static createNotifyingProperty(property) {
      this.prototype._createNotifyingProperty(property);
    }
    /**
     * Creates a read-only accessor for the given property.
     *
     * To set the property, use the protected `_setProperty` API.
     * To create a custom protected setter (e.g. `_setMyProp()` for
     * property `myProp`), pass `true` for `protectedSetter`.
     *
     * Note, if the property will have other property effects, this method
     * should be called first, before adding other effects.
     *
     * @param {string} property Property name
     * @param {boolean=} protectedSetter Creates a custom protected setter
     *   when `true`.
     * @return {void}
     * @protected
     * @nocollapse
     */


    static createReadOnlyProperty(property, protectedSetter) {
      this.prototype._createReadOnlyProperty(property, protectedSetter);
    }
    /**
     * Causes the setter for the given property to reflect the property value
     * to a (dash-cased) attribute of the same name.
     *
     * @param {string} property Property name
     * @return {void}
     * @protected
     * @nocollapse
     */


    static createReflectedProperty(property) {
      this.prototype._createReflectedProperty(property);
    }
    /**
     * Creates a computed property whose value is set to the result of the
     * method described by the given `expression` each time one or more
     * arguments to the method changes.  The expression should be a string
     * in the form of a normal JavaScript function signature:
     * `'methodName(arg1, [..., argn])'`
     *
     * @param {string} property Name of computed property to set
     * @param {string} expression Method expression
     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether
     *   method names should be included as a dependency to the effect.
     * @return {void}
     * @protected
     * @nocollapse
     */


    static createComputedProperty(property, expression, dynamicFn) {
      this.prototype._createComputedProperty(property, expression, dynamicFn);
    }
    /**
     * Parses the provided template to ensure binding effects are created
     * for them, and then ensures property accessors are created for any
     * dependent properties in the template.  Binding effects for bound
     * templates are stored in a linked list on the instance so that
     * templates can be efficiently stamped and unstamped.
     *
     * @param {!HTMLTemplateElement} template Template containing binding
     *   bindings
     * @return {!TemplateInfo} Template metadata object
     * @protected
     * @nocollapse
     */


    static bindTemplate(template) {
      return this.prototype._bindTemplate(template);
    } // -- binding ----------------------------------------------

    /**
     * Equivalent to static `bindTemplate` API but can be called on
     * an instance to add effects at runtime.  See that method for
     * full API docs.
     *
     * This method may be called on the prototype (for prototypical template
     * binding, to avoid creating accessors every instance) once per prototype,
     * and will be called with `runtimeBinding: true` by `_stampTemplate` to
     * create and link an instance of the template metadata associated with a
     * particular stamping.
     *
     * @override
     * @param {!HTMLTemplateElement} template Template containing binding
     *   bindings
     * @param {boolean=} instanceBinding When false (default), performs
     *   "prototypical" binding of the template and overwrites any previously
     *   bound template for the class. When true (as passed from
     *   `_stampTemplate`), the template info is instanced and linked into
     *   the list of bound templates.
     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,
     *   this is an instance of the prototypical template info
     * @protected
     * @suppress {missingProperties} go/missingfnprops
     */


    _bindTemplate(template, instanceBinding) {
      let templateInfo = this.constructor._parseTemplate(template);

      let wasPreBound = this.__templateInfo == templateInfo; // Optimization: since this is called twice for proto-bound templates,
      // don't attempt to recreate accessors if this template was pre-bound

      if (!wasPreBound) {
        for (let prop in templateInfo.propertyEffects) {
          this._createPropertyAccessor(prop);
        }
      }

      if (instanceBinding) {
        // For instance-time binding, create instance of template metadata
        // and link into list of templates if necessary
        templateInfo =
        /** @type {!TemplateInfo} */
        Object.create(templateInfo);
        templateInfo.wasPreBound = wasPreBound;

        if (!wasPreBound && this.__templateInfo) {
          let last = this.__templateInfoLast || this.__templateInfo;
          this.__templateInfoLast = last.nextTemplateInfo = templateInfo;
          templateInfo.previousTemplateInfo = last;
          return templateInfo;
        }
      }

      return this.__templateInfo = templateInfo;
    }
    /**
     * Adds a property effect to the given template metadata, which is run
     * at the "propagate" stage of `_propertiesChanged` when the template
     * has been bound to the element via `_bindTemplate`.
     *
     * The `effect` object should match the format in `_addPropertyEffect`.
     *
     * @param {Object} templateInfo Template metadata to add effect to
     * @param {string} prop Property that should trigger the effect
     * @param {Object=} effect Effect metadata object
     * @return {void}
     * @protected
     * @nocollapse
     */


    static _addTemplatePropertyEffect(templateInfo, prop, effect) {
      let hostProps = templateInfo.hostProps = templateInfo.hostProps || {};
      hostProps[prop] = true;
      let effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};
      let propEffects = effects[prop] = effects[prop] || [];
      propEffects.push(effect);
    }
    /**
     * Stamps the provided template and performs instance-time setup for
     * Polymer template features, including data bindings, declarative event
     * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment
     * is returned containing the stamped DOM, ready for insertion into the
     * DOM.
     *
     * This method may be called more than once; however note that due to
     * `shadycss` polyfill limitations, only styles from templates prepared
     * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped
     * to the shadow root and support CSS custom properties), and note that
     * `ShadyCSS.prepareTemplate` may only be called once per element. As such,
     * any styles required by in runtime-stamped templates must be included
     * in the main element template.
     *
     * @param {!HTMLTemplateElement} template Template to stamp
     * @return {!StampedTemplate} Cloned template content
     * @override
     * @protected
     */


    _stampTemplate(template) {
      // Ensures that created dom is `_enqueueClient`'d to this element so
      // that it can be flushed on next call to `_flushProperties`
      hostStack.beginHosting(this);

      let dom = super._stampTemplate(template);

      hostStack.endHosting(this);

      let templateInfo =
      /** @type {!TemplateInfo} */
      this._bindTemplate(template, true); // Add template-instance-specific data to instanced templateInfo


      templateInfo.nodeList = dom.nodeList; // Capture child nodes to allow unstamping of non-prototypical templates

      if (!templateInfo.wasPreBound) {
        let nodes = templateInfo.childNodes = [];

        for (let n = dom.firstChild; n; n = n.nextSibling) {
          nodes.push(n);
        }
      }

      dom.templateInfo = templateInfo; // Setup compound storage, 2-way listeners, and dataHost for bindings

      setupBindings(this, templateInfo); // Flush properties into template nodes if already booted

      if (this.__dataReady) {
        runEffects(this, templateInfo.propertyEffects, this.__data, null, false, templateInfo.nodeList);
      }

      return dom;
    }
    /**
     * Removes and unbinds the nodes previously contained in the provided
     * DocumentFragment returned from `_stampTemplate`.
     *
     * @override
     * @param {!StampedTemplate} dom DocumentFragment previously returned
     *   from `_stampTemplate` associated with the nodes to be removed
     * @return {void}
     * @protected
     */


    _removeBoundDom(dom) {
      // Unlink template info
      let templateInfo = dom.templateInfo;

      if (templateInfo.previousTemplateInfo) {
        templateInfo.previousTemplateInfo.nextTemplateInfo = templateInfo.nextTemplateInfo;
      }

      if (templateInfo.nextTemplateInfo) {
        templateInfo.nextTemplateInfo.previousTemplateInfo = templateInfo.previousTemplateInfo;
      }

      if (this.__templateInfoLast == templateInfo) {
        this.__templateInfoLast = templateInfo.previousTemplateInfo;
      }

      templateInfo.previousTemplateInfo = templateInfo.nextTemplateInfo = null; // Remove stamped nodes

      let nodes = templateInfo.childNodes;

      for (let i = 0; i < nodes.length; i++) {
        let node = nodes[i];
        node.parentNode.removeChild(node);
      }
    }
    /**
     * Overrides default `TemplateStamp` implementation to add support for
     * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`
     * array is added to `nodeInfo` and populated with binding metadata
     * with information capturing the binding target, and a `parts` array
     * with one or more metadata objects capturing the source(s) of the
     * binding.
     *
     * @param {Node} node Node to parse
     * @param {TemplateInfo} templateInfo Template metadata for current template
     * @param {NodeInfo} nodeInfo Node metadata for current template node
     * @return {boolean} `true` if the visited node added node-specific
     *   metadata to `nodeInfo`
     * @protected
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */


    static _parseTemplateNode(node, templateInfo, nodeInfo) {
      // TODO(https://github.com/google/closure-compiler/issues/3240):
      //     Change back to just super.methodCall()
      let noted = propertyEffectsBase._parseTemplateNode.call(this, node, templateInfo, nodeInfo);

      if (node.nodeType === Node.TEXT_NODE) {
        let parts = this._parseBindings(node.textContent, templateInfo);

        if (parts) {
          // Initialize the textContent with any literal parts
          // NOTE: default to a space here so the textNode remains; some browsers
          // (IE) omit an empty textNode following cloneNode/importNode.
          node.textContent = literalFromParts(parts) || ' ';
          addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);
          noted = true;
        }
      }

      return noted;
    }
    /**
     * Overrides default `TemplateStamp` implementation to add support for
     * parsing bindings from attributes.  A `bindings`
     * array is added to `nodeInfo` and populated with binding metadata
     * with information capturing the binding target, and a `parts` array
     * with one or more metadata objects capturing the source(s) of the
     * binding.
     *
     * @param {Element} node Node to parse
     * @param {TemplateInfo} templateInfo Template metadata for current template
     * @param {NodeInfo} nodeInfo Node metadata for current template node
     * @param {string} name Attribute name
     * @param {string} value Attribute value
     * @return {boolean} `true` if the visited node added node-specific
     *   metadata to `nodeInfo`
     * @protected
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */


    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {
      let parts = this._parseBindings(value, templateInfo);

      if (parts) {
        // Attribute or property
        let origName = name;
        let kind = 'property'; // The only way we see a capital letter here is if the attr has
        // a capital letter in it per spec. In this case, to make sure
        // this binding works, we go ahead and make the binding to the attribute.

        if (capitalAttributeRegex.test(name)) {
          kind = 'attribute';
        } else if (name[name.length - 1] == '$') {
          name = name.slice(0, -1);
          kind = 'attribute';
        } // Initialize attribute bindings with any literal parts


        let literal = literalFromParts(parts);

        if (literal && kind == 'attribute') {
          // Ensure a ShadyCSS template scoped style is not removed
          // when a class$ binding's initial literal value is set.
          if (name == 'class' && node.hasAttribute('class')) {
            literal += ' ' + node.getAttribute(name);
          }

          node.setAttribute(name, literal);
        } // Clear attribute before removing, since IE won't allow removing
        // `value` attribute if it previously had a value (can't
        // unconditionally set '' before removing since attributes with `$`
        // can't be set using setAttribute)


        if (node.localName === 'input' && origName === 'value') {
          node.setAttribute(origName, '');
        } // Remove annotation


        node.removeAttribute(origName); // Case hackery: attributes are lower-case, but bind targets
        // (properties) are case sensitive. Gambit is to map dash-case to
        // camel-case: `foo-bar` becomes `fooBar`.
        // Attribute bindings are excepted.

        if (kind === 'property') {
          name = dashToCamelCase(name);
        }

        addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);
        return true;
      } else {
        // TODO(https://github.com/google/closure-compiler/issues/3240):
        //     Change back to just super.methodCall()
        return propertyEffectsBase._parseTemplateNodeAttribute.call(this, node, templateInfo, nodeInfo, name, value);
      }
    }
    /**
     * Overrides default `TemplateStamp` implementation to add support for
     * binding the properties that a nested template depends on to the template
     * as `_host_<property>`.
     *
     * @param {Node} node Node to parse
     * @param {TemplateInfo} templateInfo Template metadata for current template
     * @param {NodeInfo} nodeInfo Node metadata for current template node
     * @return {boolean} `true` if the visited node added node-specific
     *   metadata to `nodeInfo`
     * @protected
     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do
     * @nocollapse
     */


    static _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {
      // TODO(https://github.com/google/closure-compiler/issues/3240):
      //     Change back to just super.methodCall()
      let noted = propertyEffectsBase._parseTemplateNestedTemplate.call(this, node, templateInfo, nodeInfo); // Merge host props into outer template and add bindings


      let hostProps = nodeInfo.templateInfo.hostProps;
      let mode = '{';

      for (let source in hostProps) {
        let parts = [{
          mode,
          source,
          dependencies: [source]
        }];
        addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);
      }

      return noted;
    }
    /**
     * Called to parse text in a template (either attribute values or
     * textContent) into binding metadata.
     *
     * Any overrides of this method should return an array of binding part
     * metadata  representing one or more bindings found in the provided text
     * and any "literal" text in between.  Any non-literal parts will be passed
     * to `_evaluateBinding` when any dependencies change.  The only required
     * fields of each "part" in the returned array are as follows:
     *
     * - `dependencies` - Array containing trigger metadata for each property
     *   that should trigger the binding to update
     * - `literal` - String containing text if the part represents a literal;
     *   in this case no `dependencies` are needed
     *
     * Additional metadata for use by `_evaluateBinding` may be provided in
     * each part object as needed.
     *
     * The default implementation handles the following types of bindings
     * (one or more may be intermixed with literal strings):
     * - Property binding: `[[prop]]`
     * - Path binding: `[[object.prop]]`
     * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`
     * - Two-way property or path bindings (supports negation):
     *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`
     * - Inline computed method (supports negation):
     *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`
     *
     * The default implementation uses a regular expression for best
     * performance. However, the regular expression uses a white-list of
     * allowed characters in a data-binding, which causes problems for
     * data-bindings that do use characters not in this white-list.
     *
     * Instead of updating the white-list with all allowed characters,
     * there is a StrictBindingParser (see lib/mixins/strict-binding-parser)
     * that uses a state machine instead. This state machine is able to handle
     * all characters. However, it is slightly less performant, therefore we
     * extracted it into a separate optional mixin.
     *
     * @param {string} text Text to parse from attribute or textContent
     * @param {Object} templateInfo Current template metadata
     * @return {Array<!BindingPart>} Array of binding part metadata
     * @protected
     * @nocollapse
     */


    static _parseBindings(text, templateInfo) {
      let parts = [];
      let lastIndex = 0;
      let m; // Example: "literal1{{prop}}literal2[[!compute(foo,bar)]]final"
      // Regex matches:
      //        Iteration 1:  Iteration 2:
      // m[1]: '{{'          '[['
      // m[2]: ''            '!'
      // m[3]: 'prop'        'compute(foo,bar)'

      while ((m = bindingRegex.exec(text)) !== null) {
        // Add literal part
        if (m.index > lastIndex) {
          parts.push({
            literal: text.slice(lastIndex, m.index)
          });
        } // Add binding part


        let mode = m[1][0];
        let negate = Boolean(m[2]);
        let source = m[3].trim();
        let customEvent = false,
            notifyEvent = '',
            colon = -1;

        if (mode == '{' && (colon = source.indexOf('::')) > 0) {
          notifyEvent = source.substring(colon + 2);
          source = source.substring(0, colon);
          customEvent = true;
        }

        let signature = parseMethod(source);
        let dependencies = [];

        if (signature) {
          // Inline computed function
          let {
            args,
            methodName
          } = signature;

          for (let i = 0; i < args.length; i++) {
            let arg = args[i];

            if (!arg.literal) {
              dependencies.push(arg);
            }
          }

          let dynamicFns = templateInfo.dynamicFns;

          if (dynamicFns && dynamicFns[methodName] || signature.static) {
            dependencies.push(methodName);
            signature.dynamicFn = true;
          }
        } else {
          // Property or path
          dependencies.push(source);
        }

        parts.push({
          source,
          mode,
          negate,
          customEvent,
          signature,
          dependencies,
          event: notifyEvent
        });
        lastIndex = bindingRegex.lastIndex;
      } // Add a final literal part


      if (lastIndex && lastIndex < text.length) {
        let literal = text.substring(lastIndex);

        if (literal) {
          parts.push({
            literal: literal
          });
        }
      }

      if (parts.length) {
        return parts;
      } else {
        return null;
      }
    }
    /**
     * Called to evaluate a previously parsed binding part based on a set of
     * one or more changed dependencies.
     *
     * @param {!Polymer_PropertyEffects} inst Element that should be used as
     *     scope for binding dependencies
     * @param {BindingPart} part Binding part metadata
     * @param {string} path Property/path that triggered this effect
     * @param {Object} props Bag of current property changes
     * @param {Object} oldProps Bag of previous values for changed properties
     * @param {boolean} hasPaths True with `props` contains one or more paths
     * @return {*} Value the binding part evaluated to
     * @protected
     * @nocollapse
     */


    static _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {
      let value;

      if (part.signature) {
        value = runMethodEffect(inst, path, props, oldProps, part.signature);
      } else if (path != part.source) {
        value = get(inst, part.source);
      } else {
        if (hasPaths && isPath(path)) {
          value = get(inst, path);
        } else {
          value = inst.__data[path];
        }
      }

      if (part.negate) {
        value = !value;
      }

      return value;
    }

  }

  return PropertyEffects;
});
/**
 * Helper api for enqueuing client dom created by a host element.
 *
 * By default elements are flushed via `_flushProperties` when
 * `connectedCallback` is called. Elements attach their client dom to
 * themselves at `ready` time which results from this first flush.
 * This provides an ordering guarantee that the client dom an element
 * creates is flushed before the element itself (i.e. client `ready`
 * fires before host `ready`).
 *
 * However, if `_flushProperties` is called *before* an element is connected,
 * as for example `Templatize` does, this ordering guarantee cannot be
 * satisfied because no elements are connected. (Note: Bound elements that
 * receive data do become enqueued clients and are properly ordered but
 * unbound elements are not.)
 *
 * To maintain the desired "client before host" ordering guarantee for this
 * case we rely on the "host stack. Client nodes registers themselves with
 * the creating host element when created. This ensures that all client dom
 * is readied in the proper order, maintaining the desired guarantee.
 *
 * @private
 */

class HostStack {
  constructor() {
    this.stack = [];
  }
  /**
   * @param {*} inst Instance to add to hostStack
   * @return {void}
   */


  registerHost(inst) {
    if (this.stack.length) {
      let host = this.stack[this.stack.length - 1];

      host._enqueueClient(inst);
    }
  }
  /**
   * @param {*} inst Instance to begin hosting
   * @return {void}
   */


  beginHosting(inst) {
    this.stack.push(inst);
  }
  /**
   * @param {*} inst Instance to end hosting
   * @return {void}
   */


  endHosting(inst) {
    let stackLen = this.stack.length;

    if (stackLen && this.stack[stackLen - 1] == inst) {
      this.stack.pop();
    }
  }

}

const hostStack = new HostStack();
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:02</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.property.effects" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\property-effects.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.property.effects.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\property-effects.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>property-effects.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/property-effects.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.render.status">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.render.status.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.render.status.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53163.68666</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/**
 * Module for scheduling flushable pre-render and post-render tasks.
 *
 * @summary Module for scheduling flushable pre-render and post-render tasks.
 */
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
let scheduled = false;
let beforeRenderQueue = [];
let afterRenderQueue = [];

function schedule() {
  scheduled = true; // before next render

  requestAnimationFrame(function () {
    scheduled = false;
    flushQueue(beforeRenderQueue); // after the render

    setTimeout(function () {
      runQueue(afterRenderQueue);
    });
  });
}

function flushQueue(queue) {
  while (queue.length) {
    callMethod(queue.shift());
  }
}

function runQueue(queue) {
  for (let i = 0, l = queue.length; i < l; i++) {
    callMethod(queue.shift());
  }
}

function callMethod(info) {
  const context = info[0];
  const callback = info[1];
  const args = info[2];

  try {
    callback.apply(context, args);
  } catch (e) {
    setTimeout(() => {
      throw e;
    });
  }
}
/**
 * Flushes all `beforeNextRender` tasks, followed by all `afterNextRender`
 * tasks.
 *
 * @return {void}
 */


export function flush() {
  while (beforeRenderQueue.length || afterRenderQueue.length) {
    flushQueue(beforeRenderQueue);
    flushQueue(afterRenderQueue);
  }

  scheduled = false;
}
/**
 * Enqueues a callback which will be run before the next render, at
 * `requestAnimationFrame` timing.
 *
 * This method is useful for enqueuing work that requires DOM measurement,
 * since measurement may not be reliable in custom element callbacks before
 * the first render, as well as for batching measurement tasks in general.
 *
 * Tasks in this queue may be flushed by calling `flush()`.
 *
 * @param {*} context Context object the callback function will be bound to
 * @param {function(...*):void} callback Callback function
 * @param {!Array=} args An array of arguments to call the callback function with
 * @return {void}
 */

export function beforeNextRender(context, callback, args) {
  if (!scheduled) {
    schedule();
  }

  beforeRenderQueue.push([context, callback, args]);
}
/**
 * Enqueues a callback which will be run after the next render, equivalent
 * to one task (`setTimeout`) after the next `requestAnimationFrame`.
 *
 * This method is useful for tuning the first-render performance of an
 * element or application by deferring non-critical work until after the
 * first paint.  Typical non-render-critical work may include adding UI
 * event listeners and aria attributes.
 *
 * @param {*} context Context object the callback function will be bound to
 * @param {function(...*):void} callback Callback function
 * @param {!Array=} args An array of arguments to call the callback function with
 * @return {void}
 */

export function afterNextRender(context, callback, args) {
  if (!scheduled) {
    schedule();
  }

  afterRenderQueue.push([context, callback, args]);
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:03</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.render.status" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\render-status.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.render.status.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\render-status.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>render-status.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/render-status.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.resolve.url">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.resolve.url.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.resolve.url.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53163.77854</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
let CSS_URL_RX = /(url\()([^)]*)(\))/g;
let ABS_URL = /(^\/[^\/])|(^#)|(^[\w-\d]*:)/;
let workingURL;
let resolveDoc;
/**
 * Resolves the given URL against the provided `baseUri'.
 *
 * Note that this function performs no resolution for URLs that start
 * with `/` (absolute URLs) or `#` (hash identifiers).  For general purpose
 * URL resolution, use `window.URL`.
 *
 * @param {string} url Input URL to resolve
 * @param {?string=} baseURI Base URI to resolve the URL against
 * @return {string} resolved URL
 */

export function resolveUrl(url, baseURI) {
  if (url && ABS_URL.test(url)) {
    return url;
  }

  if (url === '//') {
    return url;
  } // Lazy feature detection.


  if (workingURL === undefined) {
    workingURL = false;

    try {
      const u = new URL('b', 'http://a');
      u.pathname = 'c%20d';
      workingURL = u.href === 'http://a/c%20d';
    } catch (e) {// silently fail
    }
  }

  if (!baseURI) {
    baseURI = document.baseURI || window.location.href;
  }

  if (workingURL) {
    try {
      return new URL(url, baseURI).href;
    } catch (e) {
      // Bad url or baseURI structure. Do not attempt to resolve.
      return url;
    }
  } // Fallback to creating an anchor into a disconnected document.


  if (!resolveDoc) {
    resolveDoc = document.implementation.createHTMLDocument('temp');
    resolveDoc.base = resolveDoc.createElement('base');
    resolveDoc.head.appendChild(resolveDoc.base);
    resolveDoc.anchor = resolveDoc.createElement('a');
    resolveDoc.body.appendChild(resolveDoc.anchor);
  }

  resolveDoc.base.href = baseURI;
  resolveDoc.anchor.href = url;
  return resolveDoc.anchor.href || url;
}
/**
 * Resolves any relative URL's in the given CSS text against the provided
 * `ownerDocument`'s `baseURI`.
 *
 * @param {string} cssText CSS text to process
 * @param {string} baseURI Base URI to resolve the URL against
 * @return {string} Processed CSS text with resolved URL's
 */

export function resolveCss(cssText, baseURI) {
  return cssText.replace(CSS_URL_RX, function (m, pre, url, post) {
    return pre + '\'' + resolveUrl(url.replace(/["']/g, ''), baseURI) + '\'' + post;
  });
}
/**
 * Returns a path from a given `url`. The path includes the trailing
 * `/` from the url.
 *
 * @param {string} url Input URL to transform
 * @return {string} resolved path
 */

export function pathFromUrl(url) {
  return url.substring(0, url.lastIndexOf('/') + 1);
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:03</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.resolve.url" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\resolve-url.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.resolve.url.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\resolve-url.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>resolve-url.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/resolve-url.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.scope.subtree">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.scope.subtree.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.scope.subtree.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53163.864455</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2019 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls';
const ShadyDOM = window.ShadyDOM;
const ShadyCSS = window.ShadyCSS;
/**
 * Return true if node scope is correct.
 *
 * @param {!Element} node Node to check scope
 * @param {!Node} scope Scope reference
 * @return {boolean} True if node is in scope
 */

function sameScope(node, scope) {
  return wrap(node).getRootNode() === scope;
}
/**
 * Ensure that elements in a ShadowDOM container are scoped correctly.
 * This function is only needed when ShadyDOM is used and unpatched DOM APIs are used in third party code.
 * This can happen in noPatch mode or when specialized APIs like ranges or tables are used to mutate DOM.
 *
 * @param  {!Element} container Container element to scope
 * @param  {boolean=} shouldObserve if true, start a mutation observer for added nodes to the container
 * @return {?MutationObserver} Returns a new MutationObserver on `container` if `shouldObserve` is true.
 */


export function scopeSubtree(container, shouldObserve = false) {
  // If using native ShadowDOM, abort
  if (!ShadyDOM || !ShadyCSS) {
    return null;
  } // ShadyCSS handles DOM mutations when ShadyDOM does not handle scoping itself


  if (!ShadyDOM['handlesDynamicScoping']) {
    return null;
  }

  const ScopingShim = ShadyCSS['ScopingShim']; // if ScopingShim is not available, abort

  if (!ScopingShim) {
    return null;
  } // capture correct scope for container


  const containerScope = ScopingShim['scopeForNode'](container);
  const root = wrap(container).getRootNode();

  const scopify = node => {
    if (!sameScope(node, root)) {
      return;
    } // NOTE: native qSA does not honor scoped DOM, but it is faster, and the same behavior as Polymer v1


    const elements = Array.from(ShadyDOM['nativeMethods']['querySelectorAll'].call(node, '*'));
    elements.push(node);

    for (let i = 0; i < elements.length; i++) {
      const el = elements[i];

      if (!sameScope(el, root)) {
        continue;
      }

      const currentScope = ScopingShim['currentScopeForNode'](el);

      if (currentScope !== containerScope) {
        if (currentScope !== '') {
          ScopingShim['unscopeNode'](el, currentScope);
        }

        ScopingShim['scopeNode'](el, containerScope);
      }
    }
  }; // scope everything in container


  scopify(container);

  if (shouldObserve) {
    const mo = new MutationObserver(mxns => {
      for (let i = 0; i < mxns.length; i++) {
        const mxn = mxns[i];

        for (let j = 0; j < mxn.addedNodes.length; j++) {
          const addedNode = mxn.addedNodes[j];

          if (addedNode.nodeType === Node.ELEMENT_NODE) {
            scopify(addedNode);
          }
        }
      }
    });
    mo.observe(container, {
      childList: true,
      subtree: true
    });
    return mo;
  } else {
    return null;
  }
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:03</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.scope.subtree" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\scope-subtree.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.scope.subtree.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\scope-subtree.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>scope-subtree.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/scope-subtree.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.settings">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.settings.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.settings.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53163.95417</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { pathFromUrl } from '/%ZWebNode.Lib.Polymer.v3.resolve.url.cls';
export const useShadow = !window.ShadyDOM;
export const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);
export const useNativeCustomElements = !window.customElements.polyfillWrapFlushCallback;
/**
 * Globally settable property that is automatically assigned to
 * `ElementMixin` instances, useful for binding in templates to
 * make URL's relative to an application's root.  Defaults to the main
 * document URL, but can be overridden by users.  It may be useful to set
 * `rootPath` to provide a stable application mount path when
 * using client side routing.
 */

export let rootPath = pathFromUrl(document.baseURI || window.location.href);
/**
 * Sets the global rootPath property used by `ElementMixin` and
 * available via `rootPath`.
 *
 * @param {string} path The new root path
 * @return {void}
 */

export const setRootPath = function (path) {
  rootPath = path;
};
/**
 * A global callback used to sanitize any value before inserting it into the DOM.
 * The callback signature is:
 *
 *  function sanitizeDOMValue(value, name, type, node) { ... }
 *
 * Where:
 *
 * `value` is the value to sanitize.
 * `name` is the name of an attribute or property (for example, href).
 * `type` indicates where the value is being inserted: one of property, attribute, or text.
 * `node` is the node where the value is being inserted.
 *
 * @type {(function(*,string,string,Node):*)|undefined}
 */

export let sanitizeDOMValue = window.Polymer && window.Polymer.sanitizeDOMValue || undefined;
/**
 * Sets the global sanitizeDOMValue available via this module's exported
 * `sanitizeDOMValue` variable.
 *
 * @param {(function(*,string,string,Node):*)|undefined} newSanitizeDOMValue the global sanitizeDOMValue callback
 * @return {void}
 */

export const setSanitizeDOMValue = function (newSanitizeDOMValue) {
  sanitizeDOMValue = newSanitizeDOMValue;
};
/**
 * Globally settable property to make Polymer Gestures use passive TouchEvent listeners when recognizing gestures.
 * When set to `true`, gestures made from touch will not be able to prevent scrolling, allowing for smoother
 * scrolling performance.
 * Defaults to `false` for backwards compatibility.
 */

export let passiveTouchGestures = false;
/**
 * Sets `passiveTouchGestures` globally for all elements using Polymer Gestures.
 *
 * @param {boolean} usePassive enable or disable passive touch gestures globally
 * @return {void}
 */

export const setPassiveTouchGestures = function (usePassive) {
  passiveTouchGestures = usePassive;
};
/**
 * Setting to ensure Polymer template evaluation only occurs based on tempates
 * defined in trusted script.  When true, `<dom-module>` re-registration is
 * disallowed, `<dom-bind>` is disabled, and `<dom-if>`/`<dom-repeat>`
 * templates will only evaluate in the context of a trusted element template.
 */

export let strictTemplatePolicy = false;
/**
 * Sets `strictTemplatePolicy` globally for all elements
 *
 * @param {boolean} useStrictPolicy enable or disable strict template policy
 *   globally
 * @return {void}
 */

export const setStrictTemplatePolicy = function (useStrictPolicy) {
  strictTemplatePolicy = useStrictPolicy;
};
/**
 * Setting to enable dom-module lookup from Polymer.Element.  By default,
 * templates must be defined in script using the `static get template()`
 * getter and the `html` tag function.  To enable legacy loading of templates
 * via dom-module, set this flag to true.
 */

export let allowTemplateFromDomModule = false;
/**
 * Sets `lookupTemplateFromDomModule` globally for all elements
 *
 * @param {boolean} allowDomModule enable or disable template lookup
 *   globally
 * @return {void}
 */

export const setAllowTemplateFromDomModule = function (allowDomModule) {
  allowTemplateFromDomModule = allowDomModule;
};
/**
 * Setting to skip processing style includes and re-writing urls in css styles.
 * Normally "included" styles are pulled into the element and all urls in styles
 * are re-written to be relative to the containing script url.
 * If no includes or relative urls are used in styles, these steps can be
 * skipped as an optimization.
 */

export let legacyOptimizations = false;
/**
 * Sets `legacyOptimizations` globally for all elements to enable optimizations
 * when only legacy based elements are used.
 *
 * @param {boolean} useLegacyOptimizations enable or disable legacy optimizations
 * includes and url rewriting
 * @return {void}
 */

export const setLegacyOptimizations = function (useLegacyOptimizations) {
  legacyOptimizations = useLegacyOptimizations;
};
/**
 * Setting to perform initial rendering synchronously when running under ShadyDOM.
 * This matches the behavior of Polymer 1.
 */

export let syncInitialRender = false;
/**
 * Sets `syncInitialRender` globally for all elements to enable synchronous
 * initial rendering.
 *
 * @param {boolean} useSyncInitialRender enable or disable synchronous initial
 * rendering globally.
 * @return {void}
 */

export const setSyncInitialRender = function (useSyncInitialRender) {
  syncInitialRender = useSyncInitialRender;
};
/**
 * Setting to cancel synthetic click events fired by older mobile browsers. Modern browsers
 * no longer fire synthetic click events, and the cancellation behavior can interfere
 * when programmatically clicking on elements.
 */

export let cancelSyntheticClickEvents = true;
/**
 * Sets `setCancelSyntheticEvents` globally for all elements to cancel synthetic click events.
 *
 * @param {boolean} useCancelSyntheticClickEvents enable or disable cancelling synthetic
 * events
 * @return {void}
 */

export const setCancelSyntheticClickEvents = function (useCancelSyntheticClickEvents) {
  cancelSyntheticClickEvents = useCancelSyntheticClickEvents;
};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:03</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.settings" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\settings.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.settings.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\settings.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>settings.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/settings.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.style.gather">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.style.gather.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.style.gather.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53164.061189</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/**
 * Module with utilities for collection CSS text from `<templates>`, external
 * stylesheets, and `dom-module`s.
 *
 * @summary Module with utilities for collection CSS text from various sources.
 */
import { DomModule } from '/%ZWebNode.Lib.Polymer.v3.dom.module.cls';
import { resolveCss } from '/%ZWebNode.Lib.Polymer.v3.resolve.url.cls';
const MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';
const INCLUDE_ATTR = 'include';
const SHADY_UNSCOPED_ATTR = 'shady-unscoped';
/**
 * @param {string} moduleId .
 * @return {?DomModule} .
 */

function importModule(moduleId) {
  return (
    /** @type {?DomModule} */
    DomModule.import(moduleId)
  );
}

function styleForImport(importDoc) {
  // NOTE: polyfill affordance.
  // under the HTMLImports polyfill, there will be no 'body',
  // but the import pseudo-doc can be used directly.
  let container = importDoc.body ? importDoc.body : importDoc;
  const importCss = resolveCss(container.textContent, importDoc.baseURI);
  const style = document.createElement('style');
  style.textContent = importCss;
  return style;
}
/** @typedef {{assetpath: string}} */


let templateWithAssetPath; // eslint-disable-line no-unused-vars

/**
 * Returns a list of <style> elements in a space-separated list of `dom-module`s.
 *
 * @function
 * @param {string} moduleIds List of dom-module id's within which to
 * search for css.
 * @return {!Array<!HTMLStyleElement>} Array of contained <style> elements
 */

export function stylesFromModules(moduleIds) {
  const modules = moduleIds.trim().split(/\s+/);
  const styles = [];

  for (let i = 0; i < modules.length; i++) {
    styles.push(...stylesFromModule(modules[i]));
  }

  return styles;
}
/**
 * Returns a list of <style> elements in a given `dom-module`.
 * Styles in a `dom-module` can come either from `<style>`s within the
 * first `<template>`, or else from one or more
 * `<link rel="import" type="css">` links outside the template.
 *
 * @param {string} moduleId dom-module id to gather styles from
 * @return {!Array<!HTMLStyleElement>} Array of contained styles.
 */

export function stylesFromModule(moduleId) {
  const m = importModule(moduleId);

  if (!m) {
    console.warn('Could not find style data in module named', moduleId);
    return [];
  }

  if (m._styles === undefined) {
    const styles = []; // module imports: <link rel="import" type="css">

    styles.push(..._stylesFromModuleImports(m)); // include css from the first template in the module

    const template =
    /** @type {?HTMLTemplateElement} */
    m.querySelector('template');

    if (template) {
      styles.push(...stylesFromTemplate(template,
      /** @type {templateWithAssetPath} */
      m.assetpath));
    }

    m._styles = styles;
  }

  return m._styles;
}
/**
 * Returns the `<style>` elements within a given template.
 *
 * @param {!HTMLTemplateElement} template Template to gather styles from
 * @param {string=} baseURI baseURI for style content
 * @return {!Array<!HTMLStyleElement>} Array of styles
 */

export function stylesFromTemplate(template, baseURI) {
  if (!template._styles) {
    const styles = []; // if element is a template, get content from its .content

    const e$ = template.content.querySelectorAll('style');

    for (let i = 0; i < e$.length; i++) {
      let e = e$[i]; // support style sharing by allowing styles to "include"
      // other dom-modules that contain styling

      let include = e.getAttribute(INCLUDE_ATTR);

      if (include) {
        styles.push(...stylesFromModules(include).filter(function (item, index, self) {
          return self.indexOf(item) === index;
        }));
      }

      if (baseURI) {
        e.textContent = resolveCss(e.textContent,
        /** @type {string} */
        baseURI);
      }

      styles.push(e);
    }

    template._styles = styles;
  }

  return template._styles;
}
/**
 * Returns a list of <style> elements  from stylesheets loaded via `<link rel="import" type="css">` links within the specified `dom-module`.
 *
 * @param {string} moduleId Id of `dom-module` to gather CSS from
 * @return {!Array<!HTMLStyleElement>} Array of contained styles.
 */

export function stylesFromModuleImports(moduleId) {
  let m = importModule(moduleId);
  return m ? _stylesFromModuleImports(m) : [];
}
/**
 * @param {!HTMLElement} module dom-module element that could contain `<link rel="import" type="css">` styles
 * @return {!Array<!HTMLStyleElement>} Array of contained styles
 */

function _stylesFromModuleImports(module) {
  const styles = [];
  const p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);

  for (let i = 0; i < p$.length; i++) {
    let p = p$[i];

    if (p.import) {
      const importDoc = p.import;
      const unscoped = p.hasAttribute(SHADY_UNSCOPED_ATTR);

      if (unscoped && !importDoc._unscopedStyle) {
        const style = styleForImport(importDoc);
        style.setAttribute(SHADY_UNSCOPED_ATTR, '');
        importDoc._unscopedStyle = style;
      } else if (!importDoc._style) {
        importDoc._style = styleForImport(importDoc);
      }

      styles.push(unscoped ? importDoc._unscopedStyle : importDoc._style);
    }
  }

  return styles;
}
/**
 *
 * Returns CSS text of styles in a space-separated list of `dom-module`s.
 * Note: This method is deprecated, use `stylesFromModules` instead.
 *
 * @deprecated
 * @param {string} moduleIds List of dom-module id's within which to
 * search for css.
 * @return {string} Concatenated CSS content from specified `dom-module`s
 */


export function cssFromModules(moduleIds) {
  let modules = moduleIds.trim().split(/\s+/);
  let cssText = '';

  for (let i = 0; i < modules.length; i++) {
    cssText += cssFromModule(modules[i]);
  }

  return cssText;
}
/**
 * Returns CSS text of styles in a given `dom-module`.  CSS in a `dom-module`
 * can come either from `<style>`s within the first `<template>`, or else
 * from one or more `<link rel="import" type="css">` links outside the
 * template.
 *
 * Any `<styles>` processed are removed from their original location.
 * Note: This method is deprecated, use `styleFromModule` instead.
 *
 * @deprecated
 * @param {string} moduleId dom-module id to gather styles from
 * @return {string} Concatenated CSS content from specified `dom-module`
 */

export function cssFromModule(moduleId) {
  let m = importModule(moduleId);

  if (m && m._cssText === undefined) {
    // module imports: <link rel="import" type="css">
    let cssText = _cssFromModuleImports(m); // include css from the first template in the module


    let t =
    /** @type {?HTMLTemplateElement} */
    m.querySelector('template');

    if (t) {
      cssText += cssFromTemplate(t,
      /** @type {templateWithAssetPath} */
      m.assetpath);
    }

    m._cssText = cssText || null;
  }

  if (!m) {
    console.warn('Could not find style data in module named', moduleId);
  }

  return m && m._cssText || '';
}
/**
 * Returns CSS text of `<styles>` within a given template.
 *
 * Any `<styles>` processed are removed from their original location.
 * Note: This method is deprecated, use `styleFromTemplate` instead.
 *
 * @deprecated
 * @param {!HTMLTemplateElement} template Template to gather styles from
 * @param {string} baseURI Base URI to resolve the URL against
 * @return {string} Concatenated CSS content from specified template
 */

export function cssFromTemplate(template, baseURI) {
  let cssText = '';
  const e$ = stylesFromTemplate(template, baseURI); // if element is a template, get content from its .content

  for (let i = 0; i < e$.length; i++) {
    let e = e$[i];

    if (e.parentNode) {
      e.parentNode.removeChild(e);
    }

    cssText += e.textContent;
  }

  return cssText;
}
/**
 * Returns CSS text from stylesheets loaded via `<link rel="import" type="css">`
 * links within the specified `dom-module`.
 *
 * Note: This method is deprecated, use `stylesFromModuleImports` instead.
 *
 * @deprecated
 *
 * @param {string} moduleId Id of `dom-module` to gather CSS from
 * @return {string} Concatenated CSS content from links in specified `dom-module`
 */

export function cssFromModuleImports(moduleId) {
  let m = importModule(moduleId);
  return m ? _cssFromModuleImports(m) : '';
}
/**
 * @deprecated
 * @param {!HTMLElement} module dom-module element that could contain `<link rel="import" type="css">` styles
 * @return {string} Concatenated CSS content from links in the dom-module
 */

function _cssFromModuleImports(module) {
  let cssText = '';

  let styles = _stylesFromModuleImports(module);

  for (let i = 0; i < styles.length; i++) {
    cssText += styles[i].textContent;
  }

  return cssText;
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:04</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.style.gather" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\style-gather.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.style.gather.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\style-gather.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>style-gather.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/style-gather.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.style.settings">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.style.settings.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.style.settings.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53164.204091</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';

export const nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);
let nativeCssVariables_;
/**
 * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings
 */

function calcCssVariables(settings) {
  if (settings && settings['shimcssproperties']) {
    nativeCssVariables_ = false;
  } else {
    // chrome 49 has semi-working css vars, check if box-shadow works
    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782
    // However, shim css custom properties are only supported with ShadyDOM enabled,
    // so fall back on native if we do not detect ShadyDOM
    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element
    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/
    nativeCssVariables_ = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/) && window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));
  }
}
/** @type {string | undefined} */


export let cssBuild;

if (window.ShadyCSS && window.ShadyCSS.cssBuild !== undefined) {
  cssBuild = window.ShadyCSS.cssBuild;
}
/** @type {boolean} */


export const disableRuntime = Boolean(window.ShadyCSS && window.ShadyCSS.disableRuntime);

if (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {
  nativeCssVariables_ = window.ShadyCSS.nativeCss;
} else if (window.ShadyCSS) {
  calcCssVariables(window.ShadyCSS); // reset window variable to let ShadyCSS API take its place

  window.ShadyCSS = undefined;
} else {
  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);
} // Hack for type error under new type inference which doesn't like that
// nativeCssVariables is updated in a function and assigns the type
// `function(): ?` instead of `boolean`.


export const nativeCssVariables =
/** @type {boolean} */
nativeCssVariables_;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:04</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.style.settings" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\style-settings.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.style.settings.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\style-settings.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>style-settings.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/style-settings.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.style.util">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.style.util.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.style.util.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53164.281019</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';

import { nativeShadow, nativeCssVariables, cssBuild } from '/%ZWebNode.Lib.Polymer.v3.style.settings.cls';
import { parse, stringify, types, StyleNode } from '/%ZWebNode.Lib.Polymer.v3.css.parse.cls'; // eslint-disable-line no-unused-vars

import { MEDIA_MATCH } from '/%ZWebNode.Lib.Polymer.v3.common.regex.cls';
import { processUnscopedStyle, isUnscopedStyle } from '/%ZWebNode.Lib.Polymer.v3.unscoped.style.handler.cls';
/**
 * @param {string|StyleNode} rules
 * @param {function(StyleNode)=} callback
 * @return {string}
 */

export function toCssText(rules, callback) {
  if (!rules) {
    return '';
  }

  if (typeof rules === 'string') {
    rules = parse(rules);
  }

  if (callback) {
    forEachRule(rules, callback);
  }

  return stringify(rules, nativeCssVariables);
}
/**
 * @param {HTMLStyleElement} style
 * @return {StyleNode}
 */

export function rulesForStyle(style) {
  if (!style['__cssRules'] && style.textContent) {
    style['__cssRules'] = parse(style.textContent);
  }

  return style['__cssRules'] || null;
} // Tests if a rule is a keyframes selector, which looks almost exactly
// like a normal selector but is not (it has nothing to do with scoping
// for example).

/**
 * @param {StyleNode} rule
 * @return {boolean}
 */

export function isKeyframesSelector(rule) {
  return Boolean(rule['parent']) && rule['parent']['type'] === types.KEYFRAMES_RULE;
}
/**
 * @param {StyleNode} node
 * @param {Function=} styleRuleCallback
 * @param {Function=} keyframesRuleCallback
 * @param {boolean=} onlyActiveRules
 */

export function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {
  if (!node) {
    return;
  }

  let skipRules = false;
  let type = node['type'];

  if (onlyActiveRules) {
    if (type === types.MEDIA_RULE) {
      let matchMedia = node['selector'].match(MEDIA_MATCH);

      if (matchMedia) {
        // if rule is a non matching @media rule, skip subrules
        if (!window.matchMedia(matchMedia[1]).matches) {
          skipRules = true;
        }
      }
    }
  }

  if (type === types.STYLE_RULE) {
    styleRuleCallback(node);
  } else if (keyframesRuleCallback && type === types.KEYFRAMES_RULE) {
    keyframesRuleCallback(node);
  } else if (type === types.MIXIN_RULE) {
    skipRules = true;
  }

  let r$ = node['rules'];

  if (r$ && !skipRules) {
    for (let i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);
    }
  }
} // add a string of cssText to the document.

/**
 * @param {string} cssText
 * @param {string} moniker
 * @param {Node} target
 * @param {Node} contextNode
 * @return {HTMLStyleElement}
 */

export function applyCss(cssText, moniker, target, contextNode) {
  let style = createScopeStyle(cssText, moniker);
  applyStyle(style, target, contextNode);
  return style;
}
/**
 * @param {string} cssText
 * @param {string} moniker
 * @return {HTMLStyleElement}
 */

export function createScopeStyle(cssText, moniker) {
  let style =
  /** @type {HTMLStyleElement} */
  document.createElement('style');

  if (moniker) {
    style.setAttribute('scope', moniker);
  }

  style.textContent = cssText;
  return style;
}
/**
 * Track the position of the last added style for placing placeholders
 * @type {Node}
 */

let lastHeadApplyNode = null; // insert a comment node as a styling position placeholder.

/**
 * @param {string} moniker
 * @return {!Comment}
 */

export function applyStylePlaceHolder(moniker) {
  let placeHolder = document.createComment(' Shady DOM styles for ' + moniker + ' ');
  let after = lastHeadApplyNode ? lastHeadApplyNode['nextSibling'] : null;
  let scope = document.head;
  scope.insertBefore(placeHolder, after || scope.firstChild);
  lastHeadApplyNode = placeHolder;
  return placeHolder;
}
/**
 * @param {HTMLStyleElement} style
 * @param {?Node} target
 * @param {?Node} contextNode
 */

export function applyStyle(style, target, contextNode) {
  target = target || document.head;
  let after = contextNode && contextNode.nextSibling || target.firstChild;
  target.insertBefore(style, after);

  if (!lastHeadApplyNode) {
    lastHeadApplyNode = style;
  } else {
    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode
    let position = style.compareDocumentPosition(lastHeadApplyNode);

    if (position === Node.DOCUMENT_POSITION_PRECEDING) {
      lastHeadApplyNode = style;
    }
  }
}
/**
 * @param {string} buildType
 * @return {boolean}
 */

export function isTargetedBuild(buildType) {
  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';
}
/**
 * Walk from text[start] matching parens and
 * returns position of the outer end paren
 * @param {string} text
 * @param {number} start
 * @return {number}
 */

export function findMatchingParen(text, start) {
  let level = 0;

  for (let i = start, l = text.length; i < l; i++) {
    if (text[i] === '(') {
      level++;
    } else if (text[i] === ')') {
      if (--level === 0) {
        return i;
      }
    }
  }

  return -1;
}
/**
 * @param {string} str
 * @param {function(string, string, string, string)} callback
 */

export function processVariableAndFallback(str, callback) {
  // find 'var('
  let start = str.indexOf('var(');

  if (start === -1) {
    // no var?, everything is prefix
    return callback(str, '', '', '');
  } //${prefix}var(${inner})${suffix}


  let end = findMatchingParen(str, start + 3);
  let inner = str.substring(start + 4, end);
  let prefix = str.substring(0, start); // suffix may have other variables

  let suffix = processVariableAndFallback(str.substring(end + 1), callback);
  let comma = inner.indexOf(','); // value and fallback args should be trimmed to match in property lookup

  if (comma === -1) {
    // variable, no fallback
    return callback(prefix, inner.trim(), '', suffix);
  } // var(${value},${fallback})


  let value = inner.substring(0, comma).trim();
  let fallback = inner.substring(comma + 1).trim();
  return callback(prefix, value, fallback, suffix);
}
/**
 * @param {Element} element
 * @param {string} value
 */

export function setElementClassRaw(element, value) {
  // use native setAttribute provided by ShadyDOM when setAttribute is patched
  if (nativeShadow) {
    element.setAttribute('class', value);
  } else {
    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);
  }
}
/**
 * @type {function(*):*}
 */

export const wrap = window['ShadyDOM'] && window['ShadyDOM']['wrap'] || (node => node);
/**
 * @param {Element | {is: string, extends: string}} element
 * @return {{is: string, typeExtension: string}}
 */

export function getIsExtends(element) {
  let localName = element['localName'];
  let is = '',
      typeExtension = '';
  /*
  NOTE: technically, this can be wrong for certain svg elements
  with `-` in the name like `<font-face>`
  */

  if (localName) {
    if (localName.indexOf('-') > -1) {
      is = localName;
    } else {
      typeExtension = localName;
      is = element.getAttribute && element.getAttribute('is') || '';
    }
  } else {
    is =
    /** @type {?} */
    element.is;
    typeExtension =
    /** @type {?} */
    element.extends;
  }

  return {
    is,
    typeExtension
  };
}
/**
 * @param {Element|DocumentFragment} element
 * @return {string}
 */

export function gatherStyleText(element) {
  /** @type {!Array<string>} */
  const styleTextParts = [];
  const styles =
  /** @type {!NodeList<!HTMLStyleElement>} */
  element.querySelectorAll('style');

  for (let i = 0; i < styles.length; i++) {
    const style = styles[i];

    if (isUnscopedStyle(style)) {
      if (!nativeShadow) {
        processUnscopedStyle(style);
        style.parentNode.removeChild(style);
      }
    } else {
      styleTextParts.push(style.textContent);
      style.parentNode.removeChild(style);
    }
  }

  return styleTextParts.join('').trim();
}
/**
 * Split a selector separated by commas into an array in a smart way
 * @param {string} selector
 * @return {!Array<string>}
 */

export function splitSelectorList(selector) {
  const parts = [];
  let part = '';

  for (let i = 0; i >= 0 && i < selector.length; i++) {
    // A selector with parentheses will be one complete part
    if (selector[i] === '(') {
      // find the matching paren
      const end = findMatchingParen(selector, i); // push the paren block into the part

      part += selector.slice(i, end + 1); // move the index to after the paren block

      i = end;
    } else if (selector[i] === ',') {
      parts.push(part);
      part = '';
    } else {
      part += selector[i];
    }
  } // catch any pieces after the last comma


  if (part) {
    parts.push(part);
  }

  return parts;
}
const CSS_BUILD_ATTR = 'css-build';
/**
 * Return the polymer-css-build "build type" applied to this element
 *
 * @param {!HTMLElement} element
 * @return {string} Can be "", "shady", or "shadow"
 */

export function getCssBuild(element) {
  if (cssBuild !== undefined) {
    return (
      /** @type {string} */
      cssBuild
    );
  }

  if (element.__cssBuild === undefined) {
    // try attribute first, as it is the common case
    const attrValue = element.getAttribute(CSS_BUILD_ATTR);

    if (attrValue) {
      element.__cssBuild = attrValue;
    } else {
      const buildComment = getBuildComment(element);

      if (buildComment !== '') {
        // remove build comment so it is not needlessly copied into every element instance
        removeBuildComment(element);
      }

      element.__cssBuild = buildComment;
    }
  }

  return element.__cssBuild || '';
}
/**
 * Check if the given element, either a <template> or <style>, has been processed
 * by polymer-css-build.
 *
 * If so, then we can make a number of optimizations:
 * - polymer-css-build will decompose mixins into individual CSS Custom Properties,
 * so the ApplyShim can be skipped entirely.
 * - Under native ShadowDOM, the style text can just be copied into each instance
 * without modification
 * - If the build is "shady" and ShadyDOM is in use, the styling does not need
 * scoping beyond the shimming of CSS Custom Properties
 *
 * @param {!HTMLElement} element
 * @return {boolean}
 */

export function elementHasBuiltCss(element) {
  return getCssBuild(element) !== '';
}
/**
 * For templates made with tagged template literals, polymer-css-build will
 * insert a comment of the form `<!--css-build:shadow-->`
 *
 * @param {!HTMLElement} element
 * @return {string}
 */

export function getBuildComment(element) {
  const buildComment = element.localName === 'template' ?
  /** @type {!HTMLTemplateElement} */
  element.content.firstChild : element.firstChild;

  if (buildComment instanceof Comment) {
    const commentParts = buildComment.textContent.trim().split(':');

    if (commentParts[0] === CSS_BUILD_ATTR) {
      return commentParts[1];
    }
  }

  return '';
}
/**
 * Check if the css build status is optimal, and do no unneeded work.
 *
 * @param {string=} cssBuild CSS build status
 * @return {boolean} css build is optimal or not
 */

export function isOptimalCssBuild(cssBuild = '') {
  // CSS custom property shim always requires work
  if (cssBuild === '' || !nativeCssVariables) {
    return false;
  }

  return nativeShadow ? cssBuild === 'shadow' : cssBuild === 'shady';
}
/**
 * @param {!HTMLElement} element
 */

function removeBuildComment(element) {
  const buildComment = element.localName === 'template' ?
  /** @type {!HTMLTemplateElement} */
  element.content.firstChild : element.firstChild;
  buildComment.parentNode.removeChild(buildComment);
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:04</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.style.util" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\style-util.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.style.util.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\style-util.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>style-util.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/style-util.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.telemetry">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.telemetry.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.telemetry.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53164.4581</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/**
 * Total number of Polymer element instances created.
 * @type {number}
 */
export let instanceCount = 0;
export function incrementInstanceCount() {
  instanceCount++;
}
/**
 * Array of Polymer element classes that have been finalized.
 * @type {!Array<!PolymerElementConstructor>}
 */

export const registrations = [];
/**
 * @param {!PolymerElementConstructor} prototype Element prototype to log
 * @private
 */

function _regLog(prototype) {
  console.log('[' +
  /** @type {?} */
  prototype.is + ']: registered');
}
/**
 * Registers a class prototype for telemetry purposes.
 * @param {!PolymerElementConstructor} prototype Element prototype to register
 * @protected
 */


export function register(prototype) {
  registrations.push(prototype);
}
/**
 * Logs all elements registered with an `is` to the console.
 * @public
 */

export function dumpRegistrations() {
  registrations.forEach(_regLog);
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:04</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.telemetry" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\telemetry.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.telemetry.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\telemetry.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>telemetry.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/telemetry.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.template.map">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.template.map.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.template.map.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53164.534702</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';
/**
 * @const {!Object<string, !HTMLTemplateElement>}
 */

const templateMap = {};
export default templateMap;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:04</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.template.map" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\template-map.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.template.map.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\template-map.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>template-map.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/template-map.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.template.stamp">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.template.stamp.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.template.stamp.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53164.607933</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { dedupingMixin } from '/%ZWebNode.Lib.Polymer.v3.mixin.cls'; // 1.x backwards-compatible auto-wrapper for template type extensions
// This is a clear layering violation and gives favored-nation status to
// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep
// a.) to ease 1.x backwards-compatibility due to loss of `is`, and
// b.) to maintain if/repeat capability in parser-constrained elements
//     (e.g. table, select) in lieu of native CE type extensions without
//     massive new invention in this space (e.g. directive system)

const templateExtensions = {
  'dom-if': true,
  'dom-repeat': true
};

function wrapTemplateExtension(node) {
  let is = node.getAttribute('is');

  if (is && templateExtensions[is]) {
    let t = node;
    t.removeAttribute('is');
    node = t.ownerDocument.createElement(is);
    t.parentNode.replaceChild(node, t);
    node.appendChild(t);

    while (t.attributes.length) {
      node.setAttribute(t.attributes[0].name, t.attributes[0].value);
      t.removeAttribute(t.attributes[0].name);
    }
  }

  return node;
}

function findTemplateNode(root, nodeInfo) {
  // recursively ascend tree until we hit root
  let parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo); // unwind the stack, returning the indexed node at each level

  if (parent) {
    // note: marginally faster than indexing via childNodes
    // (http://jsperf.com/childnodes-lookup)
    for (let n = parent.firstChild, i = 0; n; n = n.nextSibling) {
      if (nodeInfo.parentIndex === i++) {
        return n;
      }
    }
  } else {
    return root;
  }
} // construct `$` map (from id annotations)


function applyIdToMap(inst, map, node, nodeInfo) {
  if (nodeInfo.id) {
    map[nodeInfo.id] = node;
  }
} // install event listeners (from event annotations)


function applyEventListener(inst, node, nodeInfo) {
  if (nodeInfo.events && nodeInfo.events.length) {
    for (let j = 0, e$ = nodeInfo.events, e; j < e$.length && (e = e$[j]); j++) {
      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);
    }
  }
} // push configuration references at configure time


function applyTemplateContent(inst, node, nodeInfo) {
  if (nodeInfo.templateInfo) {
    node._templateInfo = nodeInfo.templateInfo;
  }
}

function createNodeEventHandler(context, eventName, methodName) {
  // Instances can optionally have a _methodHost which allows redirecting where
  // to find methods. Currently used by `templatize`.
  context = context._methodHost || context;

  let handler = function (e) {
    if (context[methodName]) {
      context[methodName](e, e.detail);
    } else {
      console.warn('listener method `' + methodName + '` not defined');
    }
  };

  return handler;
}
/**
 * Element mixin that provides basic template parsing and stamping, including
 * the following template-related features for stamped templates:
 *
 * - Declarative event listeners (`on-eventname="listener"`)
 * - Map of node id's to stamped node instances (`this.$.id`)
 * - Nested template content caching/removal and re-installation (performance
 *   optimization)
 *
 * @mixinFunction
 * polymer
 * @summary Element class mixin that provides basic template parsing and stamping
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */


export const TemplateStamp = dedupingMixin(
/**
 * @template T
 * @param {function(new:T)} superClass Class to apply mixin to.
 * @return {function(new:T)} superClass with mixin applied.
 */
superClass => {
  /**
   * polymer
   * @mixinClass
   * @implements {Polymer_TemplateStamp}
   */
  class TemplateStamp extends superClass {
    /**
     * Scans a template to produce template metadata.
     *
     * Template-specific metadata are stored in the object returned, and node-
     * specific metadata are stored in objects in its flattened `nodeInfoList`
     * array.  Only nodes in the template that were parsed as nodes of
     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object
     * contains an `index` (`childNodes` index in parent) and optionally
     * `parent`, which points to node info of its parent (including its index).
     *
     * The template metadata object returned from this method has the following
     * structure (many fields optional):
     *
     * ```js
     *   {
     *     // Flattened list of node metadata (for nodes that generated metadata)
     *     nodeInfoList: [
     *       {
     *         // `id` attribute for any nodes with id's for generating `$` map
     *         id: {string},
     *         // `on-event="handler"` metadata
     *         events: [
     *           {
     *             name: {string},   // event name
     *             value: {string},  // handler method name
     *           }, ...
     *         ],
     *         // Notes when the template contained a `<slot>` for shady DOM
     *         // optimization purposes
     *         hasInsertionPoint: {boolean},
     *         // For nested `<template>`` nodes, nested template metadata
     *         templateInfo: {object}, // nested template metadata
     *         // Metadata to allow efficient retrieval of instanced node
     *         // corresponding to this metadata
     *         parentInfo: {number},   // reference to parent nodeInfo>
     *         parentIndex: {number},  // index in parent's `childNodes` collection
     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`
     *       },
     *       ...
     *     ],
     *     // When true, the template had the `strip-whitespace` attribute
     *     // or was nested in a template with that setting
     *     stripWhitespace: {boolean},
     *     // For nested templates, nested template content is moved into
     *     // a document fragment stored here; this is an optimization to
     *     // avoid the cost of nested template cloning
     *     content: {DocumentFragment}
     *   }
     * ```
     *
     * This method kicks off a recursive treewalk as follows:
     *
     * ```
     *    _parseTemplate <---------------------+
     *      _parseTemplateContent              |
     *        _parseTemplateNode  <------------|--+
     *          _parseTemplateNestedTemplate --+  |
     *          _parseTemplateChildNodes ---------+
     *          _parseTemplateNodeAttributes
     *            _parseTemplateNodeAttribute
     *
     * ```
     *
     * These methods may be overridden to add custom metadata about templates
     * to either `templateInfo` or `nodeInfo`.
     *
     * Note that this method may be destructive to the template, in that
     * e.g. event annotations may be removed after being noted in the
     * template metadata.
     *
     * @param {!HTMLTemplateElement} template Template to parse
     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer
     *   template, for parsing nested templates
     * @return {!TemplateInfo} Parsed template metadata
     * @nocollapse
     */
    static _parseTemplate(template, outerTemplateInfo) {
      // since a template may be re-used, memo-ize metadata
      if (!template._templateInfo) {
        // TODO(rictic): fix typing
        let
        /** ? */
        templateInfo = template._templateInfo = {};
        templateInfo.nodeInfoList = [];
        templateInfo.stripWhiteSpace = outerTemplateInfo && outerTemplateInfo.stripWhiteSpace || template.hasAttribute('strip-whitespace'); // TODO(rictic): fix typing

        this._parseTemplateContent(template, templateInfo,
        /** @type {?} */
        {
          parent: null
        });
      }

      return template._templateInfo;
    }
    /**
     * See docs for _parseTemplateNode.
     *
     * @param {!HTMLTemplateElement} template .
     * @param {!TemplateInfo} templateInfo .
     * @param {!NodeInfo} nodeInfo .
     * @return {boolean} .
     * @nocollapse
     */


    static _parseTemplateContent(template, templateInfo, nodeInfo) {
      return this._parseTemplateNode(template.content, templateInfo, nodeInfo);
    }
    /**
     * Parses template node and adds template and node metadata based on
     * the current node, and its `childNodes` and `attributes`.
     *
     * This method may be overridden to add custom node or template specific
     * metadata based on this node.
     *
     * @param {Node} node Node to parse
     * @param {!TemplateInfo} templateInfo Template metadata for current template
     * @param {!NodeInfo} nodeInfo Node metadata for current template.
     * @return {boolean} `true` if the visited node added node-specific
     *   metadata to `nodeInfo`
     * @nocollapse
     */


    static _parseTemplateNode(node, templateInfo, nodeInfo) {
      let noted = false;
      let element =
      /** @type {!HTMLTemplateElement} */
      node;

      if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {
        noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;
      } else if (element.localName === 'slot') {
        // For ShadyDom optimization, indicating there is an insertion point
        templateInfo.hasInsertionPoint = true;
      }

      if (element.firstChild) {
        this._parseTemplateChildNodes(element, templateInfo, nodeInfo);
      }

      if (element.hasAttributes && element.hasAttributes()) {
        noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;
      }

      return noted;
    }
    /**
     * Parses template child nodes for the given root node.
     *
     * This method also wraps whitelisted legacy template extensions
     * (`is="dom-if"` and `is="dom-repeat"`) with their equivalent element
     * wrappers, collapses text nodes, and strips whitespace from the template
     * if the `templateInfo.stripWhitespace` setting was provided.
     *
     * @param {Node} root Root node whose `childNodes` will be parsed
     * @param {!TemplateInfo} templateInfo Template metadata for current template
     * @param {!NodeInfo} nodeInfo Node metadata for current template.
     * @return {void}
     */


    static _parseTemplateChildNodes(root, templateInfo, nodeInfo) {
      if (root.localName === 'script' || root.localName === 'style') {
        return;
      }

      for (let node = root.firstChild, parentIndex = 0, next; node; node = next) {
        // Wrap templates
        if (node.localName == 'template') {
          node = wrapTemplateExtension(node);
        } // collapse adjacent textNodes: fixes an IE issue that can cause
        // text nodes to be inexplicably split =(
        // note that root.normalize() should work but does not so we do this
        // manually.


        next = node.nextSibling;

        if (node.nodeType === Node.TEXT_NODE) {
          let
          /** Node */
          n = next;

          while (n && n.nodeType === Node.TEXT_NODE) {
            node.textContent += n.textContent;
            next = n.nextSibling;
            root.removeChild(n);
            n = next;
          } // optionally strip whitespace


          if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {
            root.removeChild(node);
            continue;
          }
        }

        let childInfo =
        /** @type {!NodeInfo} */
        {
          parentIndex,
          parentInfo: nodeInfo
        };

        if (this._parseTemplateNode(node, templateInfo, childInfo)) {
          childInfo.infoIndex = templateInfo.nodeInfoList.push(childInfo) - 1;
        } // Increment if not removed


        if (node.parentNode) {
          parentIndex++;
        }
      }
    }
    /**
     * Parses template content for the given nested `<template>`.
     *
     * Nested template info is stored as `templateInfo` in the current node's
     * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.
     * It will then be the responsibility of the host to set it back to the
     * template and for users stamping nested templates to use the
     * `_contentForTemplate` method to retrieve the content for this template
     * (an optimization to avoid the cost of cloning nested template content).
     *
     * @param {HTMLTemplateElement} node Node to parse (a <template>)
     * @param {TemplateInfo} outerTemplateInfo Template metadata for current template
     *   that includes the template `node`
     * @param {!NodeInfo} nodeInfo Node metadata for current template.
     * @return {boolean} `true` if the visited node added node-specific
     *   metadata to `nodeInfo`
     * @nocollapse
     */


    static _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {
      // TODO(rictic): the type of node should be non-null
      let element =
      /** @type {!HTMLTemplateElement} */
      node;

      let templateInfo = this._parseTemplate(element, outerTemplateInfo);

      let content = templateInfo.content = element.content.ownerDocument.createDocumentFragment();
      content.appendChild(element.content);
      nodeInfo.templateInfo = templateInfo;
      return true;
    }
    /**
     * Parses template node attributes and adds node metadata to `nodeInfo`
     * for nodes of interest.
     *
     * @param {Element} node Node to parse
     * @param {!TemplateInfo} templateInfo Template metadata for current
     *     template
     * @param {!NodeInfo} nodeInfo Node metadata for current template.
     * @return {boolean} `true` if the visited node added node-specific
     *   metadata to `nodeInfo`
     * @nocollapse
     */


    static _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {
      // Make copy of original attribute list, since the order may change
      // as attributes are added and removed
      let noted = false;
      let attrs = Array.from(node.attributes);

      for (let i = attrs.length - 1, a; a = attrs[i]; i--) {
        noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;
      }

      return noted;
    }
    /**
     * Parses a single template node attribute and adds node metadata to
     * `nodeInfo` for attributes of interest.
     *
     * This implementation adds metadata for `on-event="handler"` attributes
     * and `id` attributes.
     *
     * @param {Element} node Node to parse
     * @param {!TemplateInfo} templateInfo Template metadata for current template
     * @param {!NodeInfo} nodeInfo Node metadata for current template.
     * @param {string} name Attribute name
     * @param {string} value Attribute value
     * @return {boolean} `true` if the visited node added node-specific
     *   metadata to `nodeInfo`
     * @nocollapse
     */


    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {
      // events (on-*)
      if (name.slice(0, 3) === 'on-') {
        node.removeAttribute(name);
        nodeInfo.events = nodeInfo.events || [];
        nodeInfo.events.push({
          name: name.slice(3),
          value
        });
        return true;
      } // static id
      else if (name === 'id') {
          nodeInfo.id = value;
          return true;
        }

      return false;
    }
    /**
     * Returns the `content` document fragment for a given template.
     *
     * For nested templates, Polymer performs an optimization to cache nested
     * template content to avoid the cost of cloning deeply nested templates.
     * This method retrieves the cached content for a given template.
     *
     * @param {HTMLTemplateElement} template Template to retrieve `content` for
     * @return {DocumentFragment} Content fragment
     * @nocollapse
     */


    static _contentForTemplate(template) {
      let templateInfo =
      /** @type {HTMLTemplateElementWithInfo} */
      template._templateInfo;
      return templateInfo && templateInfo.content || template.content;
    }
    /**
     * Clones the provided template content and returns a document fragment
     * containing the cloned dom.
     *
     * The template is parsed (once and memoized) using this library's
     * template parsing features, and provides the following value-added
     * features:
     * * Adds declarative event listeners for `on-event="handler"` attributes
     * * Generates an "id map" for all nodes with id's under `$` on returned
     *   document fragment
     * * Passes template info including `content` back to templates as
     *   `_templateInfo` (a performance optimization to avoid deep template
     *   cloning)
     *
     * Note that the memoized template parsing process is destructive to the
     * template: attributes for bindings and declarative event listeners are
     * removed after being noted in notes, and any nested `<template>.content`
     * is removed and stored in notes as well.
     *
     * @param {!HTMLTemplateElement} template Template to stamp
     * @return {!StampedTemplate} Cloned template content
     * @override
     */


    _stampTemplate(template) {
      // Polyfill support: bootstrap the template if it has not already been
      if (template && !template.content && window.HTMLTemplateElement && HTMLTemplateElement.decorate) {
        HTMLTemplateElement.decorate(template);
      }

      let templateInfo = this.constructor._parseTemplate(template);

      let nodeInfo = templateInfo.nodeInfoList;
      let content = templateInfo.content || template.content;
      let dom =
      /** @type {DocumentFragment} */
      document.importNode(content, true); // NOTE: ShadyDom optimization indicating there is an insertion point

      dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;
      let nodes = dom.nodeList = new Array(nodeInfo.length);
      dom.$ = {};

      for (let i = 0, l = nodeInfo.length, info; i < l && (info = nodeInfo[i]); i++) {
        let node = nodes[i] = findTemplateNode(dom, info);
        applyIdToMap(this, dom.$, node, info);
        applyTemplateContent(this, node, info);
        applyEventListener(this, node, info);
      }

      dom =
      /** @type {!StampedTemplate} */
      dom; // eslint-disable-line no-self-assign

      return dom;
    }
    /**
     * Adds an event listener by method name for the event provided.
     *
     * This method generates a handler function that looks up the method
     * name at handling time.
     *
     * @param {!EventTarget} node Node to add listener on
     * @param {string} eventName Name of event
     * @param {string} methodName Name of method
     * @param {*=} context Context the method will be called on (defaults
     *   to `node`)
     * @return {Function} Generated handler function
     * @override
     */


    _addMethodEventListenerToNode(node, eventName, methodName, context) {
      context = context || node;
      let handler = createNodeEventHandler(context, eventName, methodName);

      this._addEventListenerToNode(node, eventName, handler);

      return handler;
    }
    /**
     * Override point for adding custom or simulated event handling.
     *
     * @param {!EventTarget} node Node to add event listener to
     * @param {string} eventName Name of event
     * @param {function(!Event):void} handler Listener function to add
     * @return {void}
     * @override
     */


    _addEventListenerToNode(node, eventName, handler) {
      node.addEventListener(eventName, handler);
    }
    /**
     * Override point for adding custom or simulated event handling.
     *
     * @param {!EventTarget} node Node to remove event listener from
     * @param {string} eventName Name of event
     * @param {function(!Event):void} handler Listener function to remove
     * @return {void}
     * @override
     */


    _removeEventListenerFromNode(node, eventName, handler) {
      node.removeEventListener(eventName, handler);
    }

  }

  return TemplateStamp;
});
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:04</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.template.stamp" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\template-stamp.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.template.stamp.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\template-stamp.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>template-stamp.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/template-stamp.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.templatize">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.templatize.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.templatize.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53164.823634</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/**
 * Module for preparing and stamping instances of templates that utilize
 * Polymer's data-binding and declarative event listener features.
 *
 * Example:
 *
 *     // Get a template from somewhere, e.g. light DOM
 *     let template = this.querySelector('template');
 *     // Prepare the template
 *     let TemplateClass = Templatize.templatize(template);
 *     // Instance the template with an initial data model
 *     let instance = new TemplateClass({myProp: 'initial'});
 *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM
 *     this.shadowRoot.appendChild(instance.root);
 *     // Changing a property on the instance will propagate to bindings
 *     // in the template
 *     instance.myProp = 'new value';
 *
 * The `options` dictionary passed to `templatize` allows for customizing
 * features of the generated template class, including how outer-scope host
 * properties should be forwarded into template instances, how any instance
 * properties added into the template's scope should be notified out to
 * the host, and whether the instance should be decorated as a "parent model"
 * of any event handlers.
 *
 *     // Customize property forwarding and event model decoration
 *     let TemplateClass = Templatize.templatize(template, this, {
 *       parentModel: true,
 *       forwardHostProp(property, value) {...},
 *       instanceProps: {...},
 *       notifyInstanceProp(instance, property, value) {...},
 *     });
 *
 * @summary Module for preparing and stamping instances of templates
 *   utilizing Polymer templating features.
 */
import '/%ZWebNode.Lib.Polymer.v3.boot.cls';
import { PropertyEffects } from '/%ZWebNode.Lib.Polymer.v3.property.effects.cls';
import { MutableData } from '/%ZWebNode.Lib.Polymer.v3.mutable.data.cls';
import { strictTemplatePolicy } from '/%ZWebNode.Lib.Polymer.v3.settings.cls';
import { wrap } from '/%ZWebNode.Lib.Polymer.v3.wrap.cls'; // Base class for HTMLTemplateElement extension that has property effects
// machinery for propagating host properties to children. This is an ES5
// class only because Babel (incorrectly) requires super() in the class
// constructor even though no `this` is used and it returns an instance.

let newInstance = null;
/**
 * @constructor
 * @extends {HTMLTemplateElement}
 * @private
 */

function HTMLTemplateElementExtension() {
  return newInstance;
}

HTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {
  constructor: {
    value: HTMLTemplateElementExtension,
    writable: true
  }
});
/**
 * @constructor
 * @implements {Polymer_PropertyEffects}
 * @extends {HTMLTemplateElementExtension}
 * @private
 */

const DataTemplate = PropertyEffects(HTMLTemplateElementExtension);
/**
 * @constructor
 * @implements {Polymer_MutableData}
 * @extends {DataTemplate}
 * @private
 */

const MutableDataTemplate = MutableData(DataTemplate); // Applies a DataTemplate subclass to a <template> instance

function upgradeTemplate(template, constructor) {
  newInstance = template;
  Object.setPrototypeOf(template, constructor.prototype);
  new constructor();
  newInstance = null;
}
/**
 * Base class for TemplateInstance.
 * @constructor
 * @extends {HTMLElement}
 * @implements {Polymer_PropertyEffects}
 * @private
 */


const templateInstanceBase = PropertyEffects( // This cast shouldn't be neccessary, but Closure doesn't understand that
// "class {}" is a constructor function.

/** @type {function(new:Object)} */
class {});
/**
 * polymer
 * @customElement
 * @appliesMixin PropertyEffects
 * @unrestricted
 */

class TemplateInstanceBase extends templateInstanceBase {
  constructor(props) {
    super();

    this._configureProperties(props);
    /** @type {!StampedTemplate} */


    this.root = this._stampTemplate(this.__dataHost); // Save list of stamped children

    let children = [];
    /** @suppress {invalidCasts} */

    this.children =
    /** @type {!NodeList} */
    children; // Polymer 1.x did not use `Polymer.dom` here so not bothering.

    for (let n = this.root.firstChild; n; n = n.nextSibling) {
      children.push(n);
      n.__templatizeInstance = this;
    }

    if (this.__templatizeOwner && this.__templatizeOwner.__hideTemplateChildren__) {
      this._showHideChildren(true);
    } // Flush props only when props are passed if instance props exist
    // or when there isn't instance props.


    let options = this.__templatizeOptions;

    if (props && options.instanceProps || !options.instanceProps) {
      this._enableProperties();
    }
  }
  /**
   * Configure the given `props` by calling `_setPendingProperty`. Also
   * sets any properties stored in `__hostProps`.
   * @private
   * @param {Object} props Object of property name-value pairs to set.
   * @return {void}
   */


  _configureProperties(props) {
    let options = this.__templatizeOptions;

    if (options.forwardHostProp) {
      for (let hprop in this.__hostProps) {
        this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);
      }
    } // Any instance props passed in the constructor will overwrite host props;
    // normally this would be a user error but we don't specifically filter them


    for (let iprop in props) {
      this._setPendingProperty(iprop, props[iprop]);
    }
  }
  /**
   * Forwards a host property to this instance.  This method should be
   * called on instances from the `options.forwardHostProp` callback
   * to propagate changes of host properties to each instance.
   *
   * Note this method enqueues the change, which are flushed as a batch.
   *
   * @param {string} prop Property or path name
   * @param {*} value Value of the property to forward
   * @return {void}
   */


  forwardHostProp(prop, value) {
    if (this._setPendingPropertyOrPath(prop, value, false, true)) {
      this.__dataHost._enqueueClient(this);
    }
  }
  /**
   * Override point for adding custom or simulated event handling.
   *
   * @override
   * @param {!Node} node Node to add event listener to
   * @param {string} eventName Name of event
   * @param {function(!Event):void} handler Listener function to add
   * @return {void}
   */


  _addEventListenerToNode(node, eventName, handler) {
    if (this._methodHost && this.__templatizeOptions.parentModel) {
      // If this instance should be considered a parent model, decorate
      // events this template instance as `model`
      this._methodHost._addEventListenerToNode(node, eventName, e => {
        e.model = this;
        handler(e);
      });
    } else {
      // Otherwise delegate to the template's host (which could be)
      // another template instance
      let templateHost = this.__dataHost.__dataHost;

      if (templateHost) {
        templateHost._addEventListenerToNode(node, eventName, handler);
      }
    }
  }
  /**
   * Shows or hides the template instance top level child elements. For
   * text nodes, `textContent` is removed while "hidden" and replaced when
   * "shown."
   * @param {boolean} hide Set to true to hide the children;
   * set to false to show them.
   * @return {void}
   * @protected
   */


  _showHideChildren(hide) {
    let c = this.children;

    for (let i = 0; i < c.length; i++) {
      let n = c[i]; // Ignore non-changes

      if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {
        if (n.nodeType === Node.TEXT_NODE) {
          if (hide) {
            n.__polymerTextContent__ = n.textContent;
            n.textContent = '';
          } else {
            n.textContent = n.__polymerTextContent__;
          } // remove and replace slot

        } else if (n.localName === 'slot') {
          if (hide) {
            n.__polymerReplaced__ = document.createComment('hidden-slot');
            wrap(wrap(n).parentNode).replaceChild(n.__polymerReplaced__, n);
          } else {
            const replace = n.__polymerReplaced__;

            if (replace) {
              wrap(wrap(replace).parentNode).replaceChild(n, replace);
            }
          }
        } else if (n.style) {
          if (hide) {
            n.__polymerDisplay__ = n.style.display;
            n.style.display = 'none';
          } else {
            n.style.display = n.__polymerDisplay__;
          }
        }
      }

      n.__hideTemplateChildren__ = hide;

      if (n._showHideChildren) {
        n._showHideChildren(hide);
      }
    }
  }
  /**
   * Overrides default property-effects implementation to intercept
   * textContent bindings while children are "hidden" and cache in
   * private storage for later retrieval.
   *
   * @override
   * @param {!Node} node The node to set a property on
   * @param {string} prop The property to set
   * @param {*} value The value to set
   * @return {void}
   * @protected
   */


  _setUnmanagedPropertyToNode(node, prop, value) {
    if (node.__hideTemplateChildren__ && node.nodeType == Node.TEXT_NODE && prop == 'textContent') {
      node.__polymerTextContent__ = value;
    } else {
      super._setUnmanagedPropertyToNode(node, prop, value);
    }
  }
  /**
   * Find the parent model of this template instance.  The parent model
   * is either another templatize instance that had option `parentModel: true`,
   * or else the host element.
   *
   * @return {!Polymer_PropertyEffects} The parent model of this instance
   */


  get parentModel() {
    let model = this.__parentModel;

    if (!model) {
      let options;
      model = this;

      do {
        // A template instance's `__dataHost` is a <template>
        // `model.__dataHost.__dataHost` is the template's host
        model = model.__dataHost.__dataHost;
      } while ((options = model.__templatizeOptions) && !options.parentModel);

      this.__parentModel = model;
    }

    return model;
  }
  /**
   * Stub of HTMLElement's `dispatchEvent`, so that effects that may
   * dispatch events safely no-op.
   *
   * @param {Event} event Event to dispatch
   * @return {boolean} Always true.
   * @override
   */


  dispatchEvent(event) {
    // eslint-disable-line no-unused-vars
    return true;
  }

}
/** @type {!DataTemplate} */


TemplateInstanceBase.prototype.__dataHost;
/** @type {!TemplatizeOptions} */

TemplateInstanceBase.prototype.__templatizeOptions;
/** @type {!Polymer_PropertyEffects} */

TemplateInstanceBase.prototype._methodHost;
/** @type {!Object} */

TemplateInstanceBase.prototype.__templatizeOwner;
/** @type {!Object} */

TemplateInstanceBase.prototype.__hostProps;
/**
 * @constructor
 * @extends {TemplateInstanceBase}
 * @implements {Polymer_MutableData}
 * @private
 */

const MutableTemplateInstanceBase = MutableData( // This cast shouldn't be necessary, but Closure doesn't seem to understand
// this constructor.

/** @type {function(new:TemplateInstanceBase)} */
TemplateInstanceBase);

function findMethodHost(template) {
  // Technically this should be the owner of the outermost template.
  // In shadow dom, this is always getRootNode().host, but we can
  // approximate this via cooperation with our dataHost always setting
  // `_methodHost` as long as there were bindings (or id's) on this
  // instance causing it to get a dataHost.
  let templateHost = template.__dataHost;
  return templateHost && templateHost._methodHost || templateHost;
}
/* eslint-disable valid-jsdoc */

/**
 * @suppress {missingProperties} class.prototype is not defined for some reason
 */


function createTemplatizerClass(template, templateInfo, options) {
  /**
   * @constructor
   * @extends {TemplateInstanceBase}
   */
  let templatizerBase = options.mutableData ? MutableTemplateInstanceBase : TemplateInstanceBase; // Affordance for global mixins onto TemplatizeInstance

  if (templatize.mixin) {
    templatizerBase = templatize.mixin(templatizerBase);
  }
  /**
   * Anonymous class created by the templatize
   * @constructor
   * @private
   */


  let klass = class extends templatizerBase {};
  /** @override */

  klass.prototype.__templatizeOptions = options;

  klass.prototype._bindTemplate(template);

  addNotifyEffects(klass, template, templateInfo, options);
  return klass;
}
/**
 * Adds propagate effects from the template to the template instance for
 * properties that the host binds to the template using the `_host_` prefix.
 * 
 * @suppress {missingProperties} class.prototype is not defined for some reason
 */


function addPropagateEffects(template, templateInfo, options) {
  let userForwardHostProp = options.forwardHostProp;

  if (userForwardHostProp && templateInfo.hasHostProps) {
    // Provide data API and property effects on memoized template class
    let klass = templateInfo.templatizeTemplateClass;

    if (!klass) {
      /**
       * @constructor
       * @extends {DataTemplate}
       */
      let templatizedBase = options.mutableData ? MutableDataTemplate : DataTemplate;
      /** @private */

      klass = templateInfo.templatizeTemplateClass = class TemplatizedTemplate extends templatizedBase {}; // Add template - >instances effects
      // and host <- template effects

      let hostProps = templateInfo.hostProps;

      for (let prop in hostProps) {
        klass.prototype._addPropertyEffect('_host_' + prop, klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE, {
          fn: createForwardHostPropEffect(prop, userForwardHostProp)
        });

        klass.prototype._createNotifyingProperty('_host_' + prop);
      }
    }

    upgradeTemplate(template, klass); // Mix any pre-bound data into __data; no need to flush this to
    // instances since they pull from the template at instance-time

    if (template.__dataProto) {
      // Note, generally `__dataProto` could be chained, but it's guaranteed
      // to not be since this is a vanilla template we just added effects to
      Object.assign(template.__data, template.__dataProto);
    } // Clear any pending data for performance


    template.__dataTemp = {};
    template.__dataPending = null;
    template.__dataOld = null;

    template._enableProperties();
  }
}
/* eslint-enable valid-jsdoc */


function createForwardHostPropEffect(hostProp, userForwardHostProp) {
  return function forwardHostProp(template, prop, props) {
    userForwardHostProp.call(template.__templatizeOwner, prop.substring('_host_'.length), props[prop]);
  };
}

function addNotifyEffects(klass, template, templateInfo, options) {
  let hostProps = templateInfo.hostProps || {};

  for (let iprop in options.instanceProps) {
    delete hostProps[iprop];
    let userNotifyInstanceProp = options.notifyInstanceProp;

    if (userNotifyInstanceProp) {
      klass.prototype._addPropertyEffect(iprop, klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY, {
        fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)
      });
    }
  }

  if (options.forwardHostProp && template.__dataHost) {
    for (let hprop in hostProps) {
      // As we're iterating hostProps in this function, note whether
      // there were any, for an optimization in addPropagateEffects
      if (!templateInfo.hasHostProps) {
        templateInfo.hasHostProps = true;
      }

      klass.prototype._addPropertyEffect(hprop, klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY, {
        fn: createNotifyHostPropEffect()
      });
    }
  }
}

function createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {
  return function notifyInstanceProp(inst, prop, props) {
    userNotifyInstanceProp.call(inst.__templatizeOwner, inst, prop, props[prop]);
  };
}

function createNotifyHostPropEffect() {
  return function notifyHostProp(inst, prop, props) {
    inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);
  };
}
/**
 * Returns an anonymous `PropertyEffects` class bound to the
 * `<template>` provided.  Instancing the class will result in the
 * template being stamped into a document fragment stored as the instance's
 * `root` property, after which it can be appended to the DOM.
 *
 * Templates may utilize all Polymer data-binding features as well as
 * declarative event listeners.  Event listeners and inline computing
 * functions in the template will be called on the host of the template.
 *
 * The constructor returned takes a single argument dictionary of initial
 * property values to propagate into template bindings.  Additionally
 * host properties can be forwarded in, and instance properties can be
 * notified out by providing optional callbacks in the `options` dictionary.
 *
 * Valid configuration in `options` are as follows:
 *
 * - `forwardHostProp(property, value)`: Called when a property referenced
 *   in the template changed on the template's host. As this library does
 *   not retain references to templates instanced by the user, it is the
 *   templatize owner's responsibility to forward host property changes into
 *   user-stamped instances.  The `instance.forwardHostProp(property, value)`
 *    method on the generated class should be called to forward host
 *   properties into the template to prevent unnecessary property-changed
 *   notifications. Any properties referenced in the template that are not
 *   defined in `instanceProps` will be notified up to the template's host
 *   automatically.
 * - `instanceProps`: Dictionary of property names that will be added
 *   to the instance by the templatize owner.  These properties shadow any
 *   host properties, and changes within the template to these properties
 *   will result in `notifyInstanceProp` being called.
 * - `mutableData`: When `true`, the generated class will skip strict
 *   dirty-checking for objects and arrays (always consider them to be
 *   "dirty").
 * - `notifyInstanceProp(instance, property, value)`: Called when
 *   an instance property changes.  Users may choose to call `notifyPath`
 *   on e.g. the owner to notify the change.
 * - `parentModel`: When `true`, events handled by declarative event listeners
 *   (`on-event="handler"`) will be decorated with a `model` property pointing
 *   to the template instance that stamped it.  It will also be returned
 *   from `instance.parentModel` in cases where template instance nesting
 *   causes an inner model to shadow an outer model.
 *
 * All callbacks are called bound to the `owner`. Any context
 * needed for the callbacks (such as references to `instances` stamped)
 * should be stored on the `owner` such that they can be retrieved via
 * `this`.
 *
 * When `options.forwardHostProp` is declared as an option, any properties
 * referenced in the template will be automatically forwarded from the host of
 * the `<template>` to instances, with the exception of any properties listed in
 * the `options.instanceProps` object.  `instanceProps` are assumed to be
 * managed by the owner of the instances, either passed into the constructor
 * or set after the fact.  Note, any properties passed into the constructor will
 * always be set to the instance (regardless of whether they would normally
 * be forwarded from the host).
 *
 * Note that `templatize()` can be run only once for a given `<template>`.
 * Further calls will result in an error. Also, there is a special
 * behavior if the template was duplicated through a mechanism such as
 * `<dom-repeat>` or `<test-fixture>`. In this case, all calls to
 * `templatize()` return the same class for all duplicates of a template.
 * The class returned from `templatize()` is generated only once using
 * the `options` from the first call. This means that any `options`
 * provided to subsequent calls will be ignored. Therefore, it is very
 * important not to close over any variables inside the callbacks. Also,
 * arrow functions must be avoided because they bind the outer `this`.
 * Inside the callbacks, any contextual information can be accessed
 * through `this`, which points to the `owner`.
 *
 * @param {!HTMLTemplateElement} template Template to templatize
 * @param {Polymer_PropertyEffects=} owner Owner of the template instances;
 *   any optional callbacks will be bound to this owner.
 * @param {Object=} options Options dictionary (see summary for details)
 * @return {function(new:TemplateInstanceBase, Object=)} Generated class bound
 *   to the template provided
 * @suppress {invalidCasts}
 */


export function templatize(template, owner, options) {
  // Under strictTemplatePolicy, the templatized element must be owned
  // by a (trusted) Polymer element, indicated by existence of _methodHost;
  // e.g. for dom-if & dom-repeat in main document, _methodHost is null
  if (strictTemplatePolicy && !findMethodHost(template)) {
    throw new Error('strictTemplatePolicy: template owner not trusted');
  }

  options =
  /** @type {!TemplatizeOptions} */
  options || {};

  if (template.__templatizeOwner) {
    throw new Error('A <template> can only be templatized once');
  }

  template.__templatizeOwner = owner;
  const ctor = owner ? owner.constructor : TemplateInstanceBase;

  let templateInfo = ctor._parseTemplate(template); // Get memoized base class for the prototypical template, which
  // includes property effects for binding template & forwarding

  /**
   * @constructor
   * @extends {TemplateInstanceBase}
   */


  let baseClass = templateInfo.templatizeInstanceClass;

  if (!baseClass) {
    baseClass = createTemplatizerClass(template, templateInfo, options);
    templateInfo.templatizeInstanceClass = baseClass;
  } // Host property forwarding must be installed onto template instance


  addPropagateEffects(template, templateInfo, options); // Subclass base class and add reference for this specific template

  /** @private */

  let klass = class TemplateInstance extends baseClass {};
  /** @override */

  klass.prototype._methodHost = findMethodHost(template);
  /** @override */

  klass.prototype.__dataHost =
  /** @type {!DataTemplate} */
  template;
  /** @override */

  klass.prototype.__templatizeOwner =
  /** @type {!Object} */
  owner;
  /** @override */

  klass.prototype.__hostProps = templateInfo.hostProps;
  klass =
  /** @type {function(new:TemplateInstanceBase)} */
  klass; //eslint-disable-line no-self-assign

  return klass;
}
/**
 * Returns the template "model" associated with a given element, which
 * serves as the binding scope for the template instance the element is
 * contained in. A template model is an instance of
 * `TemplateInstanceBase`, and should be used to manipulate data
 * associated with this template instance.
 *
 * Example:
 *
 *   let model = modelForElement(el);
 *   if (model.index < 10) {
 *     model.set('item.checked', true);
 *   }
 *
 * @param {HTMLTemplateElement} template The model will be returned for
 *   elements stamped from this template
 * @param {Node=} node Node for which to return a template model.
 * @return {TemplateInstanceBase} Template instance representing the
 *   binding scope for the element
 */

export function modelForElement(template, node) {
  let model;

  while (node) {
    // An element with a __templatizeInstance marks the top boundary
    // of a scope; walk up until we find one, and then ensure that
    // its __dataHost matches `this`, meaning this dom-repeat stamped it
    if (model = node.__templatizeInstance) {
      // Found an element stamped by another template; keep walking up
      // from its __dataHost
      if (model.__dataHost != template) {
        node = model.__dataHost;
      } else {
        return model;
      }
    } else {
      // Still in a template scope, keep going up until
      // a __templatizeInstance is found
      node = wrap(node).parentNode;
    }
  }

  return null;
}
export { TemplateInstanceBase };
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:04</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.templatize" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\templatize.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.templatize.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\templatize.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>templatize.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/templatize.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.templatizer.behavior">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.templatizer.behavior.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.templatizer.behavior.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53165.064148</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import { TemplateInstanceBase, templatize, modelForElement } from '/%ZWebNode.Lib.Polymer.v3.templatize.cls'; // eslint-disable-line no-unused-vars

/**
 * @typedef {{
 *   _templatizerTemplate: HTMLTemplateElement,
 *   _parentModel: boolean,
 *   _instanceProps: Object,
 *   _forwardHostPropV2: Function,
 *   _notifyInstancePropV2: Function,
 *   ctor: function(new:TemplateInstanceBase, Object=)
 * }}
 */

let TemplatizerUser; // eslint-disable-line

/**
 * The `Templatizer` behavior adds methods to generate instances of
 * templates that are each managed by an anonymous `PropertyEffects`
 * instance where data-bindings in the stamped template content are bound to
 * accessors on itself.
 *
 * This behavior is provided in Polymer 2.x-3.x as a hybrid-element convenience
 * only.  For non-hybrid usage, the `Templatize` library
 * should be used instead.
 *
 * Example:
 *
 *     import {dom} from 'polymer/polymer/lib/legacy/polymer.dom.js';
 *     // Get a template from somewhere, e.g. light DOM
 *     let template = this.querySelector('template');
 *     // Prepare the template
 *     this.templatize(template);
 *     // Instance the template with an initial data model
 *     let instance = this.stamp({myProp: 'initial'});
 *     // Insert the instance's DOM somewhere, e.g. light DOM
 *     dom(this).appendChild(instance.root);
 *     // Changing a property on the instance will propagate to bindings
 *     // in the template
 *     instance.myProp = 'new value';
 *
 * Users of `Templatizer` may need to implement the following abstract
 * API's to determine how properties and paths from the host should be
 * forwarded into to instances:
 *
 *     _forwardHostPropV2: function(prop, value)
 *
 * Likewise, users may implement these additional abstract API's to determine
 * how instance-specific properties that change on the instance should be
 * forwarded out to the host, if necessary.
 *
 *     _notifyInstancePropV2: function(inst, prop, value)
 *
 * In order to determine which properties are instance-specific and require
 * custom notification via `_notifyInstanceProp`, define an `_instanceProps`
 * object containing keys for each instance prop, for example:
 *
 *     _instanceProps: {
 *       item: true,
 *       index: true
 *     }
 *
 * Any properties used in the template that are not defined in _instanceProp
 * will be forwarded out to the Templatize `owner` automatically.
 *
 * Users may also implement the following abstract function to show or
 * hide any DOM generated using `stamp`:
 *
 *     _showHideChildren: function(shouldHide)
 *
 * Note that some callbacks are suffixed with `V2` in the Polymer 2.x behavior
 * as the implementations will need to differ from the callbacks required
 * by the 1.x Templatizer API due to changes in the `TemplateInstance` API
 * between versions 1.x and 2.x.
 *
 * polymerBehavior
 */

export const Templatizer = {
  /**
   * Generates an anonymous `TemplateInstance` class (stored as `this.ctor`)
   * for the provided template.  This method should be called once per
   * template to prepare an element for stamping the template, followed
   * by `stamp` to create new instances of the template.
   *
   * @param {!HTMLTemplateElement} template Template to prepare
   * @param {boolean=} mutableData When `true`, the generated class will skip
   *   strict dirty-checking for objects and arrays (always consider them to
   *   be "dirty"). Defaults to false.
   * @return {void}
   * @this {TemplatizerUser}
   */
  templatize(template, mutableData) {
    this._templatizerTemplate = template;
    this.ctor = templatize(template,
    /** @type {!Polymer_PropertyEffects} */
    this, {
      mutableData: Boolean(mutableData),
      parentModel: this._parentModel,
      instanceProps: this._instanceProps,
      forwardHostProp: this._forwardHostPropV2,
      notifyInstanceProp: this._notifyInstancePropV2
    });
  },

  /**
   * Creates an instance of the template prepared by `templatize`.  The object
   * returned is an instance of the anonymous class generated by `templatize`
   * whose `root` property is a document fragment containing newly cloned
   * template content, and which has property accessors corresponding to
   * properties referenced in template bindings.
   *
   * @param {Object=} model Object containing initial property values to
   *   populate into the template bindings.
   * @return {TemplateInstanceBase} Returns the created instance of
   * the template prepared by `templatize`.
   * @this {TemplatizerUser}
   */
  stamp(model) {
    return new this.ctor(model);
  },

  /**
   * Returns the template "model" (`TemplateInstance`) associated with
   * a given element, which serves as the binding scope for the template
   * instance the element is contained in.  A template model should be used
   * to manipulate data associated with this template instance.
   *
   * @param {HTMLElement} el Element for which to return a template model.
   * @return {TemplateInstanceBase} Model representing the binding scope for
   *   the element.
   * @this {TemplatizerUser}
   */
  modelForElement(el) {
    return modelForElement(this._templatizerTemplate, el);
  }

};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:05</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.templatizer.behavior" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\templatizer-behavior.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.templatizer.behavior.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\templatizer-behavior.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>templatizer-behavior.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/templatizer-behavior.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.unresolved">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.unresolved.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.unresolved.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53165.165923</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
function resolve() {
  document.body.removeAttribute('unresolved');
}

if (document.readyState === 'interactive' || document.readyState === 'complete') {
  resolve();
} else {
  window.addEventListener('DOMContentLoaded', resolve);
}

export {};
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:05</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.unresolved" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\unresolved.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.unresolved.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\unresolved.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>unresolved.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/unresolved.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.unscoped.style.handler">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.unscoped.style.handler.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.unscoped.style.handler.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53165.23155</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
'use strict';
/** @type {!Set<string>} */

const styleTextSet = new Set();
export const scopingAttribute = 'shady-unscoped';
/**
 * Add a specifically-marked style to the document directly, and only one copy of that style.
 *
 * @param {!HTMLStyleElement} style
 * @return {undefined}
 */

export function processUnscopedStyle(style) {
  const text = style.textContent;

  if (!styleTextSet.has(text)) {
    styleTextSet.add(text);
    const newStyle = style.cloneNode(true);
    document.head.appendChild(newStyle);
  }
}
/**
 * Check if a style is supposed to be unscoped
 * @param {!HTMLStyleElement} style
 * @return {boolean} true if the style has the unscoping attribute
 */

export function isUnscopedStyle(style) {
  return style.hasAttribute(scopingAttribute);
}
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:05</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.unscoped.style.handler" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\unscoped-style-handler.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.unscoped.style.handler.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\unscoped-style-handler.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>unscoped-style-handler.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/unscoped-style-handler.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.webcomponents.ce">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.webcomponents.ce.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.webcomponents.ce.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53165.30057</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license @nocompile
 Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
(function () {
    'use strict';
    var aa = new Set("annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" "));

    function g(b) {
        var a = aa.has(b);
        b = /^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(b);
        return !a && b
    }

    function l(b) {
        var a = b.isConnected;
        if (void 0 !== a) return a;
        for (; b && !(b.__CE_isImportDocument || b instanceof Document);) b = b.parentNode || (window.ShadowRoot && b instanceof ShadowRoot ? b.host : void 0);
        return !(!b || !(b.__CE_isImportDocument || b instanceof Document))
    }

    function p(b, a) {
        for (; a && a !== b && !a.nextSibling;) a = a.parentNode;
        return a && a !== b ? a.nextSibling : null
    }

    function q(b, a, d) {
        d = void 0 === d ? new Set : d;
        for (var c = b; c;) {
            if (c.nodeType === Node.ELEMENT_NODE) {
                var e = c;
                a(e);
                var f = e.localName;
                if ("link" === f && "import" === e.getAttribute("rel")) {
                    c = e.import;
                    if (c instanceof Node && !d.has(c)) for (d.add(c), c = c.firstChild; c; c = c.nextSibling) q(c, a, d);
                    c = p(b, e);
                    continue
                } else if ("template" === f) {
                    c = p(b, e);
                    continue
                }
                if (e = e.__CE_shadowRoot) for (e = e.firstChild; e; e = e.nextSibling) q(e, a, d)
            }
            c = c.firstChild ? c.firstChild : p(b, c)
        }
    }

    function t(b, a, d) {
        b[a] = d
    };

    function u() {
        this.a = new Map;
        this.f = new Map;
        this.c = [];
        this.b = !1
    }

    function ba(b, a, d) {
        b.a.set(a, d);
        b.f.set(d.constructorFunction, d)
    }

    function v(b, a) {
        b.b = !0;
        b.c.push(a)
    }

    function w(b, a) {
        b.b && q(a, function (a) {
            return x(b, a)
        })
    }

    function x(b, a) {
        if (b.b && !a.__CE_patched) {
            a.__CE_patched = !0;
            for (var d = 0; d < b.c.length; d++) b.c[d](a)
        }
    }

    function y(b, a) {
        var d = [];
        q(a, function (a) {
            return d.push(a)
        });
        for (a = 0; a < d.length; a++) {
            var c = d[a];
            1 === c.__CE_state ? b.connectedCallback(c) : z(b, c)
        }
    }

    function A(b, a) {
        var d = [];
        q(a, function (a) {
            return d.push(a)
        });
        for (a = 0; a < d.length; a++) {
            var c = d[a];
            1 === c.__CE_state && b.disconnectedCallback(c)
        }
    }

    function B(b, a, d) {
        d = void 0 === d ? {} : d;
        var c = d.u || new Set, e = d.h || function (a) {
            return z(b, a)
        }, f = [];
        q(a, function (a) {
            if ("link" === a.localName && "import" === a.getAttribute("rel")) {
                var d = a.import;
                d instanceof Node && (d.__CE_isImportDocument = !0, d.__CE_hasRegistry = !0);
                d && "complete" === d.readyState ? d.__CE_documentLoadHandled = !0 : a.addEventListener("load", function () {
                    var d = a.import;
                    if (!d.__CE_documentLoadHandled) {
                        d.__CE_documentLoadHandled = !0;
                        var f = new Set(c);
                        f.delete(d);
                        B(b, d, {u: f, h: e})
                    }
                })
            } else f.push(a)
        }, c);
        if (b.b) for (a =
                          0; a < f.length; a++) x(b, f[a]);
        for (a = 0; a < f.length; a++) e(f[a])
    }

    function z(b, a) {
        if (void 0 === a.__CE_state) {
            var d = a.ownerDocument;
            if (d.defaultView || d.__CE_isImportDocument && d.__CE_hasRegistry) if (d = b.a.get(a.localName)) {
                d.constructionStack.push(a);
                var c = d.constructorFunction;
                try {
                    try {
                        if (new c !== a) throw Error("The custom element constructor did not produce the element being upgraded.");
                    } finally {
                        d.constructionStack.pop()
                    }
                } catch (m) {
                    throw a.__CE_state = 2, m;
                }
                a.__CE_state = 1;
                a.__CE_definition = d;
                if (d.attributeChangedCallback) for (d = d.observedAttributes, c = 0; c < d.length; c++) {
                    var e =
                        d[c], f = a.getAttribute(e);
                    null !== f && b.attributeChangedCallback(a, e, null, f, null)
                }
                l(a) && b.connectedCallback(a)
            }
        }
    }

    u.prototype.connectedCallback = function (b) {
        var a = b.__CE_definition;
        a.connectedCallback && a.connectedCallback.call(b)
    };
    u.prototype.disconnectedCallback = function (b) {
        var a = b.__CE_definition;
        a.disconnectedCallback && a.disconnectedCallback.call(b)
    };
    u.prototype.attributeChangedCallback = function (b, a, d, c, e) {
        var f = b.__CE_definition;
        f.attributeChangedCallback && -1 < f.observedAttributes.indexOf(a) && f.attributeChangedCallback.call(b, a, d, c, e)
    };

    function C(b) {
        var a = document;
        this.c = b;
        this.a = a;
        this.b = void 0;
        B(this.c, this.a);
        "loading" === this.a.readyState && (this.b = new MutationObserver(this.f.bind(this)), this.b.observe(this.a, {
            childList: !0,
            subtree: !0
        }))
    }

    function D(b) {
        b.b && b.b.disconnect()
    }

    C.prototype.f = function (b) {
        var a = this.a.readyState;
        "interactive" !== a && "complete" !== a || D(this);
        for (a = 0; a < b.length; a++) for (var d = b[a].addedNodes, c = 0; c < d.length; c++) B(this.c, d[c])
    };

    function ca() {
        var b = this;
        this.b = this.a = void 0;
        this.c = new Promise(function (a) {
            b.b = a;
            b.a && a(b.a)
        })
    }

    function E(b) {
        if (b.a) throw Error("Already resolved.");
        b.a = void 0;
        b.b && b.b(void 0)
    };

    function F(b) {
        this.c = !1;
        this.a = b;
        this.j = new Map;
        this.f = function (a) {
            return a()
        };
        this.b = !1;
        this.i = [];
        this.o = new C(b)
    }

    F.prototype.l = function (b, a) {
        var d = this;
        if (!(a instanceof Function)) throw new TypeError("Custom element constructors must be functions.");
        if (!g(b)) throw new SyntaxError("The element name '" + b + "' is not valid.");
        if (this.a.a.get(b)) throw Error("A custom element with name '" + b + "' has already been defined.");
        if (this.c) throw Error("A custom element is already being defined.");
        this.c = !0;
        try {
            var c = function (a) {
                var b = e[a];
                if (void 0 !== b && !(b instanceof Function)) throw Error("The '" + a + "' callback must be a function.");
                return b
            }, e = a.prototype;
            if (!(e instanceof Object)) throw new TypeError("The custom element constructor's prototype is not an object.");
            var f = c("connectedCallback");
            var m = c("disconnectedCallback");
            var k = c("adoptedCallback");
            var h = c("attributeChangedCallback");
            var n = a.observedAttributes || []
        } catch (r) {
            return
        } finally {
            this.c = !1
        }
        a = {
            localName: b,
            constructorFunction: a,
            connectedCallback: f,
            disconnectedCallback: m,
            adoptedCallback: k,
            attributeChangedCallback: h,
            observedAttributes: n,
            constructionStack: []
        };
        ba(this.a,
            b, a);
        this.i.push(a);
        this.b || (this.b = !0, this.f(function () {
            return da(d)
        }))
    };
    F.prototype.h = function (b) {
        B(this.a, b)
    };

    function da(b) {
        if (!1 !== b.b) {
            b.b = !1;
            for (var a = b.i, d = [], c = new Map, e = 0; e < a.length; e++) c.set(a[e].localName, []);
            B(b.a, document, {
                h: function (a) {
                    if (void 0 === a.__CE_state) {
                        var e = a.localName, f = c.get(e);
                        f ? f.push(a) : b.a.a.get(e) && d.push(a)
                    }
                }
            });
            for (e = 0; e < d.length; e++) z(b.a, d[e]);
            for (; 0 < a.length;) {
                var f = a.shift();
                e = f.localName;
                f = c.get(f.localName);
                for (var m = 0; m < f.length; m++) z(b.a, f[m]);
                (e = b.j.get(e)) && E(e)
            }
        }
    }

    F.prototype.get = function (b) {
        if (b = this.a.a.get(b)) return b.constructorFunction
    };
    F.prototype.m = function (b) {
        if (!g(b)) return Promise.reject(new SyntaxError("'" + b + "' is not a valid custom element name."));
        var a = this.j.get(b);
        if (a) return a.c;
        a = new ca;
        this.j.set(b, a);
        this.a.a.get(b) && !this.i.some(function (a) {
            return a.localName === b
        }) && E(a);
        return a.c
    };
    F.prototype.s = function (b) {
        D(this.o);
        var a = this.f;
        this.f = function (d) {
            return b(function () {
                return a(d)
            })
        }
    };
    window.CustomElementRegistry = F;
    F.prototype.define = F.prototype.l;
    F.prototype.upgrade = F.prototype.h;
    F.prototype.get = F.prototype.get;
    F.prototype.whenDefined = F.prototype.m;
    F.prototype.polyfillWrapFlushCallback = F.prototype.s;
    var G = window.Document.prototype.createElement, H = window.Document.prototype.createElementNS,
        ea = window.Document.prototype.importNode, fa = window.Document.prototype.prepend,
        ha = window.Document.prototype.append, ia = window.DocumentFragment.prototype.prepend,
        ja = window.DocumentFragment.prototype.append, I = window.Node.prototype.cloneNode,
        J = window.Node.prototype.appendChild, K = window.Node.prototype.insertBefore,
        L = window.Node.prototype.removeChild, M = window.Node.prototype.replaceChild,
        N = Object.getOwnPropertyDescriptor(window.Node.prototype,
            "textContent"), O = window.Element.prototype.attachShadow,
        P = Object.getOwnPropertyDescriptor(window.Element.prototype, "innerHTML"),
        Q = window.Element.prototype.getAttribute, R = window.Element.prototype.setAttribute,
        S = window.Element.prototype.removeAttribute, T = window.Element.prototype.getAttributeNS,
        ka = window.Element.prototype.setAttributeNS, la = window.Element.prototype.removeAttributeNS,
        ma = window.Element.prototype.insertAdjacentElement, na = window.Element.prototype.insertAdjacentHTML,
        oa = window.Element.prototype.prepend,
        pa = window.Element.prototype.append, U = window.Element.prototype.before, qa = window.Element.prototype.after,
        ra = window.Element.prototype.replaceWith, sa = window.Element.prototype.remove, ta = window.HTMLElement,
        V = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, "innerHTML"),
        ua = window.HTMLElement.prototype.insertAdjacentElement, va = window.HTMLElement.prototype.insertAdjacentHTML;
    var wa = new function () {
    };

    function xa() {
        var b = W;
        window.HTMLElement = function () {
            function a() {
                var a = this.constructor, c = b.f.get(a);
                if (!c) throw Error("The custom element being constructed was not registered with `customElements`.");
                var e = c.constructionStack;
                if (0 === e.length) return e = G.call(document, c.localName), Object.setPrototypeOf(e, a.prototype), e.__CE_state = 1, e.__CE_definition = c, x(b, e), e;
                c = e.length - 1;
                var f = e[c];
                if (f === wa) throw Error("The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.");
                e[c] = wa;
                Object.setPrototypeOf(f, a.prototype);
                x(b, f);
                return f
            }

            a.prototype = ta.prototype;
            Object.defineProperty(a.prototype, "constructor", {
                writable: !0,
                configurable: !0,
                enumerable: !1,
                value: a
            });
            return a
        }()
    };

    function X(b, a, d) {
        function c(a) {
            return function (d) {
                for (var e = [], c = 0; c < arguments.length; ++c) e[c] = arguments[c];
                c = [];
                for (var f = [], n = 0; n < e.length; n++) {
                    var r = e[n];
                    r instanceof Element && l(r) && f.push(r);
                    if (r instanceof DocumentFragment) for (r = r.firstChild; r; r = r.nextSibling) c.push(r); else c.push(r)
                }
                a.apply(this, e);
                for (e = 0; e < f.length; e++) A(b, f[e]);
                if (l(this)) for (e = 0; e < c.length; e++) f = c[e], f instanceof Element && y(b, f)
            }
        }

        void 0 !== d.g && (a.prepend = c(d.g));
        void 0 !== d.append && (a.append = c(d.append))
    };

    function ya() {
        var b = W;
        t(Document.prototype, "createElement", function (a) {
            if (this.__CE_hasRegistry) {
                var d = b.a.get(a);
                if (d) return new d.constructorFunction
            }
            a = G.call(this, a);
            x(b, a);
            return a
        });
        t(Document.prototype, "importNode", function (a, d) {
            a = ea.call(this, a, !!d);
            this.__CE_hasRegistry ? B(b, a) : w(b, a);
            return a
        });
        t(Document.prototype, "createElementNS", function (a, d) {
            if (this.__CE_hasRegistry && (null === a || "http://www.w3.org/1999/xhtml" === a)) {
                var c = b.a.get(d);
                if (c) return new c.constructorFunction
            }
            a = H.call(this, a,
                d);
            x(b, a);
            return a
        });
        X(b, Document.prototype, {g: fa, append: ha})
    };

    function za() {
        function b(b, c) {
            Object.defineProperty(b, "textContent", {
                enumerable: c.enumerable,
                configurable: !0,
                get: c.get,
                set: function (b) {
                    if (this.nodeType === Node.TEXT_NODE) c.set.call(this, b); else {
                        var d = void 0;
                        if (this.firstChild) {
                            var e = this.childNodes, k = e.length;
                            if (0 < k && l(this)) {
                                d = Array(k);
                                for (var h = 0; h < k; h++) d[h] = e[h]
                            }
                        }
                        c.set.call(this, b);
                        if (d) for (b = 0; b < d.length; b++) A(a, d[b])
                    }
                }
            })
        }

        var a = W;
        t(Node.prototype, "insertBefore", function (b, c) {
            if (b instanceof DocumentFragment) {
                var e = Array.prototype.slice.apply(b.childNodes);
                b = K.call(this, b, c);
                if (l(this)) for (c = 0; c < e.length; c++) y(a, e[c]);
                return b
            }
            e = l(b);
            c = K.call(this, b, c);
            e && A(a, b);
            l(this) && y(a, b);
            return c
        });
        t(Node.prototype, "appendChild", function (b) {
            if (b instanceof DocumentFragment) {
                var c = Array.prototype.slice.apply(b.childNodes);
                b = J.call(this, b);
                if (l(this)) for (var e = 0; e < c.length; e++) y(a, c[e]);
                return b
            }
            c = l(b);
            e = J.call(this, b);
            c && A(a, b);
            l(this) && y(a, b);
            return e
        });
        t(Node.prototype, "cloneNode", function (b) {
            b = I.call(this, !!b);
            this.ownerDocument.__CE_hasRegistry ? B(a, b) : w(a,
                b);
            return b
        });
        t(Node.prototype, "removeChild", function (b) {
            var c = l(b), e = L.call(this, b);
            c && A(a, b);
            return e
        });
        t(Node.prototype, "replaceChild", function (b, c) {
            if (b instanceof DocumentFragment) {
                var e = Array.prototype.slice.apply(b.childNodes);
                b = M.call(this, b, c);
                if (l(this)) for (A(a, c), c = 0; c < e.length; c++) y(a, e[c]);
                return b
            }
            e = l(b);
            var f = M.call(this, b, c), d = l(this);
            d && A(a, c);
            e && A(a, b);
            d && y(a, b);
            return f
        });
        N && N.get ? b(Node.prototype, N) : v(a, function (a) {
            b(a, {
                enumerable: !0, configurable: !0, get: function () {
                    for (var b = [],
                             a = 0; a < this.childNodes.length; a++) b.push(this.childNodes[a].textContent);
                    return b.join("")
                }, set: function (b) {
                    for (; this.firstChild;) L.call(this, this.firstChild);
                    J.call(this, document.createTextNode(b))
                }
            })
        })
    };

    function Aa(b) {
        function a(a) {
            return function (e) {
                for (var c = [], d = 0; d < arguments.length; ++d) c[d] = arguments[d];
                d = [];
                for (var k = [], h = 0; h < c.length; h++) {
                    var n = c[h];
                    n instanceof Element && l(n) && k.push(n);
                    if (n instanceof DocumentFragment) for (n = n.firstChild; n; n = n.nextSibling) d.push(n); else d.push(n)
                }
                a.apply(this, c);
                for (c = 0; c < k.length; c++) A(b, k[c]);
                if (l(this)) for (c = 0; c < d.length; c++) k = d[c], k instanceof Element && y(b, k)
            }
        }

        var d = Element.prototype;
        void 0 !== U && (d.before = a(U));
        void 0 !== U && (d.after = a(qa));
        void 0 !== ra &&
        t(d, "replaceWith", function (a) {
            for (var c = [], d = 0; d < arguments.length; ++d) c[d] = arguments[d];
            d = [];
            for (var m = [], k = 0; k < c.length; k++) {
                var h = c[k];
                h instanceof Element && l(h) && m.push(h);
                if (h instanceof DocumentFragment) for (h = h.firstChild; h; h = h.nextSibling) d.push(h); else d.push(h)
            }
            k = l(this);
            ra.apply(this, c);
            for (c = 0; c < m.length; c++) A(b, m[c]);
            if (k) for (A(b, this), c = 0; c < d.length; c++) m = d[c], m instanceof Element && y(b, m)
        });
        void 0 !== sa && t(d, "remove", function () {
            var a = l(this);
            sa.call(this);
            a && A(b, this)
        })
    };

    function Ba() {
        function b(a, b) {
            Object.defineProperty(a, "innerHTML", {
                enumerable: b.enumerable,
                configurable: !0,
                get: b.get,
                set: function (a) {
                    var d = this, e = void 0;
                    l(this) && (e = [], q(this, function (a) {
                        a !== d && e.push(a)
                    }));
                    b.set.call(this, a);
                    if (e) for (var f = 0; f < e.length; f++) {
                        var m = e[f];
                        1 === m.__CE_state && c.disconnectedCallback(m)
                    }
                    this.ownerDocument.__CE_hasRegistry ? B(c, this) : w(c, this);
                    return a
                }
            })
        }

        function a(a, b) {
            t(a, "insertAdjacentElement", function (a, d) {
                var e = l(d);
                a = b.call(this, a, d);
                e && A(c, d);
                l(a) && y(c, d);
                return a
            })
        }

        function d(a, b) {
            function d(a, b) {
                for (var d = []; a !== b; a = a.nextSibling) d.push(a);
                for (b = 0; b < d.length; b++) B(c, d[b])
            }

            t(a, "insertAdjacentHTML", function (a, c) {
                a = a.toLowerCase();
                if ("beforebegin" === a) {
                    var e = this.previousSibling;
                    b.call(this, a, c);
                    d(e || this.parentNode.firstChild, this)
                } else if ("afterbegin" === a) e = this.firstChild, b.call(this, a, c), d(this.firstChild, e); else if ("beforeend" === a) e = this.lastChild, b.call(this, a, c), d(e || this.firstChild, null); else if ("afterend" === a) e = this.nextSibling, b.call(this, a, c), d(this.nextSibling,
                    e); else throw new SyntaxError("The value provided (" + String(a) + ") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.");
            })
        }

        var c = W;
        O && t(Element.prototype, "attachShadow", function (a) {
            return this.__CE_shadowRoot = a = O.call(this, a)
        });
        P && P.get ? b(Element.prototype, P) : V && V.get ? b(HTMLElement.prototype, V) : v(c, function (a) {
            b(a, {
                enumerable: !0, configurable: !0, get: function () {
                    return I.call(this, !0).innerHTML
                }, set: function (a) {
                    var b = "template" === this.localName, c = b ? this.content : this, d = H.call(document,
                        this.namespaceURI, this.localName);
                    for (d.innerHTML = a; 0 < c.childNodes.length;) L.call(c, c.childNodes[0]);
                    for (a = b ? d.content : d; 0 < a.childNodes.length;) J.call(c, a.childNodes[0])
                }
            })
        });
        t(Element.prototype, "setAttribute", function (a, b) {
            if (1 !== this.__CE_state) return R.call(this, a, b);
            var d = Q.call(this, a);
            R.call(this, a, b);
            b = Q.call(this, a);
            c.attributeChangedCallback(this, a, d, b, null)
        });
        t(Element.prototype, "setAttributeNS", function (a, b, d) {
            if (1 !== this.__CE_state) return ka.call(this, a, b, d);
            var e = T.call(this, a, b);
            ka.call(this,
                a, b, d);
            d = T.call(this, a, b);
            c.attributeChangedCallback(this, b, e, d, a)
        });
        t(Element.prototype, "removeAttribute", function (a) {
            if (1 !== this.__CE_state) return S.call(this, a);
            var b = Q.call(this, a);
            S.call(this, a);
            null !== b && c.attributeChangedCallback(this, a, b, null, null)
        });
        t(Element.prototype, "removeAttributeNS", function (a, b) {
            if (1 !== this.__CE_state) return la.call(this, a, b);
            var d = T.call(this, a, b);
            la.call(this, a, b);
            var e = T.call(this, a, b);
            d !== e && c.attributeChangedCallback(this, b, d, e, a)
        });
        ua ? a(HTMLElement.prototype,
            ua) : ma ? a(Element.prototype, ma) : console.warn("Custom Elements: `Element#insertAdjacentElement` was not patched.");
        va ? d(HTMLElement.prototype, va) : na ? d(Element.prototype, na) : console.warn("Custom Elements: `Element#insertAdjacentHTML` was not patched.");
        X(c, Element.prototype, {g: oa, append: pa});
        Aa(c)
    };/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    var Y = window.customElements;
    if (!Y || Y.forcePolyfill || "function" != typeof Y.define || "function" != typeof Y.get) {
        var W = new u;
        xa();
        ya();
        X(W, DocumentFragment.prototype, {g: ia, append: ja});
        za();
        Ba();
        document.__CE_hasRegistry = !0;
        var customElements = new F(W);
        Object.defineProperty(window, "customElements", {configurable: !0, enumerable: !0, value: customElements})
    }
    ;/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    var Z = window.document;
    window.WebComponents = window.WebComponents || {};

    function Ca() {
        window.WebComponents.ready = !0;
        window.document.dispatchEvent(new CustomEvent("WebComponentsReady", {bubbles: !0}))
    }

    function Da() {
        Ca();
        Z.removeEventListener("readystatechange", Da)
    }

    "loading" !== Z.readyState ? Ca() : Z.addEventListener("readystatechange", Da);
}).call(this);

//# sourceMappingURL=webcomponents-ce.js.map
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:05</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.webcomponents.ce" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\webcomponents-ce.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.webcomponents.ce.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\webcomponents-ce.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>webcomponents-ce.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/webcomponents-ce.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.webcomponents.hi.ce">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.webcomponents.hi.ce.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.webcomponents.hi.ce.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53165.712193</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license @nocompile
 Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
(function () {/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    'use strict';
    (function (b) {
        function a(a, b) {
            if ("function" === typeof window.CustomEvent) return new CustomEvent(a, b);
            var c = document.createEvent("CustomEvent");
            c.initCustomEvent(a, !!b.bubbles, !!b.cancelable, b.detail);
            return c
        }

        function c(a) {
            if (J) return a.ownerDocument !== document ? a.ownerDocument : null;
            var b = a.__importDoc;
            if (!b && a.parentNode) {
                b = a.parentNode;
                if ("function" === typeof b.closest) b = b.closest("link[rel=import]"); else for (; !h(b) && (b = b.parentNode);) ;
                a.__importDoc = b
            }
            return b
        }

        function d(a) {
            var b = l(document,
                "link[rel=import]:not([import-dependency])"), c = b.length;
            c ? r(b, function (b) {
                return k(b, function () {
                    0 === --c && a()
                })
            }) : a()
        }

        function e(b) {
            function a() {
                "loading" !== document.readyState && document.body && (document.removeEventListener("readystatechange", a), b())
            }

            document.addEventListener("readystatechange", a);
            a()
        }

        function f(a) {
            e(function () {
                return d(function () {
                    return a && a()
                })
            })
        }

        function k(a, b) {
            if (a.__loaded) b && b(); else if ("script" === a.localName && !a.src || "style" === a.localName && !a.firstChild) a.__loaded = !0, b && b();
            else {
                var c = function (e) {
                    a.removeEventListener(e.type, c);
                    a.__loaded = !0;
                    b && b()
                };
                a.addEventListener("load", c);
                K && "style" === a.localName || a.addEventListener("error", c)
            }
        }

        function h(a) {
            return a.nodeType === Node.ELEMENT_NODE && "link" === a.localName && "import" === a.rel
        }

        function g() {
            var a = this;
            this.a = {};
            this.b = 0;
            this.c = new MutationObserver(function (b) {
                return a.s(b)
            });
            this.c.observe(document.head, {childList: !0, subtree: !0});
            this.loadImports(document)
        }

        function n(a) {
            r(l(a, "template"), function (a) {
                r(l(a.content, 'script:not([type]),script[type="application/javascript"],script[type="text/javascript"],script[type="module"]'),
                    function (a) {
                        var b = document.createElement("script");
                        r(a.attributes, function (a) {
                            return b.setAttribute(a.name, a.value)
                        });
                        b.textContent = a.textContent;
                        a.parentNode.replaceChild(b, a)
                    });
                n(a.content)
            })
        }

        function l(a, b) {
            return a.childNodes.length ? a.querySelectorAll(b) : Aa
        }

        function r(a, b, c) {
            var e = a ? a.length : 0, d = c ? -1 : 1;
            for (c = c ? e - 1 : 0; c < e && 0 <= c; c += d) b(a[c], c)
        }

        var A = document.createElement("link"), J = "import" in A, Aa = A.querySelectorAll("*"), L = null;
        !1 === "currentScript" in document && Object.defineProperty(document, "currentScript",
            {
                get: function () {
                    return L || ("complete" !== document.readyState ? document.scripts[document.scripts.length - 1] : null)
                }, configurable: !0
            });
        var Ba = /(url\()([^)]*)(\))/g, Ca = /(@import[\s]+(?!url\())([^;]*)(;)/g,
            Da = /(<link[^>]*)(rel=['|"]?stylesheet['|"]?[^>]*>)/g, t = {
                F: function (a, b) {
                    a.href && a.setAttribute("href", t.j(a.getAttribute("href"), b));
                    a.src && a.setAttribute("src", t.j(a.getAttribute("src"), b));
                    if ("style" === a.localName) {
                        var c = t.B(a.textContent, b, Ba);
                        a.textContent = t.B(c, b, Ca)
                    }
                }, B: function (a, b, c) {
                    return a.replace(c,
                        function (a, c, e, d) {
                            a = e.replace(/["']/g, "");
                            b && (a = t.j(a, b));
                            return c + "'" + a + "'" + d
                        })
                }, j: function (a, b) {
                    if (void 0 === t.m) {
                        t.m = !1;
                        try {
                            var c = new URL("b", "http://a");
                            c.pathname = "c%20d";
                            t.m = "http://a/c%20d" === c.href
                        } catch (Wa) {
                        }
                    }
                    if (t.m) return (new URL(a, b)).href;
                    c = t.C;
                    c || (c = document.implementation.createHTMLDocument("temp"), t.C = c, c.A = c.createElement("base"), c.head.appendChild(c.A), c.w = c.createElement("a"));
                    c.A.href = b;
                    c.w.href = a;
                    return c.w.href || a
                }
            }, X = {
                async: !0, load: function (a, b, c) {
                    if (a) if (a.match(/^data:/)) {
                        a =
                            a.split(",");
                        var e = a[1];
                        e = -1 < a[0].indexOf(";base64") ? atob(e) : decodeURIComponent(e);
                        b(e)
                    } else {
                        var d = new XMLHttpRequest;
                        d.open("GET", a, X.async);
                        d.onload = function () {
                            var a = d.responseURL || d.getResponseHeader("Location");
                            a && 0 === a.indexOf("/") && (a = (location.origin || location.protocol + "//" + location.host) + a);
                            var e = d.response || d.responseText;
                            304 === d.status || 0 === d.status || 200 <= d.status && 300 > d.status ? b(e, a) : c(e)
                        };
                        d.send()
                    } else c("error: href must be specified")
                }
            }, K = /Trident/.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent);
        g.prototype.loadImports = function (a) {
            var b = this;
            r(l(a, "link[rel=import]"), function (a) {
                return b.g(a)
            })
        };
        g.prototype.g = function (a) {
            var b = this, c = a.href;
            if (void 0 !== this.a[c]) {
                var e = this.a[c];
                e && e.__loaded && (a.__import = e, this.f(a))
            } else this.b++, this.a[c] = "pending", X.load(c, function (a, e) {
                a = b.u(a, e || c);
                b.a[c] = a;
                b.b--;
                b.loadImports(a);
                b.h()
            }, function () {
                b.a[c] = null;
                b.b--;
                b.h()
            })
        };
        g.prototype.u = function (a, b) {
            if (!a) return document.createDocumentFragment();
            K && (a = a.replace(Da, function (a, b, c) {
                return -1 === a.indexOf("type=") ?
                    b + " type=import-disable " + c : a
            }));
            var c = document.createElement("template");
            c.innerHTML = a;
            if (c.content) a = c.content, n(a); else for (a = document.createDocumentFragment(); c.firstChild;) a.appendChild(c.firstChild);
            if (c = a.querySelector("base")) b = t.j(c.getAttribute("href"), b), c.removeAttribute("href");
            var e = 0;
            r(l(a, 'link[rel=import],link[rel=stylesheet][href][type=import-disable],style:not([type]),link[rel=stylesheet][href]:not([type]),script:not([type]),script[type="application/javascript"],script[type="text/javascript"],script[type="module"]'),
                function (a) {
                    k(a);
                    t.F(a, b);
                    a.setAttribute("import-dependency", "");
                    if ("script" === a.localName && !a.src && a.textContent) {
                        if ("module" === a.type) throw Error("Inline module scripts are not supported in HTML Imports.");
                        a.setAttribute("src", "data:text/javascript;charset=utf-8," + encodeURIComponent(a.textContent + ("\n//# sourceURL=" + b + (e ? "-" + e : "") + ".js\n")));
                        a.textContent = "";
                        e++
                    }
                });
            return a
        };
        g.prototype.h = function () {
            var a = this;
            if (!this.b) {
                this.c.disconnect();
                this.flatten(document);
                var b = !1, c = !1, e = function () {
                    c &&
                    b && (a.loadImports(document), a.b || (a.c.observe(document.head, {
                        childList: !0,
                        subtree: !0
                    }), a.o()))
                };
                this.G(function () {
                    c = !0;
                    e()
                });
                this.v(function () {
                    b = !0;
                    e()
                })
            }
        };
        g.prototype.flatten = function (a) {
            var b = this;
            r(l(a, "link[rel=import]"), function (a) {
                var c = b.a[a.href];
                (a.__import = c) && c.nodeType === Node.DOCUMENT_FRAGMENT_NODE && (b.a[a.href] = a, a.readyState = "loading", a.__import = a, b.flatten(c), a.appendChild(c))
            })
        };
        g.prototype.v = function (a) {
            function b(d) {
                if (d < e) {
                    var f = c[d], h = document.createElement("script");
                    f.removeAttribute("import-dependency");
                    r(f.attributes, function (a) {
                        return h.setAttribute(a.name, a.value)
                    });
                    L = h;
                    f.parentNode.replaceChild(h, f);
                    k(h, function () {
                        L = null;
                        b(d + 1)
                    })
                } else a()
            }

            var c = l(document, "script[import-dependency]"), e = c.length;
            b(0)
        };
        g.prototype.G = function (a) {
            var b = l(document, "style[import-dependency],link[rel=stylesheet][import-dependency]"), e = b.length;
            if (e) {
                var d = K && !!document.querySelector("link[rel=stylesheet][href][type=import-disable]");
                r(b, function (b) {
                    k(b, function () {
                        b.removeAttribute("import-dependency");
                        0 === --e && a()
                    });
                    if (d && b.parentNode !== document.head) {
                        var f = document.createElement(b.localName);
                        f.__appliedElement = b;
                        f.setAttribute("type", "import-placeholder");
                        b.parentNode.insertBefore(f, b.nextSibling);
                        for (f = c(b); f && c(f);) f = c(f);
                        f.parentNode !== document.head && (f = null);
                        document.head.insertBefore(b, f);
                        b.removeAttribute("type")
                    }
                })
            } else a()
        };
        g.prototype.o = function () {
            var a = this;
            r(l(document, "link[rel=import]"), function (b) {
                return a.f(b)
            }, !0)
        };
        g.prototype.f = function (b) {
            b.__loaded || (b.__loaded = !0, b.import && (b.import.readyState =
                "complete"), b.dispatchEvent(a(b.import ? "load" : "error", {
                bubbles: !1,
                cancelable: !1,
                detail: void 0
            })))
        };
        g.prototype.s = function (a) {
            var b = this;
            r(a, function (a) {
                return r(a.addedNodes, function (a) {
                    a && a.nodeType === Node.ELEMENT_NODE && (h(a) ? b.g(a) : b.loadImports(a))
                })
            })
        };
        var M = null;
        if (J) r(l(document, "link[rel=import]"), function (a) {
            a.import && "loading" === a.import.readyState || (a.__loaded = !0)
        }), A = function (a) {
            a = a.target;
            h(a) && (a.__loaded = !0)
        }, document.addEventListener("load", A, !0), document.addEventListener("error", A,
            !0); else {
            var B = Object.getOwnPropertyDescriptor(Node.prototype, "baseURI");
            Object.defineProperty((!B || B.configurable ? Node : Element).prototype, "baseURI", {
                get: function () {
                    var a = h(this) ? this : c(this);
                    return a ? a.href : B && B.get ? B.get.call(this) : (document.querySelector("base") || window.location).href
                }, configurable: !0, enumerable: !0
            });
            Object.defineProperty(HTMLLinkElement.prototype, "import", {
                get: function () {
                    return this.__import || null
                }, configurable: !0, enumerable: !0
            });
            e(function () {
                M = new g
            })
        }
        f(function () {
            return document.dispatchEvent(a("HTMLImportsLoaded",
                {cancelable: !0, bubbles: !0, detail: void 0}))
        });
        b.useNative = J;
        b.whenReady = f;
        b.importForElement = c;
        b.loadImports = function (a) {
            M && M.loadImports(a)
        }
    })(window.HTMLImports = window.HTMLImports || {});
    var aa = new Set("annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" "));

    function m(b) {
        var a = aa.has(b);
        b = /^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(b);
        return !a && b
    }

    function p(b) {
        var a = b.isConnected;
        if (void 0 !== a) return a;
        for (; b && !(b.__CE_isImportDocument || b instanceof Document);) b = b.parentNode || (window.ShadowRoot && b instanceof ShadowRoot ? b.host : void 0);
        return !(!b || !(b.__CE_isImportDocument || b instanceof Document))
    }

    function q(b, a) {
        for (; a && a !== b && !a.nextSibling;) a = a.parentNode;
        return a && a !== b ? a.nextSibling : null
    }

    function u(b, a, c) {
        c = void 0 === c ? new Set : c;
        for (var d = b; d;) {
            if (d.nodeType === Node.ELEMENT_NODE) {
                var e = d;
                a(e);
                var f = e.localName;
                if ("link" === f && "import" === e.getAttribute("rel")) {
                    d = e.import;
                    if (d instanceof Node && !c.has(d)) for (c.add(d), d = d.firstChild; d; d = d.nextSibling) u(d, a, c);
                    d = q(b, e);
                    continue
                } else if ("template" === f) {
                    d = q(b, e);
                    continue
                }
                if (e = e.__CE_shadowRoot) for (e = e.firstChild; e; e = e.nextSibling) u(e, a, c)
            }
            d = d.firstChild ? d.firstChild : q(b, d)
        }
    }

    function v(b, a, c) {
        b[a] = c
    };

    function w() {
        this.a = new Map;
        this.f = new Map;
        this.c = [];
        this.b = !1
    }

    function ba(b, a, c) {
        b.a.set(a, c);
        b.f.set(c.constructorFunction, c)
    }

    function x(b, a) {
        b.b = !0;
        b.c.push(a)
    }

    function y(b, a) {
        b.b && u(a, function (a) {
            return z(b, a)
        })
    }

    function z(b, a) {
        if (b.b && !a.__CE_patched) {
            a.__CE_patched = !0;
            for (var c = 0; c < b.c.length; c++) b.c[c](a)
        }
    }

    function C(b, a) {
        var c = [];
        u(a, function (a) {
            return c.push(a)
        });
        for (a = 0; a < c.length; a++) {
            var d = c[a];
            1 === d.__CE_state ? b.connectedCallback(d) : D(b, d)
        }
    }

    function E(b, a) {
        var c = [];
        u(a, function (a) {
            return c.push(a)
        });
        for (a = 0; a < c.length; a++) {
            var d = c[a];
            1 === d.__CE_state && b.disconnectedCallback(d)
        }
    }

    function F(b, a, c) {
        c = void 0 === c ? {} : c;
        var d = c.H || new Set, e = c.l || function (a) {
            return D(b, a)
        }, f = [];
        u(a, function (a) {
            if ("link" === a.localName && "import" === a.getAttribute("rel")) {
                var c = a.import;
                c instanceof Node && (c.__CE_isImportDocument = !0, c.__CE_hasRegistry = !0);
                c && "complete" === c.readyState ? c.__CE_documentLoadHandled = !0 : a.addEventListener("load", function () {
                    var c = a.import;
                    if (!c.__CE_documentLoadHandled) {
                        c.__CE_documentLoadHandled = !0;
                        var f = new Set(d);
                        f.delete(c);
                        F(b, c, {H: f, l: e})
                    }
                })
            } else f.push(a)
        }, d);
        if (b.b) for (a =
                          0; a < f.length; a++) z(b, f[a]);
        for (a = 0; a < f.length; a++) e(f[a])
    }

    function D(b, a) {
        if (void 0 === a.__CE_state) {
            var c = a.ownerDocument;
            if (c.defaultView || c.__CE_isImportDocument && c.__CE_hasRegistry) if (c = b.a.get(a.localName)) {
                c.constructionStack.push(a);
                var d = c.constructorFunction;
                try {
                    try {
                        if (new d !== a) throw Error("The custom element constructor did not produce the element being upgraded.");
                    } finally {
                        c.constructionStack.pop()
                    }
                } catch (k) {
                    throw a.__CE_state = 2, k;
                }
                a.__CE_state = 1;
                a.__CE_definition = c;
                if (c.attributeChangedCallback) for (c = c.observedAttributes, d = 0; d < c.length; d++) {
                    var e =
                        c[d], f = a.getAttribute(e);
                    null !== f && b.attributeChangedCallback(a, e, null, f, null)
                }
                p(a) && b.connectedCallback(a)
            }
        }
    }

    w.prototype.connectedCallback = function (b) {
        var a = b.__CE_definition;
        a.connectedCallback && a.connectedCallback.call(b)
    };
    w.prototype.disconnectedCallback = function (b) {
        var a = b.__CE_definition;
        a.disconnectedCallback && a.disconnectedCallback.call(b)
    };
    w.prototype.attributeChangedCallback = function (b, a, c, d, e) {
        var f = b.__CE_definition;
        f.attributeChangedCallback && -1 < f.observedAttributes.indexOf(a) && f.attributeChangedCallback.call(b, a, c, d, e)
    };

    function ca(b) {
        var a = document;
        this.c = b;
        this.a = a;
        this.b = void 0;
        F(this.c, this.a);
        "loading" === this.a.readyState && (this.b = new MutationObserver(this.f.bind(this)), this.b.observe(this.a, {
            childList: !0,
            subtree: !0
        }))
    }

    function da(b) {
        b.b && b.b.disconnect()
    }

    ca.prototype.f = function (b) {
        var a = this.a.readyState;
        "interactive" !== a && "complete" !== a || da(this);
        for (a = 0; a < b.length; a++) for (var c = b[a].addedNodes, d = 0; d < c.length; d++) F(this.c, c[d])
    };

    function ea() {
        var b = this;
        this.b = this.a = void 0;
        this.c = new Promise(function (a) {
            b.b = a;
            b.a && a(b.a)
        })
    }

    function fa(b) {
        if (b.a) throw Error("Already resolved.");
        b.a = void 0;
        b.b && b.b(void 0)
    };

    function G(b) {
        this.c = !1;
        this.a = b;
        this.h = new Map;
        this.f = function (a) {
            return a()
        };
        this.b = !1;
        this.g = [];
        this.u = new ca(b)
    }

    G.prototype.o = function (b, a) {
        var c = this;
        if (!(a instanceof Function)) throw new TypeError("Custom element constructors must be functions.");
        if (!m(b)) throw new SyntaxError("The element name '" + b + "' is not valid.");
        if (this.a.a.get(b)) throw Error("A custom element with name '" + b + "' has already been defined.");
        if (this.c) throw Error("A custom element is already being defined.");
        this.c = !0;
        try {
            var d = function (a) {
                var b = e[a];
                if (void 0 !== b && !(b instanceof Function)) throw Error("The '" + a + "' callback must be a function.");
                return b
            }, e = a.prototype;
            if (!(e instanceof Object)) throw new TypeError("The custom element constructor's prototype is not an object.");
            var f = d("connectedCallback");
            var k = d("disconnectedCallback");
            var h = d("adoptedCallback");
            var g = d("attributeChangedCallback");
            var n = a.observedAttributes || []
        } catch (l) {
            return
        } finally {
            this.c = !1
        }
        a = {
            localName: b,
            constructorFunction: a,
            connectedCallback: f,
            disconnectedCallback: k,
            adoptedCallback: h,
            attributeChangedCallback: g,
            observedAttributes: n,
            constructionStack: []
        };
        ba(this.a,
            b, a);
        this.g.push(a);
        this.b || (this.b = !0, this.f(function () {
            return ha(c)
        }))
    };
    G.prototype.l = function (b) {
        F(this.a, b)
    };

    function ha(b) {
        if (!1 !== b.b) {
            b.b = !1;
            for (var a = b.g, c = [], d = new Map, e = 0; e < a.length; e++) d.set(a[e].localName, []);
            F(b.a, document, {
                l: function (a) {
                    if (void 0 === a.__CE_state) {
                        var e = a.localName, f = d.get(e);
                        f ? f.push(a) : b.a.a.get(e) && c.push(a)
                    }
                }
            });
            for (e = 0; e < c.length; e++) D(b.a, c[e]);
            for (; 0 < a.length;) {
                var f = a.shift();
                e = f.localName;
                f = d.get(f.localName);
                for (var k = 0; k < f.length; k++) D(b.a, f[k]);
                (e = b.h.get(e)) && fa(e)
            }
        }
    }

    G.prototype.get = function (b) {
        if (b = this.a.a.get(b)) return b.constructorFunction
    };
    G.prototype.s = function (b) {
        if (!m(b)) return Promise.reject(new SyntaxError("'" + b + "' is not a valid custom element name."));
        var a = this.h.get(b);
        if (a) return a.c;
        a = new ea;
        this.h.set(b, a);
        this.a.a.get(b) && !this.g.some(function (a) {
            return a.localName === b
        }) && fa(a);
        return a.c
    };
    G.prototype.v = function (b) {
        da(this.u);
        var a = this.f;
        this.f = function (c) {
            return b(function () {
                return a(c)
            })
        }
    };
    window.CustomElementRegistry = G;
    G.prototype.define = G.prototype.o;
    G.prototype.upgrade = G.prototype.l;
    G.prototype.get = G.prototype.get;
    G.prototype.whenDefined = G.prototype.s;
    G.prototype.polyfillWrapFlushCallback = G.prototype.v;
    var ia = window.Document.prototype.createElement, ja = window.Document.prototype.createElementNS,
        ka = window.Document.prototype.importNode, la = window.Document.prototype.prepend,
        ma = window.Document.prototype.append, na = window.DocumentFragment.prototype.prepend,
        oa = window.DocumentFragment.prototype.append, pa = window.Node.prototype.cloneNode,
        H = window.Node.prototype.appendChild, qa = window.Node.prototype.insertBefore,
        I = window.Node.prototype.removeChild, ra = window.Node.prototype.replaceChild,
        N = Object.getOwnPropertyDescriptor(window.Node.prototype,
            "textContent"), sa = window.Element.prototype.attachShadow,
        O = Object.getOwnPropertyDescriptor(window.Element.prototype, "innerHTML"),
        P = window.Element.prototype.getAttribute, ta = window.Element.prototype.setAttribute,
        ua = window.Element.prototype.removeAttribute, Q = window.Element.prototype.getAttributeNS,
        va = window.Element.prototype.setAttributeNS, wa = window.Element.prototype.removeAttributeNS,
        xa = window.Element.prototype.insertAdjacentElement, ya = window.Element.prototype.insertAdjacentHTML,
        za = window.Element.prototype.prepend,
        Ea = window.Element.prototype.append, R = window.Element.prototype.before, Fa = window.Element.prototype.after,
        Ga = window.Element.prototype.replaceWith, Ha = window.Element.prototype.remove, Ia = window.HTMLElement,
        S = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, "innerHTML"),
        Ja = window.HTMLElement.prototype.insertAdjacentElement, Ka = window.HTMLElement.prototype.insertAdjacentHTML;
    var La = new function () {
    };

    function Ma() {
        var b = T;
        window.HTMLElement = function () {
            function a() {
                var a = this.constructor, d = b.f.get(a);
                if (!d) throw Error("The custom element being constructed was not registered with `customElements`.");
                var e = d.constructionStack;
                if (0 === e.length) return e = ia.call(document, d.localName), Object.setPrototypeOf(e, a.prototype), e.__CE_state = 1, e.__CE_definition = d, z(b, e), e;
                d = e.length - 1;
                var f = e[d];
                if (f === La) throw Error("The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.");
                e[d] = La;
                Object.setPrototypeOf(f, a.prototype);
                z(b, f);
                return f
            }

            a.prototype = Ia.prototype;
            Object.defineProperty(a.prototype, "constructor", {
                writable: !0,
                configurable: !0,
                enumerable: !1,
                value: a
            });
            return a
        }()
    };

    function U(b, a, c) {
        function d(a) {
            return function (c) {
                for (var e = [], d = 0; d < arguments.length; ++d) e[d] = arguments[d];
                d = [];
                for (var f = [], n = 0; n < e.length; n++) {
                    var l = e[n];
                    l instanceof Element && p(l) && f.push(l);
                    if (l instanceof DocumentFragment) for (l = l.firstChild; l; l = l.nextSibling) d.push(l); else d.push(l)
                }
                a.apply(this, e);
                for (e = 0; e < f.length; e++) E(b, f[e]);
                if (p(this)) for (e = 0; e < d.length; e++) f = d[e], f instanceof Element && C(b, f)
            }
        }

        void 0 !== c.i && (a.prepend = d(c.i));
        void 0 !== c.append && (a.append = d(c.append))
    };

    function Na() {
        var b = T;
        v(Document.prototype, "createElement", function (a) {
            if (this.__CE_hasRegistry) {
                var c = b.a.get(a);
                if (c) return new c.constructorFunction
            }
            a = ia.call(this, a);
            z(b, a);
            return a
        });
        v(Document.prototype, "importNode", function (a, c) {
            a = ka.call(this, a, !!c);
            this.__CE_hasRegistry ? F(b, a) : y(b, a);
            return a
        });
        v(Document.prototype, "createElementNS", function (a, c) {
            if (this.__CE_hasRegistry && (null === a || "http://www.w3.org/1999/xhtml" === a)) {
                var d = b.a.get(c);
                if (d) return new d.constructorFunction
            }
            a = ja.call(this,
                a, c);
            z(b, a);
            return a
        });
        U(b, Document.prototype, {i: la, append: ma})
    };

    function Oa() {
        function b(b, d) {
            Object.defineProperty(b, "textContent", {
                enumerable: d.enumerable,
                configurable: !0,
                get: d.get,
                set: function (b) {
                    if (this.nodeType === Node.TEXT_NODE) d.set.call(this, b); else {
                        var c = void 0;
                        if (this.firstChild) {
                            var e = this.childNodes, h = e.length;
                            if (0 < h && p(this)) {
                                c = Array(h);
                                for (var g = 0; g < h; g++) c[g] = e[g]
                            }
                        }
                        d.set.call(this, b);
                        if (c) for (b = 0; b < c.length; b++) E(a, c[b])
                    }
                }
            })
        }

        var a = T;
        v(Node.prototype, "insertBefore", function (b, d) {
            if (b instanceof DocumentFragment) {
                var c = Array.prototype.slice.apply(b.childNodes);
                b = qa.call(this, b, d);
                if (p(this)) for (d = 0; d < c.length; d++) C(a, c[d]);
                return b
            }
            c = p(b);
            d = qa.call(this, b, d);
            c && E(a, b);
            p(this) && C(a, b);
            return d
        });
        v(Node.prototype, "appendChild", function (b) {
            if (b instanceof DocumentFragment) {
                var c = Array.prototype.slice.apply(b.childNodes);
                b = H.call(this, b);
                if (p(this)) for (var e = 0; e < c.length; e++) C(a, c[e]);
                return b
            }
            c = p(b);
            e = H.call(this, b);
            c && E(a, b);
            p(this) && C(a, b);
            return e
        });
        v(Node.prototype, "cloneNode", function (b) {
            b = pa.call(this, !!b);
            this.ownerDocument.__CE_hasRegistry ? F(a, b) :
                y(a, b);
            return b
        });
        v(Node.prototype, "removeChild", function (b) {
            var c = p(b), e = I.call(this, b);
            c && E(a, b);
            return e
        });
        v(Node.prototype, "replaceChild", function (b, d) {
            if (b instanceof DocumentFragment) {
                var c = Array.prototype.slice.apply(b.childNodes);
                b = ra.call(this, b, d);
                if (p(this)) for (E(a, d), d = 0; d < c.length; d++) C(a, c[d]);
                return b
            }
            c = p(b);
            var f = ra.call(this, b, d), k = p(this);
            k && E(a, d);
            c && E(a, b);
            k && C(a, b);
            return f
        });
        N && N.get ? b(Node.prototype, N) : x(a, function (a) {
            b(a, {
                enumerable: !0, configurable: !0, get: function () {
                    for (var a =
                        [], b = 0; b < this.childNodes.length; b++) a.push(this.childNodes[b].textContent);
                    return a.join("")
                }, set: function (a) {
                    for (; this.firstChild;) I.call(this, this.firstChild);
                    H.call(this, document.createTextNode(a))
                }
            })
        })
    };

    function Pa(b) {
        function a(a) {
            return function (c) {
                for (var e = [], d = 0; d < arguments.length; ++d) e[d] = arguments[d];
                d = [];
                for (var h = [], g = 0; g < e.length; g++) {
                    var n = e[g];
                    n instanceof Element && p(n) && h.push(n);
                    if (n instanceof DocumentFragment) for (n = n.firstChild; n; n = n.nextSibling) d.push(n); else d.push(n)
                }
                a.apply(this, e);
                for (e = 0; e < h.length; e++) E(b, h[e]);
                if (p(this)) for (e = 0; e < d.length; e++) h = d[e], h instanceof Element && C(b, h)
            }
        }

        var c = Element.prototype;
        void 0 !== R && (c.before = a(R));
        void 0 !== R && (c.after = a(Fa));
        void 0 !== Ga &&
        v(c, "replaceWith", function (a) {
            for (var c = [], d = 0; d < arguments.length; ++d) c[d] = arguments[d];
            d = [];
            for (var k = [], h = 0; h < c.length; h++) {
                var g = c[h];
                g instanceof Element && p(g) && k.push(g);
                if (g instanceof DocumentFragment) for (g = g.firstChild; g; g = g.nextSibling) d.push(g); else d.push(g)
            }
            h = p(this);
            Ga.apply(this, c);
            for (c = 0; c < k.length; c++) E(b, k[c]);
            if (h) for (E(b, this), c = 0; c < d.length; c++) k = d[c], k instanceof Element && C(b, k)
        });
        void 0 !== Ha && v(c, "remove", function () {
            var a = p(this);
            Ha.call(this);
            a && E(b, this)
        })
    };

    function Qa() {
        function b(a, b) {
            Object.defineProperty(a, "innerHTML", {
                enumerable: b.enumerable,
                configurable: !0,
                get: b.get,
                set: function (a) {
                    var c = this, e = void 0;
                    p(this) && (e = [], u(this, function (a) {
                        a !== c && e.push(a)
                    }));
                    b.set.call(this, a);
                    if (e) for (var f = 0; f < e.length; f++) {
                        var k = e[f];
                        1 === k.__CE_state && d.disconnectedCallback(k)
                    }
                    this.ownerDocument.__CE_hasRegistry ? F(d, this) : y(d, this);
                    return a
                }
            })
        }

        function a(a, b) {
            v(a, "insertAdjacentElement", function (a, c) {
                var e = p(c);
                a = b.call(this, a, c);
                e && E(d, c);
                p(a) && C(d, c);
                return a
            })
        }

        function c(a, b) {
            function c(a, b) {
                for (var c = []; a !== b; a = a.nextSibling) c.push(a);
                for (b = 0; b < c.length; b++) F(d, c[b])
            }

            v(a, "insertAdjacentHTML", function (a, e) {
                a = a.toLowerCase();
                if ("beforebegin" === a) {
                    var d = this.previousSibling;
                    b.call(this, a, e);
                    c(d || this.parentNode.firstChild, this)
                } else if ("afterbegin" === a) d = this.firstChild, b.call(this, a, e), c(this.firstChild, d); else if ("beforeend" === a) d = this.lastChild, b.call(this, a, e), c(d || this.firstChild, null); else if ("afterend" === a) d = this.nextSibling, b.call(this, a, e), c(this.nextSibling,
                    d); else throw new SyntaxError("The value provided (" + String(a) + ") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.");
            })
        }

        var d = T;
        sa && v(Element.prototype, "attachShadow", function (a) {
            return this.__CE_shadowRoot = a = sa.call(this, a)
        });
        O && O.get ? b(Element.prototype, O) : S && S.get ? b(HTMLElement.prototype, S) : x(d, function (a) {
            b(a, {
                enumerable: !0, configurable: !0, get: function () {
                    return pa.call(this, !0).innerHTML
                }, set: function (a) {
                    var b = "template" === this.localName, c = b ? this.content : this, d = ja.call(document,
                        this.namespaceURI, this.localName);
                    for (d.innerHTML = a; 0 < c.childNodes.length;) I.call(c, c.childNodes[0]);
                    for (a = b ? d.content : d; 0 < a.childNodes.length;) H.call(c, a.childNodes[0])
                }
            })
        });
        v(Element.prototype, "setAttribute", function (a, b) {
            if (1 !== this.__CE_state) return ta.call(this, a, b);
            var c = P.call(this, a);
            ta.call(this, a, b);
            b = P.call(this, a);
            d.attributeChangedCallback(this, a, c, b, null)
        });
        v(Element.prototype, "setAttributeNS", function (a, b, c) {
            if (1 !== this.__CE_state) return va.call(this, a, b, c);
            var e = Q.call(this, a, b);
            va.call(this,
                a, b, c);
            c = Q.call(this, a, b);
            d.attributeChangedCallback(this, b, e, c, a)
        });
        v(Element.prototype, "removeAttribute", function (a) {
            if (1 !== this.__CE_state) return ua.call(this, a);
            var b = P.call(this, a);
            ua.call(this, a);
            null !== b && d.attributeChangedCallback(this, a, b, null, null)
        });
        v(Element.prototype, "removeAttributeNS", function (a, b) {
            if (1 !== this.__CE_state) return wa.call(this, a, b);
            var c = Q.call(this, a, b);
            wa.call(this, a, b);
            var e = Q.call(this, a, b);
            c !== e && d.attributeChangedCallback(this, b, c, e, a)
        });
        Ja ? a(HTMLElement.prototype,
            Ja) : xa ? a(Element.prototype, xa) : console.warn("Custom Elements: `Element#insertAdjacentElement` was not patched.");
        Ka ? c(HTMLElement.prototype, Ka) : ya ? c(Element.prototype, ya) : console.warn("Custom Elements: `Element#insertAdjacentHTML` was not patched.");
        U(d, Element.prototype, {i: za, append: Ea});
        Pa(d)
    };var V = window.customElements;
    if (!V || V.forcePolyfill || "function" != typeof V.define || "function" != typeof V.get) {
        var T = new w;
        Ma();
        Na();
        U(T, DocumentFragment.prototype, {i: na, append: oa});
        Oa();
        Qa();
        document.__CE_hasRegistry = !0;
        var customElements = new G(T);
        Object.defineProperty(window, "customElements", {configurable: !0, enumerable: !0, value: customElements})
    }
    ;/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    var W = window.customElements, Y = window.HTMLImports, Ra = window.HTMLTemplateElement;
    window.WebComponents = window.WebComponents || {};
    if (W && W.polyfillWrapFlushCallback) {
        var Z, Sa = function () {
            if (Z) {
                Ra.D && Ra.D(window.document);
                var b = Z;
                Z = null;
                b();
                return !0
            }
        }, Ta = Y.whenReady;
        W.polyfillWrapFlushCallback(function (b) {
            Z = b;
            Ta(Sa)
        });
        Y.whenReady = function (b) {
            Ta(function () {
                Sa() ? Y.whenReady(b) : b()
            })
        }
    }
    Y.whenReady(function () {
        requestAnimationFrame(function () {
            window.WebComponents.ready = !0;
            document.dispatchEvent(new CustomEvent("WebComponentsReady", {bubbles: !0}))
        })
    });
    var Ua = document.createElement("style");
    Ua.textContent = "body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";
    var Va = document.querySelector("head");
    Va.insertBefore(Ua, Va.firstChild);/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
}).call(this);

//# sourceMappingURL=webcomponents-hi-ce.js.map
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:05</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.webcomponents.hi.ce" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\webcomponents-hi-ce.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.webcomponents.hi.ce.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\webcomponents-hi-ce.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>webcomponents-hi-ce.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/webcomponents-hi-ce.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.webcomponents.hi">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.webcomponents.hi.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.webcomponents.hi.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53165.54394</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license @nocompile
 Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
(function () {/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    'use strict';
    (function (h) {
        function B(a, b) {
            if ("function" === typeof window.CustomEvent) return new CustomEvent(a, b);
            var c = document.createEvent("CustomEvent");
            c.initCustomEvent(a, !!b.bubbles, !!b.cancelable, b.detail);
            return c
        }

        function n(a) {
            if (w) return a.ownerDocument !== document ? a.ownerDocument : null;
            var b = a.__importDoc;
            if (!b && a.parentNode) {
                b = a.parentNode;
                if ("function" === typeof b.closest) b = b.closest("link[rel=import]"); else for (; !r(b) && (b = b.parentNode);) ;
                a.__importDoc = b
            }
            return b
        }

        function L(a) {
            var b = l(document,
                "link[rel=import]:not([import-dependency])"), c = b.length;
            c ? g(b, function (b) {
                return t(b, function () {
                    0 === --c && a()
                })
            }) : a()
        }

        function C(a) {
            function b() {
                "loading" !== document.readyState && document.body && (document.removeEventListener("readystatechange", b), a())
            }

            document.addEventListener("readystatechange", b);
            b()
        }

        function D(a) {
            C(function () {
                return L(function () {
                    return a && a()
                })
            })
        }

        function t(a, b) {
            if (a.__loaded) b && b(); else if ("script" === a.localName && !a.src || "style" === a.localName && !a.firstChild) a.__loaded = !0, b && b();
            else {
                var c = function (d) {
                    a.removeEventListener(d.type, c);
                    a.__loaded = !0;
                    b && b()
                };
                a.addEventListener("load", c);
                x && "style" === a.localName || a.addEventListener("error", c)
            }
        }

        function r(a) {
            return a.nodeType === Node.ELEMENT_NODE && "link" === a.localName && "import" === a.rel
        }

        function k() {
            var a = this;
            this.a = {};
            this.b = 0;
            this.g = new MutationObserver(function (b) {
                return a.A(b)
            });
            this.g.observe(document.head, {childList: !0, subtree: !0});
            this.loadImports(document)
        }

        function E(a) {
            g(l(a, "template"), function (a) {
                g(l(a.content, 'script:not([type]),script[type="application/javascript"],script[type="text/javascript"],script[type="module"]'),
                    function (a) {
                        var b = document.createElement("script");
                        g(a.attributes, function (a) {
                            return b.setAttribute(a.name, a.value)
                        });
                        b.textContent = a.textContent;
                        a.parentNode.replaceChild(b, a)
                    });
                E(a.content)
            })
        }

        function l(a, b) {
            return a.childNodes.length ? a.querySelectorAll(b) : M
        }

        function g(a, b, c) {
            var d = a ? a.length : 0, f = c ? -1 : 1;
            for (c = c ? d - 1 : 0; c < d && 0 <= c; c += f) b(a[c], c)
        }

        var p = document.createElement("link"), w = "import" in p, M = p.querySelectorAll("*"), y = null;
        !1 === "currentScript" in document && Object.defineProperty(document, "currentScript",
            {
                get: function () {
                    return y || ("complete" !== document.readyState ? document.scripts[document.scripts.length - 1] : null)
                }, configurable: !0
            });
        var N = /(url\()([^)]*)(\))/g, O = /(@import[\s]+(?!url\())([^;]*)(;)/g,
            P = /(<link[^>]*)(rel=['|"]?stylesheet['|"]?[^>]*>)/g, e = {
                v: function (a, b) {
                    a.href && a.setAttribute("href", e.c(a.getAttribute("href"), b));
                    a.src && a.setAttribute("src", e.c(a.getAttribute("src"), b));
                    if ("style" === a.localName) {
                        var c = e.o(a.textContent, b, N);
                        a.textContent = e.o(c, b, O)
                    }
                }, o: function (a, b, c) {
                    return a.replace(c,
                        function (a, c, m, g) {
                            a = m.replace(/["']/g, "");
                            b && (a = e.c(a, b));
                            return c + "'" + a + "'" + g
                        })
                }, c: function (a, b) {
                    if (void 0 === e.f) {
                        e.f = !1;
                        try {
                            var c = new URL("b", "http://a");
                            c.pathname = "c%20d";
                            e.f = "http://a/c%20d" === c.href
                        } catch (d) {
                        }
                    }
                    if (e.f) return (new URL(a, b)).href;
                    c = e.s;
                    c || (c = document.implementation.createHTMLDocument("temp"), e.s = c, c.i = c.createElement("base"), c.head.appendChild(c.i), c.h = c.createElement("a"));
                    c.i.href = b;
                    c.h.href = a;
                    return c.h.href || a
                }
            }, F = {
                async: !0, load: function (a, b, c) {
                    if (a) if (a.match(/^data:/)) {
                        a =
                            a.split(",");
                        var d = a[1];
                        d = -1 < a[0].indexOf(";base64") ? atob(d) : decodeURIComponent(d);
                        b(d)
                    } else {
                        var f = new XMLHttpRequest;
                        f.open("GET", a, F.async);
                        f.onload = function () {
                            var a = f.responseURL || f.getResponseHeader("Location");
                            a && 0 === a.indexOf("/") && (a = (location.origin || location.protocol + "//" + location.host) + a);
                            var d = f.response || f.responseText;
                            304 === f.status || 0 === f.status || 200 <= f.status && 300 > f.status ? b(d, a) : c(d)
                        };
                        f.send()
                    } else c("error: href must be specified")
                }
            }, x = /Trident/.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent);
        k.prototype.loadImports = function (a) {
            var b = this;
            g(l(a, "link[rel=import]"), function (a) {
                return b.l(a)
            })
        };
        k.prototype.l = function (a) {
            var b = this, c = a.href;
            if (void 0 !== this.a[c]) {
                var d = this.a[c];
                d && d.__loaded && (a.__import = d, this.j(a))
            } else this.b++, this.a[c] = "pending", F.load(c, function (a, d) {
                a = b.B(a, d || c);
                b.a[c] = a;
                b.b--;
                b.loadImports(a);
                b.m()
            }, function () {
                b.a[c] = null;
                b.b--;
                b.m()
            })
        };
        k.prototype.B = function (a, b) {
            if (!a) return document.createDocumentFragment();
            x && (a = a.replace(P, function (a, b, c) {
                return -1 === a.indexOf("type=") ?
                    b + " type=import-disable " + c : a
            }));
            var c = document.createElement("template");
            c.innerHTML = a;
            if (c.content) a = c.content, E(a); else for (a = document.createDocumentFragment(); c.firstChild;) a.appendChild(c.firstChild);
            if (c = a.querySelector("base")) b = e.c(c.getAttribute("href"), b), c.removeAttribute("href");
            var d = 0;
            g(l(a, 'link[rel=import],link[rel=stylesheet][href][type=import-disable],style:not([type]),link[rel=stylesheet][href]:not([type]),script:not([type]),script[type="application/javascript"],script[type="text/javascript"],script[type="module"]'),
                function (a) {
                    t(a);
                    e.v(a, b);
                    a.setAttribute("import-dependency", "");
                    if ("script" === a.localName && !a.src && a.textContent) {
                        if ("module" === a.type) throw Error("Inline module scripts are not supported in HTML Imports.");
                        a.setAttribute("src", "data:text/javascript;charset=utf-8," + encodeURIComponent(a.textContent + ("\n//# sourceURL=" + b + (d ? "-" + d : "") + ".js\n")));
                        a.textContent = "";
                        d++
                    }
                });
            return a
        };
        k.prototype.m = function () {
            var a = this;
            if (!this.b) {
                this.g.disconnect();
                this.flatten(document);
                var b = !1, c = !1, d = function () {
                    c &&
                    b && (a.loadImports(document), a.b || (a.g.observe(document.head, {
                        childList: !0,
                        subtree: !0
                    }), a.w()))
                };
                this.D(function () {
                    c = !0;
                    d()
                });
                this.C(function () {
                    b = !0;
                    d()
                })
            }
        };
        k.prototype.flatten = function (a) {
            var b = this;
            g(l(a, "link[rel=import]"), function (a) {
                var c = b.a[a.href];
                (a.__import = c) && c.nodeType === Node.DOCUMENT_FRAGMENT_NODE && (b.a[a.href] = a, a.readyState = "loading", a.__import = a, b.flatten(c), a.appendChild(c))
            })
        };
        k.prototype.C = function (a) {
            function b(f) {
                if (f < d) {
                    var m = c[f], e = document.createElement("script");
                    m.removeAttribute("import-dependency");
                    g(m.attributes, function (a) {
                        return e.setAttribute(a.name, a.value)
                    });
                    y = e;
                    m.parentNode.replaceChild(e, m);
                    t(e, function () {
                        y = null;
                        b(f + 1)
                    })
                } else a()
            }

            var c = l(document, "script[import-dependency]"), d = c.length;
            b(0)
        };
        k.prototype.D = function (a) {
            var b = l(document, "style[import-dependency],link[rel=stylesheet][import-dependency]"), c = b.length;
            if (c) {
                var d = x && !!document.querySelector("link[rel=stylesheet][href][type=import-disable]");
                g(b, function (b) {
                    t(b, function () {
                        b.removeAttribute("import-dependency");
                        0 === --c && a()
                    });
                    if (d && b.parentNode !== document.head) {
                        var e = document.createElement(b.localName);
                        e.__appliedElement = b;
                        e.setAttribute("type", "import-placeholder");
                        b.parentNode.insertBefore(e, b.nextSibling);
                        for (e = n(b); e && n(e);) e = n(e);
                        e.parentNode !== document.head && (e = null);
                        document.head.insertBefore(b, e);
                        b.removeAttribute("type")
                    }
                })
            } else a()
        };
        k.prototype.w = function () {
            var a = this;
            g(l(document, "link[rel=import]"), function (b) {
                return a.j(b)
            }, !0)
        };
        k.prototype.j = function (a) {
            a.__loaded || (a.__loaded = !0, a.import && (a.import.readyState =
                "complete"), a.dispatchEvent(B(a.import ? "load" : "error", {
                bubbles: !1,
                cancelable: !1,
                detail: void 0
            })))
        };
        k.prototype.A = function (a) {
            var b = this;
            g(a, function (a) {
                return g(a.addedNodes, function (a) {
                    a && a.nodeType === Node.ELEMENT_NODE && (r(a) ? b.l(a) : b.loadImports(a))
                })
            })
        };
        var z = null;
        if (w) g(l(document, "link[rel=import]"), function (a) {
            a.import && "loading" === a.import.readyState || (a.__loaded = !0)
        }), p = function (a) {
            a = a.target;
            r(a) && (a.__loaded = !0)
        }, document.addEventListener("load", p, !0), document.addEventListener("error", p,
            !0); else {
            var q = Object.getOwnPropertyDescriptor(Node.prototype, "baseURI");
            Object.defineProperty((!q || q.configurable ? Node : Element).prototype, "baseURI", {
                get: function () {
                    var a = r(this) ? this : n(this);
                    return a ? a.href : q && q.get ? q.get.call(this) : (document.querySelector("base") || window.location).href
                }, configurable: !0, enumerable: !0
            });
            Object.defineProperty(HTMLLinkElement.prototype, "import", {
                get: function () {
                    return this.__import || null
                }, configurable: !0, enumerable: !0
            });
            C(function () {
                z = new k
            })
        }
        D(function () {
            return document.dispatchEvent(B("HTMLImportsLoaded",
                {cancelable: !0, bubbles: !0, detail: void 0}))
        });
        h.useNative = w;
        h.whenReady = D;
        h.importForElement = n;
        h.loadImports = function (a) {
            z && z.loadImports(a)
        }
    })(window.HTMLImports = window.HTMLImports || {});/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    var u = window.customElements, v = window.HTMLImports, A = window.HTMLTemplateElement;
    window.WebComponents = window.WebComponents || {};
    if (u && u.polyfillWrapFlushCallback) {
        var G, H = function () {
            if (G) {
                A.u && A.u(window.document);
                var h = G;
                G = null;
                h();
                return !0
            }
        }, I = v.whenReady;
        u.polyfillWrapFlushCallback(function (h) {
            G = h;
            I(H)
        });
        v.whenReady = function (h) {
            I(function () {
                H() ? v.whenReady(h) : h()
            })
        }
    }
    v.whenReady(function () {
        requestAnimationFrame(function () {
            window.WebComponents.ready = !0;
            document.dispatchEvent(new CustomEvent("WebComponentsReady", {bubbles: !0}))
        })
    });
    var J = document.createElement("style");
    J.textContent = "body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";
    var K = document.querySelector("head");
    K.insertBefore(J, K.firstChild);/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
}).call(this);

//# sourceMappingURL=webcomponents-hi.js.map
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:05</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.webcomponents.hi" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\webcomponents-hi.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.webcomponents.hi.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\webcomponents-hi.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>webcomponents-hi.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/webcomponents-hi.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd.ce">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd.ce.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd.ce.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53166.951537</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license @nocompile
 Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
(function () {/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    'use strict';
    var n,
        p = "undefined" != typeof window && window === this ? this : "undefined" != typeof global && null != global ? global : this,
        aa = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
            a != Array.prototype && a != Object.prototype && (a[b] = c.value)
        };

    function ba() {
        ba = function () {
        };
        p.Symbol || (p.Symbol = ca)
    }

    var ca = function () {
        var a = 0;
        return function (b) {
            return "jscomp_symbol_" + (b || "") + a++
        }
    }();

    function da() {
        ba();
        var a = p.Symbol.iterator;
        a || (a = p.Symbol.iterator = p.Symbol("iterator"));
        "function" != typeof Array.prototype[a] && aa(Array.prototype, a, {
            configurable: !0,
            writable: !0,
            value: function () {
                return ea(this)
            }
        });
        da = function () {
        }
    }

    function ea(a) {
        var b = 0;
        return fa(function () {
            return b < a.length ? {done: !1, value: a[b++]} : {done: !0}
        })
    }

    function fa(a) {
        da();
        a = {next: a};
        a[p.Symbol.iterator] = function () {
            return this
        };
        return a
    }

    function ha(a) {
        da();
        ba();
        da();
        var b = a[Symbol.iterator];
        return b ? b.call(a) : ea(a)
    }

    function ia(a) {
        for (var b, c = []; !(b = a.next()).done;) c.push(b.value);
        return c
    }

    (function (a) {
        function b(a, b) {
            if ("function" === typeof window.CustomEvent) return new CustomEvent(a, b);
            var c = document.createEvent("CustomEvent");
            c.initCustomEvent(a, !!b.bubbles, !!b.cancelable, b.detail);
            return c
        }

        function c(a) {
            if (O) return a.ownerDocument !== document ? a.ownerDocument : null;
            var b = a.__importDoc;
            if (!b && a.parentNode) {
                b = a.parentNode;
                if ("function" === typeof b.closest) b = b.closest("link[rel=import]"); else for (; !h(b) && (b = b.parentNode);) ;
                a.__importDoc = b
            }
            return b
        }

        function d(a) {
            var b = m(document, "link[rel=import]:not([import-dependency])"),
                c = b.length;
            c ? t(b, function (b) {
                return g(b, function () {
                    0 === --c && a()
                })
            }) : a()
        }

        function e(a) {
            function b() {
                "loading" !== document.readyState && document.body && (document.removeEventListener("readystatechange", b), a())
            }

            document.addEventListener("readystatechange", b);
            b()
        }

        function f(a) {
            e(function () {
                return d(function () {
                    return a && a()
                })
            })
        }

        function g(a, b) {
            if (a.__loaded) b && b(); else if ("script" === a.localName && !a.src || "style" === a.localName && !a.firstChild) a.__loaded = !0, b && b(); else {
                var c = function (d) {
                    a.removeEventListener(d.type,
                        c);
                    a.__loaded = !0;
                    b && b()
                };
                a.addEventListener("load", c);
                ab && "style" === a.localName || a.addEventListener("error", c)
            }
        }

        function h(a) {
            return a.nodeType === Node.ELEMENT_NODE && "link" === a.localName && "import" === a.rel
        }

        function k() {
            var a = this;
            this.a = {};
            this.b = 0;
            this.c = new MutationObserver(function (b) {
                return a.Da(b)
            });
            this.c.observe(document.head, {childList: !0, subtree: !0});
            this.loadImports(document)
        }

        function l(a) {
            t(m(a, "template"), function (a) {
                t(m(a.content, 'script:not([type]),script[type="application/javascript"],script[type="text/javascript"],script[type="module"]'),
                    function (a) {
                        var b = document.createElement("script");
                        t(a.attributes, function (a) {
                            return b.setAttribute(a.name, a.value)
                        });
                        b.textContent = a.textContent;
                        a.parentNode.replaceChild(b, a)
                    });
                l(a.content)
            })
        }

        function m(a, b) {
            return a.childNodes.length ? a.querySelectorAll(b) : Y
        }

        function t(a, b, c) {
            var d = a ? a.length : 0, e = c ? -1 : 1;
            for (c = c ? d - 1 : 0; c < d && 0 <= c; c += e) b(a[c], c)
        }

        var E = document.createElement("link"), O = "import" in E, Y = E.querySelectorAll("*"), bb = null;
        !1 === "currentScript" in document && Object.defineProperty(document, "currentScript",
            {
                get: function () {
                    return bb || ("complete" !== document.readyState ? document.scripts[document.scripts.length - 1] : null)
                }, configurable: !0
            });
        var xe = /(url\()([^)]*)(\))/g, ye = /(@import[\s]+(?!url\())([^;]*)(;)/g,
            ze = /(<link[^>]*)(rel=['|"]?stylesheet['|"]?[^>]*>)/g, F = {
                ya: function (a, b) {
                    a.href && a.setAttribute("href", F.S(a.getAttribute("href"), b));
                    a.src && a.setAttribute("src", F.S(a.getAttribute("src"), b));
                    if ("style" === a.localName) {
                        var c = F.ja(a.textContent, b, xe);
                        a.textContent = F.ja(c, b, ye)
                    }
                }, ja: function (a, b, c) {
                    return a.replace(c,
                        function (a, c, d, e) {
                            a = d.replace(/["']/g, "");
                            b && (a = F.S(a, b));
                            return c + "'" + a + "'" + e
                        })
                }, S: function (a, b) {
                    if (void 0 === F.W) {
                        F.W = !1;
                        try {
                            var c = new URL("b", "http://a");
                            c.pathname = "c%20d";
                            F.W = "http://a/c%20d" === c.href
                        } catch (kg) {
                        }
                    }
                    if (F.W) return (new URL(a, b)).href;
                    c = F.qa;
                    c || (c = document.implementation.createHTMLDocument("temp"), F.qa = c, c.da = c.createElement("base"), c.head.appendChild(c.da), c.ca = c.createElement("a"));
                    c.da.href = b;
                    c.ca.href = a;
                    return c.ca.href || a
                }
            }, hc = {
                async: !0, load: function (a, b, c) {
                    if (a) if (a.match(/^data:/)) {
                        a =
                            a.split(",");
                        var d = a[1];
                        d = -1 < a[0].indexOf(";base64") ? atob(d) : decodeURIComponent(d);
                        b(d)
                    } else {
                        var e = new XMLHttpRequest;
                        e.open("GET", a, hc.async);
                        e.onload = function () {
                            var a = e.responseURL || e.getResponseHeader("Location");
                            a && 0 === a.indexOf("/") && (a = (location.origin || location.protocol + "//" + location.host) + a);
                            var d = e.response || e.responseText;
                            304 === e.status || 0 === e.status || 200 <= e.status && 300 > e.status ? b(d, a) : c(d)
                        };
                        e.send()
                    } else c("error: href must be specified")
                }
            }, ab = /Trident/.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent);
        k.prototype.loadImports = function (a) {
            var b = this;
            a = m(a, "link[rel=import]");
            t(a, function (a) {
                return b.g(a)
            })
        };
        k.prototype.g = function (a) {
            var b = this, c = a.href;
            if (void 0 !== this.a[c]) {
                var d = this.a[c];
                d && d.__loaded && (a.__import = d, this.f(a))
            } else this.b++, this.a[c] = "pending", hc.load(c, function (a, d) {
                a = b.Ea(a, d || c);
                b.a[c] = a;
                b.b--;
                b.loadImports(a);
                b.j()
            }, function () {
                b.a[c] = null;
                b.b--;
                b.j()
            })
        };
        k.prototype.Ea = function (a, b) {
            if (!a) return document.createDocumentFragment();
            ab && (a = a.replace(ze, function (a, b, c) {
                return -1 ===
                a.indexOf("type=") ? b + " type=import-disable " + c : a
            }));
            var c = document.createElement("template");
            c.innerHTML = a;
            if (c.content) a = c.content, l(a); else for (a = document.createDocumentFragment(); c.firstChild;) a.appendChild(c.firstChild);
            if (c = a.querySelector("base")) b = F.S(c.getAttribute("href"), b), c.removeAttribute("href");
            c = m(a, 'link[rel=import],link[rel=stylesheet][href][type=import-disable],style:not([type]),link[rel=stylesheet][href]:not([type]),script:not([type]),script[type="application/javascript"],script[type="text/javascript"],script[type="module"]');
            var d = 0;
            t(c, function (a) {
                g(a);
                F.ya(a, b);
                a.setAttribute("import-dependency", "");
                if ("script" === a.localName && !a.src && a.textContent) {
                    if ("module" === a.type) throw Error("Inline module scripts are not supported in HTML Imports.");
                    a.setAttribute("src", "data:text/javascript;charset=utf-8," + encodeURIComponent(a.textContent + ("\n//# sourceURL=" + b + (d ? "-" + d : "") + ".js\n")));
                    a.textContent = "";
                    d++
                }
            });
            return a
        };
        k.prototype.j = function () {
            var a = this;
            if (!this.b) {
                this.c.disconnect();
                this.flatten(document);
                var b = !1, c = !1, d = function () {
                    c &&
                    b && (a.loadImports(document), a.b || (a.c.observe(document.head, {
                        childList: !0,
                        subtree: !0
                    }), a.Z()))
                };
                this.Ga(function () {
                    c = !0;
                    d()
                });
                this.Fa(function () {
                    b = !0;
                    d()
                })
            }
        };
        k.prototype.flatten = function (a) {
            var b = this;
            a = m(a, "link[rel=import]");
            t(a, function (a) {
                var c = b.a[a.href];
                (a.__import = c) && c.nodeType === Node.DOCUMENT_FRAGMENT_NODE && (b.a[a.href] = a, a.readyState = "loading", a.__import = a, b.flatten(c), a.appendChild(c))
            })
        };
        k.prototype.Fa = function (a) {
            function b(e) {
                if (e < d) {
                    var f = c[e], h = document.createElement("script");
                    f.removeAttribute("import-dependency");
                    t(f.attributes, function (a) {
                        return h.setAttribute(a.name, a.value)
                    });
                    bb = h;
                    f.parentNode.replaceChild(h, f);
                    g(h, function () {
                        bb = null;
                        b(e + 1)
                    })
                } else a()
            }

            var c = m(document, "script[import-dependency]"), d = c.length;
            b(0)
        };
        k.prototype.Ga = function (a) {
            var b = m(document, "style[import-dependency],link[rel=stylesheet][import-dependency]"), d = b.length;
            if (d) {
                var e = ab && !!document.querySelector("link[rel=stylesheet][href][type=import-disable]");
                t(b, function (b) {
                    g(b, function () {
                        b.removeAttribute("import-dependency");
                        0 === --d &&
                        a()
                    });
                    if (e && b.parentNode !== document.head) {
                        var f = document.createElement(b.localName);
                        f.__appliedElement = b;
                        f.setAttribute("type", "import-placeholder");
                        b.parentNode.insertBefore(f, b.nextSibling);
                        for (f = c(b); f && c(f);) f = c(f);
                        f.parentNode !== document.head && (f = null);
                        document.head.insertBefore(b, f);
                        b.removeAttribute("type")
                    }
                })
            } else a()
        };
        k.prototype.Z = function () {
            var a = this, b = m(document, "link[rel=import]");
            t(b, function (b) {
                return a.f(b)
            }, !0)
        };
        k.prototype.f = function (a) {
            a.__loaded || (a.__loaded = !0, a.import && (a.import.readyState =
                "complete"), a.dispatchEvent(b(a.import ? "load" : "error", {
                bubbles: !1,
                cancelable: !1,
                detail: void 0
            })))
        };
        k.prototype.Da = function (a) {
            var b = this;
            t(a, function (a) {
                return t(a.addedNodes, function (a) {
                    a && a.nodeType === Node.ELEMENT_NODE && (h(a) ? b.g(a) : b.loadImports(a))
                })
            })
        };
        var cb = null;
        if (O) E = m(document, "link[rel=import]"), t(E, function (a) {
            a.import && "loading" === a.import.readyState || (a.__loaded = !0)
        }), E = function (a) {
            a = a.target;
            h(a) && (a.__loaded = !0)
        }, document.addEventListener("load", E, !0), document.addEventListener("error",
            E, !0); else {
            var ma = Object.getOwnPropertyDescriptor(Node.prototype, "baseURI");
            Object.defineProperty((!ma || ma.configurable ? Node : Element).prototype, "baseURI", {
                get: function () {
                    var a = h(this) ? this : c(this);
                    return a ? a.href : ma && ma.get ? ma.get.call(this) : (document.querySelector("base") || window.location).href
                }, configurable: !0, enumerable: !0
            });
            Object.defineProperty(HTMLLinkElement.prototype, "import", {
                get: function () {
                    return this.__import || null
                }, configurable: !0, enumerable: !0
            });
            e(function () {
                cb = new k
            })
        }
        f(function () {
            return document.dispatchEvent(b("HTMLImportsLoaded",
                {cancelable: !0, bubbles: !0, detail: void 0}))
        });
        a.useNative = O;
        a.whenReady = f;
        a.importForElement = c;
        a.loadImports = function (a) {
            cb && cb.loadImports(a)
        }
    })(window.HTMLImports = window.HTMLImports || {});/*

Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    function ja() {
        this.ia = this.root = null;
        this.N = !1;
        this.A = this.K = this.Y = this.assignedSlot = this.assignedNodes = this.C = null;
        this.childNodes = this.nextSibling = this.previousSibling = this.lastChild = this.firstChild = this.parentNode = this.F = void 0;
        this.ea = this.fa = !1;
        this.J = {}
    }

    ja.prototype.toJSON = function () {
        return {}
    };

    function q(a) {
        a.__shady || (a.__shady = new ja);
        return a.__shady
    }

    function r(a) {
        return a && a.__shady
    };var u = window.ShadyDOM || {};
    u.Aa = !(!Element.prototype.attachShadow || !Node.prototype.getRootNode);
    var ka = Object.getOwnPropertyDescriptor(Node.prototype, "firstChild");
    u.l = !!(ka && ka.configurable && ka.get);
    u.$ = u.force || !u.Aa;
    u.D = u.noPatch || !1;
    u.ha = u.preferPerformance;

    function v(a) {
        return (a = r(a)) && void 0 !== a.firstChild
    }

    function w(a) {
        return "ShadyRoot" === a.sa
    }

    function la(a) {
        return (a = (a = r(a)) && a.root) && na(a)
    }

    var x = Element.prototype,
        oa = x.matches || x.matchesSelector || x.mozMatchesSelector || x.msMatchesSelector || x.oMatchesSelector || x.webkitMatchesSelector,
        pa = document.createTextNode(""), qa = 0, ra = [];
    (new MutationObserver(function () {
        for (; ra.length;) try {
            ra.shift()()
        } catch (a) {
            throw pa.textContent = qa++, a;
        }
    })).observe(pa, {characterData: !0});

    function sa(a) {
        ra.push(a);
        pa.textContent = qa++
    }

    var ta = !!document.contains;

    function ua(a, b) {
        for (; b;) {
            if (b == a) return !0;
            b = b.__shady_parentNode
        }
        return !1
    }

    function va(a) {
        for (var b = a.length - 1; 0 <= b; b--) {
            var c = a[b], d = c.getAttribute("id") || c.getAttribute("name");
            d && "length" !== d && isNaN(d) && (a[d] = c)
        }
        a.item = function (b) {
            return a[b]
        };
        a.namedItem = function (b) {
            if ("length" !== b && isNaN(b) && a[b]) return a[b];
            for (var c = ha(a), d = c.next(); !d.done; d = c.next()) if (d = d.value, (d.getAttribute("id") || d.getAttribute("name")) == b) return d;
            return null
        };
        return a
    }

    function y(a, b, c, d) {
        c = void 0 === c ? "" : c;
        for (var e in b) {
            var f = b[e];
            if (!(d && 0 <= d.indexOf(e))) {
                f.configurable = !0;
                var g = c + e;
                if (f.value) a[g] = f.value; else try {
                    Object.defineProperty(a, g, f)
                } catch (h) {
                }
            }
        }
    }

    function z(a) {
        var b = {};
        Object.getOwnPropertyNames(a).forEach(function (c) {
            b[c] = Object.getOwnPropertyDescriptor(a, c)
        });
        return b
    };var wa = [], xa;

    function ya(a) {
        xa || (xa = !0, sa(za));
        wa.push(a)
    }

    function za() {
        xa = !1;
        for (var a = !!wa.length; wa.length;) wa.shift()();
        return a
    }

    za.list = wa;

    function Aa() {
        this.a = !1;
        this.addedNodes = [];
        this.removedNodes = [];
        this.M = new Set
    }

    function Ba(a) {
        a.a || (a.a = !0, sa(function () {
            a.flush()
        }))
    }

    Aa.prototype.flush = function () {
        if (this.a) {
            this.a = !1;
            var a = this.takeRecords();
            a.length && this.M.forEach(function (b) {
                b(a)
            })
        }
    };
    Aa.prototype.takeRecords = function () {
        if (this.addedNodes.length || this.removedNodes.length) {
            var a = [{addedNodes: this.addedNodes, removedNodes: this.removedNodes}];
            this.addedNodes = [];
            this.removedNodes = [];
            return a
        }
        return []
    };

    function Ca(a, b) {
        var c = q(a);
        c.C || (c.C = new Aa);
        c.C.M.add(b);
        var d = c.C;
        return {
            ra: b, B: d, ta: a, takeRecords: function () {
                return d.takeRecords()
            }
        }
    }

    function Da(a) {
        var b = a && a.B;
        b && (b.M.delete(a.ra), b.M.size || (q(a.ta).C = null))
    }

    function Ea(a, b) {
        var c = b.getRootNode();
        return a.map(function (a) {
            var b = c === a.target.getRootNode();
            if (b && a.addedNodes) {
                if (b = Array.from(a.addedNodes).filter(function (a) {
                    return c === a.getRootNode()
                }), b.length) return a = Object.create(a), Object.defineProperty(a, "addedNodes", {
                    value: b,
                    configurable: !0
                }), a
            } else if (b) return a
        }).filter(function (a) {
            return a
        })
    };var Fa = /[&\u00A0"]/g, Ga = /[&\u00A0<>]/g;

    function Ha(a) {
        switch (a) {
            case "&":
                return "&amp;";
            case "<":
                return "&lt;";
            case ">":
                return "&gt;";
            case '"':
                return "&quot;";
            case "\u00a0":
                return "&nbsp;"
        }
    }

    function Ia(a) {
        for (var b = {}, c = 0; c < a.length; c++) b[a[c]] = !0;
        return b
    }

    var Ja = Ia("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),
        Ka = Ia("style script xmp iframe noembed noframes plaintext noscript".split(" "));

    function La(a, b) {
        "template" === a.localName && (a = a.content);
        for (var c = "", d = b ? b(a) : a.childNodes, e = 0, f = d.length, g = void 0; e < f && (g = d[e]); e++) {
            a:{
                var h = g;
                var k = a, l = b;
                switch (h.nodeType) {
                    case Node.ELEMENT_NODE:
                        k = h.localName;
                        for (var m = "<" + k, t = h.attributes, E = 0, O; O = t[E]; E++) m += " " + O.name + '="' + O.value.replace(Fa, Ha) + '"';
                        m += ">";
                        h = Ja[k] ? m : m + La(h, l) + "</" + k + ">";
                        break a;
                    case Node.TEXT_NODE:
                        h = h.data;
                        h = k && Ka[k.localName] ? h : h.replace(Ga, Ha);
                        break a;
                    case Node.COMMENT_NODE:
                        h = "\x3c!--" + h.data + "--\x3e";
                        break a;
                    default:
                        throw window.console.error(h),
                            Error("not implemented");
                }
            }
            c += h
        }
        return c
    };var Ma = u.l, Na = {
        querySelector: function (a) {
            return this.__shady_native_querySelector(a)
        }, querySelectorAll: function (a) {
            return this.__shady_native_querySelectorAll(a)
        }
    }, Oa = {};

    function Pa(a) {
        Oa[a] = function (b) {
            return b["__shady_native_" + a]
        }
    }

    function Qa(a, b) {
        y(a, b, "__shady_native_");
        for (var c in b) Pa(c)
    }

    function A(a, b) {
        b = void 0 === b ? [] : b;
        for (var c = 0; c < b.length; c++) {
            var d = b[c], e = Object.getOwnPropertyDescriptor(a, d);
            e && (Object.defineProperty(a, "__shady_native_" + d, e), e.value ? Na[d] || (Na[d] = e.value) : Pa(d))
        }
    }

    var B = document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, !1),
        C = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT, null, !1),
        Ra = document.implementation.createHTMLDocument("inert");

    function Sa(a) {
        for (var b; b = a.__shady_native_firstChild;) a.__shady_native_removeChild(b)
    }

    var Ta = ["firstElementChild", "lastElementChild", "children", "childElementCount"],
        Ua = ["querySelector", "querySelectorAll"];

    function Va() {
        var a = ["dispatchEvent", "addEventListener", "removeEventListener"];
        window.EventTarget ? A(window.EventTarget.prototype, a) : (A(Node.prototype, a), A(Window.prototype, a));
        Ma ? A(Node.prototype, "parentNode firstChild lastChild previousSibling nextSibling childNodes parentElement textContent".split(" ")) : Qa(Node.prototype, {
            parentNode: {
                get: function () {
                    B.currentNode = this;
                    return B.parentNode()
                }
            }, firstChild: {
                get: function () {
                    B.currentNode = this;
                    return B.firstChild()
                }
            }, lastChild: {
                get: function () {
                    B.currentNode =
                        this;
                    return B.lastChild()
                }
            }, previousSibling: {
                get: function () {
                    B.currentNode = this;
                    return B.previousSibling()
                }
            }, nextSibling: {
                get: function () {
                    B.currentNode = this;
                    return B.nextSibling()
                }
            }, childNodes: {
                get: function () {
                    var a = [];
                    B.currentNode = this;
                    for (var c = B.firstChild(); c;) a.push(c), c = B.nextSibling();
                    return a
                }
            }, parentElement: {
                get: function () {
                    C.currentNode = this;
                    return C.parentNode()
                }
            }, textContent: {
                get: function () {
                    switch (this.nodeType) {
                        case Node.ELEMENT_NODE:
                        case Node.DOCUMENT_FRAGMENT_NODE:
                            for (var a = document.createTreeWalker(this,
                                NodeFilter.SHOW_TEXT, null, !1), c = "", d; d = a.nextNode();) c += d.nodeValue;
                            return c;
                        default:
                            return this.nodeValue
                    }
                }, set: function (a) {
                    if ("undefined" === typeof a || null === a) a = "";
                    switch (this.nodeType) {
                        case Node.ELEMENT_NODE:
                        case Node.DOCUMENT_FRAGMENT_NODE:
                            Sa(this);
                            (0 < a.length || this.nodeType === Node.ELEMENT_NODE) && this.__shady_native_insertBefore(document.createTextNode(a), void 0);
                            break;
                        default:
                            this.nodeValue = a
                    }
                }
            }
        });
        A(Node.prototype, "appendChild insertBefore removeChild replaceChild cloneNode contains".split(" "));
        a = {
            firstElementChild: {
                get: function () {
                    C.currentNode = this;
                    return C.firstChild()
                }
            }, lastElementChild: {
                get: function () {
                    C.currentNode = this;
                    return C.lastChild()
                }
            }, children: {
                get: function () {
                    var a = [];
                    C.currentNode = this;
                    for (var c = C.firstChild(); c;) a.push(c), c = C.nextSibling();
                    return va(a)
                }
            }, childElementCount: {
                get: function () {
                    return this.children ? this.children.length : 0
                }
            }
        };
        Ma ? (A(Element.prototype, Ta), A(Element.prototype, ["previousElementSibling", "nextElementSibling", "innerHTML"]), Object.getOwnPropertyDescriptor(HTMLElement.prototype,
            "children") && A(HTMLElement.prototype, ["children"]), Object.getOwnPropertyDescriptor(HTMLElement.prototype, "innerHTML") && A(HTMLElement.prototype, ["innerHTML"])) : (Qa(Element.prototype, a), Qa(Element.prototype, {
            previousElementSibling: {
                get: function () {
                    C.currentNode = this;
                    return C.previousSibling()
                }
            }, nextElementSibling: {
                get: function () {
                    C.currentNode = this;
                    return C.nextSibling()
                }
            }, innerHTML: {
                get: function () {
                    return La(this, function (a) {
                        return a.__shady_native_childNodes
                    })
                }, set: function (a) {
                    var b = "template" === this.localName ?
                        this.content : this;
                    Sa(b);
                    var d = this.localName || "div";
                    d = this.namespaceURI && this.namespaceURI !== Ra.namespaceURI ? Ra.createElementNS(this.namespaceURI, d) : Ra.createElement(d);
                    d.innerHTML = a;
                    for (a = "template" === this.localName ? d.content : d; d = a.__shady_native_firstChild;) b.__shady_native_insertBefore(d, void 0)
                }
            }
        }));
        A(Element.prototype, "setAttribute getAttribute hasAttribute removeAttribute focus blur".split(" "));
        A(Element.prototype, Ua);
        A(HTMLElement.prototype, ["focus", "blur", "contains"]);
        Ma && A(HTMLElement.prototype,
            ["parentElement", "children", "innerHTML"]);
        window.HTMLTemplateElement && A(window.HTMLTemplateElement.prototype, ["innerHTML"]);
        Ma ? A(DocumentFragment.prototype, Ta) : Qa(DocumentFragment.prototype, a);
        A(DocumentFragment.prototype, Ua);
        Ma ? (A(Document.prototype, Ta), A(Document.prototype, ["activeElement"])) : Qa(Document.prototype, a);
        A(Document.prototype, ["importNode", "getElementById"]);
        A(Document.prototype, Ua)
    };var Wa = z({
        get childNodes() {
            return this.__shady_childNodes
        }, get firstChild() {
            return this.__shady_firstChild
        }, get lastChild() {
            return this.__shady_lastChild
        }, get textContent() {
            return this.__shady_textContent
        }, set textContent(a) {
            this.__shady_textContent = a
        }, get childElementCount() {
            return this.__shady_childElementCount
        }, get children() {
            return this.__shady_children
        }, get firstElementChild() {
            return this.__shady_firstElementChild
        }, get lastElementChild() {
            return this.__shady_lastElementChild
        }, get innerHTML() {
            return this.__shady_innerHTML
        },
        set innerHTML(a) {
            return this.__shady_innerHTML = a
        }, get shadowRoot() {
            return this.__shady_shadowRoot
        }
    }), Xa = z({
        get parentElement() {
            return this.__shady_parentElement
        }, get parentNode() {
            return this.__shady_parentNode
        }, get nextSibling() {
            return this.__shady_nextSibling
        }, get previousSibling() {
            return this.__shady_previousSibling
        }, get nextElementSibling() {
            return this.__shady_nextElementSibling
        }, get previousElementSibling() {
            return this.__shady_previousElementSibling
        }, get className() {
            return this.__shady_className
        },
        set className(a) {
            return this.__shady_className = a
        }
    }), Ya;
    for (Ya in Wa) Wa[Ya].enumerable = !1;
    for (var Za in Xa) Xa[Za].enumerable = !1;
    var $a = u.l || u.D, db = $a ? function () {
    } : function (a) {
        var b = q(a);
        b.fa || (b.fa = !0, y(a, Xa))
    }, eb = $a ? function () {
    } : function (a) {
        var b = q(a);
        b.ea || (b.ea = !0, y(a, Wa))
    };
    var fb = "__eventWrappers" + Date.now(), gb = function () {
        var a = Object.getOwnPropertyDescriptor(Event.prototype, "composed");
        return a ? function (b) {
            return a.get.call(b)
        } : null
    }(), hb = {
        blur: !0,
        focus: !0,
        focusin: !0,
        focusout: !0,
        click: !0,
        dblclick: !0,
        mousedown: !0,
        mouseenter: !0,
        mouseleave: !0,
        mousemove: !0,
        mouseout: !0,
        mouseover: !0,
        mouseup: !0,
        wheel: !0,
        beforeinput: !0,
        input: !0,
        keydown: !0,
        keyup: !0,
        compositionstart: !0,
        compositionupdate: !0,
        compositionend: !0,
        touchstart: !0,
        touchend: !0,
        touchmove: !0,
        touchcancel: !0,
        pointerover: !0,
        pointerenter: !0,
        pointerdown: !0,
        pointermove: !0,
        pointerup: !0,
        pointercancel: !0,
        pointerout: !0,
        pointerleave: !0,
        gotpointercapture: !0,
        lostpointercapture: !0,
        dragstart: !0,
        drag: !0,
        dragenter: !0,
        dragleave: !0,
        dragover: !0,
        drop: !0,
        dragend: !0,
        DOMActivate: !0,
        DOMFocusIn: !0,
        DOMFocusOut: !0,
        keypress: !0
    }, ib = {
        DOMAttrModified: !0,
        DOMAttributeNameChanged: !0,
        DOMCharacterDataModified: !0,
        DOMElementNameChanged: !0,
        DOMNodeInserted: !0,
        DOMNodeInsertedIntoDocument: !0,
        DOMNodeRemoved: !0,
        DOMNodeRemovedFromDocument: !0,
        DOMSubtreeModified: !0
    };

    function jb(a) {
        return a instanceof Node ? a.__shady_getRootNode() : a
    }

    function kb(a, b) {
        var c = [], d = a;
        for (a = jb(a); d;) c.push(d), d.__shady_assignedSlot ? d = d.__shady_assignedSlot : d.nodeType === Node.DOCUMENT_FRAGMENT_NODE && d.host && (b || d !== a) ? d = d.host : d = d.__shady_parentNode;
        c[c.length - 1] === document && c.push(window);
        return c
    }

    function lb(a) {
        a.__composedPath || (a.__composedPath = kb(a.target, !0));
        return a.__composedPath
    }

    function mb(a, b) {
        if (!w) return a;
        a = kb(a, !0);
        for (var c = 0, d, e = void 0, f, g = void 0; c < b.length; c++) if (d = b[c], f = jb(d), f !== e && (g = a.indexOf(f), e = f), !w(f) || -1 < g) return d
    }

    function nb(a) {
        function b(b, d) {
            b = new a(b, d);
            b.__composed = d && !!d.composed;
            return b
        }

        b.__proto__ = a;
        b.prototype = a.prototype;
        return b
    }

    var ob = {focus: !0, blur: !0};

    function pb(a) {
        return a.__target !== a.target || a.__relatedTarget !== a.relatedTarget
    }

    function qb(a, b, c) {
        if (c = b.__handlers && b.__handlers[a.type] && b.__handlers[a.type][c]) for (var d = 0, e; (e = c[d]) && (!pb(a) || a.target !== a.relatedTarget) && (e.call(b, a), !a.__immediatePropagationStopped); d++) ;
    }

    function rb(a) {
        var b = a.composedPath();
        Object.defineProperty(a, "currentTarget", {
            get: function () {
                return d
            }, configurable: !0
        });
        for (var c = b.length - 1; 0 <= c; c--) {
            var d = b[c];
            qb(a, d, "capture");
            if (a.U) return
        }
        Object.defineProperty(a, "eventPhase", {
            get: function () {
                return Event.AT_TARGET
            }
        });
        var e;
        for (c = 0; c < b.length; c++) {
            d = b[c];
            var f = r(d);
            f = f && f.root;
            if (0 === c || f && f === e) if (qb(a, d, "bubble"), d !== window && (e = d.__shady_getRootNode()), a.U) break
        }
    }

    function sb(a, b, c, d, e, f) {
        for (var g = 0; g < a.length; g++) {
            var h = a[g], k = h.type, l = h.capture, m = h.once, t = h.passive;
            if (b === h.node && c === k && d === l && e === m && f === t) return g
        }
        return -1
    }

    function tb(a, b, c) {
        if (b) {
            var d = typeof b;
            if ("function" === d || "object" === d) if ("object" !== d || b.handleEvent && "function" === typeof b.handleEvent) {
                if (ib[a]) return this.__shady_native_addEventListener(a, b, c);
                if (c && "object" === typeof c) {
                    var e = !!c.capture;
                    var f = !!c.once;
                    var g = !!c.passive
                } else e = !!c, g = f = !1;
                var h = c && c.V || this, k = b[fb];
                if (k) {
                    if (-1 < sb(k, h, a, e, f, g)) return
                } else b[fb] = [];
                k = function (e) {
                    f && this.__shady_removeEventListener(a, b, c);
                    e.__target || ub(e);
                    if (h !== this) {
                        var g = Object.getOwnPropertyDescriptor(e, "currentTarget");
                        Object.defineProperty(e, "currentTarget", {
                            get: function () {
                                return h
                            }, configurable: !0
                        })
                    }
                    e.__previousCurrentTarget = e.currentTarget;
                    if (!w(h) || -1 != e.composedPath().indexOf(h)) if (e.composed || -1 < e.composedPath().indexOf(h)) if (pb(e) && e.target === e.relatedTarget) e.eventPhase === Event.BUBBLING_PHASE && e.stopImmediatePropagation(); else if (e.eventPhase === Event.CAPTURING_PHASE || e.bubbles || e.target === h || h instanceof Window) {
                        var k = "function" === d ? b.call(h, e) : b.handleEvent && b.handleEvent(e);
                        h !== this && (g ? (Object.defineProperty(e,
                            "currentTarget", g), g = null) : delete e.currentTarget);
                        return k
                    }
                };
                b[fb].push({node: h, type: a, capture: e, once: f, passive: g, Qa: k});
                ob[a] ? (this.__handlers = this.__handlers || {}, this.__handlers[a] = this.__handlers[a] || {
                    capture: [],
                    bubble: []
                }, this.__handlers[a][e ? "capture" : "bubble"].push(k)) : this.__shady_native_addEventListener(a, k, c)
            }
        }
    }

    function vb(a, b, c) {
        if (b) {
            if (ib[a]) return this.__shady_native_removeEventListener(a, b, c);
            if (c && "object" === typeof c) {
                var d = !!c.capture;
                var e = !!c.once;
                var f = !!c.passive
            } else d = !!c, f = e = !1;
            var g = c && c.V || this, h = void 0;
            var k = null;
            try {
                k = b[fb]
            } catch (l) {
            }
            k && (e = sb(k, g, a, d, e, f), -1 < e && (h = k.splice(e, 1)[0].Qa, k.length || (b[fb] = void 0)));
            this.__shady_native_removeEventListener(a, h || b, c);
            h && ob[a] && this.__handlers && this.__handlers[a] && (a = this.__handlers[a][d ? "capture" : "bubble"], h = a.indexOf(h), -1 < h && a.splice(h, 1))
        }
    }

    function wb() {
        for (var a in ob) window.__shady_native_addEventListener(a, function (a) {
            a.__target || (ub(a), rb(a))
        }, !0)
    }

    var xb = z({
        get composed() {
            void 0 === this.__composed && (gb ? this.__composed = "focusin" === this.type || "focusout" === this.type || gb(this) : !1 !== this.isTrusted && (this.__composed = hb[this.type]));
            return this.__composed || !1
        }, composedPath: function () {
            this.__composedPath || (this.__composedPath = kb(this.__target, this.composed));
            return this.__composedPath
        }, get target() {
            return mb(this.currentTarget || this.__previousCurrentTarget, this.composedPath())
        }, get relatedTarget() {
            if (!this.__relatedTarget) return null;
            this.__relatedTargetComposedPath ||
            (this.__relatedTargetComposedPath = kb(this.__relatedTarget, !0));
            return mb(this.currentTarget || this.__previousCurrentTarget, this.__relatedTargetComposedPath)
        }, stopPropagation: function () {
            Event.prototype.stopPropagation.call(this);
            this.U = !0
        }, stopImmediatePropagation: function () {
            Event.prototype.stopImmediatePropagation.call(this);
            this.U = this.__immediatePropagationStopped = !0
        }
    });

    function ub(a) {
        a.__target = a.target;
        a.__relatedTarget = a.relatedTarget;
        if (u.l) {
            var b = Object.getPrototypeOf(a);
            if (!Object.hasOwnProperty(b, "__shady_patchedProto")) {
                var c = Object.create(b);
                c.__shady_sourceProto = b;
                y(c, xb);
                b.__shady_patchedProto = c
            }
            a.__proto__ = b.__shady_patchedProto
        } else y(a, xb)
    }

    var yb = nb(Event), zb = nb(CustomEvent), Ab = nb(MouseEvent);

    function Bb() {
        if (!gb && Object.getOwnPropertyDescriptor(Event.prototype, "isTrusted")) {
            var a = function () {
                var a = new MouseEvent("click", {bubbles: !0, cancelable: !0, composed: !0});
                this.__shady_dispatchEvent(a)
            };
            Element.prototype.click ? Element.prototype.click = a : HTMLElement.prototype.click && (HTMLElement.prototype.click = a)
        }
    }

    var Cb = Object.getOwnPropertyNames(Document.prototype).filter(function (a) {
        return "on" === a.substring(0, 2)
    });

    function Db(a, b) {
        return {index: a, G: [], L: b}
    }

    function Eb(a, b, c, d) {
        var e = 0, f = 0, g = 0, h = 0, k = Math.min(b - e, d - f);
        if (0 == e && 0 == f) a:{
            for (g = 0; g < k; g++) if (a[g] !== c[g]) break a;
            g = k
        }
        if (b == a.length && d == c.length) {
            h = a.length;
            for (var l = c.length, m = 0; m < k - g && Fb(a[--h], c[--l]);) m++;
            h = m
        }
        e += g;
        f += g;
        b -= h;
        d -= h;
        if (0 == b - e && 0 == d - f) return [];
        if (e == b) {
            for (b = Db(e, 0); f < d;) b.G.push(c[f++]);
            return [b]
        }
        if (f == d) return [Db(e, b - e)];
        k = e;
        g = f;
        d = d - g + 1;
        h = b - k + 1;
        b = Array(d);
        for (l = 0; l < d; l++) b[l] = Array(h), b[l][0] = l;
        for (l = 0; l < h; l++) b[0][l] = l;
        for (l = 1; l < d; l++) for (m = 1; m < h; m++) if (a[k + m - 1] === c[g + l - 1]) b[l][m] =
            b[l - 1][m - 1]; else {
            var t = b[l - 1][m] + 1, E = b[l][m - 1] + 1;
            b[l][m] = t < E ? t : E
        }
        k = b.length - 1;
        g = b[0].length - 1;
        d = b[k][g];
        for (a = []; 0 < k || 0 < g;) 0 == k ? (a.push(2), g--) : 0 == g ? (a.push(3), k--) : (h = b[k - 1][g - 1], l = b[k - 1][g], m = b[k][g - 1], t = l < m ? l < h ? l : h : m < h ? m : h, t == h ? (h == d ? a.push(0) : (a.push(1), d = h), k--, g--) : t == l ? (a.push(3), k--, d = l) : (a.push(2), g--, d = m));
        a.reverse();
        b = void 0;
        k = [];
        for (g = 0; g < a.length; g++) switch (a[g]) {
            case 0:
                b && (k.push(b), b = void 0);
                e++;
                f++;
                break;
            case 1:
                b || (b = Db(e, 0));
                b.L++;
                e++;
                b.G.push(c[f]);
                f++;
                break;
            case 2:
                b || (b = Db(e, 0));
                b.L++;
                e++;
                break;
            case 3:
                b || (b = Db(e, 0)), b.G.push(c[f]), f++
        }
        b && k.push(b);
        return k
    }

    function Fb(a, b) {
        return a === b
    };

    function Gb(a, b, c) {
        db(a);
        c = c || null;
        var d = q(a), e = q(b), f = c ? q(c) : null;
        d.previousSibling = c ? f.previousSibling : b.__shady_lastChild;
        if (f = r(d.previousSibling)) f.nextSibling = a;
        if (f = r(d.nextSibling = c)) f.previousSibling = a;
        d.parentNode = b;
        c ? c === e.firstChild && (e.firstChild = a) : (e.lastChild = a, e.firstChild || (e.firstChild = a));
        e.childNodes = null
    }

    function Hb(a, b, c) {
        eb(b);
        var d = q(b);
        void 0 !== d.firstChild && (d.childNodes = null);
        if (a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
            d = a.__shady_childNodes;
            for (var e = 0; e < d.length; e++) Gb(d[e], b, c);
            a = q(a);
            b = void 0 !== a.firstChild ? null : void 0;
            a.firstChild = a.lastChild = b;
            a.childNodes = b
        } else Gb(a, b, c)
    }

    function Ib(a, b) {
        var c = q(a);
        b = q(b);
        a === b.firstChild && (b.firstChild = c.nextSibling);
        a === b.lastChild && (b.lastChild = c.previousSibling);
        a = c.previousSibling;
        var d = c.nextSibling;
        a && (q(a).nextSibling = d);
        d && (q(d).previousSibling = a);
        c.parentNode = c.previousSibling = c.nextSibling = void 0;
        void 0 !== b.childNodes && (b.childNodes = null)
    }

    function Jb(a) {
        var b = q(a);
        if (void 0 === b.firstChild) {
            b.childNodes = null;
            var c = b.firstChild = a.__shady_native_firstChild || null;
            b.lastChild = a.__shady_native_lastChild || null;
            eb(a);
            b = c;
            for (c = void 0; b; b = b.__shady_native_nextSibling) {
                var d = q(b);
                d.parentNode = a;
                d.nextSibling = b.__shady_native_nextSibling || null;
                d.previousSibling = c || null;
                c = b;
                db(b)
            }
        }
    };var Kb = null;

    function D() {
        Kb || (Kb = window.ShadyCSS && window.ShadyCSS.ScopingShim);
        return Kb || null
    }

    function Lb(a, b) {
        var c = D();
        c && c.unscopeNode(a, b)
    }

    function Mb(a, b) {
        var c = D();
        if (!c) return !0;
        if (a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
            c = !0;
            a = a.__shady_childNodes;
            for (var d = 0; c && d < a.length; d++) c = c && Mb(a[d], b);
            return c
        }
        return a.nodeType !== Node.ELEMENT_NODE ? !0 : c.currentScopeForNode(a) === b
    }

    function Nb(a) {
        if (a.nodeType !== Node.ELEMENT_NODE) return "";
        var b = D();
        return b ? b.currentScopeForNode(a) : ""
    }

    function Ob(a, b) {
        if (a) {
            a.nodeType === Node.ELEMENT_NODE && b(a);
            a = a.__shady_childNodes;
            for (var c = 0, d; c < a.length; c++) d = a[c], d.nodeType === Node.ELEMENT_NODE && Ob(d, b)
        }
    };var Pb = window.document, Qb = u.ha, Rb = Object.getOwnPropertyDescriptor(Node.prototype, "isConnected"),
        Sb = Rb && Rb.get;

    function Tb(a) {
        for (var b; b = a.__shady_firstChild;) a.__shady_removeChild(b)
    }

    function Ub(a) {
        var b = r(a);
        if (b && void 0 !== b.F) {
            b = a.__shady_childNodes;
            for (var c = 0, d = b.length, e = void 0; c < d && (e = b[c]); c++) Ub(e)
        }
        if (a = r(a)) a.F = void 0
    }

    function Vb(a) {
        var b = a;
        a && "slot" === a.localName && (b = (b = (b = r(a)) && b.A) && b.length ? b[0] : Vb(a.__shady_nextSibling));
        return b
    }

    function Wb(a, b, c) {
        if (a = (a = r(a)) && a.C) b && a.addedNodes.push(b), c && a.removedNodes.push(c), Ba(a)
    }

    var Zb = z({
        get parentNode() {
            var a = r(this);
            a = a && a.parentNode;
            return void 0 !== a ? a : this.__shady_native_parentNode
        }, get firstChild() {
            var a = r(this);
            a = a && a.firstChild;
            return void 0 !== a ? a : this.__shady_native_firstChild
        }, get lastChild() {
            var a = r(this);
            a = a && a.lastChild;
            return void 0 !== a ? a : this.__shady_native_lastChild
        }, get nextSibling() {
            var a = r(this);
            a = a && a.nextSibling;
            return void 0 !== a ? a : this.__shady_native_nextSibling
        }, get previousSibling() {
            var a = r(this);
            a = a && a.previousSibling;
            return void 0 !== a ? a : this.__shady_native_previousSibling
        },
        get childNodes() {
            if (v(this)) {
                var a = r(this);
                if (!a.childNodes) {
                    a.childNodes = [];
                    for (var b = this.__shady_firstChild; b; b = b.__shady_nextSibling) a.childNodes.push(b)
                }
                var c = a.childNodes
            } else c = this.__shady_native_childNodes;
            c.item = function (a) {
                return c[a]
            };
            return c
        }, get parentElement() {
            var a = r(this);
            (a = a && a.parentNode) && a.nodeType !== Node.ELEMENT_NODE && (a = null);
            return void 0 !== a ? a : this.__shady_native_parentElement
        }, get isConnected() {
            if (Sb && Sb.call(this)) return !0;
            if (this.nodeType == Node.DOCUMENT_FRAGMENT_NODE) return !1;
            var a = this.ownerDocument;
            if (ta) {
                if (a.__shady_native_contains(this)) return !0
            } else if (a.documentElement && a.documentElement.__shady_native_contains(this)) return !0;
            for (a = this; a && !(a instanceof Document);) a = a.__shady_parentNode || (w(a) ? a.host : void 0);
            return !!(a && a instanceof Document)
        }, get textContent() {
            if (v(this)) {
                for (var a = [], b = 0, c = this.__shady_childNodes, d; d = c[b]; b++) d.nodeType !== Node.COMMENT_NODE && a.push(d.__shady_textContent);
                return a.join("")
            }
            return this.__shady_native_textContent
        }, set textContent(a) {
            if ("undefined" ===
                typeof a || null === a) a = "";
            switch (this.nodeType) {
                case Node.ELEMENT_NODE:
                case Node.DOCUMENT_FRAGMENT_NODE:
                    if (!v(this) && u.l) {
                        var b = this.__shady_firstChild;
                        (b != this.__shady_lastChild || b && b.nodeType != Node.TEXT_NODE) && Tb(this);
                        this.__shady_native_textContent = a
                    } else Tb(this), (0 < a.length || this.nodeType === Node.ELEMENT_NODE) && this.__shady_insertBefore(document.createTextNode(a));
                    break;
                default:
                    this.nodeValue = a
            }
        }, insertBefore: function (a, b) {
            if (this.ownerDocument !== Pb && a.ownerDocument !== Pb) return this.__shady_native_insertBefore(a,
                b), a;
            if (a === this) throw Error("Failed to execute 'appendChild' on 'Node': The new child element contains the parent.");
            if (b) {
                var c = r(b);
                c = c && c.parentNode;
                if (void 0 !== c && c !== this || void 0 === c && b.__shady_native_parentNode !== this) throw Error("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");
            }
            if (b === a) return a;
            var d = [], e = (c = Xb(this)) ? c.host.localName : Nb(this), f = a.__shady_parentNode;
            if (f) {
                var g = Nb(a);
                f.__shady_removeChild(a, !!c ||
                    !Xb(a))
            }
            f = !0;
            var h = (!Qb || void 0 === a.__noInsertionPoint) && !Mb(a, e),
                k = c && !a.__noInsertionPoint && (!Qb || a.nodeType === Node.DOCUMENT_FRAGMENT_NODE);
            if (k || h) h && (g = g || Nb(a)), Ob(a, function (a) {
                k && "slot" === a.localName && d.push(a);
                if (h) {
                    var b = g;
                    D() && (b && Lb(a, b), (b = D()) && b.scopeNode(a, e))
                }
            });
            if ("slot" === this.localName || d.length) d.length && (c.c = c.c || [], c.a = c.a || [], c.b = c.b || {}, c.c.push.apply(c.c, d instanceof Array ? d : ia(ha(d)))), c && G(c);
            v(this) && (Hb(a, this, b), c = r(this), la(this) ? (G(c.root), f = !1) : c.root && (f = !1));
            f ? (c =
                w(this) ? this.host : this, b ? (b = Vb(b), c.__shady_native_insertBefore(a, b)) : c.__shady_native_appendChild(a)) : a.ownerDocument !== this.ownerDocument && this.ownerDocument.adoptNode(a);
            Wb(this, a);
            return a
        }, appendChild: function (a) {
            return this.__shady_insertBefore(a)
        }, removeChild: function (a, b) {
            b = void 0 === b ? !1 : b;
            if (this.ownerDocument !== Pb) return this.__shady_native_removeChild(a);
            if (a.__shady_parentNode !== this) throw Error("The node to be removed is not a child of this node: " + a);
            var c = Xb(a), d = c && Yb(c, a), e = r(this);
            if (v(this) && (Ib(a, this), la(this))) {
                G(e.root);
                var f = !0
            }
            if (D() && !b && c) {
                var g = Nb(a);
                Ob(a, function (a) {
                    Lb(a, g)
                })
            }
            Ub(a);
            c && ((b = this && "slot" === this.localName) && (f = !0), (d || b) && G(c));
            f || (f = w(this) ? this.host : this, (!e.root && "slot" !== a.localName || f === a.__shady_native_parentNode) && f.__shady_native_removeChild(a));
            Wb(this, null, a);
            return a
        }, replaceChild: function (a, b) {
            this.__shady_insertBefore(a, b);
            this.__shady_removeChild(b);
            return a
        }, cloneNode: function (a) {
            if ("template" == this.localName) return this.__shady_native_cloneNode(a);
            var b = this.__shady_native_cloneNode(!1);
            if (a && b.nodeType !== Node.ATTRIBUTE_NODE) {
                a = this.__shady_childNodes;
                for (var c = 0, d; c < a.length; c++) d = a[c].__shady_cloneNode(!0), b.__shady_appendChild(d)
            }
            return b
        }, getRootNode: function (a) {
            if (this && this.nodeType) {
                var b = q(this), c = b.F;
                void 0 === c && (w(this) ? (c = this, b.F = c) : (c = (c = this.__shady_parentNode) ? c.__shady_getRootNode(a) : this, document.documentElement.__shady_native_contains(this) && (b.F = c)));
                return c
            }
        }, contains: function (a) {
            return ua(this, a)
        }
    });

    function $b(a, b, c) {
        var d = [];
        ac(a.__shady_childNodes, b, c, d);
        return d
    }

    function ac(a, b, c, d) {
        for (var e = 0, f = a.length, g = void 0; e < f && (g = a[e]); e++) {
            var h;
            if (h = g.nodeType === Node.ELEMENT_NODE) {
                h = g;
                var k = b, l = c, m = d, t = k(h);
                t && m.push(h);
                l && l(t) ? h = t : (ac(h.__shady_childNodes, k, l, m), h = void 0)
            }
            if (h) break
        }
    }

    var bc = z({
        get firstElementChild() {
            var a = r(this);
            if (a && void 0 !== a.firstChild) {
                for (a = this.__shady_firstChild; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_nextSibling;
                return a
            }
            return this.__shady_native_firstElementChild
        }, get lastElementChild() {
            var a = r(this);
            if (a && void 0 !== a.lastChild) {
                for (a = this.__shady_lastChild; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_previousSibling;
                return a
            }
            return this.__shady_native_lastElementChild
        }, get children() {
            return v(this) ? va(Array.prototype.filter.call(this.__shady_childNodes,
                function (a) {
                    return a.nodeType === Node.ELEMENT_NODE
                })) : this.__shady_native_children
        }, get childElementCount() {
            var a = this.__shady_children;
            return a ? a.length : 0
        }
    }), cc = z({
        querySelector: function (a) {
            return $b(this, function (b) {
                return oa.call(b, a)
            }, function (a) {
                return !!a
            })[0] || null
        }, querySelectorAll: function (a, b) {
            if (b) {
                b = Array.prototype.slice.call(this.__shady_native_querySelectorAll(a));
                var c = this.__shady_getRootNode();
                return b.filter(function (a) {
                    return a.__shady_getRootNode() == c
                })
            }
            return $b(this, function (b) {
                return oa.call(b,
                    a)
            })
        }
    }), dc = u.ha ? Object.assign({}, bc) : bc;
    Object.assign(bc, cc);
    var ec = z({
        getElementById: function (a) {
            return "" === a ? null : $b(this, function (b) {
                return b.id == a
            }, function (a) {
                return !!a
            })[0] || null
        }
    });
    var fc = z({
        get activeElement() {
            var a = u.l ? document.__shady_native_activeElement : document.activeElement;
            if (!a || !a.nodeType) return null;
            var b = !!w(this);
            if (!(this === document || b && this.host !== a && this.host.__shady_native_contains(a))) return null;
            for (b = Xb(a); b && b !== this;) a = b.host, b = Xb(a);
            return this === document ? b ? null : a : b === this ? a : null
        }
    });
    var gc = document.implementation.createHTMLDocument("inert"), ic = z({
        get innerHTML() {
            return v(this) ? La("template" === this.localName ? this.content : this, function (a) {
                return a.__shady_childNodes
            }) : this.__shady_native_innerHTML
        }, set innerHTML(a) {
            if ("template" === this.localName) this.__shady_native_innerHTML = a; else {
                Tb(this);
                var b = this.localName || "div";
                b = this.namespaceURI && this.namespaceURI !== gc.namespaceURI ? gc.createElementNS(this.namespaceURI, b) : gc.createElement(b);
                for (u.l ? b.__shady_native_innerHTML = a : b.innerHTML =
                    a; a = b.__shady_firstChild;) this.__shady_insertBefore(a)
            }
        }
    });
    var jc = z({
        addEventListener: function (a, b, c) {
            "object" !== typeof c && (c = {capture: !!c});
            c.V = this;
            this.host.__shady_addEventListener(a, b, c)
        }, removeEventListener: function (a, b, c) {
            "object" !== typeof c && (c = {capture: !!c});
            c.V = this;
            this.host.__shady_removeEventListener(a, b, c)
        }
    });

    function kc(a, b) {
        y(a, jc, b);
        y(a, fc, b);
        y(a, ic, b);
        y(a, bc, b);
        u.D && !b ? (y(a, Zb, b), y(a, ec, b)) : u.l || (y(a, Xa), y(a, Wa))
    };var lc = {}, H = u.deferConnectionCallbacks && "loading" === document.readyState, mc;

    function nc(a) {
        var b = [];
        do b.unshift(a); while (a = a.__shady_parentNode);
        return b
    }

    function oc(a, b, c) {
        if (a !== lc) throw new TypeError("Illegal constructor");
        this.sa = "ShadyRoot";
        this.host = b;
        this.mode = c && c.mode;
        Jb(b);
        a = q(b);
        a.root = this;
        a.ia = "closed" !== this.mode ? this : null;
        a = q(this);
        a.firstChild = a.lastChild = a.parentNode = a.nextSibling = a.previousSibling = null;
        a.childNodes = [];
        this.X = this.w = !1;
        this.c = this.b = this.a = null;
        if (u.preferPerformance) for (; a = b.__shady_native_firstChild;) b.__shady_native_removeChild(a); else G(this)
    }

    function G(a) {
        a.w || (a.w = !0, ya(function () {
            return pc(a)
        }))
    }

    function pc(a) {
        var b;
        if (b = a.w) {
            for (var c; a;) a:{
                a.w && (c = a), b = a;
                a = b.host.__shady_getRootNode();
                if (w(a) && (b = r(b.host)) && 0 < b.I) break a;
                a = void 0
            }
            b = c
        }
        (c = b) && c._renderSelf()
    }

    oc.prototype._renderSelf = function () {
        var a = H;
        H = !0;
        this.w = !1;
        if (this.a) {
            qc(this);
            for (var b = 0, c; b < this.a.length; b++) {
                c = this.a[b];
                var d = r(c), e = d.assignedNodes;
                d.assignedNodes = [];
                d.A = [];
                if (d.Y = e) for (d = 0; d < e.length; d++) {
                    var f = r(e[d]);
                    f.K = f.assignedSlot;
                    f.assignedSlot === c && (f.assignedSlot = null)
                }
            }
            for (b = this.host.__shady_firstChild; b; b = b.__shady_nextSibling) rc(this, b);
            for (b = 0; b < this.a.length; b++) {
                c = this.a[b];
                e = r(c);
                if (!e.assignedNodes.length) for (d = c.__shady_firstChild; d; d = d.__shady_nextSibling) rc(this, d, c);
                (d = (d = r(c.__shady_parentNode)) && d.root) && (na(d) || d.w) && d._renderSelf();
                sc(this, e.A, e.assignedNodes);
                if (d = e.Y) {
                    for (f = 0; f < d.length; f++) r(d[f]).K = null;
                    e.Y = null;
                    d.length > e.assignedNodes.length && (e.N = !0)
                }
                e.N && (e.N = !1, tc(this, c))
            }
            c = this.a;
            b = [];
            for (e = 0; e < c.length; e++) d = c[e].__shady_parentNode, (f = r(d)) && f.root || !(0 > b.indexOf(d)) || b.push(d);
            for (c = 0; c < b.length; c++) {
                f = b[c];
                e = f === this ? this.host : f;
                d = [];
                f = f.__shady_childNodes;
                for (var g = 0; g < f.length; g++) {
                    var h = f[g];
                    if ("slot" == h.localName) {
                        h = r(h).A;
                        for (var k = 0; k <
                        h.length; k++) d.push(h[k])
                    } else d.push(h)
                }
                f = Array.prototype.slice.call(e.__shady_native_childNodes);
                g = Eb(d, d.length, f, f.length);
                k = h = 0;
                for (var l = void 0; h < g.length && (l = g[h]); h++) {
                    for (var m = 0, t = void 0; m < l.G.length && (t = l.G[m]); m++) t.__shady_native_parentNode === e && e.__shady_native_removeChild(t), f.splice(l.index + k, 1);
                    k -= l.L
                }
                k = 0;
                for (l = void 0; k < g.length && (l = g[k]); k++) for (h = f[l.index], m = l.index; m < l.index + l.L; m++) t = d[m], e.__shady_native_insertBefore(t, h), f.splice(m, 0, t)
            }
        }
        if (!u.preferPerformance && !this.X) for (b =
                                                      this.host.__shady_childNodes, c = 0, e = b.length; c < e; c++) d = b[c], f = r(d), d.__shady_native_parentNode !== this.host || "slot" !== d.localName && f.assignedSlot || this.host.__shady_native_removeChild(d);
        this.X = !0;
        H = a;
        mc && mc()
    };

    function rc(a, b, c) {
        var d = q(b), e = d.K;
        d.K = null;
        c || (c = (a = a.b[b.__shady_slot || "__catchall"]) && a[0]);
        c ? (q(c).assignedNodes.push(b), d.assignedSlot = c) : d.assignedSlot = void 0;
        e !== d.assignedSlot && d.assignedSlot && (q(d.assignedSlot).N = !0)
    }

    function sc(a, b, c) {
        for (var d = 0, e = void 0; d < c.length && (e = c[d]); d++) if ("slot" == e.localName) {
            var f = r(e).assignedNodes;
            f && f.length && sc(a, b, f)
        } else b.push(c[d])
    }

    function tc(a, b) {
        b.__shady_native_dispatchEvent(new Event("slotchange"));
        b = r(b);
        b.assignedSlot && tc(a, b.assignedSlot)
    }

    function qc(a) {
        if (a.c && a.c.length) {
            for (var b = a.c, c, d = 0; d < b.length; d++) {
                var e = b[d];
                Jb(e);
                var f = e.__shady_parentNode;
                Jb(f);
                f = r(f);
                f.I = (f.I || 0) + 1;
                f = uc(e);
                a.b[f] ? (c = c || {}, c[f] = !0, a.b[f].push(e)) : a.b[f] = [e];
                a.a.push(e)
            }
            if (c) for (var g in c) a.b[g] = vc(a.b[g]);
            a.c = []
        }
    }

    function uc(a) {
        var b = a.name || a.getAttribute("name") || "__catchall";
        return a.pa = b
    }

    function vc(a) {
        return a.sort(function (a, c) {
            a = nc(a);
            for (var b = nc(c), e = 0; e < a.length; e++) {
                c = a[e];
                var f = b[e];
                if (c !== f) return a = Array.from(c.__shady_parentNode.__shady_childNodes), a.indexOf(c) - a.indexOf(f)
            }
        })
    }

    function Yb(a, b) {
        if (a.a) {
            qc(a);
            var c = a.b, d;
            for (d in c) for (var e = c[d], f = 0; f < e.length; f++) {
                var g = e[f];
                if (ua(b, g)) {
                    e.splice(f, 1);
                    var h = a.a.indexOf(g);
                    0 <= h && (a.a.splice(h, 1), (h = r(g.__shady_parentNode)) && h.I && h.I--);
                    f--;
                    g = r(g);
                    if (h = g.A) for (var k = 0; k < h.length; k++) {
                        var l = h[k], m = l.__shady_native_parentNode;
                        m && m.__shady_native_removeChild(l)
                    }
                    g.A = [];
                    g.assignedNodes = [];
                    h = !0
                }
            }
            return h
        }
    }

    function na(a) {
        qc(a);
        return !(!a.a || !a.a.length)
    }

    (function (a) {
        a.__proto__ = DocumentFragment.prototype;
        kc(a, "__shady_");
        kc(a);
        Object.defineProperties(a, {
            nodeType: {value: Node.DOCUMENT_FRAGMENT_NODE, configurable: !0},
            nodeName: {value: "#document-fragment", configurable: !0},
            nodeValue: {value: null, configurable: !0}
        });
        ["localName", "namespaceURI", "prefix"].forEach(function (b) {
            Object.defineProperty(a, b, {value: void 0, configurable: !0})
        });
        ["ownerDocument", "baseURI", "isConnected"].forEach(function (b) {
            Object.defineProperty(a, b, {
                get: function () {
                    return this.host[b]
                },
                configurable: !0
            })
        })
    })(oc.prototype);
    if (window.customElements && u.$ && !u.preferPerformance) {
        var wc = new Map;
        mc = function () {
            var a = [];
            wc.forEach(function (b, c) {
                a.push([c, b])
            });
            wc.clear();
            for (var b = 0; b < a.length; b++) {
                var c = a[b][0];
                a[b][1] ? c.na() : c.oa()
            }
        };
        H && document.addEventListener("readystatechange", function () {
            H = !1;
            mc()
        }, {once: !0});
        var xc = function (a, b, c) {
            var d = 0, e = "__isConnected" + d++;
            if (b || c) a.prototype.connectedCallback = a.prototype.na = function () {
                H ? wc.set(this, !0) : this[e] || (this[e] = !0, b && b.call(this))
            }, a.prototype.disconnectedCallback = a.prototype.oa =
                function () {
                    H ? this.isConnected || wc.set(this, !1) : this[e] && (this[e] = !1, c && c.call(this))
                };
            return a
        }, yc = window.customElements.define;
        Object.defineProperty(window.CustomElementRegistry.prototype, "define", {
            value: function (a, b) {
                var c = b.prototype.connectedCallback, d = b.prototype.disconnectedCallback;
                yc.call(window.customElements, a, xc(b, c, d));
                b.prototype.connectedCallback = c;
                b.prototype.disconnectedCallback = d
            }
        })
    }

    function Xb(a) {
        a = a.__shady_getRootNode();
        if (w(a)) return a
    };

    function zc(a) {
        this.node = a
    }

    n = zc.prototype;
    n.addEventListener = function (a, b, c) {
        return this.node.__shady_addEventListener(a, b, c)
    };
    n.removeEventListener = function (a, b, c) {
        return this.node.__shady_removeEventListener(a, b, c)
    };
    n.appendChild = function (a) {
        return this.node.__shady_appendChild(a)
    };
    n.insertBefore = function (a, b) {
        return this.node.__shady_insertBefore(a, b)
    };
    n.removeChild = function (a) {
        return this.node.__shady_removeChild(a)
    };
    n.replaceChild = function (a, b) {
        return this.node.__shady_replaceChild(a, b)
    };
    n.cloneNode = function (a) {
        return this.node.__shady_cloneNode(a)
    };
    n.getRootNode = function (a) {
        return this.node.__shady_getRootNode(a)
    };
    n.contains = function (a) {
        return this.node.__shady_contains(a)
    };
    n.dispatchEvent = function (a) {
        return this.node.__shady_dispatchEvent(a)
    };
    n.setAttribute = function (a, b) {
        this.node.__shady_setAttribute(a, b)
    };
    n.getAttribute = function (a) {
        return this.node.__shady_native_getAttribute(a)
    };
    n.removeAttribute = function (a) {
        this.node.__shady_removeAttribute(a)
    };
    n.attachShadow = function (a) {
        return this.node.__shady_attachShadow(a)
    };
    n.focus = function () {
        this.node.__shady_native_focus()
    };
    n.blur = function () {
        this.node.__shady_blur()
    };
    n.importNode = function (a, b) {
        if (this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_importNode(a, b)
    };
    n.getElementById = function (a) {
        if (this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_getElementById(a)
    };
    n.querySelector = function (a) {
        return this.node.__shady_querySelector(a)
    };
    n.querySelectorAll = function (a, b) {
        return this.node.__shady_querySelectorAll(a, b)
    };
    n.assignedNodes = function (a) {
        if ("slot" === this.node.localName) return this.node.__shady_assignedNodes(a)
    };
    p.Object.defineProperties(zc.prototype, {
        activeElement: {
            configurable: !0, enumerable: !0, get: function () {
                if (w(this.node) || this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_activeElement
            }
        }, _activeElement: {
            configurable: !0, enumerable: !0, get: function () {
                return this.activeElement
            }
        }, host: {
            configurable: !0, enumerable: !0, get: function () {
                if (w(this.node)) return this.node.host
            }
        }, parentNode: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_parentNode
            }
        }, firstChild: {
            configurable: !0,
            enumerable: !0, get: function () {
                return this.node.__shady_firstChild
            }
        }, lastChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_lastChild
            }
        }, nextSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_nextSibling
            }
        }, previousSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_previousSibling
            }
        }, childNodes: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_childNodes
            }
        }, parentElement: {
            configurable: !0, enumerable: !0,
            get: function () {
                return this.node.__shady_parentElement
            }
        }, firstElementChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_firstElementChild
            }
        }, lastElementChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_lastElementChild
            }
        }, nextElementSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_nextElementSibling
            }
        }, previousElementSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_previousElementSibling
            }
        },
        children: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_children
            }
        }, childElementCount: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_childElementCount
            }
        }, shadowRoot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_shadowRoot
            }
        }, assignedSlot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_assignedSlot
            }
        }, isConnected: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_isConnected
            }
        }, innerHTML: {
            configurable: !0,
            enumerable: !0, get: function () {
                return this.node.__shady_innerHTML
            }, set: function (a) {
                this.node.__shady_innerHTML = a
            }
        }, textContent: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_textContent
            }, set: function (a) {
                this.node.__shady_textContent = a
            }
        }, slot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_slot
            }, set: function (a) {
                this.node.__shady_slot = a
            }
        }
    });
    Cb.forEach(function (a) {
        Object.defineProperty(zc.prototype, a, {
            get: function () {
                return this.node["__shady_" + a]
            }, set: function (b) {
                this.node["__shady_" + a] = b
            }, configurable: !0
        })
    });
    var Ac = new WeakMap;

    function Bc(a) {
        if (w(a) || a instanceof zc) return a;
        var b = Ac.get(a);
        b || (b = new zc(a), Ac.set(a, b));
        return b
    };var Cc = z({
        dispatchEvent: function (a) {
            za();
            return this.__shady_native_dispatchEvent(a)
        }, addEventListener: tb, removeEventListener: vb
    });
    var Dc = z({
        get assignedSlot() {
            var a = this.__shady_parentNode;
            (a = a && a.__shady_shadowRoot) && pc(a);
            return (a = r(this)) && a.assignedSlot || null
        }
    });
    var Ec = window.document;

    function Fc(a, b) {
        if ("slot" === b) a = a.__shady_parentNode, la(a) && G(r(a).root); else if ("slot" === a.localName && "name" === b && (b = Xb(a))) {
            if (b.a) {
                qc(b);
                var c = a.pa, d = uc(a);
                if (d !== c) {
                    c = b.b[c];
                    var e = c.indexOf(a);
                    0 <= e && c.splice(e, 1);
                    c = b.b[d] || (b.b[d] = []);
                    c.push(a);
                    1 < c.length && (b.b[d] = vc(c))
                }
            }
            G(b)
        }
    }

    var Gc = z({
        get previousElementSibling() {
            var a = r(this);
            if (a && void 0 !== a.previousSibling) {
                for (a = this.__shady_previousSibling; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_previousSibling;
                return a
            }
            return this.__shady_native_previousElementSibling
        }, get nextElementSibling() {
            var a = r(this);
            if (a && void 0 !== a.nextSibling) {
                for (a = this.__shady_nextSibling; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_nextSibling;
                return a
            }
            return this.__shady_native_nextElementSibling
        }, get slot() {
            return this.getAttribute("slot")
        },
        set slot(a) {
            this.__shady_setAttribute("slot", a)
        }, get shadowRoot() {
            var a = r(this);
            return a && a.ia || null
        }, get className() {
            return this.getAttribute("class") || ""
        }, set className(a) {
            this.__shady_setAttribute("class", a)
        }, setAttribute: function (a, b) {
            if (this.ownerDocument !== Ec) this.__shady_native_setAttribute(a, b); else {
                var c;
                (c = D()) && "class" === a ? (c.setElementClass(this, b), c = !0) : c = !1;
                c || (this.__shady_native_setAttribute(a, b), Fc(this, a))
            }
        }, removeAttribute: function (a) {
            this.__shady_native_removeAttribute(a);
            Fc(this,
                a)
        }, attachShadow: function (a) {
            if (!this) throw Error("Must provide a host.");
            if (!a) throw Error("Not enough arguments.");
            return new oc(lc, this, a)
        }
    });
    var Hc = z({
        blur: function () {
            var a = r(this);
            (a = (a = a && a.root) && a.activeElement) ? a.__shady_blur() : this.__shady_native_blur()
        }
    });
    Cb.forEach(function (a) {
        Hc[a] = {
            set: function (b) {
                var c = q(this), d = a.substring(2);
                c.J[a] && this.removeEventListener(d, c.J[a]);
                this.__shady_addEventListener(d, b);
                c.J[a] = b
            }, get: function () {
                var b = r(this);
                return b && b.J[a]
            }, configurable: !0
        }
    });
    var Ic = z({
        assignedNodes: function (a) {
            if ("slot" === this.localName) {
                var b = this.__shady_getRootNode();
                b && w(b) && pc(b);
                return (b = r(this)) ? (a && a.flatten ? b.A : b.assignedNodes) || [] : []
            }
        }
    });
    var Jc = window.document, Kc = z({
        importNode: function (a, b) {
            if (a.ownerDocument !== Jc || "template" === a.localName) return this.__shady_native_importNode(a, b);
            var c = this.__shady_native_importNode(a, !1);
            if (b) {
                a = a.__shady_childNodes;
                b = 0;
                for (var d; b < a.length; b++) d = this.__shady_importNode(a[b], !0), c.__shady_appendChild(d)
            }
            return c
        }
    });
    var Lc = z({addEventListener: tb.bind(window), removeEventListener: vb.bind(window)});
    var Mc = {};
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "parentElement") && (Mc.parentElement = Zb.parentElement);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "contains") && (Mc.contains = Zb.contains);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "children") && (Mc.children = bc.children);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "innerHTML") && (Mc.innerHTML = ic.innerHTML);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "className") && (Mc.className = Gc.className);
    var Nc = {
        EventTarget: [Cc],
        Node: [Zb, window.EventTarget ? null : Cc],
        Text: [Dc],
        Element: [Gc, bc, Dc, !u.l || "innerHTML" in Element.prototype ? ic : null, window.HTMLSlotElement ? null : Ic],
        HTMLElement: [Hc, Mc],
        HTMLSlotElement: [Ic],
        DocumentFragment: [dc, ec],
        Document: [Kc, dc, ec, fc],
        Window: [Lc]
    }, Oc = u.l ? null : ["innerHTML", "textContent"];

    function Pc(a) {
        var b = a ? null : Oc, c = {}, d;
        for (d in Nc) c.R = window[d] && window[d].prototype, Nc[d].forEach(function (c) {
            return function (d) {
                return c.R && d && y(c.R, d, a, b)
            }
        }(c)), c = {R: c.R}
    };
    if (u.$) {
        var ShadyDOM = {
            inUse: u.$,
            patch: function (a) {
                eb(a);
                db(a);
                return a
            },
            isShadyRoot: w,
            enqueue: ya,
            flush: za,
            flushInitial: function (a) {
                !a.X && a.w && pc(a)
            },
            settings: u,
            filterMutations: Ea,
            observeChildren: Ca,
            unobserveChildren: Da,
            deferConnectionCallbacks: u.deferConnectionCallbacks,
            preferPerformance: u.preferPerformance,
            handlesDynamicScoping: !0,
            wrap: u.D ? Bc : function (a) {
                return a
            },
            Wrapper: zc,
            composedPath: lb,
            noPatch: u.D,
            nativeMethods: Na,
            nativeTree: Oa
        };
        window.ShadyDOM = ShadyDOM;
        Va();
        Pc("__shady_");
        Object.defineProperty(document,
            "_activeElement", fc.activeElement);
        y(Window.prototype, Lc, "__shady_");
        u.D || (Pc(), Bb());
        wb();
        window.Event = yb;
        window.CustomEvent = zb;
        window.MouseEvent = Ab;
        window.ShadowRoot = oc
    }
    ;var Qc = new Set("annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" "));

    function Rc(a) {
        var b = Qc.has(a);
        a = /^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(a);
        return !b && a
    }

    function I(a) {
        var b = a.isConnected;
        if (void 0 !== b) return b;
        for (; a && !(a.__CE_isImportDocument || a instanceof Document);) a = a.parentNode || (window.ShadowRoot && a instanceof ShadowRoot ? a.host : void 0);
        return !(!a || !(a.__CE_isImportDocument || a instanceof Document))
    }

    function Sc(a, b) {
        for (; b && b !== a && !b.nextSibling;) b = b.parentNode;
        return b && b !== a ? b.nextSibling : null
    }

    function J(a, b, c) {
        c = void 0 === c ? new Set : c;
        for (var d = a; d;) {
            if (d.nodeType === Node.ELEMENT_NODE) {
                var e = d;
                b(e);
                var f = e.localName;
                if ("link" === f && "import" === e.getAttribute("rel")) {
                    d = e.import;
                    if (d instanceof Node && !c.has(d)) for (c.add(d), d = d.firstChild; d; d = d.nextSibling) J(d, b, c);
                    d = Sc(a, e);
                    continue
                } else if ("template" === f) {
                    d = Sc(a, e);
                    continue
                }
                if (e = e.__CE_shadowRoot) for (e = e.firstChild; e; e = e.nextSibling) J(e, b, c)
            }
            d = d.firstChild ? d.firstChild : Sc(a, d)
        }
    }

    function K(a, b, c) {
        a[b] = c
    };

    function Tc() {
        this.a = new Map;
        this.g = new Map;
        this.f = [];
        this.c = !1
    }

    function Uc(a, b, c) {
        a.a.set(b, c);
        a.g.set(c.constructorFunction, c)
    }

    function Vc(a, b) {
        a.c = !0;
        a.f.push(b)
    }

    function Wc(a, b) {
        a.c && J(b, function (b) {
            return a.b(b)
        })
    }

    Tc.prototype.b = function (a) {
        if (this.c && !a.__CE_patched) {
            a.__CE_patched = !0;
            for (var b = 0; b < this.f.length; b++) this.f[b](a)
        }
    };

    function L(a, b) {
        var c = [];
        J(b, function (a) {
            return c.push(a)
        });
        for (b = 0; b < c.length; b++) {
            var d = c[b];
            1 === d.__CE_state ? a.connectedCallback(d) : Xc(a, d)
        }
    }

    function M(a, b) {
        var c = [];
        J(b, function (a) {
            return c.push(a)
        });
        for (b = 0; b < c.length; b++) {
            var d = c[b];
            1 === d.__CE_state && a.disconnectedCallback(d)
        }
    }

    function N(a, b, c) {
        c = void 0 === c ? {} : c;
        var d = c.Pa || new Set, e = c.T || function (b) {
            return Xc(a, b)
        }, f = [];
        J(b, function (b) {
            if ("link" === b.localName && "import" === b.getAttribute("rel")) {
                var c = b.import;
                c instanceof Node && (c.__CE_isImportDocument = !0, c.__CE_hasRegistry = !0);
                c && "complete" === c.readyState ? c.__CE_documentLoadHandled = !0 : b.addEventListener("load", function () {
                    var c = b.import;
                    if (!c.__CE_documentLoadHandled) {
                        c.__CE_documentLoadHandled = !0;
                        var f = new Set(d);
                        f.delete(c);
                        N(a, c, {Pa: f, T: e})
                    }
                })
            } else f.push(b)
        }, d);
        if (a.c) for (b =
                          0; b < f.length; b++) a.b(f[b]);
        for (b = 0; b < f.length; b++) e(f[b])
    }

    function Xc(a, b) {
        if (void 0 === b.__CE_state) {
            var c = b.ownerDocument;
            if (c.defaultView || c.__CE_isImportDocument && c.__CE_hasRegistry) if (c = a.a.get(b.localName)) {
                c.constructionStack.push(b);
                var d = c.constructorFunction;
                try {
                    try {
                        if (new d !== b) throw Error("The custom element constructor did not produce the element being upgraded.");
                    } finally {
                        c.constructionStack.pop()
                    }
                } catch (g) {
                    throw b.__CE_state = 2, g;
                }
                b.__CE_state = 1;
                b.__CE_definition = c;
                if (c.attributeChangedCallback) for (c = c.observedAttributes, d = 0; d < c.length; d++) {
                    var e =
                        c[d], f = b.getAttribute(e);
                    null !== f && a.attributeChangedCallback(b, e, null, f, null)
                }
                I(b) && a.connectedCallback(b)
            }
        }
    }

    Tc.prototype.connectedCallback = function (a) {
        var b = a.__CE_definition;
        b.connectedCallback && b.connectedCallback.call(a)
    };
    Tc.prototype.disconnectedCallback = function (a) {
        var b = a.__CE_definition;
        b.disconnectedCallback && b.disconnectedCallback.call(a)
    };
    Tc.prototype.attributeChangedCallback = function (a, b, c, d, e) {
        var f = a.__CE_definition;
        f.attributeChangedCallback && -1 < f.observedAttributes.indexOf(b) && f.attributeChangedCallback.call(a, b, c, d, e)
    };

    function Yc(a) {
        var b = document;
        this.b = a;
        this.a = b;
        this.B = void 0;
        N(this.b, this.a);
        "loading" === this.a.readyState && (this.B = new MutationObserver(this.c.bind(this)), this.B.observe(this.a, {
            childList: !0,
            subtree: !0
        }))
    }

    function Zc(a) {
        a.B && a.B.disconnect()
    }

    Yc.prototype.c = function (a) {
        var b = this.a.readyState;
        "interactive" !== b && "complete" !== b || Zc(this);
        for (b = 0; b < a.length; b++) for (var c = a[b].addedNodes, d = 0; d < c.length; d++) N(this.b, c[d])
    };

    function $c() {
        var a = this;
        this.b = this.a = void 0;
        this.c = new Promise(function (b) {
            a.b = b;
            a.a && b(a.a)
        })
    }

    function ad(a) {
        if (a.a) throw Error("Already resolved.");
        a.a = void 0;
        a.b && a.b(void 0)
    };

    function P(a) {
        this.c = !1;
        this.a = a;
        this.j = new Map;
        this.f = function (a) {
            return a()
        };
        this.b = !1;
        this.g = [];
        this.Z = new Yc(a)
    }

    n = P.prototype;
    n.la = function (a, b) {
        var c = this;
        if (!(b instanceof Function)) throw new TypeError("Custom element constructors must be functions.");
        if (!Rc(a)) throw new SyntaxError("The element name '" + a + "' is not valid.");
        if (this.a.a.get(a)) throw Error("A custom element with name '" + a + "' has already been defined.");
        if (this.c) throw Error("A custom element is already being defined.");
        this.c = !0;
        try {
            var d = function (a) {
                var b = e[a];
                if (void 0 !== b && !(b instanceof Function)) throw Error("The '" + a + "' callback must be a function.");
                return b
            }, e = b.prototype;
            if (!(e instanceof Object)) throw new TypeError("The custom element constructor's prototype is not an object.");
            var f = d("connectedCallback");
            var g = d("disconnectedCallback");
            var h = d("adoptedCallback");
            var k = d("attributeChangedCallback");
            var l = b.observedAttributes || []
        } catch (m) {
            return
        } finally {
            this.c = !1
        }
        b = {
            localName: a,
            constructorFunction: b,
            connectedCallback: f,
            disconnectedCallback: g,
            adoptedCallback: h,
            attributeChangedCallback: k,
            observedAttributes: l,
            constructionStack: []
        };
        Uc(this.a,
            a, b);
        this.g.push(b);
        this.b || (this.b = !0, this.f(function () {
            return bd(c)
        }))
    };
    n.T = function (a) {
        N(this.a, a)
    };

    function bd(a) {
        if (!1 !== a.b) {
            a.b = !1;
            for (var b = a.g, c = [], d = new Map, e = 0; e < b.length; e++) d.set(b[e].localName, []);
            N(a.a, document, {
                T: function (b) {
                    if (void 0 === b.__CE_state) {
                        var e = b.localName, f = d.get(e);
                        f ? f.push(b) : a.a.a.get(e) && c.push(b)
                    }
                }
            });
            for (e = 0; e < c.length; e++) Xc(a.a, c[e]);
            for (; 0 < b.length;) {
                var f = b.shift();
                e = f.localName;
                f = d.get(f.localName);
                for (var g = 0; g < f.length; g++) Xc(a.a, f[g]);
                (e = a.j.get(e)) && ad(e)
            }
        }
    }

    n.get = function (a) {
        if (a = this.a.a.get(a)) return a.constructorFunction
    };
    n.ma = function (a) {
        if (!Rc(a)) return Promise.reject(new SyntaxError("'" + a + "' is not a valid custom element name."));
        var b = this.j.get(a);
        if (b) return b.c;
        b = new $c;
        this.j.set(a, b);
        this.a.a.get(a) && !this.g.some(function (b) {
            return b.localName === a
        }) && ad(b);
        return b.c
    };
    n.Ha = function (a) {
        Zc(this.Z);
        var b = this.f;
        this.f = function (c) {
            return a(function () {
                return b(c)
            })
        }
    };
    window.CustomElementRegistry = P;
    P.prototype.define = P.prototype.la;
    P.prototype.upgrade = P.prototype.T;
    P.prototype.get = P.prototype.get;
    P.prototype.whenDefined = P.prototype.ma;
    P.prototype.polyfillWrapFlushCallback = P.prototype.Ha;
    var cd = window.Document.prototype.createElement, dd = window.Document.prototype.createElementNS,
        ed = window.Document.prototype.importNode, fd = window.Document.prototype.prepend,
        gd = window.Document.prototype.append, hd = window.DocumentFragment.prototype.prepend,
        id = window.DocumentFragment.prototype.append, jd = window.Node.prototype.cloneNode,
        kd = window.Node.prototype.appendChild, ld = window.Node.prototype.insertBefore,
        md = window.Node.prototype.removeChild, nd = window.Node.prototype.replaceChild,
        od = Object.getOwnPropertyDescriptor(window.Node.prototype,
            "textContent"), pd = window.Element.prototype.attachShadow,
        qd = Object.getOwnPropertyDescriptor(window.Element.prototype, "innerHTML"),
        rd = window.Element.prototype.getAttribute, sd = window.Element.prototype.setAttribute,
        td = window.Element.prototype.removeAttribute, ud = window.Element.prototype.getAttributeNS,
        vd = window.Element.prototype.setAttributeNS, wd = window.Element.prototype.removeAttributeNS,
        xd = window.Element.prototype.insertAdjacentElement, yd = window.Element.prototype.insertAdjacentHTML,
        zd = window.Element.prototype.prepend,
        Ad = window.Element.prototype.append, Bd = window.Element.prototype.before, Cd = window.Element.prototype.after,
        Dd = window.Element.prototype.replaceWith, Ed = window.Element.prototype.remove, Fd = window.HTMLElement,
        Gd = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, "innerHTML"),
        Hd = window.HTMLElement.prototype.insertAdjacentElement, Id = window.HTMLElement.prototype.insertAdjacentHTML;
    var Jd = new function () {
    };

    function Kd() {
        var a = Ld;
        window.HTMLElement = function () {
            function b() {
                var b = this.constructor, d = a.g.get(b);
                if (!d) throw Error("The custom element being constructed was not registered with `customElements`.");
                var e = d.constructionStack;
                if (0 === e.length) return e = cd.call(document, d.localName), Object.setPrototypeOf(e, b.prototype), e.__CE_state = 1, e.__CE_definition = d, a.b(e), e;
                d = e.length - 1;
                var f = e[d];
                if (f === Jd) throw Error("The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.");
                e[d] = Jd;
                Object.setPrototypeOf(f, b.prototype);
                a.b(f);
                return f
            }

            b.prototype = Fd.prototype;
            Object.defineProperty(b.prototype, "constructor", {
                writable: !0,
                configurable: !0,
                enumerable: !1,
                value: b
            });
            return b
        }()
    };

    function Md(a, b, c) {
        function d(b) {
            return function (c) {
                for (var d = [], e = 0; e < arguments.length; ++e) d[e] = arguments[e];
                e = [];
                for (var f = [], l = 0; l < d.length; l++) {
                    var m = d[l];
                    m instanceof Element && I(m) && f.push(m);
                    if (m instanceof DocumentFragment) for (m = m.firstChild; m; m = m.nextSibling) e.push(m); else e.push(m)
                }
                b.apply(this, d);
                for (d = 0; d < f.length; d++) M(a, f[d]);
                if (I(this)) for (d = 0; d < e.length; d++) f = e[d], f instanceof Element && L(a, f)
            }
        }

        void 0 !== c.P && (b.prepend = d(c.P));
        void 0 !== c.append && (b.append = d(c.append))
    };

    function Nd() {
        var a = Ld;
        K(Document.prototype, "createElement", function (b) {
            if (this.__CE_hasRegistry) {
                var c = a.a.get(b);
                if (c) return new c.constructorFunction
            }
            b = cd.call(this, b);
            a.b(b);
            return b
        });
        K(Document.prototype, "importNode", function (b, c) {
            b = ed.call(this, b, !!c);
            this.__CE_hasRegistry ? N(a, b) : Wc(a, b);
            return b
        });
        K(Document.prototype, "createElementNS", function (b, c) {
            if (this.__CE_hasRegistry && (null === b || "http://www.w3.org/1999/xhtml" === b)) {
                var d = a.a.get(c);
                if (d) return new d.constructorFunction
            }
            b = dd.call(this,
                b, c);
            a.b(b);
            return b
        });
        Md(a, Document.prototype, {P: fd, append: gd})
    };

    function Od() {
        function a(a, d) {
            Object.defineProperty(a, "textContent", {
                enumerable: d.enumerable,
                configurable: !0,
                get: d.get,
                set: function (a) {
                    if (this.nodeType === Node.TEXT_NODE) d.set.call(this, a); else {
                        var c = void 0;
                        if (this.firstChild) {
                            var e = this.childNodes, h = e.length;
                            if (0 < h && I(this)) {
                                c = Array(h);
                                for (var k = 0; k < h; k++) c[k] = e[k]
                            }
                        }
                        d.set.call(this, a);
                        if (c) for (a = 0; a < c.length; a++) M(b, c[a])
                    }
                }
            })
        }

        var b = Ld;
        K(Node.prototype, "insertBefore", function (a, d) {
            if (a instanceof DocumentFragment) {
                var c = Array.prototype.slice.apply(a.childNodes);
                a = ld.call(this, a, d);
                if (I(this)) for (d = 0; d < c.length; d++) L(b, c[d]);
                return a
            }
            c = I(a);
            d = ld.call(this, a, d);
            c && M(b, a);
            I(this) && L(b, a);
            return d
        });
        K(Node.prototype, "appendChild", function (a) {
            if (a instanceof DocumentFragment) {
                var c = Array.prototype.slice.apply(a.childNodes);
                a = kd.call(this, a);
                if (I(this)) for (var e = 0; e < c.length; e++) L(b, c[e]);
                return a
            }
            c = I(a);
            e = kd.call(this, a);
            c && M(b, a);
            I(this) && L(b, a);
            return e
        });
        K(Node.prototype, "cloneNode", function (a) {
            a = jd.call(this, !!a);
            this.ownerDocument.__CE_hasRegistry ? N(b, a) :
                Wc(b, a);
            return a
        });
        K(Node.prototype, "removeChild", function (a) {
            var c = I(a), e = md.call(this, a);
            c && M(b, a);
            return e
        });
        K(Node.prototype, "replaceChild", function (a, d) {
            if (a instanceof DocumentFragment) {
                var c = Array.prototype.slice.apply(a.childNodes);
                a = nd.call(this, a, d);
                if (I(this)) for (M(b, d), d = 0; d < c.length; d++) L(b, c[d]);
                return a
            }
            c = I(a);
            var f = nd.call(this, a, d), g = I(this);
            g && M(b, d);
            c && M(b, a);
            g && L(b, a);
            return f
        });
        od && od.get ? a(Node.prototype, od) : Vc(b, function (b) {
            a(b, {
                enumerable: !0, configurable: !0, get: function () {
                    for (var a =
                        [], b = 0; b < this.childNodes.length; b++) a.push(this.childNodes[b].textContent);
                    return a.join("")
                }, set: function (a) {
                    for (; this.firstChild;) md.call(this, this.firstChild);
                    kd.call(this, document.createTextNode(a))
                }
            })
        })
    };

    function Pd(a) {
        function b(b) {
            return function (c) {
                for (var d = [], e = 0; e < arguments.length; ++e) d[e] = arguments[e];
                e = [];
                for (var h = [], k = 0; k < d.length; k++) {
                    var l = d[k];
                    l instanceof Element && I(l) && h.push(l);
                    if (l instanceof DocumentFragment) for (l = l.firstChild; l; l = l.nextSibling) e.push(l); else e.push(l)
                }
                b.apply(this, d);
                for (d = 0; d < h.length; d++) M(a, h[d]);
                if (I(this)) for (d = 0; d < e.length; d++) h = e[d], h instanceof Element && L(a, h)
            }
        }

        var c = Element.prototype;
        void 0 !== Bd && (c.before = b(Bd));
        void 0 !== Bd && (c.after = b(Cd));
        void 0 !== Dd &&
        K(c, "replaceWith", function (b) {
            for (var c = [], d = 0; d < arguments.length; ++d) c[d] = arguments[d];
            d = [];
            for (var g = [], h = 0; h < c.length; h++) {
                var k = c[h];
                k instanceof Element && I(k) && g.push(k);
                if (k instanceof DocumentFragment) for (k = k.firstChild; k; k = k.nextSibling) d.push(k); else d.push(k)
            }
            h = I(this);
            Dd.apply(this, c);
            for (c = 0; c < g.length; c++) M(a, g[c]);
            if (h) for (M(a, this), c = 0; c < d.length; c++) g = d[c], g instanceof Element && L(a, g)
        });
        void 0 !== Ed && K(c, "remove", function () {
            var b = I(this);
            Ed.call(this);
            b && M(a, this)
        })
    };

    function Qd() {
        function a(a, b) {
            Object.defineProperty(a, "innerHTML", {
                enumerable: b.enumerable,
                configurable: !0,
                get: b.get,
                set: function (a) {
                    var c = this, e = void 0;
                    I(this) && (e = [], J(this, function (a) {
                        a !== c && e.push(a)
                    }));
                    b.set.call(this, a);
                    if (e) for (var f = 0; f < e.length; f++) {
                        var g = e[f];
                        1 === g.__CE_state && d.disconnectedCallback(g)
                    }
                    this.ownerDocument.__CE_hasRegistry ? N(d, this) : Wc(d, this);
                    return a
                }
            })
        }

        function b(a, b) {
            K(a, "insertAdjacentElement", function (a, c) {
                var e = I(c);
                a = b.call(this, a, c);
                e && M(d, c);
                I(a) && L(d, c);
                return a
            })
        }

        function c(a, b) {
            function c(a, b) {
                for (var c = []; a !== b; a = a.nextSibling) c.push(a);
                for (b = 0; b < c.length; b++) N(d, c[b])
            }

            K(a, "insertAdjacentHTML", function (a, d) {
                a = a.toLowerCase();
                if ("beforebegin" === a) {
                    var e = this.previousSibling;
                    b.call(this, a, d);
                    c(e || this.parentNode.firstChild, this)
                } else if ("afterbegin" === a) e = this.firstChild, b.call(this, a, d), c(this.firstChild, e); else if ("beforeend" === a) e = this.lastChild, b.call(this, a, d), c(e || this.firstChild, null); else if ("afterend" === a) e = this.nextSibling, b.call(this, a, d), c(this.nextSibling,
                    e); else throw new SyntaxError("The value provided (" + String(a) + ") is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.");
            })
        }

        var d = Ld;
        pd && K(Element.prototype, "attachShadow", function (a) {
            return this.__CE_shadowRoot = a = pd.call(this, a)
        });
        qd && qd.get ? a(Element.prototype, qd) : Gd && Gd.get ? a(HTMLElement.prototype, Gd) : Vc(d, function (b) {
            a(b, {
                enumerable: !0, configurable: !0, get: function () {
                    return jd.call(this, !0).innerHTML
                }, set: function (a) {
                    var b = "template" === this.localName, c = b ? this.content : this, d = dd.call(document,
                        this.namespaceURI, this.localName);
                    for (d.innerHTML = a; 0 < c.childNodes.length;) md.call(c, c.childNodes[0]);
                    for (a = b ? d.content : d; 0 < a.childNodes.length;) kd.call(c, a.childNodes[0])
                }
            })
        });
        K(Element.prototype, "setAttribute", function (a, b) {
            if (1 !== this.__CE_state) return sd.call(this, a, b);
            var c = rd.call(this, a);
            sd.call(this, a, b);
            b = rd.call(this, a);
            d.attributeChangedCallback(this, a, c, b, null)
        });
        K(Element.prototype, "setAttributeNS", function (a, b, c) {
            if (1 !== this.__CE_state) return vd.call(this, a, b, c);
            var e = ud.call(this, a,
                b);
            vd.call(this, a, b, c);
            c = ud.call(this, a, b);
            d.attributeChangedCallback(this, b, e, c, a)
        });
        K(Element.prototype, "removeAttribute", function (a) {
            if (1 !== this.__CE_state) return td.call(this, a);
            var b = rd.call(this, a);
            td.call(this, a);
            null !== b && d.attributeChangedCallback(this, a, b, null, null)
        });
        K(Element.prototype, "removeAttributeNS", function (a, b) {
            if (1 !== this.__CE_state) return wd.call(this, a, b);
            var c = ud.call(this, a, b);
            wd.call(this, a, b);
            var e = ud.call(this, a, b);
            c !== e && d.attributeChangedCallback(this, b, c, e, a)
        });
        Hd ? b(HTMLElement.prototype,
            Hd) : xd ? b(Element.prototype, xd) : console.warn("Custom Elements: `Element#insertAdjacentElement` was not patched.");
        Id ? c(HTMLElement.prototype, Id) : yd ? c(Element.prototype, yd) : console.warn("Custom Elements: `Element#insertAdjacentHTML` was not patched.");
        Md(d, Element.prototype, {P: zd, append: Ad});
        Pd(d)
    };var Rd = window.customElements;
    if (!Rd || Rd.forcePolyfill || "function" != typeof Rd.define || "function" != typeof Rd.get) {
        var Ld = new Tc;
        Kd();
        Nd();
        Md(Ld, DocumentFragment.prototype, {P: hd, append: id});
        Od();
        Qd();
        document.__CE_hasRegistry = !0;
        var customElements = new P(Ld);
        Object.defineProperty(window, "customElements", {configurable: !0, enumerable: !0, value: customElements})
    }
    ;/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    function Sd() {
        this.end = this.start = 0;
        this.rules = this.parent = this.previous = null;
        this.cssText = this.parsedCssText = "";
        this.atRule = !1;
        this.type = 0;
        this.parsedSelector = this.selector = this.keyframesName = ""
    }

    function Td(a) {
        a = a.replace(Ud, "").replace(Vd, "");
        var b = Wd, c = a, d = new Sd;
        d.start = 0;
        d.end = c.length;
        for (var e = d, f = 0, g = c.length; f < g; f++) if ("{" === c[f]) {
            e.rules || (e.rules = []);
            var h = e, k = h.rules[h.rules.length - 1] || null;
            e = new Sd;
            e.start = f + 1;
            e.parent = h;
            e.previous = k;
            h.rules.push(e)
        } else "}" === c[f] && (e.end = f + 1, e = e.parent || d);
        return b(d, a)
    }

    function Wd(a, b) {
        var c = b.substring(a.start, a.end - 1);
        a.parsedCssText = a.cssText = c.trim();
        a.parent && (c = b.substring(a.previous ? a.previous.end : a.parent.start, a.start - 1), c = Xd(c), c = c.replace(Yd, " "), c = c.substring(c.lastIndexOf(";") + 1), c = a.parsedSelector = a.selector = c.trim(), a.atRule = 0 === c.indexOf("@"), a.atRule ? 0 === c.indexOf("@media") ? a.type = Zd : c.match($d) && (a.type = ae, a.keyframesName = a.selector.split(Yd).pop()) : a.type = 0 === c.indexOf("--") ? be : ce);
        if (c = a.rules) for (var d = 0, e = c.length, f = void 0; d < e && (f = c[d]); d++) Wd(f,
            b);
        return a
    }

    function Xd(a) {
        return a.replace(/\\([0-9a-f]{1,6})\s/gi, function (a, c) {
            a = c;
            for (c = 6 - a.length; c--;) a = "0" + a;
            return "\\" + a
        })
    }

    function de(a, b, c) {
        c = void 0 === c ? "" : c;
        var d = "";
        if (a.cssText || a.rules) {
            var e = a.rules, f;
            if (f = e) f = e[0], f = !(f && f.selector && 0 === f.selector.indexOf("--"));
            if (f) {
                f = 0;
                for (var g = e.length, h = void 0; f < g && (h = e[f]); f++) d = de(h, b, d)
            } else b ? b = a.cssText : (b = a.cssText, b = b.replace(ee, "").replace(fe, ""), b = b.replace(ge, "").replace(he, "")), (d = b.trim()) && (d = "  " + d + "\n")
        }
        d && (a.selector && (c += a.selector + " {\n"), c += d, a.selector && (c += "}\n\n"));
        return c
    }

    var ce = 1, ae = 7, Zd = 4, be = 1E3, Ud = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim, Vd = /@import[^;]*;/gim,
        ee = /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,
        fe = /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,
        ge = /@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim, he = /[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,
        $d = /^@[^\s]*keyframes/, Yd = /\s+/g;
    var Q = !(window.ShadyDOM && window.ShadyDOM.inUse), ie;

    function je(a) {
        ie = a && a.shimcssproperties ? !1 : Q || !(navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/) || !window.CSS || !CSS.supports || !CSS.supports("box-shadow", "0 0 0 var(--foo)"))
    }

    var ke;
    window.ShadyCSS && void 0 !== window.ShadyCSS.cssBuild && (ke = window.ShadyCSS.cssBuild);
    var le = !(!window.ShadyCSS || !window.ShadyCSS.disableRuntime);
    window.ShadyCSS && void 0 !== window.ShadyCSS.nativeCss ? ie = window.ShadyCSS.nativeCss : window.ShadyCSS ? (je(window.ShadyCSS), window.ShadyCSS = void 0) : je(window.WebComponents && window.WebComponents.flags);
    var R = ie, me = ke;
    var ne = /(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi,
        oe = /(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi, pe = /(--[\w-]+)\s*([:,;)]|$)/gi,
        qe = /(animation\s*:)|(animation-name\s*:)/, re = /@media\s(.*)/, se = /\{[^}]*\}/g;
    var te = new Set;

    function ue(a, b) {
        if (!a) return "";
        "string" === typeof a && (a = Td(a));
        b && ve(a, b);
        return de(a, R)
    }

    function we(a) {
        !a.__cssRules && a.textContent && (a.__cssRules = Td(a.textContent));
        return a.__cssRules || null
    }

    function Ae(a) {
        return !!a.parent && a.parent.type === ae
    }

    function ve(a, b, c, d) {
        if (a) {
            var e = !1, f = a.type;
            if (d && f === Zd) {
                var g = a.selector.match(re);
                g && (window.matchMedia(g[1]).matches || (e = !0))
            }
            f === ce ? b(a) : c && f === ae ? c(a) : f === be && (e = !0);
            if ((a = a.rules) && !e) for (e = 0, f = a.length, g = void 0; e < f && (g = a[e]); e++) ve(g, b, c, d)
        }
    }

    function Be(a, b, c, d) {
        var e = document.createElement("style");
        b && e.setAttribute("scope", b);
        e.textContent = a;
        Ce(e, c, d);
        return e
    }

    var S = null;

    function De(a) {
        a = document.createComment(" Shady DOM styles for " + a + " ");
        var b = document.head;
        b.insertBefore(a, (S ? S.nextSibling : null) || b.firstChild);
        return S = a
    }

    function Ce(a, b, c) {
        b = b || document.head;
        b.insertBefore(a, c && c.nextSibling || b.firstChild);
        S ? a.compareDocumentPosition(S) === Node.DOCUMENT_POSITION_PRECEDING && (S = a) : S = a
    }

    function Ee(a, b) {
        for (var c = 0, d = a.length; b < d; b++) if ("(" === a[b]) c++; else if (")" === a[b] && 0 === --c) return b;
        return -1
    }

    function Fe(a, b) {
        var c = a.indexOf("var(");
        if (-1 === c) return b(a, "", "", "");
        var d = Ee(a, c + 3), e = a.substring(c + 4, d);
        c = a.substring(0, c);
        a = Fe(a.substring(d + 1), b);
        d = e.indexOf(",");
        return -1 === d ? b(c, e.trim(), "", a) : b(c, e.substring(0, d).trim(), e.substring(d + 1).trim(), a)
    }

    function Ge(a, b) {
        Q ? a.setAttribute("class", b) : window.ShadyDOM.nativeMethods.setAttribute.call(a, "class", b)
    }

    var He = window.ShadyDOM && window.ShadyDOM.wrap || function (a) {
        return a
    };

    function T(a) {
        var b = a.localName, c = "";
        b ? -1 < b.indexOf("-") || (c = b, b = a.getAttribute && a.getAttribute("is") || "") : (b = a.is, c = a.extends);
        return {is: b, H: c}
    }

    function Ie(a) {
        for (var b = [], c = "", d = 0; 0 <= d && d < a.length; d++) if ("(" === a[d]) {
            var e = Ee(a, d);
            c += a.slice(d, e + 1);
            d = e
        } else "," === a[d] ? (b.push(c), c = "") : c += a[d];
        c && b.push(c);
        return b
    }

    function Je(a) {
        if (void 0 !== me) return me;
        if (void 0 === a.__cssBuild) {
            var b = a.getAttribute("css-build");
            if (b) a.__cssBuild = b; else {
                a:{
                    b = "template" === a.localName ? a.content.firstChild : a.firstChild;
                    if (b instanceof Comment && (b = b.textContent.trim().split(":"), "css-build" === b[0])) {
                        b = b[1];
                        break a
                    }
                    b = ""
                }
                if ("" !== b) {
                    var c = "template" === a.localName ? a.content.firstChild : a.firstChild;
                    c.parentNode.removeChild(c)
                }
                a.__cssBuild = b
            }
        }
        return a.__cssBuild || ""
    }

    function Ke(a) {
        a = void 0 === a ? "" : a;
        return "" !== a && R ? Q ? "shadow" === a : "shady" === a : !1
    };

    function Le() {
    }

    function Me(a, b) {
        Ne(U, a, function (a) {
            V(a, b || "")
        })
    }

    function Ne(a, b, c) {
        b.nodeType === Node.ELEMENT_NODE && c(b);
        var d;
        "template" === b.localName ? d = (b.content || b._content || b).childNodes : d = b.children || b.childNodes;
        if (d) for (b = 0; b < d.length; b++) Ne(a, d[b], c)
    }

    function V(a, b, c) {
        if (b) if (a.classList) c ? (a.classList.remove("style-scope"), a.classList.remove(b)) : (a.classList.add("style-scope"), a.classList.add(b)); else if (a.getAttribute) {
            var d = a.getAttribute("class");
            c ? d && (b = d.replace("style-scope", "").replace(b, ""), Ge(a, b)) : Ge(a, (d ? d + " " : "") + "style-scope " + b)
        }
    }

    function Oe(a, b, c) {
        Ne(U, a, function (a) {
            V(a, b, !0);
            V(a, c)
        })
    }

    function Pe(a, b) {
        Ne(U, a, function (a) {
            V(a, b || "", !0)
        })
    }

    function Qe(a, b, c, d, e) {
        var f = U;
        e = void 0 === e ? "" : e;
        "" === e && (Q || "shady" === (void 0 === d ? "" : d) ? e = ue(b, c) : (a = T(a), e = Re(f, b, a.is, a.H, c) + "\n\n"));
        return e.trim()
    }

    function Re(a, b, c, d, e) {
        var f = Se(c, d);
        c = c ? "." + c : "";
        return ue(b, function (b) {
            b.c || (b.selector = b.i = Te(a, b, a.b, c, f), b.c = !0);
            e && e(b, c, f)
        })
    }

    function Se(a, b) {
        return b ? "[is=" + a + "]" : a
    }

    function Te(a, b, c, d, e) {
        var f = Ie(b.selector);
        if (!Ae(b)) {
            b = 0;
            for (var g = f.length, h = void 0; b < g && (h = f[b]); b++) f[b] = c.call(a, h, d, e)
        }
        return f.filter(function (a) {
            return !!a
        }).join(",")
    }

    function Ue(a) {
        return a.replace(Ve, function (a, c, d) {
            -1 < d.indexOf("+") ? d = d.replace(/\+/g, "___") : -1 < d.indexOf("___") && (d = d.replace(/___/g, "+"));
            return ":" + c + "(" + d + ")"
        })
    }

    function We(a) {
        for (var b = [], c; c = a.match(Xe);) {
            var d = c.index, e = Ee(a, d);
            if (-1 === e) throw Error(c.input + " selector missing ')'");
            c = a.slice(d, e + 1);
            a = a.replace(c, "\ue000");
            b.push(c)
        }
        return {ba: a, matches: b}
    }

    function Ye(a, b) {
        var c = a.split("\ue000");
        return b.reduce(function (a, b, f) {
            return a + b + c[f + 1]
        }, c[0])
    }

    Le.prototype.b = function (a, b, c) {
        var d = !1;
        a = a.trim();
        var e = Ve.test(a);
        e && (a = a.replace(Ve, function (a, b, c) {
            return ":" + b + "(" + c.replace(/\s/g, "") + ")"
        }), a = Ue(a));
        var f = Xe.test(a);
        if (f) {
            var g = We(a);
            a = g.ba;
            g = g.matches
        }
        a = a.replace(Ze, ":host $1");
        a = a.replace($e, function (a, e, f) {
            d || (a = af(f, e, b, c), d = d || a.stop, e = a.wa, f = a.value);
            return e + f
        });
        f && (a = Ye(a, g));
        e && (a = Ue(a));
        return a
    };

    function af(a, b, c, d) {
        var e = a.indexOf("::slotted");
        0 <= a.indexOf(":host") ? a = bf(a, d) : 0 !== e && (a = c ? cf(a, c) : a);
        c = !1;
        0 <= e && (b = "", c = !0);
        if (c) {
            var f = !0;
            c && (a = a.replace(df, function (a, b) {
                return " > " + b
            }))
        }
        a = a.replace(ef, function (a, b, c) {
            return '[dir="' + c + '"] ' + b + ", " + b + '[dir="' + c + '"]'
        });
        return {value: a, wa: b, stop: f}
    }

    function cf(a, b) {
        a = a.split(/(\[.+?\])/);
        for (var c = [], d = 0; d < a.length; d++) if (1 === d % 2) c.push(a[d]); else {
            var e = a[d];
            if ("" !== e || d !== a.length - 1) e = e.split(":"), e[0] += b, c.push(e.join(":"))
        }
        return c.join("")
    }

    function bf(a, b) {
        var c = a.match(ff);
        return (c = c && c[2].trim() || "") ? c[0].match(gf) ? a.replace(ff, function (a, c, f) {
            return b + f
        }) : c.split(gf)[0] === b ? c : "should_not_match" : a.replace(":host", b)
    }

    function hf(a) {
        ":root" === a.selector && (a.selector = "html")
    }

    Le.prototype.c = function (a) {
        return a.match(":host") ? "" : a.match("::slotted") ? this.b(a, ":not(.style-scope)") : cf(a.trim(), ":not(.style-scope)")
    };
    p.Object.defineProperties(Le.prototype, {
        a: {
            configurable: !0, enumerable: !0, get: function () {
                return "style-scope"
            }
        }
    });
    var Ve = /:(nth[-\w]+)\(([^)]+)\)/, $e = /(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=[])+)/g, gf = /[[.:#*]/,
        Ze = /^(::slotted)/, ff = /(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,
        df = /(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/, ef = /(.*):dir\((?:(ltr|rtl))\)/,
        Xe = /:(?:matches|any|-(?:webkit|moz)-any)/, U = new Le;

    function jf(a, b, c, d, e) {
        this.v = a || null;
        this.b = b || null;
        this.aa = c || [];
        this.m = null;
        this.cssBuild = e || "";
        this.H = d || "";
        this.a = this.o = this.u = null
    }

    function W(a) {
        return a ? a.__styleInfo : null
    }

    function kf(a, b) {
        return a.__styleInfo = b
    }

    jf.prototype.c = function () {
        return this.v
    };
    jf.prototype._getStyleRules = jf.prototype.c;

    function lf(a) {
        var b = this.matches || this.matchesSelector || this.mozMatchesSelector || this.msMatchesSelector || this.oMatchesSelector || this.webkitMatchesSelector;
        return b && b.call(this, a)
    }

    var mf = navigator.userAgent.match("Trident");

    function nf() {
    }

    function of(a) {
        var b = {}, c = [], d = 0;
        ve(a, function (a) {
            pf(a);
            a.index = d++;
            a = a.h.cssText;
            for (var c; c = pe.exec(a);) {
                var e = c[1];
                ":" !== c[2] && (b[e] = !0)
            }
        }, function (a) {
            c.push(a)
        });
        a.b = c;
        a = [];
        for (var e in b) a.push(e);
        return a
    }

    function pf(a) {
        if (!a.h) {
            var b = {}, c = {};
            qf(a, c) && (b.s = c, a.rules = null);
            b.cssText = a.parsedCssText.replace(se, "").replace(ne, "");
            a.h = b
        }
    }

    function qf(a, b) {
        var c = a.h;
        if (c) {
            if (c.s) return Object.assign(b, c.s), !0
        } else {
            c = a.parsedCssText;
            for (var d; a = ne.exec(c);) {
                d = (a[2] || a[3]).trim();
                if ("inherit" !== d || "unset" !== d) b[a[1].trim()] = d;
                d = !0
            }
            return d
        }
    }

    function rf(a, b, c) {
        b && (b = 0 <= b.indexOf(";") ? sf(a, b, c) : Fe(b, function (b, e, f, g) {
            if (!e) return b + g;
            (e = rf(a, c[e], c)) && "initial" !== e ? "apply-shim-inherit" === e && (e = "inherit") : e = rf(a, c[f] || f, c) || f;
            return b + (e || "") + g
        }));
        return b && b.trim() || ""
    }

    function sf(a, b, c) {
        b = b.split(";");
        for (var d = 0, e, f; d < b.length; d++) if (e = b[d]) {
            oe.lastIndex = 0;
            if (f = oe.exec(e)) e = rf(a, c[f[1]], c); else if (f = e.indexOf(":"), -1 !== f) {
                var g = e.substring(f);
                g = g.trim();
                g = rf(a, g, c) || g;
                e = e.substring(0, f) + g
            }
            b[d] = e && e.lastIndexOf(";") === e.length - 1 ? e.slice(0, -1) : e || ""
        }
        return b.join(";")
    }

    function tf(a, b) {
        var c = {}, d = [];
        ve(a, function (a) {
            a.h || pf(a);
            var e = a.i || a.parsedSelector;
            b && a.h.s && e && lf.call(b, e) && (qf(a, c), a = a.index, e = parseInt(a / 32, 10), d[e] = (d[e] || 0) | 1 << a % 32)
        }, null, !0);
        return {s: c, key: d}
    }

    function uf(a, b, c, d) {
        b.h || pf(b);
        if (b.h.s) {
            var e = T(a);
            a = e.is;
            e = e.H;
            e = a ? Se(a, e) : "html";
            var f = b.parsedSelector, g = ":host > *" === f || "html" === f, h = 0 === f.indexOf(":host") && !g;
            "shady" === c && (g = f === e + " > *." + e || -1 !== f.indexOf("html"), h = !g && 0 === f.indexOf(e));
            if (g || h) c = e, h && (b.i || (b.i = Te(U, b, U.b, a ? "." + a : "", e)), c = b.i || e), d({
                ba: c,
                Ca: h,
                Ra: g
            })
        }
    }

    function vf(a, b, c) {
        var d = {}, e = {};
        ve(b, function (b) {
            uf(a, b, c, function (c) {
                lf.call(a._element || a, c.ba) && (c.Ca ? qf(b, d) : qf(b, e))
            })
        }, null, !0);
        return {Ja: e, Ba: d}
    }

    function wf(a, b, c, d) {
        var e = T(b), f = Se(e.is, e.H),
            g = new RegExp("(?:^|[^.#[:])" + (b.extends ? "\\" + f.slice(0, -1) + "\\]" : f) + "($|[.:[\\s>+~])"),
            h = W(b);
        e = h.v;
        h = h.cssBuild;
        var k = xf(e, d);
        return Qe(b, e, function (b) {
            var e = "";
            b.h || pf(b);
            b.h.cssText && (e = sf(a, b.h.cssText, c));
            b.cssText = e;
            if (!Q && !Ae(b) && b.cssText) {
                var h = e = b.cssText;
                null == b.ga && (b.ga = qe.test(e));
                if (b.ga) if (null == b.O) {
                    b.O = [];
                    for (var l in k) h = k[l], h = h(e), e !== h && (e = h, b.O.push(l))
                } else {
                    for (l = 0; l < b.O.length; ++l) h = k[b.O[l]], e = h(e);
                    h = e
                }
                b.cssText = h;
                b.i = b.i || b.selector;
                e = "." + d;
                l = Ie(b.i);
                h = 0;
                for (var O = l.length, Y = void 0; h < O && (Y = l[h]); h++) l[h] = Y.match(g) ? Y.replace(f, e) : e + " " + Y;
                b.selector = l.join(",")
            }
        }, h)
    }

    function xf(a, b) {
        a = a.b;
        var c = {};
        if (!Q && a) for (var d = 0, e = a[d]; d < a.length; e = a[++d]) {
            var f = e, g = b;
            f.f = new RegExp("\\b" + f.keyframesName + "(?!\\B|-)", "g");
            f.a = f.keyframesName + "-" + g;
            f.i = f.i || f.selector;
            f.selector = f.i.replace(f.keyframesName, f.a);
            c[e.keyframesName] = yf(e)
        }
        return c
    }

    function yf(a) {
        return function (b) {
            return b.replace(a.f, a.a)
        }
    }

    function zf(a, b) {
        var c = Af, d = we(a);
        a.textContent = ue(d, function (a) {
            var d = a.cssText = a.parsedCssText;
            a.h && a.h.cssText && (d = d.replace(ee, "").replace(fe, ""), a.cssText = sf(c, d, b))
        })
    }

    p.Object.defineProperties(nf.prototype, {
        a: {
            configurable: !0, enumerable: !0, get: function () {
                return "x-scope"
            }
        }
    });
    var Af = new nf;
    var Bf = {}, Cf = window.customElements;
    if (Cf && !Q && !le) {
        var Df = Cf.define;
        Cf.define = function (a, b, c) {
            Bf[a] || (Bf[a] = De(a));
            Df.call(Cf, a, b, c)
        }
    }
    ;

    function Ef() {
        this.cache = {}
    }

    Ef.prototype.store = function (a, b, c, d) {
        var e = this.cache[a] || [];
        e.push({s: b, styleElement: c, o: d});
        100 < e.length && e.shift();
        this.cache[a] = e
    };

    function Ff() {
    }

    var Gf = new RegExp(U.a + "\\s*([^\\s]*)");

    function Hf(a) {
        return (a = (a.classList && a.classList.value ? a.classList.value : a.getAttribute("class") || "").match(Gf)) ? a[1] : ""
    }

    function If(a) {
        var b = He(a).getRootNode();
        return b === a || b === a.ownerDocument ? "" : (a = b.host) ? T(a).is : ""
    }

    function Jf(a) {
        for (var b = 0; b < a.length; b++) {
            var c = a[b];
            if (c.target !== document.documentElement && c.target !== document.head) for (var d = 0; d < c.addedNodes.length; d++) {
                var e = c.addedNodes[d];
                if (e.nodeType === Node.ELEMENT_NODE) {
                    var f = e.getRootNode(), g = Hf(e);
                    if (g && f === e.ownerDocument && ("style" !== e.localName && "template" !== e.localName || "" === Je(e))) Pe(e, g); else if (f instanceof ShadowRoot) for (f = If(e), f !== g && Oe(e, g, f), e = window.ShadyDOM.nativeMethods.querySelectorAll.call(e, ":not(." + U.a + ")"), g = 0; g < e.length; g++) {
                        f = e[g];
                        var h = If(f);
                        h && V(f, h)
                    }
                }
            }
        }
    }

    if (!(Q || window.ShadyDOM && window.ShadyDOM.handlesDynamicScoping)) {
        var Kf = new MutationObserver(Jf), Lf = function (a) {
            Kf.observe(a, {childList: !0, subtree: !0})
        };
        if (window.customElements && !window.customElements.polyfillWrapFlushCallback) Lf(document); else {
            var Mf = function () {
                Lf(document.body)
            };
            window.HTMLImports ? window.HTMLImports.whenReady(Mf) : requestAnimationFrame(function () {
                if ("loading" === document.readyState) {
                    var a = function () {
                        Mf();
                        document.removeEventListener("readystatechange", a)
                    };
                    document.addEventListener("readystatechange",
                        a)
                } else Mf()
            })
        }
        Ff = function () {
            Jf(Kf.takeRecords())
        }
    }
    var Nf = Ff;
    var Of = {};
    var Pf = Promise.resolve();

    function Qf(a) {
        if (a = Of[a]) a._applyShimCurrentVersion = a._applyShimCurrentVersion || 0, a._applyShimValidatingVersion = a._applyShimValidatingVersion || 0, a._applyShimNextVersion = (a._applyShimNextVersion || 0) + 1
    }

    function Rf(a) {
        return a._applyShimCurrentVersion === a._applyShimNextVersion
    }

    function Sf(a) {
        a._applyShimValidatingVersion = a._applyShimNextVersion;
        a._validating || (a._validating = !0, Pf.then(function () {
            a._applyShimCurrentVersion = a._applyShimNextVersion;
            a._validating = !1
        }))
    };var Tf = {}, Uf = new Ef;

    function X() {
        this.j = {};
        this.c = document.documentElement;
        var a = new Sd;
        a.rules = [];
        this.f = kf(this.c, new jf(a));
        this.g = !1;
        this.b = this.a = null
    }

    n = X.prototype;
    n.flush = function () {
        Nf()
    };
    n.za = function (a) {
        return we(a)
    };
    n.Na = function (a) {
        return ue(a)
    };
    n.prepareTemplate = function (a, b, c) {
        this.prepareTemplateDom(a, b);
        this.prepareTemplateStyles(a, b, c)
    };
    n.prepareTemplateStyles = function (a, b, c) {
        if (!a._prepared && !le) {
            Q || Bf[b] || (Bf[b] = De(b));
            a._prepared = !0;
            a.name = b;
            a.extends = c;
            Of[b] = a;
            var d = Je(a), e = Ke(d);
            c = {is: b, extends: c};
            for (var f = [], g = a.content.querySelectorAll("style"), h = 0; h < g.length; h++) {
                var k = g[h];
                if (k.hasAttribute("shady-unscoped")) {
                    if (!Q) {
                        var l = k.textContent;
                        te.has(l) || (te.add(l), l = k.cloneNode(!0), document.head.appendChild(l));
                        k.parentNode.removeChild(k)
                    }
                } else f.push(k.textContent), k.parentNode.removeChild(k)
            }
            f = f.join("").trim() + (Tf[b] || "");
            Vf(this);
            if (!e) {
                if (g = !d) g = oe.test(f) || ne.test(f), oe.lastIndex = 0, ne.lastIndex = 0;
                h = Td(f);
                g && R && this.a && this.a.transformRules(h, b);
                a._styleAst = h
            }
            g = [];
            R || (g = of(a._styleAst));
            if (!g.length || R) h = Q ? a.content : null, b = Bf[b] || null, d = Qe(c, a._styleAst, null, d, e ? f : ""), d = d.length ? Be(d, c.is, h, b) : null, a._style = d;
            a.a = g
        }
    };
    n.Ia = function (a, b) {
        Tf[b] = a.join(" ")
    };
    n.prepareTemplateDom = function (a, b) {
        if (!le) {
            var c = Je(a);
            Q || "shady" === c || a._domPrepared || (a._domPrepared = !0, Me(a.content, b))
        }
    };

    function Wf(a) {
        var b = T(a), c = b.is;
        b = b.H;
        var d = Bf[c] || null, e = Of[c];
        if (e) {
            c = e._styleAst;
            var f = e.a;
            e = Je(e);
            b = new jf(c, d, f, b, e);
            kf(a, b);
            return b
        }
    }

    function Xf(a) {
        !a.b && window.ShadyCSS && window.ShadyCSS.CustomStyleInterface && (a.b = window.ShadyCSS.CustomStyleInterface, a.b.transformCallback = function (b) {
            a.ka(b)
        }, a.b.validateCallback = function () {
            requestAnimationFrame(function () {
                (a.b.enqueued || a.g) && a.flushCustomStyles()
            })
        })
    }

    function Vf(a) {
        !a.a && window.ShadyCSS && window.ShadyCSS.ApplyShim && (a.a = window.ShadyCSS.ApplyShim, a.a.invalidCallback = Qf);
        Xf(a)
    }

    n.flushCustomStyles = function () {
        if (!le && (Vf(this), this.b)) {
            var a = this.b.processStyles();
            if (this.b.enqueued && !Ke(this.f.cssBuild)) {
                if (R) {
                    if (!this.f.cssBuild) for (var b = 0; b < a.length; b++) {
                        var c = this.b.getStyleForCustomStyle(a[b]);
                        if (c && R && this.a) {
                            var d = we(c);
                            Vf(this);
                            this.a.transformRules(d);
                            c.textContent = ue(d)
                        }
                    }
                } else {
                    Yf(this, this.c, this.f);
                    for (b = 0; b < a.length; b++) (c = this.b.getStyleForCustomStyle(a[b])) && zf(c, this.f.u);
                    this.g && this.styleDocument()
                }
                this.b.enqueued = !1
            }
        }
    };
    n.styleElement = function (a, b) {
        if (le) {
            if (b) {
                W(a) || kf(a, new jf(null));
                var c = W(a);
                c.m = c.m || {};
                Object.assign(c.m, b);
                Zf(this, a, c)
            }
        } else if (c = W(a) || Wf(a)) if (a !== this.c && (this.g = !0), b && (c.m = c.m || {}, Object.assign(c.m, b)), R) Zf(this, a, c); else if (this.flush(), Yf(this, a, c), c.aa && c.aa.length) {
            b = T(a).is;
            var d;
            a:{
                if (d = Uf.cache[b]) for (var e = d.length - 1; 0 <= e; e--) {
                    var f = d[e];
                    b:{
                        var g = c.aa;
                        for (var h = 0; h < g.length; h++) {
                            var k = g[h];
                            if (f.s[k] !== c.u[k]) {
                                g = !1;
                                break b
                            }
                        }
                        g = !0
                    }
                    if (g) {
                        d = f;
                        break a
                    }
                }
                d = void 0
            }
            g = d ? d.styleElement : null;
            e = c.o;
            (f = d && d.o) || (f = this.j[b] = (this.j[b] || 0) + 1, f = b + "-" + f);
            c.o = f;
            f = c.o;
            h = Af;
            h = g ? g.textContent || "" : wf(h, a, c.u, f);
            k = W(a);
            var l = k.a;
            l && !Q && l !== g && (l._useCount--, 0 >= l._useCount && l.parentNode && l.parentNode.removeChild(l));
            Q ? k.a ? (k.a.textContent = h, g = k.a) : h && (g = Be(h, f, a.shadowRoot, k.b)) : g ? g.parentNode || (mf && -1 < h.indexOf("@media") && (g.textContent = h), Ce(g, null, k.b)) : h && (g = Be(h, f, null, k.b));
            g && (g._useCount = g._useCount || 0, k.a != g && g._useCount++, k.a = g);
            f = g;
            Q || (g = c.o, k = h = a.getAttribute("class") || "", e && (k = h.replace(new RegExp("\\s*x-scope\\s*" +
                e + "\\s*", "g"), " ")), k += (k ? " " : "") + "x-scope " + g, h !== k && Ge(a, k));
            d || Uf.store(b, c.u, f, c.o)
        }
    };

    function Zf(a, b, c) {
        var d = T(b).is;
        if (c.m) {
            var e = c.m, f;
            for (f in e) null === f ? b.style.removeProperty(f) : b.style.setProperty(f, e[f])
        }
        e = Of[d];
        if (!(!e && b !== a.c || e && "" !== Je(e)) && e && e._style && !Rf(e)) {
            if (Rf(e) || e._applyShimValidatingVersion !== e._applyShimNextVersion) Vf(a), a.a && a.a.transformRules(e._styleAst, d), e._style.textContent = Qe(b, c.v), Sf(e);
            Q && (a = b.shadowRoot) && (a = a.querySelector("style")) && (a.textContent = Qe(b, c.v));
            c.v = e._styleAst
        }
    }

    function $f(a, b) {
        return (b = He(b).getRootNode().host) ? W(b) || Wf(b) ? b : $f(a, b) : a.c
    }

    function Yf(a, b, c) {
        var d = $f(a, b), e = W(d), f = e.u;
        d === a.c || f || (Yf(a, d, e), f = e.u);
        a = Object.create(f || null);
        d = vf(b, c.v, c.cssBuild);
        b = tf(e.v, b).s;
        Object.assign(a, d.Ba, b, d.Ja);
        b = c.m;
        for (var g in b) if ((e = b[g]) || 0 === e) a[g] = e;
        g = Af;
        b = Object.getOwnPropertyNames(a);
        for (e = 0; e < b.length; e++) d = b[e], a[d] = rf(g, a[d], a);
        c.u = a
    }

    n.styleDocument = function (a) {
        this.styleSubtree(this.c, a)
    };
    n.styleSubtree = function (a, b) {
        var c = He(a), d = c.shadowRoot;
        (d || a === this.c) && this.styleElement(a, b);
        if (a = d && (d.children || d.childNodes)) for (c = 0; c < a.length; c++) this.styleSubtree(a[c]); else if (c = c.children || c.childNodes) for (a = 0; a < c.length; a++) this.styleSubtree(c[a])
    };
    n.ka = function (a) {
        var b = this, c = Je(a);
        c !== this.f.cssBuild && (this.f.cssBuild = c);
        if (!Ke(c)) {
            var d = we(a);
            ve(d, function (a) {
                if (Q) hf(a); else {
                    var d = U;
                    a.selector = a.parsedSelector;
                    hf(a);
                    a.selector = a.i = Te(d, a, d.c, void 0, void 0)
                }
                R && "" === c && (Vf(b), b.a && b.a.transformRule(a))
            });
            R ? a.textContent = ue(d) : this.f.v.rules.push(d)
        }
    };
    n.getComputedStyleValue = function (a, b) {
        var c;
        R || (c = (W(a) || W($f(this, a))).u[b]);
        return (c = c || window.getComputedStyle(a).getPropertyValue(b)) ? c.trim() : ""
    };
    n.Ma = function (a, b) {
        var c = He(a).getRootNode();
        b = b ? b.split(/\s/) : [];
        c = c.host && c.host.localName;
        if (!c) {
            var d = a.getAttribute("class");
            if (d) {
                d = d.split(/\s/);
                for (var e = 0; e < d.length; e++) if (d[e] === U.a) {
                    c = d[e + 1];
                    break
                }
            }
        }
        c && b.push(U.a, c);
        R || (c = W(a)) && c.o && b.push(Af.a, c.o);
        Ge(a, b.join(" "))
    };
    n.ua = function (a) {
        return W(a)
    };
    n.La = function (a, b) {
        V(a, b)
    };
    n.Oa = function (a, b) {
        V(a, b, !0)
    };
    n.Ka = function (a) {
        return If(a)
    };
    n.xa = function (a) {
        return Hf(a)
    };
    X.prototype.flush = X.prototype.flush;
    X.prototype.prepareTemplate = X.prototype.prepareTemplate;
    X.prototype.styleElement = X.prototype.styleElement;
    X.prototype.styleDocument = X.prototype.styleDocument;
    X.prototype.styleSubtree = X.prototype.styleSubtree;
    X.prototype.getComputedStyleValue = X.prototype.getComputedStyleValue;
    X.prototype.setElementClass = X.prototype.Ma;
    X.prototype._styleInfoForNode = X.prototype.ua;
    X.prototype.transformCustomStyleForDocument = X.prototype.ka;
    X.prototype.getStyleAst = X.prototype.za;
    X.prototype.styleAstToString = X.prototype.Na;
    X.prototype.flushCustomStyles = X.prototype.flushCustomStyles;
    X.prototype.scopeNode = X.prototype.La;
    X.prototype.unscopeNode = X.prototype.Oa;
    X.prototype.scopeForNode = X.prototype.Ka;
    X.prototype.currentScopeForNode = X.prototype.xa;
    X.prototype.prepareAdoptedCssText = X.prototype.Ia;
    Object.defineProperties(X.prototype, {
        nativeShadow: {
            get: function () {
                return Q
            }
        }, nativeCss: {
            get: function () {
                return R
            }
        }
    });
    var Z = new X, ag, bg;
    window.ShadyCSS && (ag = window.ShadyCSS.ApplyShim, bg = window.ShadyCSS.CustomStyleInterface);
    window.ShadyCSS = {
        ScopingShim: Z, prepareTemplate: function (a, b, c) {
            Z.flushCustomStyles();
            Z.prepareTemplate(a, b, c)
        }, prepareTemplateDom: function (a, b) {
            Z.prepareTemplateDom(a, b)
        }, prepareTemplateStyles: function (a, b, c) {
            Z.flushCustomStyles();
            Z.prepareTemplateStyles(a, b, c)
        }, styleSubtree: function (a, b) {
            Z.flushCustomStyles();
            Z.styleSubtree(a, b)
        }, styleElement: function (a) {
            Z.flushCustomStyles();
            Z.styleElement(a)
        }, styleDocument: function (a) {
            Z.flushCustomStyles();
            Z.styleDocument(a)
        }, flushCustomStyles: function () {
            Z.flushCustomStyles()
        },
        getComputedStyleValue: function (a, b) {
            return Z.getComputedStyleValue(a, b)
        }, nativeCss: R, nativeShadow: Q, cssBuild: me, disableRuntime: le
    };
    ag && (window.ShadyCSS.ApplyShim = ag);
    bg && (window.ShadyCSS.CustomStyleInterface = bg);/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    var cg = window.customElements, dg = window.HTMLImports, eg = window.HTMLTemplateElement;
    window.WebComponents = window.WebComponents || {};
    if (cg && cg.polyfillWrapFlushCallback) {
        var fg, gg = function () {
            if (fg) {
                eg.va && eg.va(window.document);
                var a = fg;
                fg = null;
                a();
                return !0
            }
        }, hg = dg.whenReady;
        cg.polyfillWrapFlushCallback(function (a) {
            fg = a;
            hg(gg)
        });
        dg.whenReady = function (a) {
            hg(function () {
                gg() ? dg.whenReady(a) : a()
            })
        }
    }
    dg.whenReady(function () {
        requestAnimationFrame(function () {
            window.WebComponents.ready = !0;
            document.dispatchEvent(new CustomEvent("WebComponentsReady", {bubbles: !0}))
        })
    });
    var ig = document.createElement("style");
    ig.textContent = "body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";
    var jg = document.querySelector("head");
    jg.insertBefore(ig, jg.firstChild);
}).call(this);

//# sourceMappingURL=webcomponents-hi-sd-ce.js.map
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:06</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd.ce" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\webcomponents-hi-sd-ce.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd.ce.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\webcomponents-hi-sd-ce.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>webcomponents-hi-sd-ce.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/webcomponents-hi-sd-ce.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53166.047258</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license @nocompile
 Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
(function () {/*

 Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    'use strict';
    var n,
        p = "undefined" != typeof window && window === this ? this : "undefined" != typeof global && null != global ? global : this,
        aa = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
            a != Array.prototype && a != Object.prototype && (a[b] = c.value)
        };

    function ba() {
        ba = function () {
        };
        p.Symbol || (p.Symbol = ca)
    }

    var ca = function () {
        var a = 0;
        return function (b) {
            return "jscomp_symbol_" + (b || "") + a++
        }
    }();

    function ea() {
        ba();
        var a = p.Symbol.iterator;
        a || (a = p.Symbol.iterator = p.Symbol("iterator"));
        "function" != typeof Array.prototype[a] && aa(Array.prototype, a, {
            configurable: !0,
            writable: !0,
            value: function () {
                return fa(this)
            }
        });
        ea = function () {
        }
    }

    function fa(a) {
        var b = 0;
        return ha(function () {
            return b < a.length ? {done: !1, value: a[b++]} : {done: !0}
        })
    }

    function ha(a) {
        ea();
        a = {next: a};
        a[p.Symbol.iterator] = function () {
            return this
        };
        return a
    }

    function ia(a) {
        ea();
        ba();
        ea();
        var b = a[Symbol.iterator];
        return b ? b.call(a) : fa(a)
    }

    function ja(a) {
        for (var b, c = []; !(b = a.next()).done;) c.push(b.value);
        return c
    }

    (function (a) {
        function b(a, b) {
            if ("function" === typeof window.CustomEvent) return new CustomEvent(a, b);
            var c = document.createEvent("CustomEvent");
            c.initCustomEvent(a, !!b.bubbles, !!b.cancelable, b.detail);
            return c
        }

        function c(a) {
            if (J) return a.ownerDocument !== document ? a.ownerDocument : null;
            var b = a.__importDoc;
            if (!b && a.parentNode) {
                b = a.parentNode;
                if ("function" === typeof b.closest) b = b.closest("link[rel=import]"); else for (; !h(b) && (b = b.parentNode);) ;
                a.__importDoc = b
            }
            return b
        }

        function d(a) {
            var b = m(document, "link[rel=import]:not([import-dependency])"),
                c = b.length;
            c ? t(b, function (b) {
                return g(b, function () {
                    0 === --c && a()
                })
            }) : a()
        }

        function e(a) {
            function b() {
                "loading" !== document.readyState && document.body && (document.removeEventListener("readystatechange", b), a())
            }

            document.addEventListener("readystatechange", b);
            b()
        }

        function f(a) {
            e(function () {
                return d(function () {
                    return a && a()
                })
            })
        }

        function g(a, b) {
            if (a.__loaded) b && b(); else if ("script" === a.localName && !a.src || "style" === a.localName && !a.firstChild) a.__loaded = !0, b && b(); else {
                var c = function (d) {
                    a.removeEventListener(d.type,
                        c);
                    a.__loaded = !0;
                    b && b()
                };
                a.addEventListener("load", c);
                Oa && "style" === a.localName || a.addEventListener("error", c)
            }
        }

        function h(a) {
            return a.nodeType === Node.ELEMENT_NODE && "link" === a.localName && "import" === a.rel
        }

        function k() {
            var a = this;
            this.a = {};
            this.b = 0;
            this.c = new MutationObserver(function (b) {
                return a.za(b)
            });
            this.c.observe(document.head, {childList: !0, subtree: !0});
            this.loadImports(document)
        }

        function l(a) {
            t(m(a, "template"), function (a) {
                t(m(a.content, 'script:not([type]),script[type="application/javascript"],script[type="text/javascript"],script[type="module"]'),
                    function (a) {
                        var b = document.createElement("script");
                        t(a.attributes, function (a) {
                            return b.setAttribute(a.name, a.value)
                        });
                        b.textContent = a.textContent;
                        a.parentNode.replaceChild(b, a)
                    });
                l(a.content)
            })
        }

        function m(a, b) {
            return a.childNodes.length ? a.querySelectorAll(b) : R
        }

        function t(a, b, c) {
            var d = a ? a.length : 0, e = c ? -1 : 1;
            for (c = c ? d - 1 : 0; c < d && 0 <= c; c += e) b(a[c], c)
        }

        var C = document.createElement("link"), J = "import" in C, R = C.querySelectorAll("*"), Pa = null;
        !1 === "currentScript" in document && Object.defineProperty(document, "currentScript",
            {
                get: function () {
                    return Pa || ("complete" !== document.readyState ? document.scripts[document.scripts.length - 1] : null)
                }, configurable: !0
            });
        var Gd = /(url\()([^)]*)(\))/g, Hd = /(@import[\s]+(?!url\())([^;]*)(;)/g,
            Id = /(<link[^>]*)(rel=['|"]?stylesheet['|"]?[^>]*>)/g, D = {
                ta: function (a, b) {
                    a.href && a.setAttribute("href", D.P(a.getAttribute("href"), b));
                    a.src && a.setAttribute("src", D.P(a.getAttribute("src"), b));
                    if ("style" === a.localName) {
                        var c = D.fa(a.textContent, b, Gd);
                        a.textContent = D.fa(c, b, Hd)
                    }
                }, fa: function (a, b, c) {
                    return a.replace(c,
                        function (a, c, d, e) {
                            a = d.replace(/["']/g, "");
                            b && (a = D.P(a, b));
                            return c + "'" + a + "'" + e
                        })
                }, P: function (a, b) {
                    if (void 0 === D.T) {
                        D.T = !1;
                        try {
                            var c = new URL("b", "http://a");
                            c.pathname = "c%20d";
                            D.T = "http://a/c%20d" === c.href
                        } catch (af) {
                        }
                    }
                    if (D.T) return (new URL(a, b)).href;
                    c = D.ka;
                    c || (c = document.implementation.createHTMLDocument("temp"), D.ka = c, c.$ = c.createElement("base"), c.head.appendChild(c.$), c.Z = c.createElement("a"));
                    c.$.href = b;
                    c.Z.href = a;
                    return c.Z.href || a
                }
            }, Mb = {
                async: !0, load: function (a, b, c) {
                    if (a) if (a.match(/^data:/)) {
                        a =
                            a.split(",");
                        var d = a[1];
                        d = -1 < a[0].indexOf(";base64") ? atob(d) : decodeURIComponent(d);
                        b(d)
                    } else {
                        var e = new XMLHttpRequest;
                        e.open("GET", a, Mb.async);
                        e.onload = function () {
                            var a = e.responseURL || e.getResponseHeader("Location");
                            a && 0 === a.indexOf("/") && (a = (location.origin || location.protocol + "//" + location.host) + a);
                            var d = e.response || e.responseText;
                            304 === e.status || 0 === e.status || 200 <= e.status && 300 > e.status ? b(d, a) : c(d)
                        };
                        e.send()
                    } else c("error: href must be specified")
                }
            }, Oa = /Trident/.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent);
        k.prototype.loadImports = function (a) {
            var b = this;
            a = m(a, "link[rel=import]");
            t(a, function (a) {
                return b.w(a)
            })
        };
        k.prototype.w = function (a) {
            var b = this, c = a.href;
            if (void 0 !== this.a[c]) {
                var d = this.a[c];
                d && d.__loaded && (a.__import = d, this.f(a))
            } else this.b++, this.a[c] = "pending", Mb.load(c, function (a, d) {
                a = b.Aa(a, d || c);
                b.a[c] = a;
                b.b--;
                b.loadImports(a);
                b.B()
            }, function () {
                b.a[c] = null;
                b.b--;
                b.B()
            })
        };
        k.prototype.Aa = function (a, b) {
            if (!a) return document.createDocumentFragment();
            Oa && (a = a.replace(Id, function (a, b, c) {
                return -1 ===
                a.indexOf("type=") ? b + " type=import-disable " + c : a
            }));
            var c = document.createElement("template");
            c.innerHTML = a;
            if (c.content) a = c.content, l(a); else for (a = document.createDocumentFragment(); c.firstChild;) a.appendChild(c.firstChild);
            if (c = a.querySelector("base")) b = D.P(c.getAttribute("href"), b), c.removeAttribute("href");
            c = m(a, 'link[rel=import],link[rel=stylesheet][href][type=import-disable],style:not([type]),link[rel=stylesheet][href]:not([type]),script:not([type]),script[type="application/javascript"],script[type="text/javascript"],script[type="module"]');
            var d = 0;
            t(c, function (a) {
                g(a);
                D.ta(a, b);
                a.setAttribute("import-dependency", "");
                if ("script" === a.localName && !a.src && a.textContent) {
                    if ("module" === a.type) throw Error("Inline module scripts are not supported in HTML Imports.");
                    a.setAttribute("src", "data:text/javascript;charset=utf-8," + encodeURIComponent(a.textContent + ("\n//# sourceURL=" + b + (d ? "-" + d : "") + ".js\n")));
                    a.textContent = "";
                    d++
                }
            });
            return a
        };
        k.prototype.B = function () {
            var a = this;
            if (!this.b) {
                this.c.disconnect();
                this.flatten(document);
                var b = !1, c = !1, d = function () {
                    c &&
                    b && (a.loadImports(document), a.b || (a.c.observe(document.head, {
                        childList: !0,
                        subtree: !0
                    }), a.xa()))
                };
                this.Ca(function () {
                    c = !0;
                    d()
                });
                this.Ba(function () {
                    b = !0;
                    d()
                })
            }
        };
        k.prototype.flatten = function (a) {
            var b = this;
            a = m(a, "link[rel=import]");
            t(a, function (a) {
                var c = b.a[a.href];
                (a.__import = c) && c.nodeType === Node.DOCUMENT_FRAGMENT_NODE && (b.a[a.href] = a, a.readyState = "loading", a.__import = a, b.flatten(c), a.appendChild(c))
            })
        };
        k.prototype.Ba = function (a) {
            function b(e) {
                if (e < d) {
                    var f = c[e], h = document.createElement("script");
                    f.removeAttribute("import-dependency");
                    t(f.attributes, function (a) {
                        return h.setAttribute(a.name, a.value)
                    });
                    Pa = h;
                    f.parentNode.replaceChild(h, f);
                    g(h, function () {
                        Pa = null;
                        b(e + 1)
                    })
                } else a()
            }

            var c = m(document, "script[import-dependency]"), d = c.length;
            b(0)
        };
        k.prototype.Ca = function (a) {
            var b = m(document, "style[import-dependency],link[rel=stylesheet][import-dependency]"), d = b.length;
            if (d) {
                var e = Oa && !!document.querySelector("link[rel=stylesheet][href][type=import-disable]");
                t(b, function (b) {
                    g(b, function () {
                        b.removeAttribute("import-dependency");
                        0 === --d &&
                        a()
                    });
                    if (e && b.parentNode !== document.head) {
                        var f = document.createElement(b.localName);
                        f.__appliedElement = b;
                        f.setAttribute("type", "import-placeholder");
                        b.parentNode.insertBefore(f, b.nextSibling);
                        for (f = c(b); f && c(f);) f = c(f);
                        f.parentNode !== document.head && (f = null);
                        document.head.insertBefore(b, f);
                        b.removeAttribute("type")
                    }
                })
            } else a()
        };
        k.prototype.xa = function () {
            var a = this, b = m(document, "link[rel=import]");
            t(b, function (b) {
                return a.f(b)
            }, !0)
        };
        k.prototype.f = function (a) {
            a.__loaded || (a.__loaded = !0, a.import && (a.import.readyState =
                "complete"), a.dispatchEvent(b(a.import ? "load" : "error", {
                bubbles: !1,
                cancelable: !1,
                detail: void 0
            })))
        };
        k.prototype.za = function (a) {
            var b = this;
            t(a, function (a) {
                return t(a.addedNodes, function (a) {
                    a && a.nodeType === Node.ELEMENT_NODE && (h(a) ? b.w(a) : b.loadImports(a))
                })
            })
        };
        var Qa = null;
        if (J) C = m(document, "link[rel=import]"), t(C, function (a) {
            a.import && "loading" === a.import.readyState || (a.__loaded = !0)
        }), C = function (a) {
            a = a.target;
            h(a) && (a.__loaded = !0)
        }, document.addEventListener("load", C, !0), document.addEventListener("error",
            C, !0); else {
            var da = Object.getOwnPropertyDescriptor(Node.prototype, "baseURI");
            Object.defineProperty((!da || da.configurable ? Node : Element).prototype, "baseURI", {
                get: function () {
                    var a = h(this) ? this : c(this);
                    return a ? a.href : da && da.get ? da.get.call(this) : (document.querySelector("base") || window.location).href
                }, configurable: !0, enumerable: !0
            });
            Object.defineProperty(HTMLLinkElement.prototype, "import", {
                get: function () {
                    return this.__import || null
                }, configurable: !0, enumerable: !0
            });
            e(function () {
                Qa = new k
            })
        }
        f(function () {
            return document.dispatchEvent(b("HTMLImportsLoaded",
                {cancelable: !0, bubbles: !0, detail: void 0}))
        });
        a.useNative = J;
        a.whenReady = f;
        a.importForElement = c;
        a.loadImports = function (a) {
            Qa && Qa.loadImports(a)
        }
    })(window.HTMLImports = window.HTMLImports || {});/*

Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    function ka() {
        this.ea = this.root = null;
        this.M = !1;
        this.v = this.J = this.V = this.assignedSlot = this.assignedNodes = this.A = null;
        this.childNodes = this.nextSibling = this.previousSibling = this.lastChild = this.firstChild = this.parentNode = this.D = void 0;
        this.aa = this.ba = !1;
        this.I = {}
    }

    ka.prototype.toJSON = function () {
        return {}
    };

    function q(a) {
        a.__shady || (a.__shady = new ka);
        return a.__shady
    }

    function r(a) {
        return a && a.__shady
    };var u = window.ShadyDOM || {};
    u.va = !(!Element.prototype.attachShadow || !Node.prototype.getRootNode);
    var la = Object.getOwnPropertyDescriptor(Node.prototype, "firstChild");
    u.i = !!(la && la.configurable && la.get);
    u.W = u.force || !u.va;
    u.C = u.noPatch || !1;
    u.da = u.preferPerformance;

    function v(a) {
        return (a = r(a)) && void 0 !== a.firstChild
    }

    function w(a) {
        return "ShadyRoot" === a.ma
    }

    function ma(a) {
        return (a = (a = r(a)) && a.root) && na(a)
    }

    var x = Element.prototype,
        oa = x.matches || x.matchesSelector || x.mozMatchesSelector || x.msMatchesSelector || x.oMatchesSelector || x.webkitMatchesSelector,
        pa = document.createTextNode(""), qa = 0, ra = [];
    (new MutationObserver(function () {
        for (; ra.length;) try {
            ra.shift()()
        } catch (a) {
            throw pa.textContent = qa++, a;
        }
    })).observe(pa, {characterData: !0});

    function sa(a) {
        ra.push(a);
        pa.textContent = qa++
    }

    var ta = !!document.contains;

    function ua(a, b) {
        for (; b;) {
            if (b == a) return !0;
            b = b.__shady_parentNode
        }
        return !1
    }

    function va(a) {
        for (var b = a.length - 1; 0 <= b; b--) {
            var c = a[b], d = c.getAttribute("id") || c.getAttribute("name");
            d && "length" !== d && isNaN(d) && (a[d] = c)
        }
        a.item = function (b) {
            return a[b]
        };
        a.namedItem = function (b) {
            if ("length" !== b && isNaN(b) && a[b]) return a[b];
            for (var c = ia(a), d = c.next(); !d.done; d = c.next()) if (d = d.value, (d.getAttribute("id") || d.getAttribute("name")) == b) return d;
            return null
        };
        return a
    }

    function y(a, b, c, d) {
        c = void 0 === c ? "" : c;
        for (var e in b) {
            var f = b[e];
            if (!(d && 0 <= d.indexOf(e))) {
                f.configurable = !0;
                var g = c + e;
                if (f.value) a[g] = f.value; else try {
                    Object.defineProperty(a, g, f)
                } catch (h) {
                }
            }
        }
    }

    function z(a) {
        var b = {};
        Object.getOwnPropertyNames(a).forEach(function (c) {
            b[c] = Object.getOwnPropertyDescriptor(a, c)
        });
        return b
    };var wa = [], xa;

    function ya(a) {
        xa || (xa = !0, sa(za));
        wa.push(a)
    }

    function za() {
        xa = !1;
        for (var a = !!wa.length; wa.length;) wa.shift()();
        return a
    }

    za.list = wa;

    function Aa() {
        this.a = !1;
        this.addedNodes = [];
        this.removedNodes = [];
        this.L = new Set
    }

    function Ba(a) {
        a.a || (a.a = !0, sa(function () {
            a.flush()
        }))
    }

    Aa.prototype.flush = function () {
        if (this.a) {
            this.a = !1;
            var a = this.takeRecords();
            a.length && this.L.forEach(function (b) {
                b(a)
            })
        }
    };
    Aa.prototype.takeRecords = function () {
        if (this.addedNodes.length || this.removedNodes.length) {
            var a = [{addedNodes: this.addedNodes, removedNodes: this.removedNodes}];
            this.addedNodes = [];
            this.removedNodes = [];
            return a
        }
        return []
    };

    function Ca(a, b) {
        var c = q(a);
        c.A || (c.A = new Aa);
        c.A.L.add(b);
        var d = c.A;
        return {
            la: b, oa: d, na: a, takeRecords: function () {
                return d.takeRecords()
            }
        }
    }

    function Da(a) {
        var b = a && a.oa;
        b && (b.L.delete(a.la), b.L.size || (q(a.na).A = null))
    }

    function Ea(a, b) {
        var c = b.getRootNode();
        return a.map(function (a) {
            var b = c === a.target.getRootNode();
            if (b && a.addedNodes) {
                if (b = Array.from(a.addedNodes).filter(function (a) {
                    return c === a.getRootNode()
                }), b.length) return a = Object.create(a), Object.defineProperty(a, "addedNodes", {
                    value: b,
                    configurable: !0
                }), a
            } else if (b) return a
        }).filter(function (a) {
            return a
        })
    };var Fa = /[&\u00A0"]/g, Ga = /[&\u00A0<>]/g;

    function Ha(a) {
        switch (a) {
            case "&":
                return "&amp;";
            case "<":
                return "&lt;";
            case ">":
                return "&gt;";
            case '"':
                return "&quot;";
            case "\u00a0":
                return "&nbsp;"
        }
    }

    function Ia(a) {
        for (var b = {}, c = 0; c < a.length; c++) b[a[c]] = !0;
        return b
    }

    var Ja = Ia("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),
        Ka = Ia("style script xmp iframe noembed noframes plaintext noscript".split(" "));

    function La(a, b) {
        "template" === a.localName && (a = a.content);
        for (var c = "", d = b ? b(a) : a.childNodes, e = 0, f = d.length, g = void 0; e < f && (g = d[e]); e++) {
            a:{
                var h = g;
                var k = a, l = b;
                switch (h.nodeType) {
                    case Node.ELEMENT_NODE:
                        k = h.localName;
                        for (var m = "<" + k, t = h.attributes, C = 0, J; J = t[C]; C++) m += " " + J.name + '="' + J.value.replace(Fa, Ha) + '"';
                        m += ">";
                        h = Ja[k] ? m : m + La(h, l) + "</" + k + ">";
                        break a;
                    case Node.TEXT_NODE:
                        h = h.data;
                        h = k && Ka[k.localName] ? h : h.replace(Ga, Ha);
                        break a;
                    case Node.COMMENT_NODE:
                        h = "\x3c!--" + h.data + "--\x3e";
                        break a;
                    default:
                        throw window.console.error(h),
                            Error("not implemented");
                }
            }
            c += h
        }
        return c
    };var Ma = u.i, Na = {
        querySelector: function (a) {
            return this.__shady_native_querySelector(a)
        }, querySelectorAll: function (a) {
            return this.__shady_native_querySelectorAll(a)
        }
    }, Ra = {};

    function Sa(a) {
        Ra[a] = function (b) {
            return b["__shady_native_" + a]
        }
    }

    function Ta(a, b) {
        y(a, b, "__shady_native_");
        for (var c in b) Sa(c)
    }

    function A(a, b) {
        b = void 0 === b ? [] : b;
        for (var c = 0; c < b.length; c++) {
            var d = b[c], e = Object.getOwnPropertyDescriptor(a, d);
            e && (Object.defineProperty(a, "__shady_native_" + d, e), e.value ? Na[d] || (Na[d] = e.value) : Sa(d))
        }
    }

    var B = document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, !1),
        E = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT, null, !1),
        Ua = document.implementation.createHTMLDocument("inert");

    function Va(a) {
        for (var b; b = a.__shady_native_firstChild;) a.__shady_native_removeChild(b)
    }

    var Wa = ["firstElementChild", "lastElementChild", "children", "childElementCount"],
        Xa = ["querySelector", "querySelectorAll"];

    function Ya() {
        var a = ["dispatchEvent", "addEventListener", "removeEventListener"];
        window.EventTarget ? A(window.EventTarget.prototype, a) : (A(Node.prototype, a), A(Window.prototype, a));
        Ma ? A(Node.prototype, "parentNode firstChild lastChild previousSibling nextSibling childNodes parentElement textContent".split(" ")) : Ta(Node.prototype, {
            parentNode: {
                get: function () {
                    B.currentNode = this;
                    return B.parentNode()
                }
            }, firstChild: {
                get: function () {
                    B.currentNode = this;
                    return B.firstChild()
                }
            }, lastChild: {
                get: function () {
                    B.currentNode =
                        this;
                    return B.lastChild()
                }
            }, previousSibling: {
                get: function () {
                    B.currentNode = this;
                    return B.previousSibling()
                }
            }, nextSibling: {
                get: function () {
                    B.currentNode = this;
                    return B.nextSibling()
                }
            }, childNodes: {
                get: function () {
                    var a = [];
                    B.currentNode = this;
                    for (var c = B.firstChild(); c;) a.push(c), c = B.nextSibling();
                    return a
                }
            }, parentElement: {
                get: function () {
                    E.currentNode = this;
                    return E.parentNode()
                }
            }, textContent: {
                get: function () {
                    switch (this.nodeType) {
                        case Node.ELEMENT_NODE:
                        case Node.DOCUMENT_FRAGMENT_NODE:
                            for (var a = document.createTreeWalker(this,
                                NodeFilter.SHOW_TEXT, null, !1), c = "", d; d = a.nextNode();) c += d.nodeValue;
                            return c;
                        default:
                            return this.nodeValue
                    }
                }, set: function (a) {
                    if ("undefined" === typeof a || null === a) a = "";
                    switch (this.nodeType) {
                        case Node.ELEMENT_NODE:
                        case Node.DOCUMENT_FRAGMENT_NODE:
                            Va(this);
                            (0 < a.length || this.nodeType === Node.ELEMENT_NODE) && this.__shady_native_insertBefore(document.createTextNode(a), void 0);
                            break;
                        default:
                            this.nodeValue = a
                    }
                }
            }
        });
        A(Node.prototype, "appendChild insertBefore removeChild replaceChild cloneNode contains".split(" "));
        a = {
            firstElementChild: {
                get: function () {
                    E.currentNode = this;
                    return E.firstChild()
                }
            }, lastElementChild: {
                get: function () {
                    E.currentNode = this;
                    return E.lastChild()
                }
            }, children: {
                get: function () {
                    var a = [];
                    E.currentNode = this;
                    for (var c = E.firstChild(); c;) a.push(c), c = E.nextSibling();
                    return va(a)
                }
            }, childElementCount: {
                get: function () {
                    return this.children ? this.children.length : 0
                }
            }
        };
        Ma ? (A(Element.prototype, Wa), A(Element.prototype, ["previousElementSibling", "nextElementSibling", "innerHTML"]), Object.getOwnPropertyDescriptor(HTMLElement.prototype,
            "children") && A(HTMLElement.prototype, ["children"]), Object.getOwnPropertyDescriptor(HTMLElement.prototype, "innerHTML") && A(HTMLElement.prototype, ["innerHTML"])) : (Ta(Element.prototype, a), Ta(Element.prototype, {
            previousElementSibling: {
                get: function () {
                    E.currentNode = this;
                    return E.previousSibling()
                }
            }, nextElementSibling: {
                get: function () {
                    E.currentNode = this;
                    return E.nextSibling()
                }
            }, innerHTML: {
                get: function () {
                    return La(this, function (a) {
                        return a.__shady_native_childNodes
                    })
                }, set: function (a) {
                    var b = "template" === this.localName ?
                        this.content : this;
                    Va(b);
                    var d = this.localName || "div";
                    d = this.namespaceURI && this.namespaceURI !== Ua.namespaceURI ? Ua.createElementNS(this.namespaceURI, d) : Ua.createElement(d);
                    d.innerHTML = a;
                    for (a = "template" === this.localName ? d.content : d; d = a.__shady_native_firstChild;) b.__shady_native_insertBefore(d, void 0)
                }
            }
        }));
        A(Element.prototype, "setAttribute getAttribute hasAttribute removeAttribute focus blur".split(" "));
        A(Element.prototype, Xa);
        A(HTMLElement.prototype, ["focus", "blur", "contains"]);
        Ma && A(HTMLElement.prototype,
            ["parentElement", "children", "innerHTML"]);
        window.HTMLTemplateElement && A(window.HTMLTemplateElement.prototype, ["innerHTML"]);
        Ma ? A(DocumentFragment.prototype, Wa) : Ta(DocumentFragment.prototype, a);
        A(DocumentFragment.prototype, Xa);
        Ma ? (A(Document.prototype, Wa), A(Document.prototype, ["activeElement"])) : Ta(Document.prototype, a);
        A(Document.prototype, ["importNode", "getElementById"]);
        A(Document.prototype, Xa)
    };var Za = z({
        get childNodes() {
            return this.__shady_childNodes
        }, get firstChild() {
            return this.__shady_firstChild
        }, get lastChild() {
            return this.__shady_lastChild
        }, get textContent() {
            return this.__shady_textContent
        }, set textContent(a) {
            this.__shady_textContent = a
        }, get childElementCount() {
            return this.__shady_childElementCount
        }, get children() {
            return this.__shady_children
        }, get firstElementChild() {
            return this.__shady_firstElementChild
        }, get lastElementChild() {
            return this.__shady_lastElementChild
        }, get innerHTML() {
            return this.__shady_innerHTML
        },
        set innerHTML(a) {
            return this.__shady_innerHTML = a
        }, get shadowRoot() {
            return this.__shady_shadowRoot
        }
    }), $a = z({
        get parentElement() {
            return this.__shady_parentElement
        }, get parentNode() {
            return this.__shady_parentNode
        }, get nextSibling() {
            return this.__shady_nextSibling
        }, get previousSibling() {
            return this.__shady_previousSibling
        }, get nextElementSibling() {
            return this.__shady_nextElementSibling
        }, get previousElementSibling() {
            return this.__shady_previousElementSibling
        }, get className() {
            return this.__shady_className
        },
        set className(a) {
            return this.__shady_className = a
        }
    }), ab;
    for (ab in Za) Za[ab].enumerable = !1;
    for (var bb in $a) $a[bb].enumerable = !1;
    var cb = u.i || u.C, db = cb ? function () {
    } : function (a) {
        var b = q(a);
        b.ba || (b.ba = !0, y(a, $a))
    }, eb = cb ? function () {
    } : function (a) {
        var b = q(a);
        b.aa || (b.aa = !0, y(a, Za))
    };
    var fb = "__eventWrappers" + Date.now(), gb = function () {
        var a = Object.getOwnPropertyDescriptor(Event.prototype, "composed");
        return a ? function (b) {
            return a.get.call(b)
        } : null
    }(), hb = {
        blur: !0,
        focus: !0,
        focusin: !0,
        focusout: !0,
        click: !0,
        dblclick: !0,
        mousedown: !0,
        mouseenter: !0,
        mouseleave: !0,
        mousemove: !0,
        mouseout: !0,
        mouseover: !0,
        mouseup: !0,
        wheel: !0,
        beforeinput: !0,
        input: !0,
        keydown: !0,
        keyup: !0,
        compositionstart: !0,
        compositionupdate: !0,
        compositionend: !0,
        touchstart: !0,
        touchend: !0,
        touchmove: !0,
        touchcancel: !0,
        pointerover: !0,
        pointerenter: !0,
        pointerdown: !0,
        pointermove: !0,
        pointerup: !0,
        pointercancel: !0,
        pointerout: !0,
        pointerleave: !0,
        gotpointercapture: !0,
        lostpointercapture: !0,
        dragstart: !0,
        drag: !0,
        dragenter: !0,
        dragleave: !0,
        dragover: !0,
        drop: !0,
        dragend: !0,
        DOMActivate: !0,
        DOMFocusIn: !0,
        DOMFocusOut: !0,
        keypress: !0
    }, ib = {
        DOMAttrModified: !0,
        DOMAttributeNameChanged: !0,
        DOMCharacterDataModified: !0,
        DOMElementNameChanged: !0,
        DOMNodeInserted: !0,
        DOMNodeInsertedIntoDocument: !0,
        DOMNodeRemoved: !0,
        DOMNodeRemovedFromDocument: !0,
        DOMSubtreeModified: !0
    };

    function jb(a) {
        return a instanceof Node ? a.__shady_getRootNode() : a
    }

    function kb(a, b) {
        var c = [], d = a;
        for (a = jb(a); d;) c.push(d), d.__shady_assignedSlot ? d = d.__shady_assignedSlot : d.nodeType === Node.DOCUMENT_FRAGMENT_NODE && d.host && (b || d !== a) ? d = d.host : d = d.__shady_parentNode;
        c[c.length - 1] === document && c.push(window);
        return c
    }

    function lb(a) {
        a.__composedPath || (a.__composedPath = kb(a.target, !0));
        return a.__composedPath
    }

    function mb(a, b) {
        if (!w) return a;
        a = kb(a, !0);
        for (var c = 0, d, e = void 0, f, g = void 0; c < b.length; c++) if (d = b[c], f = jb(d), f !== e && (g = a.indexOf(f), e = f), !w(f) || -1 < g) return d
    }

    function nb(a) {
        function b(b, d) {
            b = new a(b, d);
            b.__composed = d && !!d.composed;
            return b
        }

        b.__proto__ = a;
        b.prototype = a.prototype;
        return b
    }

    var ob = {focus: !0, blur: !0};

    function pb(a) {
        return a.__target !== a.target || a.__relatedTarget !== a.relatedTarget
    }

    function qb(a, b, c) {
        if (c = b.__handlers && b.__handlers[a.type] && b.__handlers[a.type][c]) for (var d = 0, e; (e = c[d]) && (!pb(a) || a.target !== a.relatedTarget) && (e.call(b, a), !a.__immediatePropagationStopped); d++) ;
    }

    function rb(a) {
        var b = a.composedPath();
        Object.defineProperty(a, "currentTarget", {
            get: function () {
                return d
            }, configurable: !0
        });
        for (var c = b.length - 1; 0 <= c; c--) {
            var d = b[c];
            qb(a, d, "capture");
            if (a.R) return
        }
        Object.defineProperty(a, "eventPhase", {
            get: function () {
                return Event.AT_TARGET
            }
        });
        var e;
        for (c = 0; c < b.length; c++) {
            d = b[c];
            var f = r(d);
            f = f && f.root;
            if (0 === c || f && f === e) if (qb(a, d, "bubble"), d !== window && (e = d.__shady_getRootNode()), a.R) break
        }
    }

    function sb(a, b, c, d, e, f) {
        for (var g = 0; g < a.length; g++) {
            var h = a[g], k = h.type, l = h.capture, m = h.once, t = h.passive;
            if (b === h.node && c === k && d === l && e === m && f === t) return g
        }
        return -1
    }

    function tb(a, b, c) {
        if (b) {
            var d = typeof b;
            if ("function" === d || "object" === d) if ("object" !== d || b.handleEvent && "function" === typeof b.handleEvent) {
                if (ib[a]) return this.__shady_native_addEventListener(a, b, c);
                if (c && "object" === typeof c) {
                    var e = !!c.capture;
                    var f = !!c.once;
                    var g = !!c.passive
                } else e = !!c, g = f = !1;
                var h = c && c.S || this, k = b[fb];
                if (k) {
                    if (-1 < sb(k, h, a, e, f, g)) return
                } else b[fb] = [];
                k = function (e) {
                    f && this.__shady_removeEventListener(a, b, c);
                    e.__target || ub(e);
                    if (h !== this) {
                        var g = Object.getOwnPropertyDescriptor(e, "currentTarget");
                        Object.defineProperty(e, "currentTarget", {
                            get: function () {
                                return h
                            }, configurable: !0
                        })
                    }
                    e.__previousCurrentTarget = e.currentTarget;
                    if (!w(h) || -1 != e.composedPath().indexOf(h)) if (e.composed || -1 < e.composedPath().indexOf(h)) if (pb(e) && e.target === e.relatedTarget) e.eventPhase === Event.BUBBLING_PHASE && e.stopImmediatePropagation(); else if (e.eventPhase === Event.CAPTURING_PHASE || e.bubbles || e.target === h || h instanceof Window) {
                        var k = "function" === d ? b.call(h, e) : b.handleEvent && b.handleEvent(e);
                        h !== this && (g ? (Object.defineProperty(e,
                            "currentTarget", g), g = null) : delete e.currentTarget);
                        return k
                    }
                };
                b[fb].push({node: h, type: a, capture: e, once: f, passive: g, Ka: k});
                ob[a] ? (this.__handlers = this.__handlers || {}, this.__handlers[a] = this.__handlers[a] || {
                    capture: [],
                    bubble: []
                }, this.__handlers[a][e ? "capture" : "bubble"].push(k)) : this.__shady_native_addEventListener(a, k, c)
            }
        }
    }

    function vb(a, b, c) {
        if (b) {
            if (ib[a]) return this.__shady_native_removeEventListener(a, b, c);
            if (c && "object" === typeof c) {
                var d = !!c.capture;
                var e = !!c.once;
                var f = !!c.passive
            } else d = !!c, f = e = !1;
            var g = c && c.S || this, h = void 0;
            var k = null;
            try {
                k = b[fb]
            } catch (l) {
            }
            k && (e = sb(k, g, a, d, e, f), -1 < e && (h = k.splice(e, 1)[0].Ka, k.length || (b[fb] = void 0)));
            this.__shady_native_removeEventListener(a, h || b, c);
            h && ob[a] && this.__handlers && this.__handlers[a] && (a = this.__handlers[a][d ? "capture" : "bubble"], h = a.indexOf(h), -1 < h && a.splice(h, 1))
        }
    }

    function wb() {
        for (var a in ob) window.__shady_native_addEventListener(a, function (a) {
            a.__target || (ub(a), rb(a))
        }, !0)
    }

    var xb = z({
        get composed() {
            void 0 === this.__composed && (gb ? this.__composed = "focusin" === this.type || "focusout" === this.type || gb(this) : !1 !== this.isTrusted && (this.__composed = hb[this.type]));
            return this.__composed || !1
        }, composedPath: function () {
            this.__composedPath || (this.__composedPath = kb(this.__target, this.composed));
            return this.__composedPath
        }, get target() {
            return mb(this.currentTarget || this.__previousCurrentTarget, this.composedPath())
        }, get relatedTarget() {
            if (!this.__relatedTarget) return null;
            this.__relatedTargetComposedPath ||
            (this.__relatedTargetComposedPath = kb(this.__relatedTarget, !0));
            return mb(this.currentTarget || this.__previousCurrentTarget, this.__relatedTargetComposedPath)
        }, stopPropagation: function () {
            Event.prototype.stopPropagation.call(this);
            this.R = !0
        }, stopImmediatePropagation: function () {
            Event.prototype.stopImmediatePropagation.call(this);
            this.R = this.__immediatePropagationStopped = !0
        }
    });

    function ub(a) {
        a.__target = a.target;
        a.__relatedTarget = a.relatedTarget;
        if (u.i) {
            var b = Object.getPrototypeOf(a);
            if (!Object.hasOwnProperty(b, "__shady_patchedProto")) {
                var c = Object.create(b);
                c.__shady_sourceProto = b;
                y(c, xb);
                b.__shady_patchedProto = c
            }
            a.__proto__ = b.__shady_patchedProto
        } else y(a, xb)
    }

    var yb = nb(Event), zb = nb(CustomEvent), Ab = nb(MouseEvent);

    function Bb() {
        if (!gb && Object.getOwnPropertyDescriptor(Event.prototype, "isTrusted")) {
            var a = function () {
                var a = new MouseEvent("click", {bubbles: !0, cancelable: !0, composed: !0});
                this.__shady_dispatchEvent(a)
            };
            Element.prototype.click ? Element.prototype.click = a : HTMLElement.prototype.click && (HTMLElement.prototype.click = a)
        }
    }

    var Cb = Object.getOwnPropertyNames(Document.prototype).filter(function (a) {
        return "on" === a.substring(0, 2)
    });

    function Db(a, b) {
        return {index: a, F: [], K: b}
    }

    function Eb(a, b, c, d) {
        var e = 0, f = 0, g = 0, h = 0, k = Math.min(b - e, d - f);
        if (0 == e && 0 == f) a:{
            for (g = 0; g < k; g++) if (a[g] !== c[g]) break a;
            g = k
        }
        if (b == a.length && d == c.length) {
            h = a.length;
            for (var l = c.length, m = 0; m < k - g && Fb(a[--h], c[--l]);) m++;
            h = m
        }
        e += g;
        f += g;
        b -= h;
        d -= h;
        if (0 == b - e && 0 == d - f) return [];
        if (e == b) {
            for (b = Db(e, 0); f < d;) b.F.push(c[f++]);
            return [b]
        }
        if (f == d) return [Db(e, b - e)];
        k = e;
        g = f;
        d = d - g + 1;
        h = b - k + 1;
        b = Array(d);
        for (l = 0; l < d; l++) b[l] = Array(h), b[l][0] = l;
        for (l = 0; l < h; l++) b[0][l] = l;
        for (l = 1; l < d; l++) for (m = 1; m < h; m++) if (a[k + m - 1] === c[g + l - 1]) b[l][m] =
            b[l - 1][m - 1]; else {
            var t = b[l - 1][m] + 1, C = b[l][m - 1] + 1;
            b[l][m] = t < C ? t : C
        }
        k = b.length - 1;
        g = b[0].length - 1;
        d = b[k][g];
        for (a = []; 0 < k || 0 < g;) 0 == k ? (a.push(2), g--) : 0 == g ? (a.push(3), k--) : (h = b[k - 1][g - 1], l = b[k - 1][g], m = b[k][g - 1], t = l < m ? l < h ? l : h : m < h ? m : h, t == h ? (h == d ? a.push(0) : (a.push(1), d = h), k--, g--) : t == l ? (a.push(3), k--, d = l) : (a.push(2), g--, d = m));
        a.reverse();
        b = void 0;
        k = [];
        for (g = 0; g < a.length; g++) switch (a[g]) {
            case 0:
                b && (k.push(b), b = void 0);
                e++;
                f++;
                break;
            case 1:
                b || (b = Db(e, 0));
                b.K++;
                e++;
                b.F.push(c[f]);
                f++;
                break;
            case 2:
                b || (b = Db(e, 0));
                b.K++;
                e++;
                break;
            case 3:
                b || (b = Db(e, 0)), b.F.push(c[f]), f++
        }
        b && k.push(b);
        return k
    }

    function Fb(a, b) {
        return a === b
    };

    function Gb(a, b, c) {
        db(a);
        c = c || null;
        var d = q(a), e = q(b), f = c ? q(c) : null;
        d.previousSibling = c ? f.previousSibling : b.__shady_lastChild;
        if (f = r(d.previousSibling)) f.nextSibling = a;
        if (f = r(d.nextSibling = c)) f.previousSibling = a;
        d.parentNode = b;
        c ? c === e.firstChild && (e.firstChild = a) : (e.lastChild = a, e.firstChild || (e.firstChild = a));
        e.childNodes = null
    }

    function Hb(a, b, c) {
        eb(b);
        var d = q(b);
        void 0 !== d.firstChild && (d.childNodes = null);
        if (a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
            d = a.__shady_childNodes;
            for (var e = 0; e < d.length; e++) Gb(d[e], b, c);
            a = q(a);
            b = void 0 !== a.firstChild ? null : void 0;
            a.firstChild = a.lastChild = b;
            a.childNodes = b
        } else Gb(a, b, c)
    }

    function Ib(a, b) {
        var c = q(a);
        b = q(b);
        a === b.firstChild && (b.firstChild = c.nextSibling);
        a === b.lastChild && (b.lastChild = c.previousSibling);
        a = c.previousSibling;
        var d = c.nextSibling;
        a && (q(a).nextSibling = d);
        d && (q(d).previousSibling = a);
        c.parentNode = c.previousSibling = c.nextSibling = void 0;
        void 0 !== b.childNodes && (b.childNodes = null)
    }

    function Jb(a) {
        var b = q(a);
        if (void 0 === b.firstChild) {
            b.childNodes = null;
            var c = b.firstChild = a.__shady_native_firstChild || null;
            b.lastChild = a.__shady_native_lastChild || null;
            eb(a);
            b = c;
            for (c = void 0; b; b = b.__shady_native_nextSibling) {
                var d = q(b);
                d.parentNode = a;
                d.nextSibling = b.__shady_native_nextSibling || null;
                d.previousSibling = c || null;
                c = b;
                db(b)
            }
        }
    };var Kb = null;

    function F() {
        Kb || (Kb = window.ShadyCSS && window.ShadyCSS.ScopingShim);
        return Kb || null
    }

    function Lb(a, b) {
        var c = F();
        c && c.unscopeNode(a, b)
    }

    function Nb(a, b) {
        var c = F();
        if (!c) return !0;
        if (a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
            c = !0;
            a = a.__shady_childNodes;
            for (var d = 0; c && d < a.length; d++) c = c && Nb(a[d], b);
            return c
        }
        return a.nodeType !== Node.ELEMENT_NODE ? !0 : c.currentScopeForNode(a) === b
    }

    function Ob(a) {
        if (a.nodeType !== Node.ELEMENT_NODE) return "";
        var b = F();
        return b ? b.currentScopeForNode(a) : ""
    }

    function Pb(a, b) {
        if (a) {
            a.nodeType === Node.ELEMENT_NODE && b(a);
            a = a.__shady_childNodes;
            for (var c = 0, d; c < a.length; c++) d = a[c], d.nodeType === Node.ELEMENT_NODE && Pb(d, b)
        }
    };var Qb = window.document, Rb = u.da, Sb = Object.getOwnPropertyDescriptor(Node.prototype, "isConnected"),
        Tb = Sb && Sb.get;

    function Ub(a) {
        for (var b; b = a.__shady_firstChild;) a.__shady_removeChild(b)
    }

    function Vb(a) {
        var b = r(a);
        if (b && void 0 !== b.D) {
            b = a.__shady_childNodes;
            for (var c = 0, d = b.length, e = void 0; c < d && (e = b[c]); c++) Vb(e)
        }
        if (a = r(a)) a.D = void 0
    }

    function Wb(a) {
        var b = a;
        a && "slot" === a.localName && (b = (b = (b = r(a)) && b.v) && b.length ? b[0] : Wb(a.__shady_nextSibling));
        return b
    }

    function Xb(a, b, c) {
        if (a = (a = r(a)) && a.A) b && a.addedNodes.push(b), c && a.removedNodes.push(c), Ba(a)
    }

    var Zb = z({
        get parentNode() {
            var a = r(this);
            a = a && a.parentNode;
            return void 0 !== a ? a : this.__shady_native_parentNode
        }, get firstChild() {
            var a = r(this);
            a = a && a.firstChild;
            return void 0 !== a ? a : this.__shady_native_firstChild
        }, get lastChild() {
            var a = r(this);
            a = a && a.lastChild;
            return void 0 !== a ? a : this.__shady_native_lastChild
        }, get nextSibling() {
            var a = r(this);
            a = a && a.nextSibling;
            return void 0 !== a ? a : this.__shady_native_nextSibling
        }, get previousSibling() {
            var a = r(this);
            a = a && a.previousSibling;
            return void 0 !== a ? a : this.__shady_native_previousSibling
        },
        get childNodes() {
            if (v(this)) {
                var a = r(this);
                if (!a.childNodes) {
                    a.childNodes = [];
                    for (var b = this.__shady_firstChild; b; b = b.__shady_nextSibling) a.childNodes.push(b)
                }
                var c = a.childNodes
            } else c = this.__shady_native_childNodes;
            c.item = function (a) {
                return c[a]
            };
            return c
        }, get parentElement() {
            var a = r(this);
            (a = a && a.parentNode) && a.nodeType !== Node.ELEMENT_NODE && (a = null);
            return void 0 !== a ? a : this.__shady_native_parentElement
        }, get isConnected() {
            if (Tb && Tb.call(this)) return !0;
            if (this.nodeType == Node.DOCUMENT_FRAGMENT_NODE) return !1;
            var a = this.ownerDocument;
            if (ta) {
                if (a.__shady_native_contains(this)) return !0
            } else if (a.documentElement && a.documentElement.__shady_native_contains(this)) return !0;
            for (a = this; a && !(a instanceof Document);) a = a.__shady_parentNode || (w(a) ? a.host : void 0);
            return !!(a && a instanceof Document)
        }, get textContent() {
            if (v(this)) {
                for (var a = [], b = 0, c = this.__shady_childNodes, d; d = c[b]; b++) d.nodeType !== Node.COMMENT_NODE && a.push(d.__shady_textContent);
                return a.join("")
            }
            return this.__shady_native_textContent
        }, set textContent(a) {
            if ("undefined" ===
                typeof a || null === a) a = "";
            switch (this.nodeType) {
                case Node.ELEMENT_NODE:
                case Node.DOCUMENT_FRAGMENT_NODE:
                    if (!v(this) && u.i) {
                        var b = this.__shady_firstChild;
                        (b != this.__shady_lastChild || b && b.nodeType != Node.TEXT_NODE) && Ub(this);
                        this.__shady_native_textContent = a
                    } else Ub(this), (0 < a.length || this.nodeType === Node.ELEMENT_NODE) && this.__shady_insertBefore(document.createTextNode(a));
                    break;
                default:
                    this.nodeValue = a
            }
        }, insertBefore: function (a, b) {
            if (this.ownerDocument !== Qb && a.ownerDocument !== Qb) return this.__shady_native_insertBefore(a,
                b), a;
            if (a === this) throw Error("Failed to execute 'appendChild' on 'Node': The new child element contains the parent.");
            if (b) {
                var c = r(b);
                c = c && c.parentNode;
                if (void 0 !== c && c !== this || void 0 === c && b.__shady_native_parentNode !== this) throw Error("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");
            }
            if (b === a) return a;
            var d = [], e = (c = G(this)) ? c.host.localName : Ob(this), f = a.__shady_parentNode;
            if (f) {
                var g = Ob(a);
                f.__shady_removeChild(a, !!c ||
                    !G(a))
            }
            f = !0;
            var h = (!Rb || void 0 === a.__noInsertionPoint) && !Nb(a, e),
                k = c && !a.__noInsertionPoint && (!Rb || a.nodeType === Node.DOCUMENT_FRAGMENT_NODE);
            if (k || h) h && (g = g || Ob(a)), Pb(a, function (a) {
                k && "slot" === a.localName && d.push(a);
                if (h) {
                    var b = g;
                    F() && (b && Lb(a, b), (b = F()) && b.scopeNode(a, e))
                }
            });
            if ("slot" === this.localName || d.length) d.length && (c.c = c.c || [], c.a = c.a || [], c.b = c.b || {}, c.c.push.apply(c.c, d instanceof Array ? d : ja(ia(d)))), c && H(c);
            v(this) && (Hb(a, this, b), c = r(this), ma(this) ? (H(c.root), f = !1) : c.root && (f = !1));
            f ? (c =
                w(this) ? this.host : this, b ? (b = Wb(b), c.__shady_native_insertBefore(a, b)) : c.__shady_native_appendChild(a)) : a.ownerDocument !== this.ownerDocument && this.ownerDocument.adoptNode(a);
            Xb(this, a);
            return a
        }, appendChild: function (a) {
            return this.__shady_insertBefore(a)
        }, removeChild: function (a, b) {
            b = void 0 === b ? !1 : b;
            if (this.ownerDocument !== Qb) return this.__shady_native_removeChild(a);
            if (a.__shady_parentNode !== this) throw Error("The node to be removed is not a child of this node: " + a);
            var c = G(a), d = c && Yb(c, a), e = r(this);
            if (v(this) && (Ib(a, this), ma(this))) {
                H(e.root);
                var f = !0
            }
            if (F() && !b && c) {
                var g = Ob(a);
                Pb(a, function (a) {
                    Lb(a, g)
                })
            }
            Vb(a);
            c && ((b = this && "slot" === this.localName) && (f = !0), (d || b) && H(c));
            f || (f = w(this) ? this.host : this, (!e.root && "slot" !== a.localName || f === a.__shady_native_parentNode) && f.__shady_native_removeChild(a));
            Xb(this, null, a);
            return a
        }, replaceChild: function (a, b) {
            this.__shady_insertBefore(a, b);
            this.__shady_removeChild(b);
            return a
        }, cloneNode: function (a) {
            if ("template" == this.localName) return this.__shady_native_cloneNode(a);
            var b = this.__shady_native_cloneNode(!1);
            if (a && b.nodeType !== Node.ATTRIBUTE_NODE) {
                a = this.__shady_childNodes;
                for (var c = 0, d; c < a.length; c++) d = a[c].__shady_cloneNode(!0), b.__shady_appendChild(d)
            }
            return b
        }, getRootNode: function (a) {
            if (this && this.nodeType) {
                var b = q(this), c = b.D;
                void 0 === c && (w(this) ? (c = this, b.D = c) : (c = (c = this.__shady_parentNode) ? c.__shady_getRootNode(a) : this, document.documentElement.__shady_native_contains(this) && (b.D = c)));
                return c
            }
        }, contains: function (a) {
            return ua(this, a)
        }
    });

    function $b(a, b, c) {
        var d = [];
        ac(a.__shady_childNodes, b, c, d);
        return d
    }

    function ac(a, b, c, d) {
        for (var e = 0, f = a.length, g = void 0; e < f && (g = a[e]); e++) {
            var h;
            if (h = g.nodeType === Node.ELEMENT_NODE) {
                h = g;
                var k = b, l = c, m = d, t = k(h);
                t && m.push(h);
                l && l(t) ? h = t : (ac(h.__shady_childNodes, k, l, m), h = void 0)
            }
            if (h) break
        }
    }

    var I = z({
        get firstElementChild() {
            var a = r(this);
            if (a && void 0 !== a.firstChild) {
                for (a = this.__shady_firstChild; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_nextSibling;
                return a
            }
            return this.__shady_native_firstElementChild
        }, get lastElementChild() {
            var a = r(this);
            if (a && void 0 !== a.lastChild) {
                for (a = this.__shady_lastChild; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_previousSibling;
                return a
            }
            return this.__shady_native_lastElementChild
        }, get children() {
            return v(this) ? va(Array.prototype.filter.call(this.__shady_childNodes,
                function (a) {
                    return a.nodeType === Node.ELEMENT_NODE
                })) : this.__shady_native_children
        }, get childElementCount() {
            var a = this.__shady_children;
            return a ? a.length : 0
        }
    }), bc = z({
        querySelector: function (a) {
            return $b(this, function (b) {
                return oa.call(b, a)
            }, function (a) {
                return !!a
            })[0] || null
        }, querySelectorAll: function (a, b) {
            if (b) {
                b = Array.prototype.slice.call(this.__shady_native_querySelectorAll(a));
                var c = this.__shady_getRootNode();
                return b.filter(function (a) {
                    return a.__shady_getRootNode() == c
                })
            }
            return $b(this, function (b) {
                return oa.call(b,
                    a)
            })
        }
    }), cc = u.da ? Object.assign({}, I) : I;
    Object.assign(I, bc);
    var dc = z({
        getElementById: function (a) {
            return "" === a ? null : $b(this, function (b) {
                return b.id == a
            }, function (a) {
                return !!a
            })[0] || null
        }
    });
    var ec = z({
        get activeElement() {
            var a = u.i ? document.__shady_native_activeElement : document.activeElement;
            if (!a || !a.nodeType) return null;
            var b = !!w(this);
            if (!(this === document || b && this.host !== a && this.host.__shady_native_contains(a))) return null;
            for (b = G(a); b && b !== this;) a = b.host, b = G(a);
            return this === document ? b ? null : a : b === this ? a : null
        }
    });
    var fc = document.implementation.createHTMLDocument("inert"), gc = z({
        get innerHTML() {
            return v(this) ? La("template" === this.localName ? this.content : this, function (a) {
                return a.__shady_childNodes
            }) : this.__shady_native_innerHTML
        }, set innerHTML(a) {
            if ("template" === this.localName) this.__shady_native_innerHTML = a; else {
                Ub(this);
                var b = this.localName || "div";
                b = this.namespaceURI && this.namespaceURI !== fc.namespaceURI ? fc.createElementNS(this.namespaceURI, b) : fc.createElement(b);
                for (u.i ? b.__shady_native_innerHTML = a : b.innerHTML =
                    a; a = b.__shady_firstChild;) this.__shady_insertBefore(a)
            }
        }
    });
    var hc = z({
        addEventListener: function (a, b, c) {
            "object" !== typeof c && (c = {capture: !!c});
            c.S = this;
            this.host.__shady_addEventListener(a, b, c)
        }, removeEventListener: function (a, b, c) {
            "object" !== typeof c && (c = {capture: !!c});
            c.S = this;
            this.host.__shady_removeEventListener(a, b, c)
        }
    });

    function ic(a, b) {
        y(a, hc, b);
        y(a, ec, b);
        y(a, gc, b);
        y(a, I, b);
        u.C && !b ? (y(a, Zb, b), y(a, dc, b)) : u.i || (y(a, $a), y(a, Za))
    };var jc = {}, K = u.deferConnectionCallbacks && "loading" === document.readyState, kc;

    function lc(a) {
        var b = [];
        do b.unshift(a); while (a = a.__shady_parentNode);
        return b
    }

    function mc(a, b, c) {
        if (a !== jc) throw new TypeError("Illegal constructor");
        this.ma = "ShadyRoot";
        this.host = b;
        this.mode = c && c.mode;
        Jb(b);
        a = q(b);
        a.root = this;
        a.ea = "closed" !== this.mode ? this : null;
        a = q(this);
        a.firstChild = a.lastChild = a.parentNode = a.nextSibling = a.previousSibling = null;
        a.childNodes = [];
        this.U = this.u = !1;
        this.c = this.b = this.a = null;
        if (u.preferPerformance) for (; a = b.__shady_native_firstChild;) b.__shady_native_removeChild(a); else H(this)
    }

    function H(a) {
        a.u || (a.u = !0, ya(function () {
            return nc(a)
        }))
    }

    function nc(a) {
        var b;
        if (b = a.u) {
            for (var c; a;) a:{
                a.u && (c = a), b = a;
                a = b.host.__shady_getRootNode();
                if (w(a) && (b = r(b.host)) && 0 < b.H) break a;
                a = void 0
            }
            b = c
        }
        (c = b) && c._renderSelf()
    }

    mc.prototype._renderSelf = function () {
        var a = K;
        K = !0;
        this.u = !1;
        if (this.a) {
            oc(this);
            for (var b = 0, c; b < this.a.length; b++) {
                c = this.a[b];
                var d = r(c), e = d.assignedNodes;
                d.assignedNodes = [];
                d.v = [];
                if (d.V = e) for (d = 0; d < e.length; d++) {
                    var f = r(e[d]);
                    f.J = f.assignedSlot;
                    f.assignedSlot === c && (f.assignedSlot = null)
                }
            }
            for (b = this.host.__shady_firstChild; b; b = b.__shady_nextSibling) pc(this, b);
            for (b = 0; b < this.a.length; b++) {
                c = this.a[b];
                e = r(c);
                if (!e.assignedNodes.length) for (d = c.__shady_firstChild; d; d = d.__shady_nextSibling) pc(this, d, c);
                (d = (d = r(c.__shady_parentNode)) && d.root) && (na(d) || d.u) && d._renderSelf();
                qc(this, e.v, e.assignedNodes);
                if (d = e.V) {
                    for (f = 0; f < d.length; f++) r(d[f]).J = null;
                    e.V = null;
                    d.length > e.assignedNodes.length && (e.M = !0)
                }
                e.M && (e.M = !1, rc(this, c))
            }
            c = this.a;
            b = [];
            for (e = 0; e < c.length; e++) d = c[e].__shady_parentNode, (f = r(d)) && f.root || !(0 > b.indexOf(d)) || b.push(d);
            for (c = 0; c < b.length; c++) {
                f = b[c];
                e = f === this ? this.host : f;
                d = [];
                f = f.__shady_childNodes;
                for (var g = 0; g < f.length; g++) {
                    var h = f[g];
                    if ("slot" == h.localName) {
                        h = r(h).v;
                        for (var k = 0; k <
                        h.length; k++) d.push(h[k])
                    } else d.push(h)
                }
                f = Array.prototype.slice.call(e.__shady_native_childNodes);
                g = Eb(d, d.length, f, f.length);
                k = h = 0;
                for (var l = void 0; h < g.length && (l = g[h]); h++) {
                    for (var m = 0, t = void 0; m < l.F.length && (t = l.F[m]); m++) t.__shady_native_parentNode === e && e.__shady_native_removeChild(t), f.splice(l.index + k, 1);
                    k -= l.K
                }
                k = 0;
                for (l = void 0; k < g.length && (l = g[k]); k++) for (h = f[l.index], m = l.index; m < l.index + l.K; m++) t = d[m], e.__shady_native_insertBefore(t, h), f.splice(m, 0, t)
            }
        }
        if (!u.preferPerformance && !this.U) for (b =
                                                      this.host.__shady_childNodes, c = 0, e = b.length; c < e; c++) d = b[c], f = r(d), d.__shady_native_parentNode !== this.host || "slot" !== d.localName && f.assignedSlot || this.host.__shady_native_removeChild(d);
        this.U = !0;
        K = a;
        kc && kc()
    };

    function pc(a, b, c) {
        var d = q(b), e = d.J;
        d.J = null;
        c || (c = (a = a.b[b.__shady_slot || "__catchall"]) && a[0]);
        c ? (q(c).assignedNodes.push(b), d.assignedSlot = c) : d.assignedSlot = void 0;
        e !== d.assignedSlot && d.assignedSlot && (q(d.assignedSlot).M = !0)
    }

    function qc(a, b, c) {
        for (var d = 0, e = void 0; d < c.length && (e = c[d]); d++) if ("slot" == e.localName) {
            var f = r(e).assignedNodes;
            f && f.length && qc(a, b, f)
        } else b.push(c[d])
    }

    function rc(a, b) {
        b.__shady_native_dispatchEvent(new Event("slotchange"));
        b = r(b);
        b.assignedSlot && rc(a, b.assignedSlot)
    }

    function oc(a) {
        if (a.c && a.c.length) {
            for (var b = a.c, c, d = 0; d < b.length; d++) {
                var e = b[d];
                Jb(e);
                var f = e.__shady_parentNode;
                Jb(f);
                f = r(f);
                f.H = (f.H || 0) + 1;
                f = sc(e);
                a.b[f] ? (c = c || {}, c[f] = !0, a.b[f].push(e)) : a.b[f] = [e];
                a.a.push(e)
            }
            if (c) for (var g in c) a.b[g] = tc(a.b[g]);
            a.c = []
        }
    }

    function sc(a) {
        var b = a.name || a.getAttribute("name") || "__catchall";
        return a.ja = b
    }

    function tc(a) {
        return a.sort(function (a, c) {
            a = lc(a);
            for (var b = lc(c), e = 0; e < a.length; e++) {
                c = a[e];
                var f = b[e];
                if (c !== f) return a = Array.from(c.__shady_parentNode.__shady_childNodes), a.indexOf(c) - a.indexOf(f)
            }
        })
    }

    function Yb(a, b) {
        if (a.a) {
            oc(a);
            var c = a.b, d;
            for (d in c) for (var e = c[d], f = 0; f < e.length; f++) {
                var g = e[f];
                if (ua(b, g)) {
                    e.splice(f, 1);
                    var h = a.a.indexOf(g);
                    0 <= h && (a.a.splice(h, 1), (h = r(g.__shady_parentNode)) && h.H && h.H--);
                    f--;
                    g = r(g);
                    if (h = g.v) for (var k = 0; k < h.length; k++) {
                        var l = h[k], m = l.__shady_native_parentNode;
                        m && m.__shady_native_removeChild(l)
                    }
                    g.v = [];
                    g.assignedNodes = [];
                    h = !0
                }
            }
            return h
        }
    }

    function na(a) {
        oc(a);
        return !(!a.a || !a.a.length)
    }

    (function (a) {
        a.__proto__ = DocumentFragment.prototype;
        ic(a, "__shady_");
        ic(a);
        Object.defineProperties(a, {
            nodeType: {value: Node.DOCUMENT_FRAGMENT_NODE, configurable: !0},
            nodeName: {value: "#document-fragment", configurable: !0},
            nodeValue: {value: null, configurable: !0}
        });
        ["localName", "namespaceURI", "prefix"].forEach(function (b) {
            Object.defineProperty(a, b, {value: void 0, configurable: !0})
        });
        ["ownerDocument", "baseURI", "isConnected"].forEach(function (b) {
            Object.defineProperty(a, b, {
                get: function () {
                    return this.host[b]
                },
                configurable: !0
            })
        })
    })(mc.prototype);
    if (window.customElements && u.W && !u.preferPerformance) {
        var uc = new Map;
        kc = function () {
            var a = [];
            uc.forEach(function (b, c) {
                a.push([c, b])
            });
            uc.clear();
            for (var b = 0; b < a.length; b++) {
                var c = a[b][0];
                a[b][1] ? c.ha() : c.ia()
            }
        };
        K && document.addEventListener("readystatechange", function () {
            K = !1;
            kc()
        }, {once: !0});
        var vc = function (a, b, c) {
            var d = 0, e = "__isConnected" + d++;
            if (b || c) a.prototype.connectedCallback = a.prototype.ha = function () {
                K ? uc.set(this, !0) : this[e] || (this[e] = !0, b && b.call(this))
            }, a.prototype.disconnectedCallback = a.prototype.ia =
                function () {
                    K ? this.isConnected || uc.set(this, !1) : this[e] && (this[e] = !1, c && c.call(this))
                };
            return a
        }, wc = window.customElements.define;
        Object.defineProperty(window.CustomElementRegistry.prototype, "define", {
            value: function (a, b) {
                var c = b.prototype.connectedCallback, d = b.prototype.disconnectedCallback;
                wc.call(window.customElements, a, vc(b, c, d));
                b.prototype.connectedCallback = c;
                b.prototype.disconnectedCallback = d
            }
        })
    }

    function G(a) {
        a = a.__shady_getRootNode();
        if (w(a)) return a
    };

    function L(a) {
        this.node = a
    }

    n = L.prototype;
    n.addEventListener = function (a, b, c) {
        return this.node.__shady_addEventListener(a, b, c)
    };
    n.removeEventListener = function (a, b, c) {
        return this.node.__shady_removeEventListener(a, b, c)
    };
    n.appendChild = function (a) {
        return this.node.__shady_appendChild(a)
    };
    n.insertBefore = function (a, b) {
        return this.node.__shady_insertBefore(a, b)
    };
    n.removeChild = function (a) {
        return this.node.__shady_removeChild(a)
    };
    n.replaceChild = function (a, b) {
        return this.node.__shady_replaceChild(a, b)
    };
    n.cloneNode = function (a) {
        return this.node.__shady_cloneNode(a)
    };
    n.getRootNode = function (a) {
        return this.node.__shady_getRootNode(a)
    };
    n.contains = function (a) {
        return this.node.__shady_contains(a)
    };
    n.dispatchEvent = function (a) {
        return this.node.__shady_dispatchEvent(a)
    };
    n.setAttribute = function (a, b) {
        this.node.__shady_setAttribute(a, b)
    };
    n.getAttribute = function (a) {
        return this.node.__shady_native_getAttribute(a)
    };
    n.removeAttribute = function (a) {
        this.node.__shady_removeAttribute(a)
    };
    n.attachShadow = function (a) {
        return this.node.__shady_attachShadow(a)
    };
    n.focus = function () {
        this.node.__shady_native_focus()
    };
    n.blur = function () {
        this.node.__shady_blur()
    };
    n.importNode = function (a, b) {
        if (this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_importNode(a, b)
    };
    n.getElementById = function (a) {
        if (this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_getElementById(a)
    };
    n.querySelector = function (a) {
        return this.node.__shady_querySelector(a)
    };
    n.querySelectorAll = function (a, b) {
        return this.node.__shady_querySelectorAll(a, b)
    };
    n.assignedNodes = function (a) {
        if ("slot" === this.node.localName) return this.node.__shady_assignedNodes(a)
    };
    p.Object.defineProperties(L.prototype, {
        activeElement: {
            configurable: !0, enumerable: !0, get: function () {
                if (w(this.node) || this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_activeElement
            }
        }, _activeElement: {
            configurable: !0, enumerable: !0, get: function () {
                return this.activeElement
            }
        }, host: {
            configurable: !0, enumerable: !0, get: function () {
                if (w(this.node)) return this.node.host
            }
        }, parentNode: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_parentNode
            }
        }, firstChild: {
            configurable: !0, enumerable: !0,
            get: function () {
                return this.node.__shady_firstChild
            }
        }, lastChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_lastChild
            }
        }, nextSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_nextSibling
            }
        }, previousSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_previousSibling
            }
        }, childNodes: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_childNodes
            }
        }, parentElement: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_parentElement
            }
        },
        firstElementChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_firstElementChild
            }
        }, lastElementChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_lastElementChild
            }
        }, nextElementSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_nextElementSibling
            }
        }, previousElementSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_previousElementSibling
            }
        }, children: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_children
            }
        },
        childElementCount: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_childElementCount
            }
        }, shadowRoot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_shadowRoot
            }
        }, assignedSlot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_assignedSlot
            }
        }, isConnected: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_isConnected
            }
        }, innerHTML: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_innerHTML
            }, set: function (a) {
                this.node.__shady_innerHTML =
                    a
            }
        }, textContent: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_textContent
            }, set: function (a) {
                this.node.__shady_textContent = a
            }
        }, slot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_slot
            }, set: function (a) {
                this.node.__shady_slot = a
            }
        }
    });
    Cb.forEach(function (a) {
        Object.defineProperty(L.prototype, a, {
            get: function () {
                return this.node["__shady_" + a]
            }, set: function (b) {
                this.node["__shady_" + a] = b
            }, configurable: !0
        })
    });
    var xc = new WeakMap;

    function yc(a) {
        if (w(a) || a instanceof L) return a;
        var b = xc.get(a);
        b || (b = new L(a), xc.set(a, b));
        return b
    };var zc = z({
        dispatchEvent: function (a) {
            za();
            return this.__shady_native_dispatchEvent(a)
        }, addEventListener: tb, removeEventListener: vb
    });
    var Ac = z({
        get assignedSlot() {
            var a = this.__shady_parentNode;
            (a = a && a.__shady_shadowRoot) && nc(a);
            return (a = r(this)) && a.assignedSlot || null
        }
    });
    var Bc = window.document;

    function Cc(a, b) {
        if ("slot" === b) a = a.__shady_parentNode, ma(a) && H(r(a).root); else if ("slot" === a.localName && "name" === b && (b = G(a))) {
            if (b.a) {
                oc(b);
                var c = a.ja, d = sc(a);
                if (d !== c) {
                    c = b.b[c];
                    var e = c.indexOf(a);
                    0 <= e && c.splice(e, 1);
                    c = b.b[d] || (b.b[d] = []);
                    c.push(a);
                    1 < c.length && (b.b[d] = tc(c))
                }
            }
            H(b)
        }
    }

    var Dc = z({
        get previousElementSibling() {
            var a = r(this);
            if (a && void 0 !== a.previousSibling) {
                for (a = this.__shady_previousSibling; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_previousSibling;
                return a
            }
            return this.__shady_native_previousElementSibling
        }, get nextElementSibling() {
            var a = r(this);
            if (a && void 0 !== a.nextSibling) {
                for (a = this.__shady_nextSibling; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_nextSibling;
                return a
            }
            return this.__shady_native_nextElementSibling
        }, get slot() {
            return this.getAttribute("slot")
        },
        set slot(a) {
            this.__shady_setAttribute("slot", a)
        }, get shadowRoot() {
            var a = r(this);
            return a && a.ea || null
        }, get className() {
            return this.getAttribute("class") || ""
        }, set className(a) {
            this.__shady_setAttribute("class", a)
        }, setAttribute: function (a, b) {
            if (this.ownerDocument !== Bc) this.__shady_native_setAttribute(a, b); else {
                var c;
                (c = F()) && "class" === a ? (c.setElementClass(this, b), c = !0) : c = !1;
                c || (this.__shady_native_setAttribute(a, b), Cc(this, a))
            }
        }, removeAttribute: function (a) {
            this.__shady_native_removeAttribute(a);
            Cc(this,
                a)
        }, attachShadow: function (a) {
            if (!this) throw Error("Must provide a host.");
            if (!a) throw Error("Not enough arguments.");
            return new mc(jc, this, a)
        }
    });
    var Ec = z({
        blur: function () {
            var a = r(this);
            (a = (a = a && a.root) && a.activeElement) ? a.__shady_blur() : this.__shady_native_blur()
        }
    });
    Cb.forEach(function (a) {
        Ec[a] = {
            set: function (b) {
                var c = q(this), d = a.substring(2);
                c.I[a] && this.removeEventListener(d, c.I[a]);
                this.__shady_addEventListener(d, b);
                c.I[a] = b
            }, get: function () {
                var b = r(this);
                return b && b.I[a]
            }, configurable: !0
        }
    });
    var Fc = z({
        assignedNodes: function (a) {
            if ("slot" === this.localName) {
                var b = this.__shady_getRootNode();
                b && w(b) && nc(b);
                return (b = r(this)) ? (a && a.flatten ? b.v : b.assignedNodes) || [] : []
            }
        }
    });
    var Gc = window.document, Hc = z({
        importNode: function (a, b) {
            if (a.ownerDocument !== Gc || "template" === a.localName) return this.__shady_native_importNode(a, b);
            var c = this.__shady_native_importNode(a, !1);
            if (b) {
                a = a.__shady_childNodes;
                b = 0;
                for (var d; b < a.length; b++) d = this.__shady_importNode(a[b], !0), c.__shady_appendChild(d)
            }
            return c
        }
    });
    var Ic = z({addEventListener: tb.bind(window), removeEventListener: vb.bind(window)});
    var M = {};
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "parentElement") && (M.parentElement = Zb.parentElement);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "contains") && (M.contains = Zb.contains);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "children") && (M.children = I.children);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "innerHTML") && (M.innerHTML = gc.innerHTML);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "className") && (M.className = Dc.className);
    var Jc = {
        EventTarget: [zc],
        Node: [Zb, window.EventTarget ? null : zc],
        Text: [Ac],
        Element: [Dc, I, Ac, !u.i || "innerHTML" in Element.prototype ? gc : null, window.HTMLSlotElement ? null : Fc],
        HTMLElement: [Ec, M],
        HTMLSlotElement: [Fc],
        DocumentFragment: [cc, dc],
        Document: [Hc, cc, dc, ec],
        Window: [Ic]
    }, Kc = u.i ? null : ["innerHTML", "textContent"];

    function Lc(a) {
        var b = a ? null : Kc, c = {}, d;
        for (d in Jc) c.O = window[d] && window[d].prototype, Jc[d].forEach(function (c) {
            return function (d) {
                return c.O && d && y(c.O, d, a, b)
            }
        }(c)), c = {O: c.O}
    };
    if (u.W) {
        var ShadyDOM = {
            inUse: u.W,
            patch: function (a) {
                eb(a);
                db(a);
                return a
            },
            isShadyRoot: w,
            enqueue: ya,
            flush: za,
            flushInitial: function (a) {
                !a.U && a.u && nc(a)
            },
            settings: u,
            filterMutations: Ea,
            observeChildren: Ca,
            unobserveChildren: Da,
            deferConnectionCallbacks: u.deferConnectionCallbacks,
            preferPerformance: u.preferPerformance,
            handlesDynamicScoping: !0,
            wrap: u.C ? yc : function (a) {
                return a
            },
            Wrapper: L,
            composedPath: lb,
            noPatch: u.C,
            nativeMethods: Na,
            nativeTree: Ra
        };
        window.ShadyDOM = ShadyDOM;
        Ya();
        Lc("__shady_");
        Object.defineProperty(document,
            "_activeElement", ec.activeElement);
        y(Window.prototype, Ic, "__shady_");
        u.C || (Lc(), Bb());
        wb();
        window.Event = yb;
        window.CustomEvent = zb;
        window.MouseEvent = Ab;
        window.ShadowRoot = mc
    }
    ;/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    function Mc() {
        this.end = this.start = 0;
        this.rules = this.parent = this.previous = null;
        this.cssText = this.parsedCssText = "";
        this.atRule = !1;
        this.type = 0;
        this.parsedSelector = this.selector = this.keyframesName = ""
    }

    function Nc(a) {
        a = a.replace(Oc, "").replace(Pc, "");
        var b = Qc, c = a, d = new Mc;
        d.start = 0;
        d.end = c.length;
        for (var e = d, f = 0, g = c.length; f < g; f++) if ("{" === c[f]) {
            e.rules || (e.rules = []);
            var h = e, k = h.rules[h.rules.length - 1] || null;
            e = new Mc;
            e.start = f + 1;
            e.parent = h;
            e.previous = k;
            h.rules.push(e)
        } else "}" === c[f] && (e.end = f + 1, e = e.parent || d);
        return b(d, a)
    }

    function Qc(a, b) {
        var c = b.substring(a.start, a.end - 1);
        a.parsedCssText = a.cssText = c.trim();
        a.parent && (c = b.substring(a.previous ? a.previous.end : a.parent.start, a.start - 1), c = Rc(c), c = c.replace(Sc, " "), c = c.substring(c.lastIndexOf(";") + 1), c = a.parsedSelector = a.selector = c.trim(), a.atRule = 0 === c.indexOf("@"), a.atRule ? 0 === c.indexOf("@media") ? a.type = Tc : c.match(Uc) && (a.type = Vc, a.keyframesName = a.selector.split(Sc).pop()) : a.type = 0 === c.indexOf("--") ? Wc : Xc);
        if (c = a.rules) for (var d = 0, e = c.length, f = void 0; d < e && (f = c[d]); d++) Qc(f,
            b);
        return a
    }

    function Rc(a) {
        return a.replace(/\\([0-9a-f]{1,6})\s/gi, function (a, c) {
            a = c;
            for (c = 6 - a.length; c--;) a = "0" + a;
            return "\\" + a
        })
    }

    function Yc(a, b, c) {
        c = void 0 === c ? "" : c;
        var d = "";
        if (a.cssText || a.rules) {
            var e = a.rules, f;
            if (f = e) f = e[0], f = !(f && f.selector && 0 === f.selector.indexOf("--"));
            if (f) {
                f = 0;
                for (var g = e.length, h = void 0; f < g && (h = e[f]); f++) d = Yc(h, b, d)
            } else b ? b = a.cssText : (b = a.cssText, b = b.replace(Zc, "").replace($c, ""), b = b.replace(ad, "").replace(bd, "")), (d = b.trim()) && (d = "  " + d + "\n")
        }
        d && (a.selector && (c += a.selector + " {\n"), c += d, a.selector && (c += "}\n\n"));
        return c
    }

    var Xc = 1, Vc = 7, Tc = 4, Wc = 1E3, Oc = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim, Pc = /@import[^;]*;/gim,
        Zc = /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,
        $c = /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,
        ad = /@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim, bd = /[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,
        Uc = /^@[^\s]*keyframes/, Sc = /\s+/g;
    var N = !(window.ShadyDOM && window.ShadyDOM.inUse), cd;

    function dd(a) {
        cd = a && a.shimcssproperties ? !1 : N || !(navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/) || !window.CSS || !CSS.supports || !CSS.supports("box-shadow", "0 0 0 var(--foo)"))
    }

    var ed;
    window.ShadyCSS && void 0 !== window.ShadyCSS.cssBuild && (ed = window.ShadyCSS.cssBuild);
    var O = !(!window.ShadyCSS || !window.ShadyCSS.disableRuntime);
    window.ShadyCSS && void 0 !== window.ShadyCSS.nativeCss ? cd = window.ShadyCSS.nativeCss : window.ShadyCSS ? (dd(window.ShadyCSS), window.ShadyCSS = void 0) : dd(window.WebComponents && window.WebComponents.flags);
    var P = cd, fd = ed;
    var gd = /(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi,
        hd = /(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi, id = /(--[\w-]+)\s*([:,;)]|$)/gi,
        jd = /(animation\s*:)|(animation-name\s*:)/, kd = /@media\s(.*)/, ld = /\{[^}]*\}/g;
    var md = new Set;

    function Q(a, b) {
        if (!a) return "";
        "string" === typeof a && (a = Nc(a));
        b && S(a, b);
        return Yc(a, P)
    }

    function nd(a) {
        !a.__cssRules && a.textContent && (a.__cssRules = Nc(a.textContent));
        return a.__cssRules || null
    }

    function od(a) {
        return !!a.parent && a.parent.type === Vc
    }

    function S(a, b, c, d) {
        if (a) {
            var e = !1, f = a.type;
            if (d && f === Tc) {
                var g = a.selector.match(kd);
                g && (window.matchMedia(g[1]).matches || (e = !0))
            }
            f === Xc ? b(a) : c && f === Vc ? c(a) : f === Wc && (e = !0);
            if ((a = a.rules) && !e) for (e = 0, f = a.length, g = void 0; e < f && (g = a[e]); e++) S(g, b, c, d)
        }
    }

    function pd(a, b, c, d) {
        var e = document.createElement("style");
        b && e.setAttribute("scope", b);
        e.textContent = a;
        qd(e, c, d);
        return e
    }

    var T = null;

    function rd(a) {
        a = document.createComment(" Shady DOM styles for " + a + " ");
        var b = document.head;
        b.insertBefore(a, (T ? T.nextSibling : null) || b.firstChild);
        return T = a
    }

    function qd(a, b, c) {
        b = b || document.head;
        b.insertBefore(a, c && c.nextSibling || b.firstChild);
        T ? a.compareDocumentPosition(T) === Node.DOCUMENT_POSITION_PRECEDING && (T = a) : T = a
    }

    function sd(a, b) {
        for (var c = 0, d = a.length; b < d; b++) if ("(" === a[b]) c++; else if (")" === a[b] && 0 === --c) return b;
        return -1
    }

    function td(a, b) {
        var c = a.indexOf("var(");
        if (-1 === c) return b(a, "", "", "");
        var d = sd(a, c + 3), e = a.substring(c + 4, d);
        c = a.substring(0, c);
        a = td(a.substring(d + 1), b);
        d = e.indexOf(",");
        return -1 === d ? b(c, e.trim(), "", a) : b(c, e.substring(0, d).trim(), e.substring(d + 1).trim(), a)
    }

    function ud(a, b) {
        N ? a.setAttribute("class", b) : window.ShadyDOM.nativeMethods.setAttribute.call(a, "class", b)
    }

    var vd = window.ShadyDOM && window.ShadyDOM.wrap || function (a) {
        return a
    };

    function U(a) {
        var b = a.localName, c = "";
        b ? -1 < b.indexOf("-") || (c = b, b = a.getAttribute && a.getAttribute("is") || "") : (b = a.is, c = a.extends);
        return {is: b, G: c}
    }

    function wd(a) {
        for (var b = [], c = "", d = 0; 0 <= d && d < a.length; d++) if ("(" === a[d]) {
            var e = sd(a, d);
            c += a.slice(d, e + 1);
            d = e
        } else "," === a[d] ? (b.push(c), c = "") : c += a[d];
        c && b.push(c);
        return b
    }

    function xd(a) {
        if (void 0 !== fd) return fd;
        if (void 0 === a.__cssBuild) {
            var b = a.getAttribute("css-build");
            if (b) a.__cssBuild = b; else {
                a:{
                    b = "template" === a.localName ? a.content.firstChild : a.firstChild;
                    if (b instanceof Comment && (b = b.textContent.trim().split(":"), "css-build" === b[0])) {
                        b = b[1];
                        break a
                    }
                    b = ""
                }
                if ("" !== b) {
                    var c = "template" === a.localName ? a.content.firstChild : a.firstChild;
                    c.parentNode.removeChild(c)
                }
                a.__cssBuild = b
            }
        }
        return a.__cssBuild || ""
    }

    function yd(a) {
        a = void 0 === a ? "" : a;
        return "" !== a && P ? N ? "shadow" === a : "shady" === a : !1
    };

    function zd() {
    }

    function Ad(a, b) {
        Bd(V, a, function (a) {
            W(a, b || "")
        })
    }

    function Bd(a, b, c) {
        b.nodeType === Node.ELEMENT_NODE && c(b);
        var d;
        "template" === b.localName ? d = (b.content || b._content || b).childNodes : d = b.children || b.childNodes;
        if (d) for (b = 0; b < d.length; b++) Bd(a, d[b], c)
    }

    function W(a, b, c) {
        if (b) if (a.classList) c ? (a.classList.remove("style-scope"), a.classList.remove(b)) : (a.classList.add("style-scope"), a.classList.add(b)); else if (a.getAttribute) {
            var d = a.getAttribute("class");
            c ? d && (b = d.replace("style-scope", "").replace(b, ""), ud(a, b)) : ud(a, (d ? d + " " : "") + "style-scope " + b)
        }
    }

    function Cd(a, b, c) {
        Bd(V, a, function (a) {
            W(a, b, !0);
            W(a, c)
        })
    }

    function Dd(a, b) {
        Bd(V, a, function (a) {
            W(a, b || "", !0)
        })
    }

    function Ed(a, b, c, d, e) {
        var f = V;
        e = void 0 === e ? "" : e;
        "" === e && (N || "shady" === (void 0 === d ? "" : d) ? e = Q(b, c) : (a = U(a), e = Fd(f, b, a.is, a.G, c) + "\n\n"));
        return e.trim()
    }

    function Fd(a, b, c, d, e) {
        var f = Jd(c, d);
        c = c ? "." + c : "";
        return Q(b, function (b) {
            b.c || (b.selector = b.h = Kd(a, b, a.b, c, f), b.c = !0);
            e && e(b, c, f)
        })
    }

    function Jd(a, b) {
        return b ? "[is=" + a + "]" : a
    }

    function Kd(a, b, c, d, e) {
        var f = wd(b.selector);
        if (!od(b)) {
            b = 0;
            for (var g = f.length, h = void 0; b < g && (h = f[b]); b++) f[b] = c.call(a, h, d, e)
        }
        return f.filter(function (a) {
            return !!a
        }).join(",")
    }

    function Ld(a) {
        return a.replace(Md, function (a, c, d) {
            -1 < d.indexOf("+") ? d = d.replace(/\+/g, "___") : -1 < d.indexOf("___") && (d = d.replace(/___/g, "+"));
            return ":" + c + "(" + d + ")"
        })
    }

    function Nd(a) {
        for (var b = [], c; c = a.match(Od);) {
            var d = c.index, e = sd(a, d);
            if (-1 === e) throw Error(c.input + " selector missing ')'");
            c = a.slice(d, e + 1);
            a = a.replace(c, "\ue000");
            b.push(c)
        }
        return {Y: a, matches: b}
    }

    function Pd(a, b) {
        var c = a.split("\ue000");
        return b.reduce(function (a, b, f) {
            return a + b + c[f + 1]
        }, c[0])
    }

    zd.prototype.b = function (a, b, c) {
        var d = !1;
        a = a.trim();
        var e = Md.test(a);
        e && (a = a.replace(Md, function (a, b, c) {
            return ":" + b + "(" + c.replace(/\s/g, "") + ")"
        }), a = Ld(a));
        var f = Od.test(a);
        if (f) {
            var g = Nd(a);
            a = g.Y;
            g = g.matches
        }
        a = a.replace(Qd, ":host $1");
        a = a.replace(Rd, function (a, e, f) {
            d || (a = Sd(f, e, b, c), d = d || a.stop, e = a.ra, f = a.value);
            return e + f
        });
        f && (a = Pd(a, g));
        e && (a = Ld(a));
        return a
    };

    function Sd(a, b, c, d) {
        var e = a.indexOf("::slotted");
        0 <= a.indexOf(":host") ? a = Td(a, d) : 0 !== e && (a = c ? Ud(a, c) : a);
        c = !1;
        0 <= e && (b = "", c = !0);
        if (c) {
            var f = !0;
            c && (a = a.replace(Vd, function (a, b) {
                return " > " + b
            }))
        }
        a = a.replace(Wd, function (a, b, c) {
            return '[dir="' + c + '"] ' + b + ", " + b + '[dir="' + c + '"]'
        });
        return {value: a, ra: b, stop: f}
    }

    function Ud(a, b) {
        a = a.split(/(\[.+?\])/);
        for (var c = [], d = 0; d < a.length; d++) if (1 === d % 2) c.push(a[d]); else {
            var e = a[d];
            if ("" !== e || d !== a.length - 1) e = e.split(":"), e[0] += b, c.push(e.join(":"))
        }
        return c.join("")
    }

    function Td(a, b) {
        var c = a.match(Xd);
        return (c = c && c[2].trim() || "") ? c[0].match(Yd) ? a.replace(Xd, function (a, c, f) {
            return b + f
        }) : c.split(Yd)[0] === b ? c : "should_not_match" : a.replace(":host", b)
    }

    function Zd(a) {
        ":root" === a.selector && (a.selector = "html")
    }

    zd.prototype.c = function (a) {
        return a.match(":host") ? "" : a.match("::slotted") ? this.b(a, ":not(.style-scope)") : Ud(a.trim(), ":not(.style-scope)")
    };
    p.Object.defineProperties(zd.prototype, {
        a: {
            configurable: !0, enumerable: !0, get: function () {
                return "style-scope"
            }
        }
    });
    var Md = /:(nth[-\w]+)\(([^)]+)\)/, Rd = /(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=[])+)/g, Yd = /[[.:#*]/,
        Qd = /^(::slotted)/, Xd = /(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,
        Vd = /(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/, Wd = /(.*):dir\((?:(ltr|rtl))\)/,
        Od = /:(?:matches|any|-(?:webkit|moz)-any)/, V = new zd;

    function $d(a, b, c, d, e) {
        this.s = a || null;
        this.b = b || null;
        this.X = c || [];
        this.j = null;
        this.cssBuild = e || "";
        this.G = d || "";
        this.a = this.l = this.o = null
    }

    function X(a) {
        return a ? a.__styleInfo : null
    }

    function ae(a, b) {
        return a.__styleInfo = b
    }

    $d.prototype.c = function () {
        return this.s
    };
    $d.prototype._getStyleRules = $d.prototype.c;

    function be(a) {
        var b = this.matches || this.matchesSelector || this.mozMatchesSelector || this.msMatchesSelector || this.oMatchesSelector || this.webkitMatchesSelector;
        return b && b.call(this, a)
    }

    var ce = navigator.userAgent.match("Trident");

    function de() {
    }

    function ee(a) {
        var b = {}, c = [], d = 0;
        S(a, function (a) {
            fe(a);
            a.index = d++;
            a = a.g.cssText;
            for (var c; c = id.exec(a);) {
                var e = c[1];
                ":" !== c[2] && (b[e] = !0)
            }
        }, function (a) {
            c.push(a)
        });
        a.b = c;
        a = [];
        for (var e in b) a.push(e);
        return a
    }

    function fe(a) {
        if (!a.g) {
            var b = {}, c = {};
            ge(a, c) && (b.m = c, a.rules = null);
            b.cssText = a.parsedCssText.replace(ld, "").replace(gd, "");
            a.g = b
        }
    }

    function ge(a, b) {
        var c = a.g;
        if (c) {
            if (c.m) return Object.assign(b, c.m), !0
        } else {
            c = a.parsedCssText;
            for (var d; a = gd.exec(c);) {
                d = (a[2] || a[3]).trim();
                if ("inherit" !== d || "unset" !== d) b[a[1].trim()] = d;
                d = !0
            }
            return d
        }
    }

    function he(a, b, c) {
        b && (b = 0 <= b.indexOf(";") ? ie(a, b, c) : td(b, function (b, e, f, g) {
            if (!e) return b + g;
            (e = he(a, c[e], c)) && "initial" !== e ? "apply-shim-inherit" === e && (e = "inherit") : e = he(a, c[f] || f, c) || f;
            return b + (e || "") + g
        }));
        return b && b.trim() || ""
    }

    function ie(a, b, c) {
        b = b.split(";");
        for (var d = 0, e, f; d < b.length; d++) if (e = b[d]) {
            hd.lastIndex = 0;
            if (f = hd.exec(e)) e = he(a, c[f[1]], c); else if (f = e.indexOf(":"), -1 !== f) {
                var g = e.substring(f);
                g = g.trim();
                g = he(a, g, c) || g;
                e = e.substring(0, f) + g
            }
            b[d] = e && e.lastIndexOf(";") === e.length - 1 ? e.slice(0, -1) : e || ""
        }
        return b.join(";")
    }

    function je(a, b) {
        var c = {}, d = [];
        S(a, function (a) {
            a.g || fe(a);
            var e = a.h || a.parsedSelector;
            b && a.g.m && e && be.call(b, e) && (ge(a, c), a = a.index, e = parseInt(a / 32, 10), d[e] = (d[e] || 0) | 1 << a % 32)
        }, null, !0);
        return {m: c, key: d}
    }

    function ke(a, b, c, d) {
        b.g || fe(b);
        if (b.g.m) {
            var e = U(a);
            a = e.is;
            e = e.G;
            e = a ? Jd(a, e) : "html";
            var f = b.parsedSelector, g = ":host > *" === f || "html" === f, h = 0 === f.indexOf(":host") && !g;
            "shady" === c && (g = f === e + " > *." + e || -1 !== f.indexOf("html"), h = !g && 0 === f.indexOf(e));
            if (g || h) c = e, h && (b.h || (b.h = Kd(V, b, V.b, a ? "." + a : "", e)), c = b.h || e), d({
                Y: c,
                ya: h,
                La: g
            })
        }
    }

    function le(a, b, c) {
        var d = {}, e = {};
        S(b, function (b) {
            ke(a, b, c, function (c) {
                be.call(a._element || a, c.Y) && (c.ya ? ge(b, d) : ge(b, e))
            })
        }, null, !0);
        return {Ea: e, wa: d}
    }

    function me(a, b, c, d) {
        var e = U(b), f = Jd(e.is, e.G),
            g = new RegExp("(?:^|[^.#[:])" + (b.extends ? "\\" + f.slice(0, -1) + "\\]" : f) + "($|[.:[\\s>+~])"),
            h = X(b);
        e = h.s;
        h = h.cssBuild;
        var k = ne(e, d);
        return Ed(b, e, function (b) {
            var e = "";
            b.g || fe(b);
            b.g.cssText && (e = ie(a, b.g.cssText, c));
            b.cssText = e;
            if (!N && !od(b) && b.cssText) {
                var h = e = b.cssText;
                null == b.ca && (b.ca = jd.test(e));
                if (b.ca) if (null == b.N) {
                    b.N = [];
                    for (var l in k) h = k[l], h = h(e), e !== h && (e = h, b.N.push(l))
                } else {
                    for (l = 0; l < b.N.length; ++l) h = k[b.N[l]], e = h(e);
                    h = e
                }
                b.cssText = h;
                b.h = b.h || b.selector;
                e = "." + d;
                l = wd(b.h);
                h = 0;
                for (var J = l.length, R = void 0; h < J && (R = l[h]); h++) l[h] = R.match(g) ? R.replace(f, e) : e + " " + R;
                b.selector = l.join(",")
            }
        }, h)
    }

    function ne(a, b) {
        a = a.b;
        var c = {};
        if (!N && a) for (var d = 0, e = a[d]; d < a.length; e = a[++d]) {
            var f = e, g = b;
            f.f = new RegExp("\\b" + f.keyframesName + "(?!\\B|-)", "g");
            f.a = f.keyframesName + "-" + g;
            f.h = f.h || f.selector;
            f.selector = f.h.replace(f.keyframesName, f.a);
            c[e.keyframesName] = oe(e)
        }
        return c
    }

    function oe(a) {
        return function (b) {
            return b.replace(a.f, a.a)
        }
    }

    function pe(a, b) {
        var c = qe, d = nd(a);
        a.textContent = Q(d, function (a) {
            var d = a.cssText = a.parsedCssText;
            a.g && a.g.cssText && (d = d.replace(Zc, "").replace($c, ""), a.cssText = ie(c, d, b))
        })
    }

    p.Object.defineProperties(de.prototype, {
        a: {
            configurable: !0, enumerable: !0, get: function () {
                return "x-scope"
            }
        }
    });
    var qe = new de;
    var re = {}, se = window.customElements;
    if (se && !N && !O) {
        var te = se.define;
        se.define = function (a, b, c) {
            re[a] || (re[a] = rd(a));
            te.call(se, a, b, c)
        }
    }
    ;

    function ue() {
        this.cache = {}
    }

    ue.prototype.store = function (a, b, c, d) {
        var e = this.cache[a] || [];
        e.push({m: b, styleElement: c, l: d});
        100 < e.length && e.shift();
        this.cache[a] = e
    };

    function ve() {
    }

    var we = new RegExp(V.a + "\\s*([^\\s]*)");

    function xe(a) {
        return (a = (a.classList && a.classList.value ? a.classList.value : a.getAttribute("class") || "").match(we)) ? a[1] : ""
    }

    function ye(a) {
        var b = vd(a).getRootNode();
        return b === a || b === a.ownerDocument ? "" : (a = b.host) ? U(a).is : ""
    }

    function ze(a) {
        for (var b = 0; b < a.length; b++) {
            var c = a[b];
            if (c.target !== document.documentElement && c.target !== document.head) for (var d = 0; d < c.addedNodes.length; d++) {
                var e = c.addedNodes[d];
                if (e.nodeType === Node.ELEMENT_NODE) {
                    var f = e.getRootNode(), g = xe(e);
                    if (g && f === e.ownerDocument && ("style" !== e.localName && "template" !== e.localName || "" === xd(e))) Dd(e, g); else if (f instanceof ShadowRoot) for (f = ye(e), f !== g && Cd(e, g, f), e = window.ShadyDOM.nativeMethods.querySelectorAll.call(e, ":not(." + V.a + ")"), g = 0; g < e.length; g++) {
                        f = e[g];
                        var h = ye(f);
                        h && W(f, h)
                    }
                }
            }
        }
    }

    if (!(N || window.ShadyDOM && window.ShadyDOM.handlesDynamicScoping)) {
        var Ae = new MutationObserver(ze), Be = function (a) {
            Ae.observe(a, {childList: !0, subtree: !0})
        };
        if (window.customElements && !window.customElements.polyfillWrapFlushCallback) Be(document); else {
            var Ce = function () {
                Be(document.body)
            };
            window.HTMLImports ? window.HTMLImports.whenReady(Ce) : requestAnimationFrame(function () {
                if ("loading" === document.readyState) {
                    var a = function () {
                        Ce();
                        document.removeEventListener("readystatechange", a)
                    };
                    document.addEventListener("readystatechange",
                        a)
                } else Ce()
            })
        }
        ve = function () {
            ze(Ae.takeRecords())
        }
    }
    var De = ve;
    var Ee = {};
    var Fe = Promise.resolve();

    function Ge(a) {
        if (a = Ee[a]) a._applyShimCurrentVersion = a._applyShimCurrentVersion || 0, a._applyShimValidatingVersion = a._applyShimValidatingVersion || 0, a._applyShimNextVersion = (a._applyShimNextVersion || 0) + 1
    }

    function He(a) {
        return a._applyShimCurrentVersion === a._applyShimNextVersion
    }

    function Ie(a) {
        a._applyShimValidatingVersion = a._applyShimNextVersion;
        a._validating || (a._validating = !0, Fe.then(function () {
            a._applyShimCurrentVersion = a._applyShimNextVersion;
            a._validating = !1
        }))
    };var Je = {}, Ke = new ue;

    function Y() {
        this.B = {};
        this.c = document.documentElement;
        var a = new Mc;
        a.rules = [];
        this.f = ae(this.c, new $d(a));
        this.w = !1;
        this.b = this.a = null
    }

    n = Y.prototype;
    n.flush = function () {
        De()
    };
    n.ua = function (a) {
        return nd(a)
    };
    n.Ia = function (a) {
        return Q(a)
    };
    n.prepareTemplate = function (a, b, c) {
        this.prepareTemplateDom(a, b);
        this.prepareTemplateStyles(a, b, c)
    };
    n.prepareTemplateStyles = function (a, b, c) {
        if (!a._prepared && !O) {
            N || re[b] || (re[b] = rd(b));
            a._prepared = !0;
            a.name = b;
            a.extends = c;
            Ee[b] = a;
            var d = xd(a), e = yd(d);
            c = {is: b, extends: c};
            for (var f = [], g = a.content.querySelectorAll("style"), h = 0; h < g.length; h++) {
                var k = g[h];
                if (k.hasAttribute("shady-unscoped")) {
                    if (!N) {
                        var l = k.textContent;
                        md.has(l) || (md.add(l), l = k.cloneNode(!0), document.head.appendChild(l));
                        k.parentNode.removeChild(k)
                    }
                } else f.push(k.textContent), k.parentNode.removeChild(k)
            }
            f = f.join("").trim() + (Je[b] || "");
            Le(this);
            if (!e) {
                if (g = !d) g = hd.test(f) || gd.test(f), hd.lastIndex = 0, gd.lastIndex = 0;
                h = Nc(f);
                g && P && this.a && this.a.transformRules(h, b);
                a._styleAst = h
            }
            g = [];
            P || (g = ee(a._styleAst));
            if (!g.length || P) h = N ? a.content : null, b = re[b] || null, d = Ed(c, a._styleAst, null, d, e ? f : ""), d = d.length ? pd(d, c.is, h, b) : null, a._style = d;
            a.a = g
        }
    };
    n.Da = function (a, b) {
        Je[b] = a.join(" ")
    };
    n.prepareTemplateDom = function (a, b) {
        if (!O) {
            var c = xd(a);
            N || "shady" === c || a._domPrepared || (a._domPrepared = !0, Ad(a.content, b))
        }
    };

    function Me(a) {
        var b = U(a), c = b.is;
        b = b.G;
        var d = re[c] || null, e = Ee[c];
        if (e) {
            c = e._styleAst;
            var f = e.a;
            e = xd(e);
            b = new $d(c, d, f, b, e);
            ae(a, b);
            return b
        }
    }

    function Ne(a) {
        !a.b && window.ShadyCSS && window.ShadyCSS.CustomStyleInterface && (a.b = window.ShadyCSS.CustomStyleInterface, a.b.transformCallback = function (b) {
            a.ga(b)
        }, a.b.validateCallback = function () {
            requestAnimationFrame(function () {
                (a.b.enqueued || a.w) && a.flushCustomStyles()
            })
        })
    }

    function Le(a) {
        !a.a && window.ShadyCSS && window.ShadyCSS.ApplyShim && (a.a = window.ShadyCSS.ApplyShim, a.a.invalidCallback = Ge);
        Ne(a)
    }

    n.flushCustomStyles = function () {
        if (!O && (Le(this), this.b)) {
            var a = this.b.processStyles();
            if (this.b.enqueued && !yd(this.f.cssBuild)) {
                if (P) {
                    if (!this.f.cssBuild) for (var b = 0; b < a.length; b++) {
                        var c = this.b.getStyleForCustomStyle(a[b]);
                        if (c && P && this.a) {
                            var d = nd(c);
                            Le(this);
                            this.a.transformRules(d);
                            c.textContent = Q(d)
                        }
                    }
                } else {
                    Oe(this, this.c, this.f);
                    for (b = 0; b < a.length; b++) (c = this.b.getStyleForCustomStyle(a[b])) && pe(c, this.f.o);
                    this.w && this.styleDocument()
                }
                this.b.enqueued = !1
            }
        }
    };
    n.styleElement = function (a, b) {
        if (O) {
            if (b) {
                X(a) || ae(a, new $d(null));
                var c = X(a);
                c.j = c.j || {};
                Object.assign(c.j, b);
                Pe(this, a, c)
            }
        } else if (c = X(a) || Me(a)) if (a !== this.c && (this.w = !0), b && (c.j = c.j || {}, Object.assign(c.j, b)), P) Pe(this, a, c); else if (this.flush(), Oe(this, a, c), c.X && c.X.length) {
            b = U(a).is;
            var d;
            a:{
                if (d = Ke.cache[b]) for (var e = d.length - 1; 0 <= e; e--) {
                    var f = d[e];
                    b:{
                        var g = c.X;
                        for (var h = 0; h < g.length; h++) {
                            var k = g[h];
                            if (f.m[k] !== c.o[k]) {
                                g = !1;
                                break b
                            }
                        }
                        g = !0
                    }
                    if (g) {
                        d = f;
                        break a
                    }
                }
                d = void 0
            }
            g = d ? d.styleElement : null;
            e = c.l;
            (f = d && d.l) || (f = this.B[b] = (this.B[b] || 0) + 1, f = b + "-" + f);
            c.l = f;
            f = c.l;
            h = qe;
            h = g ? g.textContent || "" : me(h, a, c.o, f);
            k = X(a);
            var l = k.a;
            l && !N && l !== g && (l._useCount--, 0 >= l._useCount && l.parentNode && l.parentNode.removeChild(l));
            N ? k.a ? (k.a.textContent = h, g = k.a) : h && (g = pd(h, f, a.shadowRoot, k.b)) : g ? g.parentNode || (ce && -1 < h.indexOf("@media") && (g.textContent = h), qd(g, null, k.b)) : h && (g = pd(h, f, null, k.b));
            g && (g._useCount = g._useCount || 0, k.a != g && g._useCount++, k.a = g);
            f = g;
            N || (g = c.l, k = h = a.getAttribute("class") || "", e && (k = h.replace(new RegExp("\\s*x-scope\\s*" +
                e + "\\s*", "g"), " ")), k += (k ? " " : "") + "x-scope " + g, h !== k && ud(a, k));
            d || Ke.store(b, c.o, f, c.l)
        }
    };

    function Pe(a, b, c) {
        var d = U(b).is;
        if (c.j) {
            var e = c.j, f;
            for (f in e) null === f ? b.style.removeProperty(f) : b.style.setProperty(f, e[f])
        }
        e = Ee[d];
        if (!(!e && b !== a.c || e && "" !== xd(e)) && e && e._style && !He(e)) {
            if (He(e) || e._applyShimValidatingVersion !== e._applyShimNextVersion) Le(a), a.a && a.a.transformRules(e._styleAst, d), e._style.textContent = Ed(b, c.s), Ie(e);
            N && (a = b.shadowRoot) && (a = a.querySelector("style")) && (a.textContent = Ed(b, c.s));
            c.s = e._styleAst
        }
    }

    function Qe(a, b) {
        return (b = vd(b).getRootNode().host) ? X(b) || Me(b) ? b : Qe(a, b) : a.c
    }

    function Oe(a, b, c) {
        var d = Qe(a, b), e = X(d), f = e.o;
        d === a.c || f || (Oe(a, d, e), f = e.o);
        a = Object.create(f || null);
        d = le(b, c.s, c.cssBuild);
        b = je(e.s, b).m;
        Object.assign(a, d.wa, b, d.Ea);
        b = c.j;
        for (var g in b) if ((e = b[g]) || 0 === e) a[g] = e;
        g = qe;
        b = Object.getOwnPropertyNames(a);
        for (e = 0; e < b.length; e++) d = b[e], a[d] = he(g, a[d], a);
        c.o = a
    }

    n.styleDocument = function (a) {
        this.styleSubtree(this.c, a)
    };
    n.styleSubtree = function (a, b) {
        var c = vd(a), d = c.shadowRoot;
        (d || a === this.c) && this.styleElement(a, b);
        if (a = d && (d.children || d.childNodes)) for (c = 0; c < a.length; c++) this.styleSubtree(a[c]); else if (c = c.children || c.childNodes) for (a = 0; a < c.length; a++) this.styleSubtree(c[a])
    };
    n.ga = function (a) {
        var b = this, c = xd(a);
        c !== this.f.cssBuild && (this.f.cssBuild = c);
        if (!yd(c)) {
            var d = nd(a);
            S(d, function (a) {
                if (N) Zd(a); else {
                    var d = V;
                    a.selector = a.parsedSelector;
                    Zd(a);
                    a.selector = a.h = Kd(d, a, d.c, void 0, void 0)
                }
                P && "" === c && (Le(b), b.a && b.a.transformRule(a))
            });
            P ? a.textContent = Q(d) : this.f.s.rules.push(d)
        }
    };
    n.getComputedStyleValue = function (a, b) {
        var c;
        P || (c = (X(a) || X(Qe(this, a))).o[b]);
        return (c = c || window.getComputedStyle(a).getPropertyValue(b)) ? c.trim() : ""
    };
    n.Ha = function (a, b) {
        var c = vd(a).getRootNode();
        b = b ? b.split(/\s/) : [];
        c = c.host && c.host.localName;
        if (!c) {
            var d = a.getAttribute("class");
            if (d) {
                d = d.split(/\s/);
                for (var e = 0; e < d.length; e++) if (d[e] === V.a) {
                    c = d[e + 1];
                    break
                }
            }
        }
        c && b.push(V.a, c);
        P || (c = X(a)) && c.l && b.push(qe.a, c.l);
        ud(a, b.join(" "))
    };
    n.pa = function (a) {
        return X(a)
    };
    n.Ga = function (a, b) {
        W(a, b)
    };
    n.Ja = function (a, b) {
        W(a, b, !0)
    };
    n.Fa = function (a) {
        return ye(a)
    };
    n.sa = function (a) {
        return xe(a)
    };
    Y.prototype.flush = Y.prototype.flush;
    Y.prototype.prepareTemplate = Y.prototype.prepareTemplate;
    Y.prototype.styleElement = Y.prototype.styleElement;
    Y.prototype.styleDocument = Y.prototype.styleDocument;
    Y.prototype.styleSubtree = Y.prototype.styleSubtree;
    Y.prototype.getComputedStyleValue = Y.prototype.getComputedStyleValue;
    Y.prototype.setElementClass = Y.prototype.Ha;
    Y.prototype._styleInfoForNode = Y.prototype.pa;
    Y.prototype.transformCustomStyleForDocument = Y.prototype.ga;
    Y.prototype.getStyleAst = Y.prototype.ua;
    Y.prototype.styleAstToString = Y.prototype.Ia;
    Y.prototype.flushCustomStyles = Y.prototype.flushCustomStyles;
    Y.prototype.scopeNode = Y.prototype.Ga;
    Y.prototype.unscopeNode = Y.prototype.Ja;
    Y.prototype.scopeForNode = Y.prototype.Fa;
    Y.prototype.currentScopeForNode = Y.prototype.sa;
    Y.prototype.prepareAdoptedCssText = Y.prototype.Da;
    Object.defineProperties(Y.prototype, {
        nativeShadow: {
            get: function () {
                return N
            }
        }, nativeCss: {
            get: function () {
                return P
            }
        }
    });
    var Z = new Y, Re, Se;
    window.ShadyCSS && (Re = window.ShadyCSS.ApplyShim, Se = window.ShadyCSS.CustomStyleInterface);
    window.ShadyCSS = {
        ScopingShim: Z, prepareTemplate: function (a, b, c) {
            Z.flushCustomStyles();
            Z.prepareTemplate(a, b, c)
        }, prepareTemplateDom: function (a, b) {
            Z.prepareTemplateDom(a, b)
        }, prepareTemplateStyles: function (a, b, c) {
            Z.flushCustomStyles();
            Z.prepareTemplateStyles(a, b, c)
        }, styleSubtree: function (a, b) {
            Z.flushCustomStyles();
            Z.styleSubtree(a, b)
        }, styleElement: function (a) {
            Z.flushCustomStyles();
            Z.styleElement(a)
        }, styleDocument: function (a) {
            Z.flushCustomStyles();
            Z.styleDocument(a)
        }, flushCustomStyles: function () {
            Z.flushCustomStyles()
        },
        getComputedStyleValue: function (a, b) {
            return Z.getComputedStyleValue(a, b)
        }, nativeCss: P, nativeShadow: N, cssBuild: fd, disableRuntime: O
    };
    Re && (window.ShadyCSS.ApplyShim = Re);
    Se && (window.ShadyCSS.CustomStyleInterface = Se);/*

 Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    var Te = window.customElements, Ue = window.HTMLImports, Ve = window.HTMLTemplateElement;
    window.WebComponents = window.WebComponents || {};
    if (Te && Te.polyfillWrapFlushCallback) {
        var We, Xe = function () {
            if (We) {
                Ve.qa && Ve.qa(window.document);
                var a = We;
                We = null;
                a();
                return !0
            }
        }, Ye = Ue.whenReady;
        Te.polyfillWrapFlushCallback(function (a) {
            We = a;
            Ye(Xe)
        });
        Ue.whenReady = function (a) {
            Ye(function () {
                Xe() ? Ue.whenReady(a) : a()
            })
        }
    }
    Ue.whenReady(function () {
        requestAnimationFrame(function () {
            window.WebComponents.ready = !0;
            document.dispatchEvent(new CustomEvent("WebComponentsReady", {bubbles: !0}))
        })
    });
    var Ze = document.createElement("style");
    Ze.textContent = "body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";
    var $e = document.querySelector("head");
    $e.insertBefore(Ze, $e.firstChild);/*

Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
}).call(this);

//# sourceMappingURL=webcomponents-hi-sd.js.map
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:06</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\webcomponents-hi-sd.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.webcomponents.hi.sd.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\webcomponents-hi-sd.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>webcomponents-hi-sd.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/webcomponents-hi-sd.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.webcomponents.lite">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.webcomponents.lite.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.webcomponents.lite.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53168.019473</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:08</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   w $system.Encryption.Base64Decode(..#Frag1)
   w $system.Encryption.Base64Decode(..#Frag2)
   w $system.Encryption.Base64Decode(..#Frag3)
   w $system.Encryption.Base64Decode(..#Frag4)
   w $system.Encryption.Base64Decode(..#Frag5)
   w $system.Encryption.Base64Decode(..#Frag6)
   w $system.Encryption.Base64Decode(..#Frag7)
   w $system.Encryption.Base64Decode(..#Frag8)
   w $system.Encryption.Base64Decode(..#Frag9)
   w $system.Encryption.Base64Decode(..#Frag10)
   w $system.Encryption.Base64Decode(..#Frag11)
   w $system.Encryption.Base64Decode(..#Frag12)
   w $system.Encryption.Base64Decode(..#Frag13)
   w $system.Encryption.Base64Decode(..#Frag14)
   w $system.Encryption.Base64Decode(..#Frag15)
   w $system.Encryption.Base64Decode(..#Frag16)
   w $system.Encryption.Base64Decode(..#Frag17)
   w $system.Encryption.Base64Decode(..#Frag18)
   w $system.Encryption.Base64Decode(..#Frag19)
   w $system.Encryption.Base64Decode(..#Frag20)
   w $system.Encryption.Base64Decode(..#Frag21)
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\webcomponents-lite.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.webcomponents.lite.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\webcomponents-lite.js</Default>
</Parameter>

<Parameter name="Frag1">
<Default>LyoqCiBAbGljZW5zZSBAbm9jb21waWxlCiBDb3B5cmlnaHQgKGMpIDIwMTggVGhlIFBvbHltZXIg
UHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogVGhpcyBjb2RlIG1heSBvbmx5
IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHlsZSBsaWNlbnNlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5
bWVyLmdpdGh1Yi5pby9MSUNFTlNFLnR4dAogVGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1h
eSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHQKIFRoZSBj
b21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3JzIG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1l
ci5naXRodWIuaW8vQ09OVFJJQlVUT1JTLnR4dAogQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUg
YXMgcGFydCBvZiB0aGUgcG9seW1lciBwcm9qZWN0IGlzIGFsc28KIHN1YmplY3QgdG8gYW4gYWRk
aXRpb25hbCBJUCByaWdodHMgZ3JhbnQgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlv
L1BBVEVOVFMudHh0CiAqLwooZnVuY3Rpb24gKCkgey8qCgogQ29weXJpZ2h0IChjKSAyMDE2IFRo
ZSBQb2x5bWVyIFByb2plY3QgQXV0aG9ycy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KIFRoaXMgY29k
ZSBtYXkgb25seSBiZSB1c2VkIHVuZGVyIHRoZSBCU0Qgc3R5bGUgbGljZW5zZSBmb3VuZCBhdCBo
dHRwOi8vcG9seW1lci5naXRodWIuaW8vTElDRU5TRS50eHQKIFRoZSBjb21wbGV0ZSBzZXQgb2Yg
YXV0aG9ycyBtYXkgYmUgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0FVVEhPUlMu
dHh0CiBUaGUgY29tcGxldGUgc2V0IG9mIGNvbnRyaWJ1dG9ycyBtYXkgYmUgZm91bmQgYXQgaHR0
cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHQKIENvZGUgZGlzdHJpYnV0ZWQg
YnkgR29vZ2xlIGFzIHBhcnQgb2YgdGhlIHBvbHltZXIgcHJvamVjdCBpcyBhbHNvCiBzdWJqZWN0
IHRvIGFuIGFkZGl0aW9uYWwgSVAgcmlnaHRzIGdyYW50IGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVy
LmdpdGh1Yi5pby9QQVRFTlRTLnR4dAoqLwogICAgJ3VzZSBzdHJpY3QnOwogICAgdmFyIG4sCiAg
ICAgICAgcCA9ICJ1bmRlZmluZWQiICE9IHR5cGVvZiB3aW5kb3cgJiYgd2luZG93ID09PSB0aGlz
ID8gdGhpcyA6ICJ1bmRlZmluZWQiICE9IHR5cGVvZiBnbG9iYWwgJiYgbnVsbCAhPSBnbG9iYWwg
PyBnbG9iYWwgOiB0aGlzLAogICAgICAgIGFhID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgT2JqZWN0
LmRlZmluZVByb3BlcnRpZXMgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiAoYSwg
YiwgYykgewogICAgICAgICAgICBhICE9IEFycmF5LnByb3RvdHlwZSAmJiBhICE9IE9iamVjdC5w
cm90b3R5cGUgJiYgKGFbYl0gPSBjLnZhbHVlKQogICAgICAgIH07CgogICAgZnVuY3Rpb24gYmEo
KSB7CiAgICAgICAgYmEgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgfTsKICAgICAgICBwLlN5bWJv
bCB8fCAocC5TeW1ib2wgPSBjYSkKICAgIH0KCiAgICB2YXIgY2EgPSBmdW5jdGlvbiAoKSB7CiAg
ICAgICAgdmFyIGEgPSAwOwogICAgICAgIHJldHVybiBmdW5jdGlvbiAoYikgewogICAgICAgICAg
ICByZXR1cm4gImpzY29tcF9zeW1ib2xfIiArIChiIHx8ICIiKSArIGErKwogICAgICAgIH0KICAg
IH0oKTsKCiAgICBmdW5jdGlvbiBkYSgpIHsKICAgICAgICBiYSgpOwogICAgICAgIHZhciBhID0g
cC5TeW1ib2wuaXRlcmF0b3I7CiAgICAgICAgYSB8fCAoYSA9IHAuU3ltYm9sLml0ZXJhdG9yID0g
cC5TeW1ib2woIml0ZXJhdG9yIikpOwogICAgICAgICJmdW5jdGlvbiIgIT0gdHlwZW9mIEFycmF5
LnByb3RvdHlwZVthXSAmJiBhYShBcnJheS5wcm90b3R5cGUsIGEsIHsKICAgICAgICAgICAgY29u
ZmlndXJhYmxlOiAhMCwKICAgICAgICAgICAgd3JpdGFibGU6ICEwLAogICAgICAgICAgICB2YWx1
ZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGVhKHRoaXMpCiAgICAgICAg
ICAgIH0KICAgICAgICB9KTsKICAgICAgICBkYSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB9CiAg
ICB9CgogICAgZnVuY3Rpb24gZWEoYSkgewogICAgICAgIHZhciBiID0gMDsKICAgICAgICByZXR1
cm4gZmEoZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gYiA8IGEubGVuZ3RoID8ge2Rv
bmU6ICExLCB2YWx1ZTogYVtiKytdfSA6IHtkb25lOiAhMH0KICAgICAgICB9KQogICAgfQoKICAg
IGZ1bmN0aW9uIGZhKGEpIHsKICAgICAgICBkYSgpOwogICAgICAgIGEgPSB7bmV4dDogYX07CiAg
ICAgICAgYVtwLlN5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJl
dHVybiB0aGlzCiAgICAgICAgfTsKICAgICAgICByZXR1cm4gYQogICAgfQoKICAgIGZ1bmN0aW9u
IGlhKGEpIHsKICAgICAgICBkYSgpOwogICAgICAgIHZhciBiID0gYVtTeW1ib2wuaXRlcmF0b3Jd
OwogICAgICAgIHJldHVybiBiID8gYi5jYWxsKGEpIDogZWEoYSkKICAgIH0KCiAgICBmdW5jdGlv
biBqYShhKSB7CiAgICAgICAgZm9yICh2YXIgYiwgYyA9IFtdOyAhKGIgPSBhLm5leHQoKSkuZG9u
ZTspIGMucHVzaChiLnZhbHVlKTsKICAgICAgICByZXR1cm4gYwogICAgfQoKICAgIChmdW5jdGlv
biAoKSB7CiAgICAgICAgaWYgKCFmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBhID0gZG9j
dW1lbnQuY3JlYXRlRXZlbnQoIkV2ZW50Iik7CiAgICAgICAgICAgIGEuaW5pdEV2ZW50KCJmb28i
LCAhMCwgITApOwogICAgICAgICAgICBhLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIHJl
dHVybiBhLmRlZmF1bHRQcmV2ZW50ZWQKICAgICAgICB9KCkpIHsKICAgICAgICAgICAgdmFyIGEg
PSBFdmVudC5wcm90b3R5cGUucHJldmVudERlZmF1bHQ7CiAgICAgICAgICAgIEV2ZW50LnByb3Rv
dHlwZS5wcmV2ZW50RGVmYXVsdCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHRoaXMu
Y2FuY2VsYWJsZSAmJiAoYS5jYWxsKHRoaXMpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywg
ImRlZmF1bHRQcmV2ZW50ZWQiLCB7CiAgICAgICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAo
KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAhMAogICAgICAgICAgICAgICAgICAg
IH0sIGNvbmZpZ3VyYWJsZTogITAKICAgICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9CiAg
ICAgICAgfQogICAgICAgIHZhciBiID0gL1RyaWRlbnQvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2Vu
dCk7CiAgICAgICAgaWYgKCF3aW5kb3cuQ3VzdG9tRXZlbnQgfHwgYiAmJiAiZnVuY3Rpb24iICE9
PSB0eXBlb2Ygd2luZG93LkN1c3RvbUV2ZW50KSB3aW5kb3cuQ3VzdG9tRXZlbnQgPSBmdW5jdGlv
biAoYSwgYikgewogICAgICAgICAgICBiID0gYiB8fCB7fTsKICAgICAgICAgICAgdmFyIGMgPSBk
b2N1bWVudC5jcmVhdGVFdmVudCgiQ3VzdG9tRXZlbnQiKTsKICAgICAgICAgICAgYy5pbml0Q3Vz
dG9tRXZlbnQoYSwgISFiLmJ1YmJsZXMsICEhYi5jYW5jZWxhYmxlLCBiLmRldGFpbCk7CiAgICAg
ICAgICAgIHJldHVybiBjCiAgICAgICAgfSwgd2luZG93LkN1c3RvbUV2ZW50LnByb3RvdHlwZSA9
IHdpbmRvdy5FdmVudC5wcm90b3R5cGU7CiAgICAgICAgaWYgKCF3aW5kb3cuRXZlbnQgfHwgYiAm
JiAiZnVuY3Rpb24iICE9PSB0eXBlb2Ygd2luZG93LkV2ZW50KSB7CiAgICAgICAgICAgIHZhciBj
ID0gd2luZG93LkV2ZW50OwogICAgICAgICAgICB3aW5kb3cuRXZlbnQgPSBmdW5jdGlvbiAoYSwg
YikgewogICAgICAgICAgICAgICAgYiA9IGIgfHwge307CiAgICAgICAgICAgICAgICB2YXIgYyA9
IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCJFdmVudCIpOwogICAgICAgICAgICAgICAgYy5pbml0RXZl
bnQoYSwgISFiLmJ1YmJsZXMsICEhYi5jYW5jZWxhYmxlKTsKICAgICAgICAgICAgICAgIHJldHVy
biBjCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGlmIChjKSBmb3IgKHZhciBkIGluIGMpIHdp
bmRvdy5FdmVudFtkXSA9IGNbZF07CiAgICAgICAgICAgIHdpbmRvdy5FdmVudC5wcm90b3R5cGUg
PSBjLnByb3RvdHlwZQogICAgICAgIH0KICAgICAgICBpZiAoIXdpbmRvdy5Nb3VzZUV2ZW50IHx8
IGIgJiYgImZ1bmN0aW9uIiAhPT0gdHlwZW9mIHdpbmRvdy5Nb3VzZUV2ZW50KSB7CiAgICAgICAg
ICAgIGIgPSB3aW5kb3cuTW91c2VFdmVudDsKICAgICAgICAgICAgd2luZG93Lk1vdXNlRXZlbnQg
PSBmdW5jdGlvbiAoYSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
YikgewogICAgICAgICAgICAgICAgYiA9IGIgfHwge307CiAgICAgICAgICAgICAgICB2YXIgYyA9
IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCJNb3VzZUV2ZW50Iik7CiAgICAgICAgICAgICAgICBjLmlu
aXRNb3VzZUV2ZW50KGEsICEhYi5idWJibGVzLCAhIWIuY2FuY2VsYWJsZSwgYi52aWV3IHx8IHdp
bmRvdywgYi5kZXRhaWwsIGIuc2NyZWVuWCwgYi5zY3JlZW5ZLCBiLmNsaWVudFgsIGIuY2xpZW50
WSwgYi5jdHJsS2V5LCBiLmFsdEtleSwgYi5zaGlmdEtleSwgYi5tZXRhS2V5LCBiLmJ1dHRvbiwg
Yi5yZWxhdGVkVGFyZ2V0KTsKICAgICAgICAgICAgICAgIHJldHVybiBjCiAgICAgICAgICAgIH07
CiAgICAgICAgICAgIGlmIChiKSBmb3IgKGQgaW4gYikgd2luZG93Lk1vdXNlRXZlbnRbZF0gPSBi
W2RdOwogICAgICAgICAgICB3aW5kb3cuTW91c2VFdmVudC5wcm90b3R5cGUgPSBiLnByb3RvdHlw
ZQogICAgICAgIH0KICAgICAgICBBcnJheS5mcm9tIHx8IChBcnJheS5mcm9tID0gZnVuY3Rpb24g
KGEpIHsKICAgICAgICAgICAgcmV0dXJuIFtdLnNsaWNlLmNhbGwoYSkKICAgICAgICB9KTsKICAg
ICAgICBPYmplY3QuYXNzaWduIHx8IChPYmplY3QuYXNzaWduID0gZnVuY3Rpb24gKGEsIGIpIHsK
ICAgICAgICAgICAgZm9yICh2YXIgYyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSwgZCA9
IDAsIGU7IGQgPCBjLmxlbmd0aDsgZCsrKSBpZiAoZSA9IGNbZF0pIGZvciAodmFyIGYgPQogICAg
ICAgICAgICAgICAgYSwgbSA9IGUsIHEgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhtKSwg
eCA9IDA7IHggPCBxLmxlbmd0aDsgeCsrKSBlID0gcVt4XSwgZltlXSA9IG1bZV07CiAgICAgICAg
ICAgIHJldHVybiBhCiAgICAgICAgfSkKICAgIH0pKHdpbmRvdy5XZWJDb21wb25lbnRzKTsKICAg
IChmdW5jdGlvbiAoKSB7CiAgICAgICAgZnVuY3Rpb24gYSgpIHsKICAgICAgICB9CgogICAgICAg
IGZ1bmN0aW9uIGIoYSwgYikgewogICAgICAgICAgICBpZiAoIWEuY2hpbGROb2Rlcy5sZW5ndGgp
IHJldHVybiBbXTsKICAgICAgICAgICAgc3dpdGNoIChhLm5vZGVUeXBlKSB7CiAgICAgICAgICAg
ICAgICBjYXNlIE5vZGUuRE9DVU1FTlRfTk9ERToKICAgICAgICAgICAgICAgICAgICByZXR1cm4g
dWEuY2FsbChhLCBiKTsKICAgICAgICAgICAgICAgIGNhc2UgTm9kZS5ET0NVTUVOVF9GUkFHTUVO
VF9OT0RFOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBsYi5jYWxsKGEsIGIpOwogICAgICAg
ICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gVS5jYWxsKGEsIGIp
CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHZhciBjID0gInVuZGVmaW5lZCIgPT09
IHR5cGVvZiBIVE1MVGVtcGxhdGVFbGVtZW50LAogICAgICAgICAgICBkID0gIShkb2N1bWVudC5j
cmVhdGVEb2N1bWVudEZyYWdtZW50KCkuY2xvbmVOb2RlKCkgaW5zdGFuY2VvZiBEb2N1bWVudEZy
YWdtZW50KSwgZSA9ICExOwogICAgICAgIC9UcmlkZW50Ly50ZXN0KG5hdmlnYXRvci51c2VyQWdl
bnQpICYmIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgZnVuY3Rpb24gYShhLCBiKSB7CiAgICAg
ICAgICAgICAgICBpZiAoYSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpIGZvciAodmFyIGQ7
IGQgPSBhLmZpcnN0Q2hpbGQ7KSBjLmNhbGwodGhpcywgZCwgYik7IGVsc2UgYy5jYWxsKHRoaXMs
CiAgICAgICAgICAgICAgICAgICAgYSwgYik7CiAgICAgICAgICAgICAgICByZXR1cm4gYQogICAg
ICAgICAgICB9CgogICAgICAgICAgICBlID0gITA7CiAgICAgICAgICAgIHZhciBiID0gTm9kZS5w
cm90b3R5cGUuY2xvbmVOb2RlOwogICAgICAgICAgICBOb2RlLnByb3RvdHlwZS5jbG9uZU5vZGUg
PSBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICAgICAgYSA9IGIuY2FsbCh0aGlzLCBhKTsKICAg
ICAgICAgICAgICAgIHRoaXMgaW5zdGFuY2VvZiBEb2N1bWVudEZyYWdtZW50ICYmIChhLl9fcHJv
dG9fXyA9IERvY3VtZW50RnJhZ21lbnQucHJvdG90eXBlKTsKICAgICAgICAgICAgICAgIHJldHVy
biBhCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIERvY3VtZW50RnJhZ21lbnQucHJvdG90eXBl
LnF1ZXJ5U2VsZWN0b3JBbGwgPSBIVE1MRWxlbWVudC5wcm90b3R5cGUucXVlcnlTZWxlY3RvckFs
bDsKICAgICAgICAgICAgRG9jdW1lbnRGcmFnbWVudC5wcm90b3R5cGUucXVlcnlTZWxlY3RvciA9
IEhUTUxFbGVtZW50LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yOwogICAgICAgICAgICBPYmplY3Qu
ZGVmaW5lUHJvcGVydGllcyhEb2N1bWVudEZyYWdtZW50LnByb3RvdHlwZSwgewogICAgICAgICAg
ICAgICAgbm9kZVR5cGU6IHsKICAgICAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsK
ICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE5vZGUuRE9DVU1FTlRfRlJBR01FTlRfTk9E
RQogICAgICAgICAgICAgICAgICAgIH0sIGNvbmZpZ3VyYWJsZTogITAKICAgICAgICAgICAgICAg
IH0sIGxvY2FsTmFtZTogewogICAgICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgewog
ICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiAh
MAogICAgICAgICAgICAgICAgfSwgbm9kZU5hbWU6IHsKICAgICAgICAgICAgICAgICAgICBnZXQ6
IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICIjZG9jdW1lbnQt
ZnJhZ21lbnQiCiAgICAgICAgICAgICAgICAgICAgfSwgY29uZmlndXJhYmxlOiAhMAogICAgICAg
ICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgdmFyIGMgPSBOb2RlLnByb3Rv
dHlwZS5pbnNlcnRCZWZvcmU7CiAgICAgICAgICAgIE5vZGUucHJvdG90eXBlLmluc2VydEJlZm9y
ZSA9IGE7CiAgICAgICAgICAgIHZhciBkID0gTm9kZS5wcm90b3R5cGUuYXBwZW5kQ2hpbGQ7CiAg
ICAgICAgICAgIE5vZGUucHJvdG90eXBlLmFwcGVuZENoaWxkID0gZnVuY3Rpb24gKGIpIHsKICAg
ICAgICAgICAgICAgIGIgaW5zdGFuY2VvZiBEb2N1bWVudEZyYWdtZW50ID8gYS5jYWxsKHRoaXMs
IGIsIG51bGwpIDogZC5jYWxsKHRoaXMsIGIpOwogICAgICAgICAgICAgICAgcmV0dXJuIGIKICAg
ICAgICAgICAgfTsKICAgICAgICAgICAgdmFyIGYgPSBOb2RlLnByb3RvdHlwZS5yZW1vdmVDaGls
ZCwgZyA9IE5vZGUucHJvdG90eXBlLnJlcGxhY2VDaGlsZDsKICAgICAgICAgICAgTm9kZS5wcm90
b3R5cGUucmVwbGFjZUNoaWxkID0gZnVuY3Rpb24gKGIsIGMpIHsKICAgICAgICAgICAgICAgIGIg
aW5zdGFuY2VvZiBEb2N1bWVudEZyYWdtZW50ID8gKGEuY2FsbCh0aGlzLCBiLCBjKSwgZi5jYWxs
KHRoaXMsIGMpKSA6IGcuY2FsbCh0aGlzLCBiLCBjKTsKICAgICAgICAgICAgICAgIHJldHVybiBj
CiAgICAgICAgICAgIH07CiAgICAgICAgICAgIERvY3VtZW50LnByb3RvdHlwZS5jcmVhdGVEb2N1
bWVudEZyYWdtZW50ID0KICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAg
ICAgICAgICB2YXIgYSA9IHRoaXMuY3JlYXRlRWxlbWVudCgiZGYiKTsKICAgICAgICAgICAgICAg
ICAgICBhLl9fcHJvdG9fXyA9IERvY3VtZW50RnJhZ21lbnQucHJvdG90eXBlOwogICAgICAgICAg
ICAgICAgICAgIHJldHVybiBhCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB2YXIgaCA9
IERvY3VtZW50LnByb3RvdHlwZS4=</Default>
</Parameter>

<Parameter name="Frag10">
<Default>dHVybiBiCiAgICB9CgogICAgZnVuY3Rpb24gd2MoYSwgYiwgYykgewogICAgICAgIGlmIChhID0g
KGEgPSB2KGEpKSAmJiBhLkgpIGIgJiYgYS5hZGRlZE5vZGVzLnB1c2goYiksIGMgJiYgYS5yZW1v
dmVkTm9kZXMucHVzaChjKSwgYWIoYSkKICAgIH0KCiAgICB2YXIgQ2MgPSBCKHsKICAgICAgICBn
ZXQgcGFyZW50Tm9kZSgpIHsKICAgICAgICAgICAgdmFyIGEgPSB2KHRoaXMpOwogICAgICAgICAg
ICBhID0gYSAmJiBhLnBhcmVudE5vZGU7CiAgICAgICAgICAgIHJldHVybiB2b2lkIDAgIT09IGEg
PyBhIDogdGhpcy5fX3NoYWR5X25hdGl2ZV9wYXJlbnROb2RlCiAgICAgICAgfSwgZ2V0IGZpcnN0
Q2hpbGQoKSB7CiAgICAgICAgICAgIHZhciBhID0gdih0aGlzKTsKICAgICAgICAgICAgYSA9IGEg
JiYgYS5maXJzdENoaWxkOwogICAgICAgICAgICByZXR1cm4gdm9pZCAwICE9PSBhID8gYSA6IHRo
aXMuX19zaGFkeV9uYXRpdmVfZmlyc3RDaGlsZAogICAgICAgIH0sIGdldCBsYXN0Q2hpbGQoKSB7
CiAgICAgICAgICAgIHZhciBhID0gdih0aGlzKTsKICAgICAgICAgICAgYSA9IGEgJiYgYS5sYXN0
Q2hpbGQ7CiAgICAgICAgICAgIHJldHVybiB2b2lkIDAgIT09IGEgPyBhIDogdGhpcy5fX3NoYWR5
X25hdGl2ZV9sYXN0Q2hpbGQKICAgICAgICB9LCBnZXQgbmV4dFNpYmxpbmcoKSB7CiAgICAgICAg
ICAgIHZhciBhID0gdih0aGlzKTsKICAgICAgICAgICAgYSA9IGEgJiYgYS5uZXh0U2libGluZzsK
ICAgICAgICAgICAgcmV0dXJuIHZvaWQgMCAhPT0gYSA/IGEgOiB0aGlzLl9fc2hhZHlfbmF0aXZl
X25leHRTaWJsaW5nCiAgICAgICAgfSwgZ2V0IHByZXZpb3VzU2libGluZygpIHsKICAgICAgICAg
ICAgdmFyIGEgPSB2KHRoaXMpOwogICAgICAgICAgICBhID0gYSAmJiBhLnByZXZpb3VzU2libGlu
ZzsKICAgICAgICAgICAgcmV0dXJuIHZvaWQgMCAhPT0gYSA/IGEgOiB0aGlzLl9fc2hhZHlfbmF0
aXZlX3ByZXZpb3VzU2libGluZwogICAgICAgIH0sCiAgICAgICAgZ2V0IGNoaWxkTm9kZXMoKSB7
CiAgICAgICAgICAgIGlmICh5KHRoaXMpKSB7CiAgICAgICAgICAgICAgICB2YXIgYSA9IHYodGhp
cyk7CiAgICAgICAgICAgICAgICBpZiAoIWEuY2hpbGROb2RlcykgewogICAgICAgICAgICAgICAg
ICAgIGEuY2hpbGROb2RlcyA9IFtdOwogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGIgPSB0
aGlzLl9fc2hhZHlfZmlyc3RDaGlsZDsgYjsgYiA9IGIuX19zaGFkeV9uZXh0U2libGluZykgYS5j
aGlsZE5vZGVzLnB1c2goYikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHZhciBj
ID0gYS5jaGlsZE5vZGVzCiAgICAgICAgICAgIH0gZWxzZSBjID0gdGhpcy5fX3NoYWR5X25hdGl2
ZV9jaGlsZE5vZGVzOwogICAgICAgICAgICBjLml0ZW0gPSBmdW5jdGlvbiAoYSkgewogICAgICAg
ICAgICAgICAgcmV0dXJuIGNbYV0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgcmV0dXJuIGMK
ICAgICAgICB9LCBnZXQgcGFyZW50RWxlbWVudCgpIHsKICAgICAgICAgICAgdmFyIGEgPSB2KHRo
aXMpOwogICAgICAgICAgICAoYSA9IGEgJiYgYS5wYXJlbnROb2RlKSAmJiBhLm5vZGVUeXBlICE9
PSBOb2RlLkVMRU1FTlRfTk9ERSAmJiAoYSA9IG51bGwpOwogICAgICAgICAgICByZXR1cm4gdm9p
ZCAwICE9PSBhID8gYSA6IHRoaXMuX19zaGFkeV9uYXRpdmVfcGFyZW50RWxlbWVudAogICAgICAg
IH0sIGdldCBpc0Nvbm5lY3RlZCgpIHsKICAgICAgICAgICAgaWYgKHNjICYmIHNjLmNhbGwodGhp
cykpIHJldHVybiAhMDsKICAgICAgICAgICAgaWYgKHRoaXMubm9kZVR5cGUgPT0gTm9kZS5ET0NV
TUVOVF9GUkFHTUVOVF9OT0RFKSByZXR1cm4gITE7CiAgICAgICAgICAgIHZhciBhID0gdGhpcy5v
d25lckRvY3VtZW50OwogICAgICAgICAgICBpZiAoVGEpIHsKICAgICAgICAgICAgICAgIGlmIChh
Ll9fc2hhZHlfbmF0aXZlX2NvbnRhaW5zKHRoaXMpKSByZXR1cm4gITAKICAgICAgICAgICAgfSBl
bHNlIGlmIChhLmRvY3VtZW50RWxlbWVudCAmJiBhLmRvY3VtZW50RWxlbWVudC5fX3NoYWR5X25h
dGl2ZV9jb250YWlucyh0aGlzKSkgcmV0dXJuICEwOwogICAgICAgICAgICBmb3IgKGEgPSB0aGlz
OyBhICYmICEoYSBpbnN0YW5jZW9mIERvY3VtZW50KTspIGEgPSBhLl9fc2hhZHlfcGFyZW50Tm9k
ZSB8fCAoeihhKSA/IGEuaG9zdCA6IHZvaWQgMCk7CiAgICAgICAgICAgIHJldHVybiAhIShhICYm
IGEgaW5zdGFuY2VvZiBEb2N1bWVudCkKICAgICAgICB9LCBnZXQgdGV4dENvbnRlbnQoKSB7CiAg
ICAgICAgICAgIGlmICh5KHRoaXMpKSB7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBhID0gW10s
IGIgPSAwLCBjID0gdGhpcy5fX3NoYWR5X2NoaWxkTm9kZXMsIGQ7IGQgPSBjW2JdOyBiKyspIGQu
bm9kZVR5cGUgIT09IE5vZGUuQ09NTUVOVF9OT0RFICYmIGEucHVzaChkLl9fc2hhZHlfdGV4dENv
bnRlbnQpOwogICAgICAgICAgICAgICAgcmV0dXJuIGEuam9pbigiIikKICAgICAgICAgICAgfQog
ICAgICAgICAgICByZXR1cm4gdGhpcy5fX3NoYWR5X25hdGl2ZV90ZXh0Q29udGVudAogICAgICAg
IH0sIHNldCB0ZXh0Q29udGVudChhKSB7CiAgICAgICAgICAgIGlmICgidW5kZWZpbmVkIiA9PT0K
ICAgICAgICAgICAgICAgIHR5cGVvZiBhIHx8IG51bGwgPT09IGEpIGEgPSAiIjsKICAgICAgICAg
ICAgc3dpdGNoICh0aGlzLm5vZGVUeXBlKSB7CiAgICAgICAgICAgICAgICBjYXNlIE5vZGUuRUxF
TUVOVF9OT0RFOgogICAgICAgICAgICAgICAgY2FzZSBOb2RlLkRPQ1VNRU5UX0ZSQUdNRU5UX05P
REU6CiAgICAgICAgICAgICAgICAgICAgaWYgKCF5KHRoaXMpICYmIHcubSkgewogICAgICAgICAg
ICAgICAgICAgICAgICB2YXIgYiA9IHRoaXMuX19zaGFkeV9maXJzdENoaWxkOwogICAgICAgICAg
ICAgICAgICAgICAgICAoYiAhPSB0aGlzLl9fc2hhZHlfbGFzdENoaWxkIHx8IGIgJiYgYi5ub2Rl
VHlwZSAhPSBOb2RlLlRFWFRfTk9ERSkgJiYgdGModGhpcyk7CiAgICAgICAgICAgICAgICAgICAg
ICAgIHRoaXMuX19zaGFkeV9uYXRpdmVfdGV4dENvbnRlbnQgPSBhCiAgICAgICAgICAgICAgICAg
ICAgfSBlbHNlIHRjKHRoaXMpLCAoMCA8IGEubGVuZ3RoIHx8IHRoaXMubm9kZVR5cGUgPT09IE5v
ZGUuRUxFTUVOVF9OT0RFKSAmJiB0aGlzLl9fc2hhZHlfaW5zZXJ0QmVmb3JlKGRvY3VtZW50LmNy
ZWF0ZVRleHROb2RlKGEpKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAg
ICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub2RlVmFsdWUgPSBhCiAgICAg
ICAgICAgIH0KICAgICAgICB9LCBpbnNlcnRCZWZvcmU6IGZ1bmN0aW9uIChhLCBiKSB7CiAgICAg
ICAgICAgIGlmICh0aGlzLm93bmVyRG9jdW1lbnQgIT09IHBjICYmIGEub3duZXJEb2N1bWVudCAh
PT0gcGMpIHJldHVybiB0aGlzLl9fc2hhZHlfbmF0aXZlX2luc2VydEJlZm9yZShhLAogICAgICAg
ICAgICAgICAgYiksIGE7CiAgICAgICAgICAgIGlmIChhID09PSB0aGlzKSB0aHJvdyBFcnJvcigi
RmFpbGVkIHRvIGV4ZWN1dGUgJ2FwcGVuZENoaWxkJyBvbiAnTm9kZSc6IFRoZSBuZXcgY2hpbGQg
ZWxlbWVudCBjb250YWlucyB0aGUgcGFyZW50LiIpOwogICAgICAgICAgICBpZiAoYikgewogICAg
ICAgICAgICAgICAgdmFyIGMgPSB2KGIpOwogICAgICAgICAgICAgICAgYyA9IGMgJiYgYy5wYXJl
bnROb2RlOwogICAgICAgICAgICAgICAgaWYgKHZvaWQgMCAhPT0gYyAmJiBjICE9PSB0aGlzIHx8
IHZvaWQgMCA9PT0gYyAmJiBiLl9fc2hhZHlfbmF0aXZlX3BhcmVudE5vZGUgIT09IHRoaXMpIHRo
cm93IEVycm9yKCJGYWlsZWQgdG8gZXhlY3V0ZSAnaW5zZXJ0QmVmb3JlJyBvbiAnTm9kZSc6IFRo
ZSBub2RlIGJlZm9yZSB3aGljaCB0aGUgbmV3IG5vZGUgaXMgdG8gYmUgaW5zZXJ0ZWQgaXMgbm90
IGEgY2hpbGQgb2YgdGhpcyBub2RlLiIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChi
ID09PSBhKSByZXR1cm4gYTsKICAgICAgICAgICAgdmFyIGQgPSBbXSwgZSA9IChjID0geGModGhp
cykpID8gYy5ob3N0LmxvY2FsTmFtZSA6IG5jKHRoaXMpLCBmID0gYS5fX3NoYWR5X3BhcmVudE5v
ZGU7CiAgICAgICAgICAgIGlmIChmKSB7CiAgICAgICAgICAgICAgICB2YXIgZyA9IG5jKGEpOwog
ICAgICAgICAgICAgICAgZi5fX3NoYWR5X3JlbW92ZUNoaWxkKGEsICEhYyB8fAogICAgICAgICAg
ICAgICAgICAgICF4YyhhKSkKICAgICAgICAgICAgfQogICAgICAgICAgICBmID0gITA7CiAgICAg
ICAgICAgIHZhciBoID0gKCFxYyB8fCB2b2lkIDAgPT09IGEuX19ub0luc2VydGlvblBvaW50KSAm
JiAhbWMoYSwgZSksCiAgICAgICAgICAgICAgICBrID0gYyAmJiAhYS5fX25vSW5zZXJ0aW9uUG9p
bnQgJiYgKCFxYyB8fCBhLm5vZGVUeXBlID09PSBOb2RlLkRPQ1VNRU5UX0ZSQUdNRU5UX05PREUp
OwogICAgICAgICAgICBpZiAoayB8fCBoKSBoICYmIChnID0gZyB8fCBuYyhhKSksIG9jKGEsIGZ1
bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgICBrICYmICJzbG90IiA9PT0gYS5sb2NhbE5hbWUg
JiYgZC5wdXNoKGEpOwogICAgICAgICAgICAgICAgaWYgKGgpIHsKICAgICAgICAgICAgICAgICAg
ICB2YXIgYiA9IGc7CiAgICAgICAgICAgICAgICAgICAgRygpICYmIChiICYmIGxjKGEsIGIpLCAo
YiA9IEcoKSkgJiYgYi5zY29wZU5vZGUoYSwgZSkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAg
ICAgIH0pOwogICAgICAgICAgICBpZiAoInNsb3QiID09PSB0aGlzLmxvY2FsTmFtZSB8fCBkLmxl
bmd0aCkgZC5sZW5ndGggJiYgKGMuYyA9IGMuYyB8fCBbXSwgYy5hID0gYy5hIHx8IFtdLCBjLmIg
PSBjLmIgfHwge30sIGMuYy5wdXNoLmFwcGx5KGMuYywgZCBpbnN0YW5jZW9mIEFycmF5ID8gZCA6
IGphKGlhKGQpKSkpLCBjICYmIEFjKGMpOwogICAgICAgICAgICB5KHRoaXMpICYmIChoYyhhLCB0
aGlzLCBiKSwgYyA9IHYodGhpcyksIExhKHRoaXMpID8gKEFjKGMucm9vdCksIGYgPSAhMSkgOiBj
LnJvb3QgJiYgKGYgPSAhMSkpOwogICAgICAgICAgICBmID8KICAgICAgICAgICAgICAgIChjID0g
eih0aGlzKSA/IHRoaXMuaG9zdCA6IHRoaXMsIGIgPyAoYiA9IHZjKGIpLCBjLl9fc2hhZHlfbmF0
aXZlX2luc2VydEJlZm9yZShhLCBiKSkgOiBjLl9fc2hhZHlfbmF0aXZlX2FwcGVuZENoaWxkKGEp
KSA6IGEub3duZXJEb2N1bWVudCAhPT0gdGhpcy5vd25lckRvY3VtZW50ICYmIHRoaXMub3duZXJE
b2N1bWVudC5hZG9wdE5vZGUoYSk7CiAgICAgICAgICAgIHdjKHRoaXMsIGEpOwogICAgICAgICAg
ICByZXR1cm4gYQogICAgICAgIH0sIGFwcGVuZENoaWxkOiBmdW5jdGlvbiAoYSkgewogICAgICAg
ICAgICByZXR1cm4gdGhpcy5fX3NoYWR5X2luc2VydEJlZm9yZShhKQogICAgICAgIH0sIHJlbW92
ZUNoaWxkOiBmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICBiID0gdm9pZCAwID09PSBiID8g
ITEgOiBiOwogICAgICAgICAgICBpZiAodGhpcy5vd25lckRvY3VtZW50ICE9PSBwYykgcmV0dXJu
IHRoaXMuX19zaGFkeV9uYXRpdmVfcmVtb3ZlQ2hpbGQoYSk7CiAgICAgICAgICAgIGlmIChhLl9f
c2hhZHlfcGFyZW50Tm9kZSAhPT0gdGhpcykgdGhyb3cgRXJyb3IoIlRoZSBub2RlIHRvIGJlIHJl
bW92ZWQgaXMgbm90IGEgY2hpbGQgb2YgdGhpcyBub2RlOiAiICsgYSk7CiAgICAgICAgICAgIHZh
ciBjID0geGMoYSksIGQgPSBjICYmIEJjKGMsIGEpLCBlID0gdih0aGlzKTsKICAgICAgICAgICAg
aWYgKHkodGhpcykgJiYgKGljKGEsIHRoaXMpLCBMYSh0aGlzKSkpIHsKICAgICAgICAgICAgICAg
IEFjKGUucm9vdCk7CiAgICAgICAgICAgICAgICB2YXIgZiA9ICEwCiAgICAgICAgICAgIH0KICAg
ICAgICAgICAgaWYgKEcoKSAmJiAhYiAmJiBjKSB7CiAgICAgICAgICAgICAgICB2YXIgZyA9IG5j
KGEpOwogICAgICAgICAgICAgICAgb2MoYSwgZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAg
ICAgICBsYyhhLCBnKQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQogICAgICAgICAg
ICB1YyhhKTsKICAgICAgICAgICAgYyAmJiAoKGIgPSB0aGlzICYmICJzbG90IiA9PT0gdGhpcy5s
b2NhbE5hbWUpICYmIChmID0gITApLCAoZCB8fCBiKSAmJiBBYyhjKSk7CiAgICAgICAgICAgIGYg
fHwgKGYgPSB6KHRoaXMpID8gdGhpcy5ob3N0IDogdGhpcywgKCFlLnJvb3QgJiYgInNsb3QiICE9
PSBhLmxvY2FsTmFtZSB8fCBmID09PSBhLl9fc2hhZHlfbmF0aXZlX3BhcmVudE5vZGUpICYmIGYu
X19zaGFkeV9uYXRpdmVfcmVtb3ZlQ2hpbGQoYSkpOwogICAgICAgICAgICB3Yyh0aGlzLCBudWxs
LCBhKTsKICAgICAgICAgICAgcmV0dXJuIGEKICAgICAgICB9LCByZXBsYWNlQ2hpbGQ6IGZ1bmN0
aW9uIChhLCBiKSB7CiAgICAgICAgICAgIHRoaXMuX19zaGFkeV9pbnNlcnRCZWZvcmUoYSwgYik7
CiAgICAgICAgICAgIHRoaXMuX19zaGFkeV9yZW1vdmVDaGlsZChiKTsKICAgICAgICAgICAgcmV0
dXJuIGEKICAgICAgICB9LCBjbG9uZU5vZGU6IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIGlm
ICgidGVtcGxhdGUiID09IHRoaXMubG9jYWxOYW1lKSByZXR1cm4gdGhpcy5fX3NoYWR5X25hdGl2
ZV9jbG9uZU5vZGUoYSk7CiAgICAgICAgICAgIHZhciBiID0gdGhpcy5fX3NoYWR5X25hdGl2ZV9j
bG9uZU5vZGUoITEpOwogICAgICAgICAgICBpZiAoYSAmJiBiLm5vZGVUeXBlICE9PSBOb2RlLkFU
VFJJQlVURV9OT0RFKSB7CiAgICAgICAgICAgICAgICBhID0gdGhpcy5fX3NoYWR5X2NoaWxkTm9k
ZXM7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBjID0gMCwgZDsgYyA8IGEubGVuZ3RoOyBjKysp
IGQgPSBhW2NdLl9fc2hhZHlfY2xvbmVOb2RlKCEwKSwgYi5fX3NoYWR5X2FwcGVuZENoaWxkKGQp
CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGIKICAgICAgICB9LCBnZXRSb290Tm9k
ZTogZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgaWYgKHRoaXMgJiYgdGhpcy5ub2RlVHlwZSkg
ewogICAgICAgICAgICAgICAgdmFyIGIgPSB1KHRoaXMpLCBjID0gYi5LOwogICAgICAgICAgICAg
ICAgdm9pZCAwID09PSBjICYmICh6KHRoaXMpID8gKGMgPSB0aGlzLCBiLksgPSBjKSA6IChjID0g
KGMgPSB0aGlzLl9fc2hhZHlfcGFyZW50Tm9kZSkgPyBjLl9fc2hhZHlfZ2V0Um9vdE5vZGUoYSkg
OiB0aGlzLCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuX19zaGFkeV9uYXRpdmVfY29udGFpbnMo
dGhpcykgJiYgKGIuSyA9IGMpKSk7CiAgICAgICAgICAgICAgICByZXR1cm4gYwogICAgICAgICAg
ICB9CiAgICAgICAgfSwgY29udGFpbnM6IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIHJldHVy
biBVYSh0aGlzLCBhKQogICAgICAgIH0KICAgIH0pOwoKICAgIGZ1bmN0aW9uIERjKGEsIGIsIGMp
IHsKICAgICAgICB2YXIgZCA9IFtdOwogICAgICAgIEVjKGEuX19zaGFkeV9jaGlsZE5vZGVzLCBi
LCBjLCBkKTsKICAgICAgICByZXR1cm4gZAogICAgfQoKICAgIGZ1bmN0aW9uIEVjKGEsIGIsIGMs
IGQpIHsKICAgICAgICBmb3IgKHZhciBlID0gMCwgZiA9IGEubGVuZ3RoLCBnID0gdm9pZCAwOyBl
IDwgZiAmJiAoZyA9IGFbZV0pOyBlKyspIHsKICAgICAgICAgICAgdmFyIGg7CiAgICAgICAgICAg
IGlmIChoID0gZy5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUpIHsKICAgICAgICAgICAg
ICAgIGggPSBnOwogICAgICAgICAgICAgICAgdmFyIGsgPSBiLCBsID0gYywgbSA9IGQsIHEgPSBr
KGgpOwogICAgICAgICAgICAgICAgcSAmJiBtLnB1c2goaCk7CiAgICAgICAgICAgICAgICBsICYm
IGwocSkgPyBoID0gcSA6IChFYyhoLl9fc2hhZHlfY2hpbGROb2RlcywgaywgbCwgbSksIGggPSB2
b2lkIDApCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGgpIGJyZWFrCiAgICAgICAgfQog
ICAgfQoKICAgIHZhciBGYyA9IEIoewogICAgICAgIGdldCBmaXJzdEVsZW1lbnRDaGlsZCgpIHsK
ICAgICAgICAgICAgdmFyIGEgPSA=</Default>
</Parameter>

<Parameter name="Frag11">
<Default>dih0aGlzKTsKICAgICAgICAgICAgaWYgKGEgJiYgdm9pZCAwICE9PSBhLmZpcnN0Q2hpbGQpIHsK
ICAgICAgICAgICAgICAgIGZvciAoYSA9IHRoaXMuX19zaGFkeV9maXJzdENoaWxkOyBhICYmIGEu
bm9kZVR5cGUgIT09IE5vZGUuRUxFTUVOVF9OT0RFOykgYSA9IGEuX19zaGFkeV9uZXh0U2libGlu
ZzsKICAgICAgICAgICAgICAgIHJldHVybiBhCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0
dXJuIHRoaXMuX19zaGFkeV9uYXRpdmVfZmlyc3RFbGVtZW50Q2hpbGQKICAgICAgICB9LCBnZXQg
bGFzdEVsZW1lbnRDaGlsZCgpIHsKICAgICAgICAgICAgdmFyIGEgPSB2KHRoaXMpOwogICAgICAg
ICAgICBpZiAoYSAmJiB2b2lkIDAgIT09IGEubGFzdENoaWxkKSB7CiAgICAgICAgICAgICAgICBm
b3IgKGEgPSB0aGlzLl9fc2hhZHlfbGFzdENoaWxkOyBhICYmIGEubm9kZVR5cGUgIT09IE5vZGUu
RUxFTUVOVF9OT0RFOykgYSA9IGEuX19zaGFkeV9wcmV2aW91c1NpYmxpbmc7CiAgICAgICAgICAg
ICAgICByZXR1cm4gYQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9fc2hh
ZHlfbmF0aXZlX2xhc3RFbGVtZW50Q2hpbGQKICAgICAgICB9LCBnZXQgY2hpbGRyZW4oKSB7CiAg
ICAgICAgICAgIHJldHVybiB5KHRoaXMpID8gVmEoQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxs
KHRoaXMuX19zaGFkeV9jaGlsZE5vZGVzLAogICAgICAgICAgICAgICAgZnVuY3Rpb24gKGEpIHsK
ICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05P
REUKICAgICAgICAgICAgICAgIH0pKSA6IHRoaXMuX19zaGFkeV9uYXRpdmVfY2hpbGRyZW4KICAg
ICAgICB9LCBnZXQgY2hpbGRFbGVtZW50Q291bnQoKSB7CiAgICAgICAgICAgIHZhciBhID0gdGhp
cy5fX3NoYWR5X2NoaWxkcmVuOwogICAgICAgICAgICByZXR1cm4gYSA/IGEubGVuZ3RoIDogMAog
ICAgICAgIH0KICAgIH0pLCBHYyA9IEIoewogICAgICAgIHF1ZXJ5U2VsZWN0b3I6IGZ1bmN0aW9u
IChhKSB7CiAgICAgICAgICAgIHJldHVybiBEYyh0aGlzLCBmdW5jdGlvbiAoYikgewogICAgICAg
ICAgICAgICAgcmV0dXJuIE9hLmNhbGwoYiwgYSkKICAgICAgICAgICAgfSwgZnVuY3Rpb24gKGEp
IHsKICAgICAgICAgICAgICAgIHJldHVybiAhIWEKICAgICAgICAgICAgfSlbMF0gfHwgbnVsbAog
ICAgICAgIH0sIHF1ZXJ5U2VsZWN0b3JBbGw6IGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAg
IGlmIChiKSB7CiAgICAgICAgICAgICAgICBiID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwo
dGhpcy5fX3NoYWR5X25hdGl2ZV9xdWVyeVNlbGVjdG9yQWxsKGEpKTsKICAgICAgICAgICAgICAg
IHZhciBjID0gdGhpcy5fX3NoYWR5X2dldFJvb3ROb2RlKCk7CiAgICAgICAgICAgICAgICByZXR1
cm4gYi5maWx0ZXIoZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5f
X3NoYWR5X2dldFJvb3ROb2RlKCkgPT0gYwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAg
fQogICAgICAgICAgICByZXR1cm4gRGModGhpcywgZnVuY3Rpb24gKGIpIHsKICAgICAgICAgICAg
ICAgIHJldHVybiBPYS5jYWxsKGIsCiAgICAgICAgICAgICAgICAgICAgYSkKICAgICAgICAgICAg
fSkKICAgICAgICB9CiAgICB9KSwgSGMgPSB3Lm9hID8gT2JqZWN0LmFzc2lnbih7fSwgRmMpIDog
RmM7CiAgICBPYmplY3QuYXNzaWduKEZjLCBHYyk7CiAgICB2YXIgSWMgPSBCKHsKICAgICAgICBn
ZXRFbGVtZW50QnlJZDogZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgcmV0dXJuICIiID09PSBh
ID8gbnVsbCA6IERjKHRoaXMsIGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgICAgICByZXR1cm4g
Yi5pZCA9PSBhCiAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgICBy
ZXR1cm4gISFhCiAgICAgICAgICAgIH0pWzBdIHx8IG51bGwKICAgICAgICB9CiAgICB9KTsKICAg
IHZhciBKYyA9IEIoewogICAgICAgIGdldCBhY3RpdmVFbGVtZW50KCkgewogICAgICAgICAgICB2
YXIgYSA9IHcubSA/IGRvY3VtZW50Ll9fc2hhZHlfbmF0aXZlX2FjdGl2ZUVsZW1lbnQgOiBkb2N1
bWVudC5hY3RpdmVFbGVtZW50OwogICAgICAgICAgICBpZiAoIWEgfHwgIWEubm9kZVR5cGUpIHJl
dHVybiBudWxsOwogICAgICAgICAgICB2YXIgYiA9ICEheih0aGlzKTsKICAgICAgICAgICAgaWYg
KCEodGhpcyA9PT0gZG9jdW1lbnQgfHwgYiAmJiB0aGlzLmhvc3QgIT09IGEgJiYgdGhpcy5ob3N0
Ll9fc2hhZHlfbmF0aXZlX2NvbnRhaW5zKGEpKSkgcmV0dXJuIG51bGw7CiAgICAgICAgICAgIGZv
ciAoYiA9IHhjKGEpOyBiICYmIGIgIT09IHRoaXM7KSBhID0gYi5ob3N0LCBiID0geGMoYSk7CiAg
ICAgICAgICAgIHJldHVybiB0aGlzID09PSBkb2N1bWVudCA/IGIgPyBudWxsIDogYSA6IGIgPT09
IHRoaXMgPyBhIDogbnVsbAogICAgICAgIH0KICAgIH0pOwogICAgdmFyIEtjID0gZG9jdW1lbnQu
aW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCJpbmVydCIpLCBMYyA9IEIoewogICAg
ICAgIGdldCBpbm5lckhUTUwoKSB7CiAgICAgICAgICAgIHJldHVybiB5KHRoaXMpID8ga2IoInRl
bXBsYXRlIiA9PT0gdGhpcy5sb2NhbE5hbWUgPyB0aGlzLmNvbnRlbnQgOiB0aGlzLCBmdW5jdGlv
biAoYSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGEuX19zaGFkeV9jaGlsZE5vZGVzCiAgICAg
ICAgICAgIH0pIDogdGhpcy5fX3NoYWR5X25hdGl2ZV9pbm5lckhUTUwKICAgICAgICB9LCBzZXQg
aW5uZXJIVE1MKGEpIHsKICAgICAgICAgICAgaWYgKCJ0ZW1wbGF0ZSIgPT09IHRoaXMubG9jYWxO
YW1lKSB0aGlzLl9fc2hhZHlfbmF0aXZlX2lubmVySFRNTCA9IGE7IGVsc2UgewogICAgICAgICAg
ICAgICAgdGModGhpcyk7CiAgICAgICAgICAgICAgICB2YXIgYiA9IHRoaXMubG9jYWxOYW1lIHx8
ICJkaXYiOwogICAgICAgICAgICAgICAgYiA9IHRoaXMubmFtZXNwYWNlVVJJICYmIHRoaXMubmFt
ZXNwYWNlVVJJICE9PSBLYy5uYW1lc3BhY2VVUkkgPyBLYy5jcmVhdGVFbGVtZW50TlModGhpcy5u
YW1lc3BhY2VVUkksIGIpIDogS2MuY3JlYXRlRWxlbWVudChiKTsKICAgICAgICAgICAgICAgIGZv
ciAody5tID8gYi5fX3NoYWR5X25hdGl2ZV9pbm5lckhUTUwgPSBhIDogYi5pbm5lckhUTUwgPQog
ICAgICAgICAgICAgICAgICAgIGE7IGEgPSBiLl9fc2hhZHlfZmlyc3RDaGlsZDspIHRoaXMuX19z
aGFkeV9pbnNlcnRCZWZvcmUoYSkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0pOwogICAg
dmFyIE1jID0gQih7CiAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKGEsIGIsIGMp
IHsKICAgICAgICAgICAgIm9iamVjdCIgIT09IHR5cGVvZiBjICYmIChjID0ge2NhcHR1cmU6ICEh
Y30pOwogICAgICAgICAgICBjLiQgPSB0aGlzOwogICAgICAgICAgICB0aGlzLmhvc3QuX19zaGFk
eV9hZGRFdmVudExpc3RlbmVyKGEsIGIsIGMpCiAgICAgICAgfSwgcmVtb3ZlRXZlbnRMaXN0ZW5l
cjogZnVuY3Rpb24gKGEsIGIsIGMpIHsKICAgICAgICAgICAgIm9iamVjdCIgIT09IHR5cGVvZiBj
ICYmIChjID0ge2NhcHR1cmU6ICEhY30pOwogICAgICAgICAgICBjLiQgPSB0aGlzOwogICAgICAg
ICAgICB0aGlzLmhvc3QuX19zaGFkeV9yZW1vdmVFdmVudExpc3RlbmVyKGEsIGIsIGMpCiAgICAg
ICAgfQogICAgfSk7CgogICAgZnVuY3Rpb24gTmMoYSwgYikgewogICAgICAgIEEoYSwgTWMsIGIp
OwogICAgICAgIEEoYSwgSmMsIGIpOwogICAgICAgIEEoYSwgTGMsIGIpOwogICAgICAgIEEoYSwg
RmMsIGIpOwogICAgICAgIHcuSiAmJiAhYiA/IChBKGEsIENjLCBiKSwgQShhLCBJYywgYikpIDog
dy5tIHx8IChBKGEsIEFiKSwgQShhLCB6YikpCiAgICB9O3ZhciBPYyA9IHt9LCBQYyA9IHcuZGVm
ZXJDb25uZWN0aW9uQ2FsbGJhY2tzICYmICJsb2FkaW5nIiA9PT0gZG9jdW1lbnQucmVhZHlTdGF0
ZSwgUWM7CgogICAgZnVuY3Rpb24gUmMoYSkgewogICAgICAgIHZhciBiID0gW107CiAgICAgICAg
ZG8gYi51bnNoaWZ0KGEpOyB3aGlsZSAoYSA9IGEuX19zaGFkeV9wYXJlbnROb2RlKTsKICAgICAg
ICByZXR1cm4gYgogICAgfQoKICAgIGZ1bmN0aW9uIFNjKGEsIGIsIGMpIHsKICAgICAgICBpZiAo
YSAhPT0gT2MpIHRocm93IG5ldyBUeXBlRXJyb3IoIklsbGVnYWwgY29uc3RydWN0b3IiKTsKICAg
ICAgICB0aGlzLnphID0gIlNoYWR5Um9vdCI7CiAgICAgICAgdGhpcy5ob3N0ID0gYjsKICAgICAg
ICB0aGlzLm1vZGUgPSBjICYmIGMubW9kZTsKICAgICAgICBqYyhiKTsKICAgICAgICBhID0gdShi
KTsKICAgICAgICBhLnJvb3QgPSB0aGlzOwogICAgICAgIGEucGEgPSAiY2xvc2VkIiAhPT0gdGhp
cy5tb2RlID8gdGhpcyA6IG51bGw7CiAgICAgICAgYSA9IHUodGhpcyk7CiAgICAgICAgYS5maXJz
dENoaWxkID0gYS5sYXN0Q2hpbGQgPSBhLnBhcmVudE5vZGUgPSBhLm5leHRTaWJsaW5nID0gYS5w
cmV2aW91c1NpYmxpbmcgPSBudWxsOwogICAgICAgIGEuY2hpbGROb2RlcyA9IFtdOwogICAgICAg
IHRoaXMuYmEgPSB0aGlzLkIgPSAhMTsKICAgICAgICB0aGlzLmMgPSB0aGlzLmIgPSB0aGlzLmEg
PSBudWxsOwogICAgICAgIGlmICh3LnByZWZlclBlcmZvcm1hbmNlKSBmb3IgKDsgYSA9IGIuX19z
aGFkeV9uYXRpdmVfZmlyc3RDaGlsZDspIGIuX19zaGFkeV9uYXRpdmVfcmVtb3ZlQ2hpbGQoYSk7
IGVsc2UgQWModGhpcykKICAgIH0KCiAgICBmdW5jdGlvbiBBYyhhKSB7CiAgICAgICAgYS5CIHx8
IChhLkIgPSAhMCwgWWEoZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gVGMoYSkKICAg
ICAgICB9KSkKICAgIH0KCiAgICBmdW5jdGlvbiBUYyhhKSB7CiAgICAgICAgdmFyIGI7CiAgICAg
ICAgaWYgKGIgPSBhLkIpIHsKICAgICAgICAgICAgZm9yICh2YXIgYzsgYTspIGE6ewogICAgICAg
ICAgICAgICAgYS5CICYmIChjID0gYSksIGIgPSBhOwogICAgICAgICAgICAgICAgYSA9IGIuaG9z
dC5fX3NoYWR5X2dldFJvb3ROb2RlKCk7CiAgICAgICAgICAgICAgICBpZiAoeihhKSAmJiAoYiA9
IHYoYi5ob3N0KSkgJiYgMCA8IGIuTikgYnJlYWsgYTsKICAgICAgICAgICAgICAgIGEgPSB2b2lk
IDAKICAgICAgICAgICAgfQogICAgICAgICAgICBiID0gYwogICAgICAgIH0KICAgICAgICAoYyA9
IGIpICYmIGMuX3JlbmRlclNlbGYoKQogICAgfQoKICAgIFNjLnByb3RvdHlwZS5fcmVuZGVyU2Vs
ZiA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgYSA9IFBjOwogICAgICAgIFBjID0gITA7CiAg
ICAgICAgdGhpcy5CID0gITE7CiAgICAgICAgaWYgKHRoaXMuYSkgewogICAgICAgICAgICBVYyh0
aGlzKTsKICAgICAgICAgICAgZm9yICh2YXIgYiA9IDAsIGM7IGIgPCB0aGlzLmEubGVuZ3RoOyBi
KyspIHsKICAgICAgICAgICAgICAgIGMgPSB0aGlzLmFbYl07CiAgICAgICAgICAgICAgICB2YXIg
ZCA9IHYoYyksIGUgPSBkLmFzc2lnbmVkTm9kZXM7CiAgICAgICAgICAgICAgICBkLmFzc2lnbmVk
Tm9kZXMgPSBbXTsKICAgICAgICAgICAgICAgIGQuRCA9IFtdOwogICAgICAgICAgICAgICAgaWYg
KGQuY2EgPSBlKSBmb3IgKGQgPSAwOyBkIDwgZS5sZW5ndGg7IGQrKykgewogICAgICAgICAgICAg
ICAgICAgIHZhciBmID0gdihlW2RdKTsKICAgICAgICAgICAgICAgICAgICBmLlAgPSBmLmFzc2ln
bmVkU2xvdDsKICAgICAgICAgICAgICAgICAgICBmLmFzc2lnbmVkU2xvdCA9PT0gYyAmJiAoZi5h
c3NpZ25lZFNsb3QgPSBudWxsKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAg
ICAgICAgIGZvciAoYiA9IHRoaXMuaG9zdC5fX3NoYWR5X2ZpcnN0Q2hpbGQ7IGI7IGIgPSBiLl9f
c2hhZHlfbmV4dFNpYmxpbmcpIFZjKHRoaXMsIGIpOwogICAgICAgICAgICBmb3IgKGIgPSAwOyBi
IDwgdGhpcy5hLmxlbmd0aDsgYisrKSB7CiAgICAgICAgICAgICAgICBjID0gdGhpcy5hW2JdOwog
ICAgICAgICAgICAgICAgZSA9IHYoYyk7CiAgICAgICAgICAgICAgICBpZiAoIWUuYXNzaWduZWRO
b2Rlcy5sZW5ndGgpIGZvciAoZCA9IGMuX19zaGFkeV9maXJzdENoaWxkOyBkOyBkID0gZC5fX3No
YWR5X25leHRTaWJsaW5nKSBWYyh0aGlzLAogICAgICAgICAgICAgICAgICAgIGQsIGMpOwogICAg
ICAgICAgICAgICAgKGQgPSAoZCA9IHYoYy5fX3NoYWR5X3BhcmVudE5vZGUpKSAmJiBkLnJvb3Qp
ICYmIChNYShkKSB8fCBkLkIpICYmIGQuX3JlbmRlclNlbGYoKTsKICAgICAgICAgICAgICAgIFdj
KHRoaXMsIGUuRCwgZS5hc3NpZ25lZE5vZGVzKTsKICAgICAgICAgICAgICAgIGlmIChkID0gZS5j
YSkgewogICAgICAgICAgICAgICAgICAgIGZvciAoZiA9IDA7IGYgPCBkLmxlbmd0aDsgZisrKSB2
KGRbZl0pLlAgPSBudWxsOwogICAgICAgICAgICAgICAgICAgIGUuY2EgPSBudWxsOwogICAgICAg
ICAgICAgICAgICAgIGQubGVuZ3RoID4gZS5hc3NpZ25lZE5vZGVzLmxlbmd0aCAmJiAoZS5UID0g
ITApCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlLlQgJiYgKGUuVCA9ICExLCBY
Yyh0aGlzLCBjKSkKICAgICAgICAgICAgfQogICAgICAgICAgICBjID0gdGhpcy5hOwogICAgICAg
ICAgICBiID0gW107CiAgICAgICAgICAgIGZvciAoZSA9IDA7IGUgPCBjLmxlbmd0aDsgZSsrKSBk
ID0gY1tlXS5fX3NoYWR5X3BhcmVudE5vZGUsIChmID0gdihkKSkgJiYgZi5yb290IHx8ICEoMCA+
IGIuaW5kZXhPZihkKSkgfHwgYi5wdXNoKGQpOwogICAgICAgICAgICBmb3IgKGMgPSAwOyBjIDwg
Yi5sZW5ndGg7IGMrKykgewogICAgICAgICAgICAgICAgZiA9IGJbY107CiAgICAgICAgICAgICAg
ICBlID0gZiA9PT0gdGhpcyA/IHRoaXMuaG9zdCA6IGY7CiAgICAgICAgICAgICAgICBkID0gW107
CiAgICAgICAgICAgICAgICBmID0gZi5fX3NoYWR5X2NoaWxkTm9kZXM7CiAgICAgICAgICAgICAg
ICBmb3IgKHZhciBnID0gMDsgZyA8IGYubGVuZ3RoOyBnKyspIHsKICAgICAgICAgICAgICAgICAg
ICB2YXIgaCA9IGZbZ107CiAgICAgICAgICAgICAgICAgICAgaWYgKCJzbG90IiA9PSBoLmxvY2Fs
TmFtZSkgewogICAgICAgICAgICAgICAgICAgICAgICBoID0gdihoKS5EOwogICAgICAgICAgICAg
ICAgICAgICAgICBmb3IgKHZhciBrID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDA7IGsg
PCBoLmxlbmd0aDsgaysrKSBkLnB1c2goaFtrXSkKICAgICAgICAgICAgICAgICAgICB9IGVsc2Ug
ZC5wdXNoKGgpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmID0gQXJyYXkucHJv
dG90eXBlLnNsaWNlLmNhbGwoZS5fX3NoYWR5X25hdGl2ZV9jaGlsZE5vZGVzKTsKICAgICAgICAg
ICAgICAgIGcgPSBlYyhkLCBkLmxlbmd0aCwgZiwgZi5sZW5ndGgpOwogICAgICAgICAgICAgICAg
ayA9IGggPSAwOwogICAgICAgICAgICAgICAgZm9yICh2YXIgbCA9IHZvaWQgMDsgaCA8IGcubGVu
Z3RoICYmIChsID0gZ1toXSk7IGgrKykgewogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIG0g
PSAwLCBxID0gdm9pZCAwOyBtIDwgbC5MLmxlbmd0aCAmJiAocSA9IGwuTFttXSk7IG0rKykgcS5f
X3NoYWR5X25hdGl2ZV9wYXJlbnROb2RlID09PSBlICYmIGUuX19zaGFkeV9uYXRpdmVfcmVtb3Zl
Q2hpbGQocSksIGYuc3BsaWNlKGwuaW5kZXggKyBrLCAxKTsKICAgICAgICAgICAgICAgICAgICBr
IC09IGwuUgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgayA9IDA7CiAgICAgICAg
ICAgICAgICBmb3IgKGwgPSB2b2lkIDA7IGsgPCBnLmxlbmd0aCAmJiAobCA9IGdba10pOyBrKysp
IGZvciAoaCA9IGZbbC5pbmRleF0sIG0gPSBsLmluZGV4OyBtIDwgbC5pbmRleCArIGwuUjsgbSsr
KSBxID0gZFttXSwgZS5fX3NoYWR5X25hdGl2ZV9pbnNlcnRCZWZvcmUocSwgaCksIGYuc3BsaWNl
KG0sIDAsIHEpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKCF3LnByZWZlclBl
cmZvcm1hbmNlICYmICF0aGlzLmI=</Default>
</Parameter>

<Parameter name="Frag12">
<Default>YSkgZm9yIChiID0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIHRoaXMuaG9zdC5fX3NoYWR5X2NoaWxkTm9kZXMsIGMgPSAwLCBlID0gYi5sZW5n
dGg7IGMgPCBlOyBjKyspIGQgPSBiW2NdLCBmID0gdihkKSwgZC5fX3NoYWR5X25hdGl2ZV9wYXJl
bnROb2RlICE9PSB0aGlzLmhvc3QgfHwgInNsb3QiICE9PSBkLmxvY2FsTmFtZSAmJiBmLmFzc2ln
bmVkU2xvdCB8fCB0aGlzLmhvc3QuX19zaGFkeV9uYXRpdmVfcmVtb3ZlQ2hpbGQoZCk7CiAgICAg
ICAgdGhpcy5iYSA9ICEwOwogICAgICAgIFBjID0gYTsKICAgICAgICBRYyAmJiBRYygpCiAgICB9
OwoKICAgIGZ1bmN0aW9uIFZjKGEsIGIsIGMpIHsKICAgICAgICB2YXIgZCA9IHUoYiksIGUgPSBk
LlA7CiAgICAgICAgZC5QID0gbnVsbDsKICAgICAgICBjIHx8IChjID0gKGEgPSBhLmJbYi5fX3No
YWR5X3Nsb3QgfHwgIl9fY2F0Y2hhbGwiXSkgJiYgYVswXSk7CiAgICAgICAgYyA/ICh1KGMpLmFz
c2lnbmVkTm9kZXMucHVzaChiKSwgZC5hc3NpZ25lZFNsb3QgPSBjKSA6IGQuYXNzaWduZWRTbG90
ID0gdm9pZCAwOwogICAgICAgIGUgIT09IGQuYXNzaWduZWRTbG90ICYmIGQuYXNzaWduZWRTbG90
ICYmICh1KGQuYXNzaWduZWRTbG90KS5UID0gITApCiAgICB9CgogICAgZnVuY3Rpb24gV2MoYSwg
YiwgYykgewogICAgICAgIGZvciAodmFyIGQgPSAwLCBlID0gdm9pZCAwOyBkIDwgYy5sZW5ndGgg
JiYgKGUgPSBjW2RdKTsgZCsrKSBpZiAoInNsb3QiID09IGUubG9jYWxOYW1lKSB7CiAgICAgICAg
ICAgIHZhciBmID0gdihlKS5hc3NpZ25lZE5vZGVzOwogICAgICAgICAgICBmICYmIGYubGVuZ3Ro
ICYmIFdjKGEsIGIsIGYpCiAgICAgICAgfSBlbHNlIGIucHVzaChjW2RdKQogICAgfQoKICAgIGZ1
bmN0aW9uIFhjKGEsIGIpIHsKICAgICAgICBiLl9fc2hhZHlfbmF0aXZlX2Rpc3BhdGNoRXZlbnQo
bmV3IEV2ZW50KCJzbG90Y2hhbmdlIikpOwogICAgICAgIGIgPSB2KGIpOwogICAgICAgIGIuYXNz
aWduZWRTbG90ICYmIFhjKGEsIGIuYXNzaWduZWRTbG90KQogICAgfQoKICAgIGZ1bmN0aW9uIFVj
KGEpIHsKICAgICAgICBpZiAoYS5jICYmIGEuYy5sZW5ndGgpIHsKICAgICAgICAgICAgZm9yICh2
YXIgYiA9IGEuYywgYywgZCA9IDA7IGQgPCBiLmxlbmd0aDsgZCsrKSB7CiAgICAgICAgICAgICAg
ICB2YXIgZSA9IGJbZF07CiAgICAgICAgICAgICAgICBqYyhlKTsKICAgICAgICAgICAgICAgIHZh
ciBmID0gZS5fX3NoYWR5X3BhcmVudE5vZGU7CiAgICAgICAgICAgICAgICBqYyhmKTsKICAgICAg
ICAgICAgICAgIGYgPSB2KGYpOwogICAgICAgICAgICAgICAgZi5OID0gKGYuTiB8fCAwKSArIDE7
CiAgICAgICAgICAgICAgICBmID0gWWMoZSk7CiAgICAgICAgICAgICAgICBhLmJbZl0gPyAoYyA9
IGMgfHwge30sIGNbZl0gPSAhMCwgYS5iW2ZdLnB1c2goZSkpIDogYS5iW2ZdID0gW2VdOwogICAg
ICAgICAgICAgICAgYS5hLnB1c2goZSkKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoYykg
Zm9yICh2YXIgZyBpbiBjKSBhLmJbZ10gPSBaYyhhLmJbZ10pOwogICAgICAgICAgICBhLmMgPSBb
XQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBZYyhhKSB7CiAgICAgICAgdmFyIGIgPSBh
Lm5hbWUgfHwgYS5nZXRBdHRyaWJ1dGUoIm5hbWUiKSB8fCAiX19jYXRjaGFsbCI7CiAgICAgICAg
cmV0dXJuIGEud2EgPSBiCiAgICB9CgogICAgZnVuY3Rpb24gWmMoYSkgewogICAgICAgIHJldHVy
biBhLnNvcnQoZnVuY3Rpb24gKGEsIGMpIHsKICAgICAgICAgICAgYSA9IFJjKGEpOwogICAgICAg
ICAgICBmb3IgKHZhciBiID0gUmMoYyksIGUgPSAwOyBlIDwgYS5sZW5ndGg7IGUrKykgewogICAg
ICAgICAgICAgICAgYyA9IGFbZV07CiAgICAgICAgICAgICAgICB2YXIgZiA9IGJbZV07CiAgICAg
ICAgICAgICAgICBpZiAoYyAhPT0gZikgcmV0dXJuIGEgPSBBcnJheS5mcm9tKGMuX19zaGFkeV9w
YXJlbnROb2RlLl9fc2hhZHlfY2hpbGROb2RlcyksIGEuaW5kZXhPZihjKSAtIGEuaW5kZXhPZihm
KQogICAgICAgICAgICB9CiAgICAgICAgfSkKICAgIH0KCiAgICBmdW5jdGlvbiBCYyhhLCBiKSB7
CiAgICAgICAgaWYgKGEuYSkgewogICAgICAgICAgICBVYyhhKTsKICAgICAgICAgICAgdmFyIGMg
PSBhLmIsIGQ7CiAgICAgICAgICAgIGZvciAoZCBpbiBjKSBmb3IgKHZhciBlID0gY1tkXSwgZiA9
IDA7IGYgPCBlLmxlbmd0aDsgZisrKSB7CiAgICAgICAgICAgICAgICB2YXIgZyA9IGVbZl07CiAg
ICAgICAgICAgICAgICBpZiAoVWEoYiwgZykpIHsKICAgICAgICAgICAgICAgICAgICBlLnNwbGlj
ZShmLCAxKTsKICAgICAgICAgICAgICAgICAgICB2YXIgaCA9IGEuYS5pbmRleE9mKGcpOwogICAg
ICAgICAgICAgICAgICAgIDAgPD0gaCAmJiAoYS5hLnNwbGljZShoLCAxKSwgKGggPSB2KGcuX19z
aGFkeV9wYXJlbnROb2RlKSkgJiYgaC5OICYmIGguTi0tKTsKICAgICAgICAgICAgICAgICAgICBm
LS07CiAgICAgICAgICAgICAgICAgICAgZyA9IHYoZyk7CiAgICAgICAgICAgICAgICAgICAgaWYg
KGggPSBnLkQpIGZvciAodmFyIGsgPSAwOyBrIDwgaC5sZW5ndGg7IGsrKykgewogICAgICAgICAg
ICAgICAgICAgICAgICB2YXIgbCA9IGhba10sIG0gPSBsLl9fc2hhZHlfbmF0aXZlX3BhcmVudE5v
ZGU7CiAgICAgICAgICAgICAgICAgICAgICAgIG0gJiYgbS5fX3NoYWR5X25hdGl2ZV9yZW1vdmVD
aGlsZChsKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBnLkQgPSBb
XTsKICAgICAgICAgICAgICAgICAgICBnLmFzc2lnbmVkTm9kZXMgPSBbXTsKICAgICAgICAgICAg
ICAgICAgICBoID0gITAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAg
ICByZXR1cm4gaAogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBNYShhKSB7CiAgICAgICAg
VWMoYSk7CiAgICAgICAgcmV0dXJuICEoIWEuYSB8fCAhYS5hLmxlbmd0aCkKICAgIH0KCiAgICAo
ZnVuY3Rpb24gKGEpIHsKICAgICAgICBhLl9fcHJvdG9fXyA9IERvY3VtZW50RnJhZ21lbnQucHJv
dG90eXBlOwogICAgICAgIE5jKGEsICJfX3NoYWR5XyIpOwogICAgICAgIE5jKGEpOwogICAgICAg
IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGEsIHsKICAgICAgICAgICAgbm9kZVR5cGU6IHt2YWx1
ZTogTm9kZS5ET0NVTUVOVF9GUkFHTUVOVF9OT0RFLCBjb25maWd1cmFibGU6ICEwfSwKICAgICAg
ICAgICAgbm9kZU5hbWU6IHt2YWx1ZTogIiNkb2N1bWVudC1mcmFnbWVudCIsIGNvbmZpZ3VyYWJs
ZTogITB9LAogICAgICAgICAgICBub2RlVmFsdWU6IHt2YWx1ZTogbnVsbCwgY29uZmlndXJhYmxl
OiAhMH0KICAgICAgICB9KTsKICAgICAgICBbImxvY2FsTmFtZSIsICJuYW1lc3BhY2VVUkkiLCAi
cHJlZml4Il0uZm9yRWFjaChmdW5jdGlvbiAoYikgewogICAgICAgICAgICBPYmplY3QuZGVmaW5l
UHJvcGVydHkoYSwgYiwge3ZhbHVlOiB2b2lkIDAsIGNvbmZpZ3VyYWJsZTogITB9KQogICAgICAg
IH0pOwogICAgICAgIFsib3duZXJEb2N1bWVudCIsICJiYXNlVVJJIiwgImlzQ29ubmVjdGVkIl0u
Zm9yRWFjaChmdW5jdGlvbiAoYikgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHko
YSwgYiwgewogICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAg
ICAgICAgcmV0dXJuIHRoaXMuaG9zdFtiXQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAg
ICAgIGNvbmZpZ3VyYWJsZTogITAKICAgICAgICAgICAgfSkKICAgICAgICB9KQogICAgfSkoU2Mu
cHJvdG90eXBlKTsKICAgIGlmICh3aW5kb3cuY3VzdG9tRWxlbWVudHMgJiYgdy5lYSAmJiAhdy5w
cmVmZXJQZXJmb3JtYW5jZSkgewogICAgICAgIHZhciAkYyA9IG5ldyBNYXA7CiAgICAgICAgUWMg
PSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBhID0gW107CiAgICAgICAgICAgICRjLmZv
ckVhY2goZnVuY3Rpb24gKGIsIGMpIHsKICAgICAgICAgICAgICAgIGEucHVzaChbYywgYl0pCiAg
ICAgICAgICAgIH0pOwogICAgICAgICAgICAkYy5jbGVhcigpOwogICAgICAgICAgICBmb3IgKHZh
ciBiID0gMDsgYiA8IGEubGVuZ3RoOyBiKyspIHsKICAgICAgICAgICAgICAgIHZhciBjID0gYVti
XVswXTsKICAgICAgICAgICAgICAgIGFbYl1bMV0gPyBjLnVhKCkgOiBjLnZhKCkKICAgICAgICAg
ICAgfQogICAgICAgIH07CiAgICAgICAgUGMgJiYgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigi
cmVhZHlzdGF0ZWNoYW5nZSIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgUGMgPSAhMTsKICAg
ICAgICAgICAgUWMoKQogICAgICAgIH0sIHtvbmNlOiAhMH0pOwogICAgICAgIHZhciBhZCA9IGZ1
bmN0aW9uIChhLCBiLCBjKSB7CiAgICAgICAgICAgIHZhciBkID0gMCwgZSA9ICJfX2lzQ29ubmVj
dGVkIiArIGQrKzsKICAgICAgICAgICAgaWYgKGIgfHwgYykgYS5wcm90b3R5cGUuY29ubmVjdGVk
Q2FsbGJhY2sgPSBhLnByb3RvdHlwZS51YSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAg
IFBjID8gJGMuc2V0KHRoaXMsICEwKSA6IHRoaXNbZV0gfHwgKHRoaXNbZV0gPSAhMCwgYiAmJiBi
LmNhbGwodGhpcykpCiAgICAgICAgICAgIH0sIGEucHJvdG90eXBlLmRpc2Nvbm5lY3RlZENhbGxi
YWNrID0KICAgICAgICAgICAgICAgIGEucHJvdG90eXBlLnZhID0gZnVuY3Rpb24gKCkgewogICAg
ICAgICAgICAgICAgICAgIFBjID8gdGhpcy5pc0Nvbm5lY3RlZCB8fCAkYy5zZXQodGhpcywgITEp
IDogdGhpc1tlXSAmJiAodGhpc1tlXSA9ICExLCBjICYmIGMuY2FsbCh0aGlzKSkKICAgICAgICAg
ICAgICAgIH07CiAgICAgICAgICAgIHJldHVybiBhCiAgICAgICAgfSwgYmQgPSB3aW5kb3cuY3Vz
dG9tRWxlbWVudHMuZGVmaW5lOwogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3cu
Q3VzdG9tRWxlbWVudFJlZ2lzdHJ5LnByb3RvdHlwZSwgImRlZmluZSIsIHsKICAgICAgICAgICAg
dmFsdWU6IGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgICAgICB2YXIgYyA9IGIucHJvdG90
eXBlLmNvbm5lY3RlZENhbGxiYWNrLCBkID0gYi5wcm90b3R5cGUuZGlzY29ubmVjdGVkQ2FsbGJh
Y2s7CiAgICAgICAgICAgICAgICBiZC5jYWxsKHdpbmRvdy5jdXN0b21FbGVtZW50cywgYSwgYWQo
YiwgYywgZCkpOwogICAgICAgICAgICAgICAgYi5wcm90b3R5cGUuY29ubmVjdGVkQ2FsbGJhY2sg
PSBjOwogICAgICAgICAgICAgICAgYi5wcm90b3R5cGUuZGlzY29ubmVjdGVkQ2FsbGJhY2sgPSBk
CiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgfQoKICAgIGZ1bmN0aW9uIHhjKGEpIHsKICAg
ICAgICBhID0gYS5fX3NoYWR5X2dldFJvb3ROb2RlKCk7CiAgICAgICAgaWYgKHooYSkpIHJldHVy
biBhCiAgICB9OwoKICAgIGZ1bmN0aW9uIGNkKGEpIHsKICAgICAgICB0aGlzLm5vZGUgPSBhCiAg
ICB9CgogICAgbiA9IGNkLnByb3RvdHlwZTsKICAgIG4uYWRkRXZlbnRMaXN0ZW5lciA9IGZ1bmN0
aW9uIChhLCBiLCBjKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X2FkZEV2ZW50
TGlzdGVuZXIoYSwgYiwgYykKICAgIH07CiAgICBuLnJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5j
dGlvbiAoYSwgYiwgYykgewogICAgICAgIHJldHVybiB0aGlzLm5vZGUuX19zaGFkeV9yZW1vdmVF
dmVudExpc3RlbmVyKGEsIGIsIGMpCiAgICB9OwogICAgbi5hcHBlbmRDaGlsZCA9IGZ1bmN0aW9u
IChhKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X2FwcGVuZENoaWxkKGEpCiAg
ICB9OwogICAgbi5pbnNlcnRCZWZvcmUgPSBmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVy
biB0aGlzLm5vZGUuX19zaGFkeV9pbnNlcnRCZWZvcmUoYSwgYikKICAgIH07CiAgICBuLnJlbW92
ZUNoaWxkID0gZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gdGhpcy5ub2RlLl9fc2hhZHlf
cmVtb3ZlQ2hpbGQoYSkKICAgIH07CiAgICBuLnJlcGxhY2VDaGlsZCA9IGZ1bmN0aW9uIChhLCBi
KSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X3JlcGxhY2VDaGlsZChhLCBiKQog
ICAgfTsKICAgIG4uY2xvbmVOb2RlID0gZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gdGhp
cy5ub2RlLl9fc2hhZHlfY2xvbmVOb2RlKGEpCiAgICB9OwogICAgbi5nZXRSb290Tm9kZSA9IGZ1
bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X2dldFJvb3ROb2Rl
KGEpCiAgICB9OwogICAgbi5jb250YWlucyA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJu
IHRoaXMubm9kZS5fX3NoYWR5X2NvbnRhaW5zKGEpCiAgICB9OwogICAgbi5kaXNwYXRjaEV2ZW50
ID0gZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gdGhpcy5ub2RlLl9fc2hhZHlfZGlzcGF0
Y2hFdmVudChhKQogICAgfTsKICAgIG4uc2V0QXR0cmlidXRlID0gZnVuY3Rpb24gKGEsIGIpIHsK
ICAgICAgICB0aGlzLm5vZGUuX19zaGFkeV9zZXRBdHRyaWJ1dGUoYSwgYikKICAgIH07CiAgICBu
LmdldEF0dHJpYnV0ZSA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5f
X3NoYWR5X25hdGl2ZV9nZXRBdHRyaWJ1dGUoYSkKICAgIH07CiAgICBuLmhhc0F0dHJpYnV0ZSA9
IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X25hdGl2ZV9o
YXNBdHRyaWJ1dGUoYSkKICAgIH07CiAgICBuLnJlbW92ZUF0dHJpYnV0ZSA9IGZ1bmN0aW9uIChh
KSB7CiAgICAgICAgdGhpcy5ub2RlLl9fc2hhZHlfcmVtb3ZlQXR0cmlidXRlKGEpCiAgICB9Owog
ICAgbi5hdHRhY2hTaGFkb3cgPSBmdW5jdGlvbiAoYSkgewogICAgICAgIHJldHVybiB0aGlzLm5v
ZGUuX19zaGFkeV9hdHRhY2hTaGFkb3coYSkKICAgIH07CiAgICBuLmZvY3VzID0gZnVuY3Rpb24g
KCkgewogICAgICAgIHRoaXMubm9kZS5fX3NoYWR5X25hdGl2ZV9mb2N1cygpCiAgICB9OwogICAg
bi5ibHVyID0gZnVuY3Rpb24gKCkgewogICAgICAgIHRoaXMubm9kZS5fX3NoYWR5X2JsdXIoKQog
ICAgfTsKICAgIG4uaW1wb3J0Tm9kZSA9IGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgaWYgKHRo
aXMubm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5ET0NVTUVOVF9OT0RFKSByZXR1cm4gdGhpcy5ub2Rl
Ll9fc2hhZHlfaW1wb3J0Tm9kZShhLCBiKQogICAgfTsKICAgIG4uZ2V0RWxlbWVudEJ5SWQgPSBm
dW5jdGlvbiAoYSkgewogICAgICAgIGlmICh0aGlzLm5vZGUubm9kZVR5cGUgPT09IE5vZGUuRE9D
VU1FTlRfTk9ERSkgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X2dldEVsZW1lbnRCeUlkKGEpCiAg
ICB9OwogICAgbi5xdWVyeVNlbGVjdG9yID0gZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4g
dGhpcy5ub2RlLl9fc2hhZHlfcXVlcnlTZWxlY3RvcihhKQogICAgfTsKICAgIG4ucXVlcnlTZWxl
Y3RvckFsbCA9IGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3No
YWR5X3F1ZXJ5U2VsZWN0b3JBbGwoYSwgYikKICAgIH07CiAgICBuLmFzc2lnbmVkTm9kZXMgPSBm
dW5jdGlvbiAoYSkgewogICAgICAgIGlmICgic2xvdCIgPT09IHRoaXMubm9kZS5sb2NhbE5hbWUp
IHJldHVybiB0aGlzLm5vZGUuX19zaGFkeV9hc3NpZ25lZE5vZGVzKGEpCiAgICB9OwogICAgcC5P
YmplY3QuZGVmaW5lUHJvcGVydGllcyhjZC5wcm90b3R5cGUsIHsKICAgICAgICBhY3RpdmVFbGVt
ZW50OiB7CiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwLCBnZXQ6
IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGlmICh6KHRoaXMubm9kZSkgfHwgdGhpcy5u
b2RlLm5vZGVUeXBlID09PSBOb2RlLkRPQ1VNRU5UX05PREUpIHJldHVybiB0aGlzLm5vZGUuX19z
aGFkeV9hY3RpdmVFbGVtZW50CiAgICAgICAgICAgIH0KICAgICAgICB9LCBfYWN0aXZlRWxlbWVu
dDogewogICAgICAgICAgICBjb24=</Default>
</Parameter>

<Parameter name="Frag13">
<Default>ZmlndXJhYmxlOiAhMCwgZW51bWVyYWJsZTogITAsIGdldDogZnVuY3Rpb24gKCkgewogICAgICAg
ICAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZlRWxlbWVudAogICAgICAgICAgICB9CiAgICAgICAg
fSwgaG9zdDogewogICAgICAgICAgICBjb25maWd1cmFibGU6ICEwLCBlbnVtZXJhYmxlOiAhMCwg
Z2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBpZiAoeih0aGlzLm5vZGUpKSByZXR1
cm4gdGhpcy5ub2RlLmhvc3QKICAgICAgICAgICAgfQogICAgICAgIH0sIHBhcmVudE5vZGU6IHsK
ICAgICAgICAgICAgY29uZmlndXJhYmxlOiAhMCwgZW51bWVyYWJsZTogITAsIGdldDogZnVuY3Rp
b24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X3BhcmVudE5v
ZGUKICAgICAgICAgICAgfQogICAgICAgIH0sIGZpcnN0Q2hpbGQ6IHsKICAgICAgICAgICAgY29u
ZmlndXJhYmxlOiAhMCwKICAgICAgICAgICAgZW51bWVyYWJsZTogITAsIGdldDogZnVuY3Rpb24g
KCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X2ZpcnN0Q2hpbGQK
ICAgICAgICAgICAgfQogICAgICAgIH0sIGxhc3RDaGlsZDogewogICAgICAgICAgICBjb25maWd1
cmFibGU6ICEwLCBlbnVtZXJhYmxlOiAhMCwgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAg
ICAgICByZXR1cm4gdGhpcy5ub2RlLl9fc2hhZHlfbGFzdENoaWxkCiAgICAgICAgICAgIH0KICAg
ICAgICB9LCBuZXh0U2libGluZzogewogICAgICAgICAgICBjb25maWd1cmFibGU6ICEwLCBlbnVt
ZXJhYmxlOiAhMCwgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhp
cy5ub2RlLl9fc2hhZHlfbmV4dFNpYmxpbmcKICAgICAgICAgICAgfQogICAgICAgIH0sIHByZXZp
b3VzU2libGluZzogewogICAgICAgICAgICBjb25maWd1cmFibGU6ICEwLCBlbnVtZXJhYmxlOiAh
MCwgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlLl9f
c2hhZHlfcHJldmlvdXNTaWJsaW5nCiAgICAgICAgICAgIH0KICAgICAgICB9LCBjaGlsZE5vZGVz
OiB7CiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwLCBnZXQ6IGZ1
bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGUuX19zaGFkeV9jaGls
ZE5vZGVzCiAgICAgICAgICAgIH0KICAgICAgICB9LCBwYXJlbnRFbGVtZW50OiB7CiAgICAgICAg
ICAgIGNvbmZpZ3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwLAogICAgICAgICAgICBnZXQ6IGZ1
bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGUuX19zaGFkeV9wYXJl
bnRFbGVtZW50CiAgICAgICAgICAgIH0KICAgICAgICB9LCBmaXJzdEVsZW1lbnRDaGlsZDogewog
ICAgICAgICAgICBjb25maWd1cmFibGU6ICEwLCBlbnVtZXJhYmxlOiAhMCwgZ2V0OiBmdW5jdGlv
biAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlLl9fc2hhZHlfZmlyc3RFbGVt
ZW50Q2hpbGQKICAgICAgICAgICAgfQogICAgICAgIH0sIGxhc3RFbGVtZW50Q2hpbGQ6IHsKICAg
ICAgICAgICAgY29uZmlndXJhYmxlOiAhMCwgZW51bWVyYWJsZTogITAsIGdldDogZnVuY3Rpb24g
KCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X2xhc3RFbGVtZW50
Q2hpbGQKICAgICAgICAgICAgfQogICAgICAgIH0sIG5leHRFbGVtZW50U2libGluZzogewogICAg
ICAgICAgICBjb25maWd1cmFibGU6ICEwLCBlbnVtZXJhYmxlOiAhMCwgZ2V0OiBmdW5jdGlvbiAo
KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ub2RlLl9fc2hhZHlfbmV4dEVsZW1lbnRT
aWJsaW5nCiAgICAgICAgICAgIH0KICAgICAgICB9LCBwcmV2aW91c0VsZW1lbnRTaWJsaW5nOiB7
CiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwLCBnZXQ6IGZ1bmN0
aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGUuX19zaGFkeV9wcmV2aW91
c0VsZW1lbnRTaWJsaW5nCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNoaWxkcmVu
OiB7CiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwLCBnZXQ6IGZ1
bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGUuX19zaGFkeV9jaGls
ZHJlbgogICAgICAgICAgICB9CiAgICAgICAgfSwgY2hpbGRFbGVtZW50Q291bnQ6IHsKICAgICAg
ICAgICAgY29uZmlndXJhYmxlOiAhMCwgZW51bWVyYWJsZTogITAsIGdldDogZnVuY3Rpb24gKCkg
ewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5fX3NoYWR5X2NoaWxkRWxlbWVudENv
dW50CiAgICAgICAgICAgIH0KICAgICAgICB9LCBzaGFkb3dSb290OiB7CiAgICAgICAgICAgIGNv
bmZpZ3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwLCBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAg
ICAgICAgICAgIHJldHVybiB0aGlzLm5vZGUuX19zaGFkeV9zaGFkb3dSb290CiAgICAgICAgICAg
IH0KICAgICAgICB9LCBhc3NpZ25lZFNsb3Q6IHsKICAgICAgICAgICAgY29uZmlndXJhYmxlOiAh
MCwgZW51bWVyYWJsZTogITAsIGdldDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0
dXJuIHRoaXMubm9kZS5fX3NoYWR5X2Fzc2lnbmVkU2xvdAogICAgICAgICAgICB9CiAgICAgICAg
fSwgaXNDb25uZWN0ZWQ6IHsKICAgICAgICAgICAgY29uZmlndXJhYmxlOiAhMCwgZW51bWVyYWJs
ZTogITAsIGdldDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9k
ZS5fX3NoYWR5X2lzQ29ubmVjdGVkCiAgICAgICAgICAgIH0KICAgICAgICB9LCBpbm5lckhUTUw6
IHsKICAgICAgICAgICAgY29uZmlndXJhYmxlOiAhMCwKICAgICAgICAgICAgZW51bWVyYWJsZTog
ITAsIGdldDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5f
X3NoYWR5X2lubmVySFRNTAogICAgICAgICAgICB9LCBzZXQ6IGZ1bmN0aW9uIChhKSB7CiAgICAg
ICAgICAgICAgICB0aGlzLm5vZGUuX19zaGFkeV9pbm5lckhUTUwgPSBhCiAgICAgICAgICAgIH0K
ICAgICAgICB9LCB0ZXh0Q29udGVudDogewogICAgICAgICAgICBjb25maWd1cmFibGU6ICEwLCBl
bnVtZXJhYmxlOiAhMCwgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4g
dGhpcy5ub2RlLl9fc2hhZHlfdGV4dENvbnRlbnQKICAgICAgICAgICAgfSwgc2V0OiBmdW5jdGlv
biAoYSkgewogICAgICAgICAgICAgICAgdGhpcy5ub2RlLl9fc2hhZHlfdGV4dENvbnRlbnQgPSBh
CiAgICAgICAgICAgIH0KICAgICAgICB9LCBzbG90OiB7CiAgICAgICAgICAgIGNvbmZpZ3VyYWJs
ZTogITAsIGVudW1lcmFibGU6ICEwLCBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAg
IHJldHVybiB0aGlzLm5vZGUuX19zaGFkeV9zbG90CiAgICAgICAgICAgIH0sIHNldDogZnVuY3Rp
b24gKGEpIHsKICAgICAgICAgICAgICAgIHRoaXMubm9kZS5fX3NoYWR5X3Nsb3QgPSBhCiAgICAg
ICAgICAgIH0KICAgICAgICB9CiAgICB9KTsKICAgIGNjLmZvckVhY2goZnVuY3Rpb24gKGEpIHsK
ICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY2QucHJvdG90eXBlLCBhLCB7CiAgICAgICAg
ICAgIGdldDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZVsi
X19zaGFkeV8iICsgYV0KICAgICAgICAgICAgfSwgc2V0OiBmdW5jdGlvbiAoYikgewogICAgICAg
ICAgICAgICAgdGhpcy5ub2RlWyJfX3NoYWR5XyIgKyBhXSA9IGIKICAgICAgICAgICAgfSwgY29u
ZmlndXJhYmxlOiAhMAogICAgICAgIH0pCiAgICB9KTsKICAgIHZhciBkZCA9IG5ldyBXZWFrTWFw
OwoKICAgIGZ1bmN0aW9uIGVkKGEpIHsKICAgICAgICBpZiAoeihhKSB8fCBhIGluc3RhbmNlb2Yg
Y2QpIHJldHVybiBhOwogICAgICAgIHZhciBiID0gZGQuZ2V0KGEpOwogICAgICAgIGIgfHwgKGIg
PSBuZXcgY2QoYSksIGRkLnNldChhLCBiKSk7CiAgICAgICAgcmV0dXJuIGIKICAgIH07dmFyIGZk
ID0gQih7CiAgICAgICAgZGlzcGF0Y2hFdmVudDogZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAg
WmEoKTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX19zaGFkeV9uYXRpdmVfZGlzcGF0Y2hFdmVu
dChhKQogICAgICAgIH0sIGFkZEV2ZW50TGlzdGVuZXI6IFViLCByZW1vdmVFdmVudExpc3RlbmVy
OiBXYgogICAgfSk7CiAgICB2YXIgZ2QgPSBCKHsKICAgICAgICBnZXQgYXNzaWduZWRTbG90KCkg
ewogICAgICAgICAgICB2YXIgYSA9IHRoaXMuX19zaGFkeV9wYXJlbnROb2RlOwogICAgICAgICAg
ICAoYSA9IGEgJiYgYS5fX3NoYWR5X3NoYWRvd1Jvb3QpICYmIFRjKGEpOwogICAgICAgICAgICBy
ZXR1cm4gKGEgPSB2KHRoaXMpKSAmJiBhLmFzc2lnbmVkU2xvdCB8fCBudWxsCiAgICAgICAgfQog
ICAgfSk7CiAgICB2YXIgaGQgPSB3aW5kb3cuZG9jdW1lbnQ7CgogICAgZnVuY3Rpb24gaWQoYSwg
YikgewogICAgICAgIGlmICgic2xvdCIgPT09IGIpIGEgPSBhLl9fc2hhZHlfcGFyZW50Tm9kZSwg
TGEoYSkgJiYgQWModihhKS5yb290KTsgZWxzZSBpZiAoInNsb3QiID09PSBhLmxvY2FsTmFtZSAm
JiAibmFtZSIgPT09IGIgJiYgKGIgPSB4YyhhKSkpIHsKICAgICAgICAgICAgaWYgKGIuYSkgewog
ICAgICAgICAgICAgICAgVWMoYik7CiAgICAgICAgICAgICAgICB2YXIgYyA9IGEud2EsIGQgPSBZ
YyhhKTsKICAgICAgICAgICAgICAgIGlmIChkICE9PSBjKSB7CiAgICAgICAgICAgICAgICAgICAg
YyA9IGIuYltjXTsKICAgICAgICAgICAgICAgICAgICB2YXIgZSA9IGMuaW5kZXhPZihhKTsKICAg
ICAgICAgICAgICAgICAgICAwIDw9IGUgJiYgYy5zcGxpY2UoZSwgMSk7CiAgICAgICAgICAgICAg
ICAgICAgYyA9IGIuYltkXSB8fCAoYi5iW2RdID0gW10pOwogICAgICAgICAgICAgICAgICAgIGMu
cHVzaChhKTsKICAgICAgICAgICAgICAgICAgICAxIDwgYy5sZW5ndGggJiYgKGIuYltkXSA9IFpj
KGMpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIEFjKGIpCiAg
ICAgICAgfQogICAgfQoKICAgIHZhciBqZCA9IEIoewogICAgICAgIGdldCBwcmV2aW91c0VsZW1l
bnRTaWJsaW5nKCkgewogICAgICAgICAgICB2YXIgYSA9IHYodGhpcyk7CiAgICAgICAgICAgIGlm
IChhICYmIHZvaWQgMCAhPT0gYS5wcmV2aW91c1NpYmxpbmcpIHsKICAgICAgICAgICAgICAgIGZv
ciAoYSA9IHRoaXMuX19zaGFkeV9wcmV2aW91c1NpYmxpbmc7IGEgJiYgYS5ub2RlVHlwZSAhPT0g
Tm9kZS5FTEVNRU5UX05PREU7KSBhID0gYS5fX3NoYWR5X3ByZXZpb3VzU2libGluZzsKICAgICAg
ICAgICAgICAgIHJldHVybiBhCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRoaXMu
X19zaGFkeV9uYXRpdmVfcHJldmlvdXNFbGVtZW50U2libGluZwogICAgICAgIH0sIGdldCBuZXh0
RWxlbWVudFNpYmxpbmcoKSB7CiAgICAgICAgICAgIHZhciBhID0gdih0aGlzKTsKICAgICAgICAg
ICAgaWYgKGEgJiYgdm9pZCAwICE9PSBhLm5leHRTaWJsaW5nKSB7CiAgICAgICAgICAgICAgICBm
b3IgKGEgPSB0aGlzLl9fc2hhZHlfbmV4dFNpYmxpbmc7IGEgJiYgYS5ub2RlVHlwZSAhPT0gTm9k
ZS5FTEVNRU5UX05PREU7KSBhID0gYS5fX3NoYWR5X25leHRTaWJsaW5nOwogICAgICAgICAgICAg
ICAgcmV0dXJuIGEKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdGhpcy5fX3NoYWR5
X25hdGl2ZV9uZXh0RWxlbWVudFNpYmxpbmcKICAgICAgICB9LCBnZXQgc2xvdCgpIHsKICAgICAg
ICAgICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKCJzbG90IikKICAgICAgICB9LAogICAgICAg
IHNldCBzbG90KGEpIHsKICAgICAgICAgICAgdGhpcy5fX3NoYWR5X3NldEF0dHJpYnV0ZSgic2xv
dCIsIGEpCiAgICAgICAgfSwgZ2V0IHNoYWRvd1Jvb3QoKSB7CiAgICAgICAgICAgIHZhciBhID0g
dih0aGlzKTsKICAgICAgICAgICAgcmV0dXJuIGEgJiYgYS5wYSB8fCBudWxsCiAgICAgICAgfSwg
Z2V0IGNsYXNzTmFtZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKCJj
bGFzcyIpIHx8ICIiCiAgICAgICAgfSwgc2V0IGNsYXNzTmFtZShhKSB7CiAgICAgICAgICAgIHRo
aXMuX19zaGFkeV9zZXRBdHRyaWJ1dGUoImNsYXNzIiwgYSkKICAgICAgICB9LCBzZXRBdHRyaWJ1
dGU6IGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgIGlmICh0aGlzLm93bmVyRG9jdW1lbnQg
IT09IGhkKSB0aGlzLl9fc2hhZHlfbmF0aXZlX3NldEF0dHJpYnV0ZShhLCBiKTsgZWxzZSB7CiAg
ICAgICAgICAgICAgICB2YXIgYzsKICAgICAgICAgICAgICAgIChjID0gRygpKSAmJiAiY2xhc3Mi
ID09PSBhID8gKGMuc2V0RWxlbWVudENsYXNzKHRoaXMsIGIpLCBjID0gITApIDogYyA9ICExOwog
ICAgICAgICAgICAgICAgYyB8fCAodGhpcy5fX3NoYWR5X25hdGl2ZV9zZXRBdHRyaWJ1dGUoYSwg
YiksIGlkKHRoaXMsIGEpKQogICAgICAgICAgICB9CiAgICAgICAgfSwgcmVtb3ZlQXR0cmlidXRl
OiBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICB0aGlzLl9fc2hhZHlfbmF0aXZlX3JlbW92ZUF0
dHJpYnV0ZShhKTsKICAgICAgICAgICAgaWQodGhpcywKICAgICAgICAgICAgICAgIGEpCiAgICAg
ICAgfSwgYXR0YWNoU2hhZG93OiBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICBpZiAoIXRoaXMp
IHRocm93IEVycm9yKCJNdXN0IHByb3ZpZGUgYSBob3N0LiIpOwogICAgICAgICAgICBpZiAoIWEp
IHRocm93IEVycm9yKCJOb3QgZW5vdWdoIGFyZ3VtZW50cy4iKTsKICAgICAgICAgICAgcmV0dXJu
IG5ldyBTYyhPYywgdGhpcywgYSkKICAgICAgICB9CiAgICB9KTsKICAgIHZhciBrZCA9IEIoewog
ICAgICAgIGJsdXI6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIGEgPSB2KHRoaXMpOwog
ICAgICAgICAgICAoYSA9IChhID0gYSAmJiBhLnJvb3QpICYmIGEuYWN0aXZlRWxlbWVudCkgPyBh
Ll9fc2hhZHlfYmx1cigpIDogdGhpcy5fX3NoYWR5X25hdGl2ZV9ibHVyKCkKICAgICAgICB9CiAg
ICB9KTsKICAgIGNjLmZvckVhY2goZnVuY3Rpb24gKGEpIHsKICAgICAgICBrZFthXSA9IHsKICAg
ICAgICAgICAgc2V0OiBmdW5jdGlvbiAoYikgewogICAgICAgICAgICAgICAgdmFyIGMgPSB1KHRo
aXMpLCBkID0gYS5zdWJzdHJpbmcoMik7CiAgICAgICAgICAgICAgICBjLk9bYV0gJiYgdGhpcy5y
ZW1vdmVFdmVudExpc3RlbmVyKGQsIGMuT1thXSk7CiAgICAgICAgICAgICAgICB0aGlzLl9fc2hh
ZHlfYWRkRXZlbnRMaXN0ZW5lcihkLCBiKTsKICAgICAgICAgICAgICAgIGMuT1thXSA9IGIKICAg
ICAgICAgICAgfSwgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgYiA9IHYo
dGhpcyk7CiAgICAgICAgICAgICAgICByZXR1cm4gYiAmJiBiLk9bYV0KICAgICAgICAgICAgfSwg
Y29uZmlndXJhYmxlOiAhMAogICAgICAgIH0KICAgIH0pOwogICAgdmFyIGxkID0gQih7CiAgICAg
ICAgYXNzaWduZWROb2RlczogZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgaWYgKCJzbG90IiA9
PT0gdGhpcy5sb2NhbE5hbWUpIHsKICAgICAgICAgICAgICAgIHZhciBiID0gdGhpcy5fX3NoYWR5
X2dldFJvb3ROb2RlKCk7CiAgICAgICAgICAgICAgICBiICYmIHooYikgJiYgVGMoYik7CiAgICAg
ICAgICAgICAgICByZXR1cm4gKGIgPSB2KHRoaXMpKSA/IChhICYmIGEuZmxhdHRlbiA/IGIuRCA6
IGIuYXNzaWduZWROb2RlcykgfHwgW10gOiBbXQogICAgICAgICAgICB9CiAgICAgICAgfQogICAg
fSk7CiAgICB2YXIgbWQgPSB3aW5kb3cuZG9jdW1lbnQsIG5kID0gQih7CiAgICAgICAgaW1wb3J0
Tm9kZTogZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgaWYgKGEub3duZXJEb2N1bWVudCAh
PT0gbWQgfHwgInRlbXBsYXRlIiA=</Default>
</Parameter>

<Parameter name="Frag14">
<Default>PT09IGEubG9jYWxOYW1lKSByZXR1cm4gdGhpcy5fX3NoYWR5X25hdGl2ZV9pbXBvcnROb2RlKGEs
IGIpOwogICAgICAgICAgICB2YXIgYyA9IHRoaXMuX19zaGFkeV9uYXRpdmVfaW1wb3J0Tm9kZShh
LCAhMSk7CiAgICAgICAgICAgIGlmIChiKSB7CiAgICAgICAgICAgICAgICBhID0gYS5fX3NoYWR5
X2NoaWxkTm9kZXM7CiAgICAgICAgICAgICAgICBiID0gMDsKICAgICAgICAgICAgICAgIGZvciAo
dmFyIGQ7IGIgPCBhLmxlbmd0aDsgYisrKSBkID0gdGhpcy5fX3NoYWR5X2ltcG9ydE5vZGUoYVti
XSwgITApLCBjLl9fc2hhZHlfYXBwZW5kQ2hpbGQoZCkKICAgICAgICAgICAgfQogICAgICAgICAg
ICByZXR1cm4gYwogICAgICAgIH0KICAgIH0pOwogICAgdmFyIG9kID0gQih7YWRkRXZlbnRMaXN0
ZW5lcjogVWIuYmluZCh3aW5kb3cpLCByZW1vdmVFdmVudExpc3RlbmVyOiBXYi5iaW5kKHdpbmRv
dyl9KTsKICAgIHZhciBwZCA9IHt9OwogICAgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRv
cihIVE1MRWxlbWVudC5wcm90b3R5cGUsICJwYXJlbnRFbGVtZW50IikgJiYgKHBkLnBhcmVudEVs
ZW1lbnQgPSBDYy5wYXJlbnRFbGVtZW50KTsKICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2Ny
aXB0b3IoSFRNTEVsZW1lbnQucHJvdG90eXBlLCAiY29udGFpbnMiKSAmJiAocGQuY29udGFpbnMg
PSBDYy5jb250YWlucyk7CiAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEhUTUxF
bGVtZW50LnByb3RvdHlwZSwgImNoaWxkcmVuIikgJiYgKHBkLmNoaWxkcmVuID0gRmMuY2hpbGRy
ZW4pOwogICAgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihIVE1MRWxlbWVudC5wcm90
b3R5cGUsICJpbm5lckhUTUwiKSAmJiAocGQuaW5uZXJIVE1MID0gTGMuaW5uZXJIVE1MKTsKICAg
IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoSFRNTEVsZW1lbnQucHJvdG90eXBlLCAi
Y2xhc3NOYW1lIikgJiYgKHBkLmNsYXNzTmFtZSA9IGpkLmNsYXNzTmFtZSk7CiAgICB2YXIgcWQg
PSB7CiAgICAgICAgRXZlbnRUYXJnZXQ6IFtmZF0sCiAgICAgICAgTm9kZTogW0NjLCB3aW5kb3cu
RXZlbnRUYXJnZXQgPyBudWxsIDogZmRdLAogICAgICAgIFRleHQ6IFtnZF0sCiAgICAgICAgRWxl
bWVudDogW2pkLCBGYywgZ2QsICF3Lm0gfHwgImlubmVySFRNTCIgaW4gRWxlbWVudC5wcm90b3R5
cGUgPyBMYyA6IG51bGwsIHdpbmRvdy5IVE1MU2xvdEVsZW1lbnQgPyBudWxsIDogbGRdLAogICAg
ICAgIEhUTUxFbGVtZW50OiBba2QsIHBkXSwKICAgICAgICBIVE1MU2xvdEVsZW1lbnQ6IFtsZF0s
CiAgICAgICAgRG9jdW1lbnRGcmFnbWVudDogW0hjLCBJY10sCiAgICAgICAgRG9jdW1lbnQ6IFtu
ZCwgSGMsIEljLCBKY10sCiAgICAgICAgV2luZG93OiBbb2RdCiAgICB9LCByZCA9IHcubSA/IG51
bGwgOiBbImlubmVySFRNTCIsICJ0ZXh0Q29udGVudCJdOwoKICAgIGZ1bmN0aW9uIHNkKGEpIHsK
ICAgICAgICB2YXIgYiA9IGEgPyBudWxsIDogcmQsIGMgPSB7fSwgZDsKICAgICAgICBmb3IgKGQg
aW4gcWQpIGMuVyA9IHdpbmRvd1tkXSAmJiB3aW5kb3dbZF0ucHJvdG90eXBlLCBxZFtkXS5mb3JF
YWNoKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoZCkgewogICAg
ICAgICAgICAgICAgcmV0dXJuIGMuVyAmJiBkICYmIEEoYy5XLCBkLCBhLCBiKQogICAgICAgICAg
ICB9CiAgICAgICAgfShjKSksIGMgPSB7VzogYy5XfQogICAgfTsKICAgIGlmICh3LmVhKSB7CiAg
ICAgICAgdmFyIFNoYWR5RE9NID0gewogICAgICAgICAgICBpblVzZTogdy5lYSwKICAgICAgICAg
ICAgcGF0Y2g6IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgICBGYihhKTsKICAgICAgICAg
ICAgICAgIEViKGEpOwogICAgICAgICAgICAgICAgcmV0dXJuIGEKICAgICAgICAgICAgfSwKICAg
ICAgICAgICAgaXNTaGFkeVJvb3Q6IHosCiAgICAgICAgICAgIGVucXVldWU6IFlhLAogICAgICAg
ICAgICBmbHVzaDogWmEsCiAgICAgICAgICAgIGZsdXNoSW5pdGlhbDogZnVuY3Rpb24gKGEpIHsK
ICAgICAgICAgICAgICAgICFhLmJhICYmIGEuQiAmJiBUYyhhKQogICAgICAgICAgICB9LAogICAg
ICAgICAgICBzZXR0aW5nczogdywKICAgICAgICAgICAgZmlsdGVyTXV0YXRpb25zOiBkYiwKICAg
ICAgICAgICAgb2JzZXJ2ZUNoaWxkcmVuOiBiYiwKICAgICAgICAgICAgdW5vYnNlcnZlQ2hpbGRy
ZW46IGNiLAogICAgICAgICAgICBkZWZlckNvbm5lY3Rpb25DYWxsYmFja3M6IHcuZGVmZXJDb25u
ZWN0aW9uQ2FsbGJhY2tzLAogICAgICAgICAgICBwcmVmZXJQZXJmb3JtYW5jZTogdy5wcmVmZXJQ
ZXJmb3JtYW5jZSwKICAgICAgICAgICAgaGFuZGxlc0R5bmFtaWNTY29waW5nOiAhMCwKICAgICAg
ICAgICAgd3JhcDogdy5KID8gZWQgOiBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICAgICAgcmV0
dXJuIGEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgV3JhcHBlcjogY2QsCiAgICAgICAgICAg
IGNvbXBvc2VkUGF0aDogTWIsCiAgICAgICAgICAgIG5vUGF0Y2g6IHcuSiwKICAgICAgICAgICAg
bmF0aXZlTWV0aG9kczogcWIsCiAgICAgICAgICAgIG5hdGl2ZVRyZWU6IHJiCiAgICAgICAgfTsK
ICAgICAgICB3aW5kb3cuU2hhZHlET00gPSBTaGFkeURPTTsKICAgICAgICB5YigpOwogICAgICAg
IHNkKCJfX3NoYWR5XyIpOwogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkb2N1bWVudCwK
ICAgICAgICAgICAgIl9hY3RpdmVFbGVtZW50IiwgSmMuYWN0aXZlRWxlbWVudCk7CiAgICAgICAg
QShXaW5kb3cucHJvdG90eXBlLCBvZCwgIl9fc2hhZHlfIik7CiAgICAgICAgdy5KIHx8IChzZCgp
LCBiYygpKTsKICAgICAgICBYYigpOwogICAgICAgIHdpbmRvdy5FdmVudCA9IFpiOwogICAgICAg
IHdpbmRvdy5DdXN0b21FdmVudCA9ICRiOwogICAgICAgIHdpbmRvdy5Nb3VzZUV2ZW50ID0gYWM7
CiAgICAgICAgd2luZG93LlNoYWRvd1Jvb3QgPSBTYwogICAgfQogICAgO3ZhciB0ZCA9IG5ldyBT
ZXQoImFubm90YXRpb24teG1sIGNvbG9yLXByb2ZpbGUgZm9udC1mYWNlIGZvbnQtZmFjZS1zcmMg
Zm9udC1mYWNlLXVyaSBmb250LWZhY2UtZm9ybWF0IGZvbnQtZmFjZS1uYW1lIG1pc3NpbmctZ2x5
cGgiLnNwbGl0KCIgIikpOwoKICAgIGZ1bmN0aW9uIHVkKGEpIHsKICAgICAgICB2YXIgYiA9IHRk
LmhhcyhhKTsKICAgICAgICBhID0gL15bYS16XVsuMC05X2Etel0qLVtcLS4wLTlfYS16XSokLy50
ZXN0KGEpOwogICAgICAgIHJldHVybiAhYiAmJiBhCiAgICB9CgogICAgZnVuY3Rpb24gSChhKSB7
CiAgICAgICAgdmFyIGIgPSBhLmlzQ29ubmVjdGVkOwogICAgICAgIGlmICh2b2lkIDAgIT09IGIp
IHJldHVybiBiOwogICAgICAgIGZvciAoOyBhICYmICEoYS5fX0NFX2lzSW1wb3J0RG9jdW1lbnQg
fHwgYSBpbnN0YW5jZW9mIERvY3VtZW50KTspIGEgPSBhLnBhcmVudE5vZGUgfHwgKHdpbmRvdy5T
aGFkb3dSb290ICYmIGEgaW5zdGFuY2VvZiBTaGFkb3dSb290ID8gYS5ob3N0IDogdm9pZCAwKTsK
ICAgICAgICByZXR1cm4gISghYSB8fCAhKGEuX19DRV9pc0ltcG9ydERvY3VtZW50IHx8IGEgaW5z
dGFuY2VvZiBEb2N1bWVudCkpCiAgICB9CgogICAgZnVuY3Rpb24gdmQoYSwgYikgewogICAgICAg
IGZvciAoOyBiICYmIGIgIT09IGEgJiYgIWIubmV4dFNpYmxpbmc7KSBiID0gYi5wYXJlbnROb2Rl
OwogICAgICAgIHJldHVybiBiICYmIGIgIT09IGEgPyBiLm5leHRTaWJsaW5nIDogbnVsbAogICAg
fQoKICAgIGZ1bmN0aW9uIHdkKGEsIGIsIGMpIHsKICAgICAgICBjID0gdm9pZCAwID09PSBjID8g
bmV3IFNldCA6IGM7CiAgICAgICAgZm9yICh2YXIgZCA9IGE7IGQ7KSB7CiAgICAgICAgICAgIGlm
IChkLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkgewogICAgICAgICAgICAgICAgdmFy
IGUgPSBkOwogICAgICAgICAgICAgICAgYihlKTsKICAgICAgICAgICAgICAgIHZhciBmID0gZS5s
b2NhbE5hbWU7CiAgICAgICAgICAgICAgICBpZiAoImxpbmsiID09PSBmICYmICJpbXBvcnQiID09
PSBlLmdldEF0dHJpYnV0ZSgicmVsIikpIHsKICAgICAgICAgICAgICAgICAgICBkID0gZS5pbXBv
cnQ7CiAgICAgICAgICAgICAgICAgICAgaWYgKGQgaW5zdGFuY2VvZiBOb2RlICYmICFjLmhhcyhk
KSkgZm9yIChjLmFkZChkKSwgZCA9IGQuZmlyc3RDaGlsZDsgZDsgZCA9IGQubmV4dFNpYmxpbmcp
IHdkKGQsIGIsIGMpOwogICAgICAgICAgICAgICAgICAgIGQgPSB2ZChhLCBlKTsKICAgICAgICAg
ICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgfSBlbHNlIGlmICgidGVtcGxhdGUi
ID09PSBmKSB7CiAgICAgICAgICAgICAgICAgICAgZCA9IHZkKGEsIGUpOwogICAgICAgICAgICAg
ICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoZSA9
IGUuX19DRV9zaGFkb3dSb290KSBmb3IgKGUgPSBlLmZpcnN0Q2hpbGQ7IGU7IGUgPSBlLm5leHRT
aWJsaW5nKSB3ZChlLCBiLCBjKQogICAgICAgICAgICB9CiAgICAgICAgICAgIGQgPSBkLmZpcnN0
Q2hpbGQgPyBkLmZpcnN0Q2hpbGQgOiB2ZChhLCBkKQogICAgICAgIH0KICAgIH0KCiAgICBmdW5j
dGlvbiBJKGEsIGIsIGMpIHsKICAgICAgICBhW2JdID0gYwogICAgfTsKCiAgICBmdW5jdGlvbiB4
ZCgpIHsKICAgICAgICB0aGlzLmEgPSBuZXcgTWFwOwogICAgICAgIHRoaXMuZyA9IG5ldyBNYXA7
CiAgICAgICAgdGhpcy5mID0gW107CiAgICAgICAgdGhpcy5jID0gITEKICAgIH0KCiAgICBmdW5j
dGlvbiB5ZChhLCBiLCBjKSB7CiAgICAgICAgYS5hLnNldChiLCBjKTsKICAgICAgICBhLmcuc2V0
KGMuY29uc3RydWN0b3JGdW5jdGlvbiwgYykKICAgIH0KCiAgICBmdW5jdGlvbiB6ZChhLCBiKSB7
CiAgICAgICAgYS5jID0gITA7CiAgICAgICAgYS5mLnB1c2goYikKICAgIH0KCiAgICBmdW5jdGlv
biBBZChhLCBiKSB7CiAgICAgICAgYS5jICYmIHdkKGIsIGZ1bmN0aW9uIChiKSB7CiAgICAgICAg
ICAgIHJldHVybiBhLmIoYikKICAgICAgICB9KQogICAgfQoKICAgIHhkLnByb3RvdHlwZS5iID0g
ZnVuY3Rpb24gKGEpIHsKICAgICAgICBpZiAodGhpcy5jICYmICFhLl9fQ0VfcGF0Y2hlZCkgewog
ICAgICAgICAgICBhLl9fQ0VfcGF0Y2hlZCA9ICEwOwogICAgICAgICAgICBmb3IgKHZhciBiID0g
MDsgYiA8IHRoaXMuZi5sZW5ndGg7IGIrKykgdGhpcy5mW2JdKGEpCiAgICAgICAgfQogICAgfTsK
CiAgICBmdW5jdGlvbiBKKGEsIGIpIHsKICAgICAgICB2YXIgYyA9IFtdOwogICAgICAgIHdkKGIs
IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIHJldHVybiBjLnB1c2goYSkKICAgICAgICB9KTsK
ICAgICAgICBmb3IgKGIgPSAwOyBiIDwgYy5sZW5ndGg7IGIrKykgewogICAgICAgICAgICB2YXIg
ZCA9IGNbYl07CiAgICAgICAgICAgIDEgPT09IGQuX19DRV9zdGF0ZSA/IGEuY29ubmVjdGVkQ2Fs
bGJhY2soZCkgOiBCZChhLCBkKQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBLKGEsIGIp
IHsKICAgICAgICB2YXIgYyA9IFtdOwogICAgICAgIHdkKGIsIGZ1bmN0aW9uIChhKSB7CiAgICAg
ICAgICAgIHJldHVybiBjLnB1c2goYSkKICAgICAgICB9KTsKICAgICAgICBmb3IgKGIgPSAwOyBi
IDwgYy5sZW5ndGg7IGIrKykgewogICAgICAgICAgICB2YXIgZCA9IGNbYl07CiAgICAgICAgICAg
IDEgPT09IGQuX19DRV9zdGF0ZSAmJiBhLmRpc2Nvbm5lY3RlZENhbGxiYWNrKGQpCiAgICAgICAg
fQogICAgfQoKICAgIGZ1bmN0aW9uIEwoYSwgYiwgYykgewogICAgICAgIGMgPSB2b2lkIDAgPT09
IGMgPyB7fSA6IGM7CiAgICAgICAgdmFyIGQgPSBjLlhhIHx8IG5ldyBTZXQsIGUgPSBjLlkgfHwg
ZnVuY3Rpb24gKGIpIHsKICAgICAgICAgICAgcmV0dXJuIEJkKGEsIGIpCiAgICAgICAgfSwgZiA9
IFtdOwogICAgICAgIHdkKGIsIGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgIGlmICgibGluayIg
PT09IGIubG9jYWxOYW1lICYmICJpbXBvcnQiID09PSBiLmdldEF0dHJpYnV0ZSgicmVsIikpIHsK
ICAgICAgICAgICAgICAgIHZhciBjID0gYi5pbXBvcnQ7CiAgICAgICAgICAgICAgICBjIGluc3Rh
bmNlb2YgTm9kZSAmJiAoYy5fX0NFX2lzSW1wb3J0RG9jdW1lbnQgPSAhMCwgYy5fX0NFX2hhc1Jl
Z2lzdHJ5ID0gITApOwogICAgICAgICAgICAgICAgYyAmJiAiY29tcGxldGUiID09PSBjLnJlYWR5
U3RhdGUgPyBjLl9fQ0VfZG9jdW1lbnRMb2FkSGFuZGxlZCA9ICEwIDogYi5hZGRFdmVudExpc3Rl
bmVyKCJsb2FkIiwgZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIHZhciBjID0gYi5p
bXBvcnQ7CiAgICAgICAgICAgICAgICAgICAgaWYgKCFjLl9fQ0VfZG9jdW1lbnRMb2FkSGFuZGxl
ZCkgewogICAgICAgICAgICAgICAgICAgICAgICBjLl9fQ0VfZG9jdW1lbnRMb2FkSGFuZGxlZCA9
ICEwOwogICAgICAgICAgICAgICAgICAgICAgICB2YXIgZiA9IG5ldyBTZXQoZCk7CiAgICAgICAg
ICAgICAgICAgICAgICAgIGYuZGVsZXRlKGMpOwogICAgICAgICAgICAgICAgICAgICAgICBMKGEs
IGMsIHtYYTogZiwgWTogZX0pCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAg
fSkKICAgICAgICAgICAgfSBlbHNlIGYucHVzaChiKQogICAgICAgIH0sIGQpOwogICAgICAgIGlm
IChhLmMpIGZvciAoYiA9CiAgICAgICAgICAgICAgICAgICAgICAgICAgMDsgYiA8IGYubGVuZ3Ro
OyBiKyspIGEuYihmW2JdKTsKICAgICAgICBmb3IgKGIgPSAwOyBiIDwgZi5sZW5ndGg7IGIrKykg
ZShmW2JdKQogICAgfQoKICAgIGZ1bmN0aW9uIEJkKGEsIGIpIHsKICAgICAgICBpZiAodm9pZCAw
ID09PSBiLl9fQ0Vfc3RhdGUpIHsKICAgICAgICAgICAgdmFyIGMgPSBiLm93bmVyRG9jdW1lbnQ7
CiAgICAgICAgICAgIGlmIChjLmRlZmF1bHRWaWV3IHx8IGMuX19DRV9pc0ltcG9ydERvY3VtZW50
ICYmIGMuX19DRV9oYXNSZWdpc3RyeSkgaWYgKGMgPSBhLmEuZ2V0KGIubG9jYWxOYW1lKSkgewog
ICAgICAgICAgICAgICAgYy5jb25zdHJ1Y3Rpb25TdGFjay5wdXNoKGIpOwogICAgICAgICAgICAg
ICAgdmFyIGQgPSBjLmNvbnN0cnVjdG9yRnVuY3Rpb247CiAgICAgICAgICAgICAgICB0cnkgewog
ICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXcg
ZCAhPT0gYikgdGhyb3cgRXJyb3IoIlRoZSBjdXN0b20gZWxlbWVudCBjb25zdHJ1Y3RvciBkaWQg
bm90IHByb2R1Y2UgdGhlIGVsZW1lbnQgYmVpbmcgdXBncmFkZWQuIik7CiAgICAgICAgICAgICAg
ICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgICAgICAgYy5jb25zdHJ1Y3Rpb25T
dGFjay5wb3AoKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gY2F0Y2gg
KGcpIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyBiLl9fQ0Vfc3RhdGUgPSAyLCBnOwogICAg
ICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgYi5fX0NFX3N0YXRlID0gMTsKICAgICAgICAg
ICAgICAgIGIuX19DRV9kZWZpbml0aW9uID0gYzsKICAgICAgICAgICAgICAgIGlmIChjLmF0dHJp
YnV0ZUNoYW5nZWRDYWxsYmFjaykgZm9yIChjID0gYy5vYnNlcnZlZEF0dHJpYnV0ZXMsIGQgPSAw
OyBkIDwgYy5sZW5ndGg7IGQrKykgewogICAgICAgICAgICAgICAgICAgIHZhciBlID0KICAgICAg
ICAgICAgICAgICAgICAgICAgY1tkXSwgZiA9IGIuZ2V0QXR0cmlidXRlKGUpOwogICAgICAgICAg
ICAgICAgICAgIG51bGwgIT09IGYgJiYgYS5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soYiwgZSwg
bnVsbCwgZiwgbnVsbCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIEgoYikgJiYg
YS5jb25uZWN0ZWRDYWxsYmFjayhiKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAg
IHhkLnByb3RvdHlwZS5jb25uZWN0ZWRDYWxsYmFjayA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAg
dmFyIGIgPSBhLl9fQ0VfZGVmaW4=</Default>
</Parameter>

<Parameter name="Frag15">
<Default>aXRpb247CiAgICAgICAgYi5jb25uZWN0ZWRDYWxsYmFjayAmJiBiLmNvbm5lY3RlZENhbGxiYWNr
LmNhbGwoYSkKICAgIH07CiAgICB4ZC5wcm90b3R5cGUuZGlzY29ubmVjdGVkQ2FsbGJhY2sgPSBm
dW5jdGlvbiAoYSkgewogICAgICAgIHZhciBiID0gYS5fX0NFX2RlZmluaXRpb247CiAgICAgICAg
Yi5kaXNjb25uZWN0ZWRDYWxsYmFjayAmJiBiLmRpc2Nvbm5lY3RlZENhbGxiYWNrLmNhbGwoYSkK
ICAgIH07CiAgICB4ZC5wcm90b3R5cGUuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrID0gZnVuY3Rp
b24gKGEsIGIsIGMsIGQsIGUpIHsKICAgICAgICB2YXIgZiA9IGEuX19DRV9kZWZpbml0aW9uOwog
ICAgICAgIGYuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrICYmIC0xIDwgZi5vYnNlcnZlZEF0dHJp
YnV0ZXMuaW5kZXhPZihiKSAmJiBmLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjay5jYWxsKGEsIGIs
IGMsIGQsIGUpCiAgICB9OwoKICAgIGZ1bmN0aW9uIENkKGEpIHsKICAgICAgICB2YXIgYiA9IGRv
Y3VtZW50OwogICAgICAgIHRoaXMuYiA9IGE7CiAgICAgICAgdGhpcy5hID0gYjsKICAgICAgICB0
aGlzLkYgPSB2b2lkIDA7CiAgICAgICAgTCh0aGlzLmIsIHRoaXMuYSk7CiAgICAgICAgImxvYWRp
bmciID09PSB0aGlzLmEucmVhZHlTdGF0ZSAmJiAodGhpcy5GID0gbmV3IE11dGF0aW9uT2JzZXJ2
ZXIodGhpcy5jLmJpbmQodGhpcykpLCB0aGlzLkYub2JzZXJ2ZSh0aGlzLmEsIHsKICAgICAgICAg
ICAgY2hpbGRMaXN0OiAhMCwKICAgICAgICAgICAgc3VidHJlZTogITAKICAgICAgICB9KSkKICAg
IH0KCiAgICBmdW5jdGlvbiBEZChhKSB7CiAgICAgICAgYS5GICYmIGEuRi5kaXNjb25uZWN0KCkK
ICAgIH0KCiAgICBDZC5wcm90b3R5cGUuYyA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgdmFyIGIg
PSB0aGlzLmEucmVhZHlTdGF0ZTsKICAgICAgICAiaW50ZXJhY3RpdmUiICE9PSBiICYmICJjb21w
bGV0ZSIgIT09IGIgfHwgRGQodGhpcyk7CiAgICAgICAgZm9yIChiID0gMDsgYiA8IGEubGVuZ3Ro
OyBiKyspIGZvciAodmFyIGMgPSBhW2JdLmFkZGVkTm9kZXMsIGQgPSAwOyBkIDwgYy5sZW5ndGg7
IGQrKykgTCh0aGlzLmIsIGNbZF0pCiAgICB9OwoKICAgIGZ1bmN0aW9uIEVkKCkgewogICAgICAg
IHZhciBhID0gdGhpczsKICAgICAgICB0aGlzLmEgPSB0aGlzLmggPSB2b2lkIDA7CiAgICAgICAg
dGhpcy5iID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKGIpIHsKICAgICAgICAgICAgYS5hID0gYjsK
ICAgICAgICAgICAgYS5oICYmIGIoYS5oKQogICAgICAgIH0pCiAgICB9CgogICAgRWQucHJvdG90
eXBlLnJlc29sdmUgPSBmdW5jdGlvbiAoYSkgewogICAgICAgIGlmICh0aGlzLmgpIHRocm93IEVy
cm9yKCJBbHJlYWR5IHJlc29sdmVkLiIpOwogICAgICAgIHRoaXMuaCA9IGE7CiAgICAgICAgdGhp
cy5hICYmIHRoaXMuYShhKQogICAgfTsKCiAgICBmdW5jdGlvbiBOKGEpIHsKICAgICAgICB0aGlz
LmMgPSAhMTsKICAgICAgICB0aGlzLmEgPSBhOwogICAgICAgIHRoaXMubCA9IG5ldyBNYXA7CiAg
ICAgICAgdGhpcy5mID0gZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgcmV0dXJuIGEoKQogICAg
ICAgIH07CiAgICAgICAgdGhpcy5iID0gITE7CiAgICAgICAgdGhpcy5nID0gW107CiAgICAgICAg
dGhpcy5kYSA9IG5ldyBDZChhKQogICAgfQoKICAgIG4gPSBOLnByb3RvdHlwZTsKICAgIG4uc2Eg
PSBmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHZhciBjID0gdGhpczsKICAgICAgICBpZiAoIShi
IGluc3RhbmNlb2YgRnVuY3Rpb24pKSB0aHJvdyBuZXcgVHlwZUVycm9yKCJDdXN0b20gZWxlbWVu
dCBjb25zdHJ1Y3RvcnMgbXVzdCBiZSBmdW5jdGlvbnMuIik7CiAgICAgICAgaWYgKCF1ZChhKSkg
dGhyb3cgbmV3IFN5bnRheEVycm9yKCJUaGUgZWxlbWVudCBuYW1lICciICsgYSArICInIGlzIG5v
dCB2YWxpZC4iKTsKICAgICAgICBpZiAodGhpcy5hLmEuZ2V0KGEpKSB0aHJvdyBFcnJvcigiQSBj
dXN0b20gZWxlbWVudCB3aXRoIG5hbWUgJyIgKyBhICsgIicgaGFzIGFscmVhZHkgYmVlbiBkZWZp
bmVkLiIpOwogICAgICAgIGlmICh0aGlzLmMpIHRocm93IEVycm9yKCJBIGN1c3RvbSBlbGVtZW50
IGlzIGFscmVhZHkgYmVpbmcgZGVmaW5lZC4iKTsKICAgICAgICB0aGlzLmMgPSAhMDsKICAgICAg
ICB0cnkgewogICAgICAgICAgICB2YXIgZCA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAg
ICB2YXIgYiA9IGVbYV07CiAgICAgICAgICAgICAgICBpZiAodm9pZCAwICE9PSBiICYmICEoYiBp
bnN0YW5jZW9mIEZ1bmN0aW9uKSkgdGhyb3cgRXJyb3IoIlRoZSAnIiArIGEgKyAiJyBjYWxsYmFj
ayBtdXN0IGJlIGEgZnVuY3Rpb24uIik7CiAgICAgICAgICAgICAgICByZXR1cm4gYgogICAgICAg
ICAgICB9LCBlID0gYi5wcm90b3R5cGU7CiAgICAgICAgICAgIGlmICghKGUgaW5zdGFuY2VvZiBP
YmplY3QpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCJUaGUgY3VzdG9tIGVsZW1lbnQgY29uc3RydWN0
b3IncyBwcm90b3R5cGUgaXMgbm90IGFuIG9iamVjdC4iKTsKICAgICAgICAgICAgdmFyIGYgPSBk
KCJjb25uZWN0ZWRDYWxsYmFjayIpOwogICAgICAgICAgICB2YXIgZyA9IGQoImRpc2Nvbm5lY3Rl
ZENhbGxiYWNrIik7CiAgICAgICAgICAgIHZhciBoID0gZCgiYWRvcHRlZENhbGxiYWNrIik7CiAg
ICAgICAgICAgIHZhciBrID0gZCgiYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIik7CiAgICAgICAg
ICAgIHZhciBsID0gYi5vYnNlcnZlZEF0dHJpYnV0ZXMgfHwgW10KICAgICAgICB9IGNhdGNoICht
KSB7CiAgICAgICAgICAgIHJldHVybgogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICAgIHRo
aXMuYyA9ICExCiAgICAgICAgfQogICAgICAgIGIgPSB7CiAgICAgICAgICAgIGxvY2FsTmFtZTog
YSwKICAgICAgICAgICAgY29uc3RydWN0b3JGdW5jdGlvbjogYiwKICAgICAgICAgICAgY29ubmVj
dGVkQ2FsbGJhY2s6IGYsCiAgICAgICAgICAgIGRpc2Nvbm5lY3RlZENhbGxiYWNrOiBnLAogICAg
ICAgICAgICBhZG9wdGVkQ2FsbGJhY2s6IGgsCiAgICAgICAgICAgIGF0dHJpYnV0ZUNoYW5nZWRD
YWxsYmFjazogaywKICAgICAgICAgICAgb2JzZXJ2ZWRBdHRyaWJ1dGVzOiBsLAogICAgICAgICAg
ICBjb25zdHJ1Y3Rpb25TdGFjazogW10KICAgICAgICB9OwogICAgICAgIHlkKHRoaXMuYSwKICAg
ICAgICAgICAgYSwgYik7CiAgICAgICAgdGhpcy5nLnB1c2goYik7CiAgICAgICAgdGhpcy5iIHx8
ICh0aGlzLmIgPSAhMCwgdGhpcy5mKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIEZk
KGMpCiAgICAgICAgfSkpCiAgICB9OwogICAgbi5ZID0gZnVuY3Rpb24gKGEpIHsKICAgICAgICBM
KHRoaXMuYSwgYSkKICAgIH07CgogICAgZnVuY3Rpb24gRmQoYSkgewogICAgICAgIGlmICghMSAh
PT0gYS5iKSB7CiAgICAgICAgICAgIGEuYiA9ICExOwogICAgICAgICAgICBmb3IgKHZhciBiID0g
YS5nLCBjID0gW10sIGQgPSBuZXcgTWFwLCBlID0gMDsgZSA8IGIubGVuZ3RoOyBlKyspIGQuc2V0
KGJbZV0ubG9jYWxOYW1lLCBbXSk7CiAgICAgICAgICAgIEwoYS5hLCBkb2N1bWVudCwgewogICAg
ICAgICAgICAgICAgWTogZnVuY3Rpb24gKGIpIHsKICAgICAgICAgICAgICAgICAgICBpZiAodm9p
ZCAwID09PSBiLl9fQ0Vfc3RhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGUgPSBi
LmxvY2FsTmFtZSwgZiA9IGQuZ2V0KGUpOwogICAgICAgICAgICAgICAgICAgICAgICBmID8gZi5w
dXNoKGIpIDogYS5hLmEuZ2V0KGUpICYmIGMucHVzaChiKQogICAgICAgICAgICAgICAgICAgIH0K
ICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGZvciAoZSA9IDA7
IGUgPCBjLmxlbmd0aDsgZSsrKSBCZChhLmEsIGNbZV0pOwogICAgICAgICAgICBmb3IgKDsgMCA8
IGIubGVuZ3RoOykgewogICAgICAgICAgICAgICAgdmFyIGYgPSBiLnNoaWZ0KCk7CiAgICAgICAg
ICAgICAgICBlID0gZi5sb2NhbE5hbWU7CiAgICAgICAgICAgICAgICBmID0gZC5nZXQoZi5sb2Nh
bE5hbWUpOwogICAgICAgICAgICAgICAgZm9yICh2YXIgZyA9IDA7IGcgPCBmLmxlbmd0aDsgZysr
KSBCZChhLmEsIGZbZ10pOwogICAgICAgICAgICAgICAgKGUgPSBhLmwuZ2V0KGUpKSAmJiBlLnJl
c29sdmUodm9pZCAwKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIG4uZ2V0ID0g
ZnVuY3Rpb24gKGEpIHsKICAgICAgICBpZiAoYSA9IHRoaXMuYS5hLmdldChhKSkgcmV0dXJuIGEu
Y29uc3RydWN0b3JGdW5jdGlvbgogICAgfTsKICAgIG4udGEgPSBmdW5jdGlvbiAoYSkgewogICAg
ICAgIGlmICghdWQoYSkpIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgU3ludGF4RXJyb3IoIici
ICsgYSArICInIGlzIG5vdCBhIHZhbGlkIGN1c3RvbSBlbGVtZW50IG5hbWUuIikpOwogICAgICAg
IHZhciBiID0gdGhpcy5sLmdldChhKTsKICAgICAgICBpZiAoYikgcmV0dXJuIGIuYjsKICAgICAg
ICBiID0gbmV3IEVkOwogICAgICAgIHRoaXMubC5zZXQoYSwgYik7CiAgICAgICAgdGhpcy5hLmEu
Z2V0KGEpICYmICF0aGlzLmcuc29tZShmdW5jdGlvbiAoYikgewogICAgICAgICAgICByZXR1cm4g
Yi5sb2NhbE5hbWUgPT09IGEKICAgICAgICB9KSAmJiBiLnJlc29sdmUodm9pZCAwKTsKICAgICAg
ICByZXR1cm4gYi5iCiAgICB9OwogICAgbi5QYSA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgRGQo
dGhpcy5kYSk7CiAgICAgICAgdmFyIGIgPSB0aGlzLmY7CiAgICAgICAgdGhpcy5mID0gZnVuY3Rp
b24gKGMpIHsKICAgICAgICAgICAgcmV0dXJuIGEoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAg
ICAgcmV0dXJuIGIoYykKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9OwogICAgd2luZG93
LkN1c3RvbUVsZW1lbnRSZWdpc3RyeSA9IE47CiAgICBOLnByb3RvdHlwZS5kZWZpbmUgPSBOLnBy
b3RvdHlwZS5zYTsKICAgIE4ucHJvdG90eXBlLnVwZ3JhZGUgPSBOLnByb3RvdHlwZS5ZOwogICAg
Ti5wcm90b3R5cGUuZ2V0ID0gTi5wcm90b3R5cGUuZ2V0OwogICAgTi5wcm90b3R5cGUud2hlbkRl
ZmluZWQgPSBOLnByb3RvdHlwZS50YTsKICAgIE4ucHJvdG90eXBlLnBvbHlmaWxsV3JhcEZsdXNo
Q2FsbGJhY2sgPSBOLnByb3RvdHlwZS5QYTsKICAgIHZhciBHZCA9IHdpbmRvdy5Eb2N1bWVudC5w
cm90b3R5cGUuY3JlYXRlRWxlbWVudCwgSGQgPSB3aW5kb3cuRG9jdW1lbnQucHJvdG90eXBlLmNy
ZWF0ZUVsZW1lbnROUywKICAgICAgICBJZCA9IHdpbmRvdy5Eb2N1bWVudC5wcm90b3R5cGUuaW1w
b3J0Tm9kZSwgSmQgPSB3aW5kb3cuRG9jdW1lbnQucHJvdG90eXBlLnByZXBlbmQsCiAgICAgICAg
S2QgPSB3aW5kb3cuRG9jdW1lbnQucHJvdG90eXBlLmFwcGVuZCwgTGQgPSB3aW5kb3cuRG9jdW1l
bnRGcmFnbWVudC5wcm90b3R5cGUucHJlcGVuZCwKICAgICAgICBNZCA9IHdpbmRvdy5Eb2N1bWVu
dEZyYWdtZW50LnByb3RvdHlwZS5hcHBlbmQsIE5kID0gd2luZG93Lk5vZGUucHJvdG90eXBlLmNs
b25lTm9kZSwKICAgICAgICBPZCA9IHdpbmRvdy5Ob2RlLnByb3RvdHlwZS5hcHBlbmRDaGlsZCwg
UGQgPSB3aW5kb3cuTm9kZS5wcm90b3R5cGUuaW5zZXJ0QmVmb3JlLAogICAgICAgIFFkID0gd2lu
ZG93Lk5vZGUucHJvdG90eXBlLnJlbW92ZUNoaWxkLCBSZCA9IHdpbmRvdy5Ob2RlLnByb3RvdHlw
ZS5yZXBsYWNlQ2hpbGQsCiAgICAgICAgU2QgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlw
dG9yKHdpbmRvdy5Ob2RlLnByb3RvdHlwZSwKICAgICAgICAgICAgInRleHRDb250ZW50IiksIFRk
ID0gd2luZG93LkVsZW1lbnQucHJvdG90eXBlLmF0dGFjaFNoYWRvdywKICAgICAgICBVZCA9IE9i
amVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iod2luZG93LkVsZW1lbnQucHJvdG90eXBlLCAi
aW5uZXJIVE1MIiksCiAgICAgICAgVmQgPSB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuZ2V0QXR0
cmlidXRlLCBXZCA9IHdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGUsCiAgICAg
ICAgWGQgPSB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlQXR0cmlidXRlLCBZZCA9IHdp
bmRvdy5FbGVtZW50LnByb3RvdHlwZS5nZXRBdHRyaWJ1dGVOUywKICAgICAgICBaZCA9IHdpbmRv
dy5FbGVtZW50LnByb3RvdHlwZS5zZXRBdHRyaWJ1dGVOUywgJGQgPSB3aW5kb3cuRWxlbWVudC5w
cm90b3R5cGUucmVtb3ZlQXR0cmlidXRlTlMsCiAgICAgICAgYWUgPSB3aW5kb3cuRWxlbWVudC5w
cm90b3R5cGUuaW5zZXJ0QWRqYWNlbnRFbGVtZW50LCBiZSA9IHdpbmRvdy5FbGVtZW50LnByb3Rv
dHlwZS5pbnNlcnRBZGphY2VudEhUTUwsCiAgICAgICAgY2UgPSB3aW5kb3cuRWxlbWVudC5wcm90
b3R5cGUucHJlcGVuZCwKICAgICAgICBkZSA9IHdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5hcHBl
bmQsIGVlID0gd2luZG93LkVsZW1lbnQucHJvdG90eXBlLmJlZm9yZSwgZmUgPSB3aW5kb3cuRWxl
bWVudC5wcm90b3R5cGUuYWZ0ZXIsCiAgICAgICAgZ2UgPSB3aW5kb3cuRWxlbWVudC5wcm90b3R5
cGUucmVwbGFjZVdpdGgsIGhlID0gd2luZG93LkVsZW1lbnQucHJvdG90eXBlLnJlbW92ZSwgaWUg
PSB3aW5kb3cuSFRNTEVsZW1lbnQsCiAgICAgICAgamUgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlE
ZXNjcmlwdG9yKHdpbmRvdy5IVE1MRWxlbWVudC5wcm90b3R5cGUsICJpbm5lckhUTUwiKSwKICAg
ICAgICBrZSA9IHdpbmRvdy5IVE1MRWxlbWVudC5wcm90b3R5cGUuaW5zZXJ0QWRqYWNlbnRFbGVt
ZW50LCBsZSA9IHdpbmRvdy5IVE1MRWxlbWVudC5wcm90b3R5cGUuaW5zZXJ0QWRqYWNlbnRIVE1M
OwogICAgdmFyIG1lID0gbmV3IGZ1bmN0aW9uICgpIHsKICAgIH07CgogICAgZnVuY3Rpb24gbmUo
KSB7CiAgICAgICAgdmFyIGEgPSBvZTsKICAgICAgICB3aW5kb3cuSFRNTEVsZW1lbnQgPSBmdW5j
dGlvbiAoKSB7CiAgICAgICAgICAgIGZ1bmN0aW9uIGIoKSB7CiAgICAgICAgICAgICAgICB2YXIg
YiA9IHRoaXMuY29uc3RydWN0b3IsIGQgPSBhLmcuZ2V0KGIpOwogICAgICAgICAgICAgICAgaWYg
KCFkKSB0aHJvdyBFcnJvcigiVGhlIGN1c3RvbSBlbGVtZW50IGJlaW5nIGNvbnN0cnVjdGVkIHdh
cyBub3QgcmVnaXN0ZXJlZCB3aXRoIGBjdXN0b21FbGVtZW50c2AuIik7CiAgICAgICAgICAgICAg
ICB2YXIgZSA9IGQuY29uc3RydWN0aW9uU3RhY2s7CiAgICAgICAgICAgICAgICBpZiAoMCA9PT0g
ZS5sZW5ndGgpIHJldHVybiBlID0gR2QuY2FsbChkb2N1bWVudCwgZC5sb2NhbE5hbWUpLCBPYmpl
Y3Quc2V0UHJvdG90eXBlT2YoZSwgYi5wcm90b3R5cGUpLCBlLl9fQ0Vfc3RhdGUgPSAxLCBlLl9f
Q0VfZGVmaW5pdGlvbiA9IGQsIGEuYihlKSwgZTsKICAgICAgICAgICAgICAgIGQgPSBlLmxlbmd0
aCAtIDE7CiAgICAgICAgICAgICAgICB2YXIgZiA9IGVbZF07CiAgICAgICAgICAgICAgICBpZiAo
ZiA9PT0gbWUpIHRocm93IEVycm9yKCJUaGUgSFRNTEVsZW1lbnQgY29uc3RydWN0b3Igd2FzIGVp
dGhlciBjYWxsZWQgcmVlbnRyYW50bHkgZm9yIHRoaXMgY29uc3RydWN0b3Igb3IgY2FsbGVkIG11
bHRpcGxlIHRpbWVzLiIpOwogICAgICAgICAgICAgICAgZVtkXSA9IG1lOwogICAgICAgICAgICAg
ICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGYsIGIucHJvdG90eXBlKTsKICAgICAgICAgICAgICAg
IGEuYihmKTsKICAgICAgICAgICAgICAgIHJldHVybiBmCiAgICAgICAgICAgIH0KCiAgICAgICAg
ICAgIGIucHJvdG90eXBlID0gaWUucHJvdG90eXBlOwogICAgICAgICAgICBPYmplY3QuZGVmaW5l
UHJvcGVydHkoYi5wcm90b3R5cGUsICJjb25zdHJ1Y3RvciIsIHsKICAgICAgICAgICAgICAgIHdy
aXRhYmxlOiAhMCwKICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsCiAgICAgICAgICAg
ICAgICBlbnVtZXJhYmxlOiAhMSwKICAgICAgICAgICAgICAgIHZhbHVlOiBiCiAgICAgICAgICAg
IH0pOwogICAgICAgICAgICByZXQ=</Default>
</Parameter>

<Parameter name="Frag16">
<Default>dXJuIGIKICAgICAgICB9KCkKICAgIH07CgogICAgZnVuY3Rpb24gcGUoYSwgYiwgYykgewogICAg
ICAgIGZ1bmN0aW9uIGQoYikgewogICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGMpIHsKICAg
ICAgICAgICAgICAgIGZvciAodmFyIGQgPSBbXSwgZSA9IDA7IGUgPCBhcmd1bWVudHMubGVuZ3Ro
OyArK2UpIGRbZV0gPSBhcmd1bWVudHNbZV07CiAgICAgICAgICAgICAgICBlID0gW107CiAgICAg
ICAgICAgICAgICBmb3IgKHZhciBmID0gW10sIGwgPSAwOyBsIDwgZC5sZW5ndGg7IGwrKykgewog
ICAgICAgICAgICAgICAgICAgIHZhciBtID0gZFtsXTsKICAgICAgICAgICAgICAgICAgICBtIGlu
c3RhbmNlb2YgRWxlbWVudCAmJiBIKG0pICYmIGYucHVzaChtKTsKICAgICAgICAgICAgICAgICAg
ICBpZiAobSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQpIGZvciAobSA9IG0uZmlyc3RDaGls
ZDsgbTsgbSA9IG0ubmV4dFNpYmxpbmcpIGUucHVzaChtKTsgZWxzZSBlLnB1c2gobSkKICAgICAg
ICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGIuYXBwbHkodGhpcywgZCk7CiAgICAgICAgICAg
ICAgICBmb3IgKGQgPSAwOyBkIDwgZi5sZW5ndGg7IGQrKykgSyhhLCBmW2RdKTsKICAgICAgICAg
ICAgICAgIGlmIChIKHRoaXMpKSBmb3IgKGQgPSAwOyBkIDwgZS5sZW5ndGg7IGQrKykgZiA9IGVb
ZF0sIGYgaW5zdGFuY2VvZiBFbGVtZW50ICYmIEooYSwgZikKICAgICAgICAgICAgfQogICAgICAg
IH0KCiAgICAgICAgdm9pZCAwICE9PSBjLlYgJiYgKGIucHJlcGVuZCA9IGQoYy5WKSk7CiAgICAg
ICAgdm9pZCAwICE9PSBjLmFwcGVuZCAmJiAoYi5hcHBlbmQgPSBkKGMuYXBwZW5kKSkKICAgIH07
CgogICAgZnVuY3Rpb24gcWUoKSB7CiAgICAgICAgdmFyIGEgPSBvZTsKICAgICAgICBJKERvY3Vt
ZW50LnByb3RvdHlwZSwgImNyZWF0ZUVsZW1lbnQiLCBmdW5jdGlvbiAoYikgewogICAgICAgICAg
ICBpZiAodGhpcy5fX0NFX2hhc1JlZ2lzdHJ5KSB7CiAgICAgICAgICAgICAgICB2YXIgYyA9IGEu
YS5nZXQoYik7CiAgICAgICAgICAgICAgICBpZiAoYykgcmV0dXJuIG5ldyBjLmNvbnN0cnVjdG9y
RnVuY3Rpb24KICAgICAgICAgICAgfQogICAgICAgICAgICBiID0gR2QuY2FsbCh0aGlzLCBiKTsK
ICAgICAgICAgICAgYS5iKGIpOwogICAgICAgICAgICByZXR1cm4gYgogICAgICAgIH0pOwogICAg
ICAgIEkoRG9jdW1lbnQucHJvdG90eXBlLCAiaW1wb3J0Tm9kZSIsIGZ1bmN0aW9uIChiLCBjKSB7
CiAgICAgICAgICAgIGIgPSBJZC5jYWxsKHRoaXMsIGIsICEhYyk7CiAgICAgICAgICAgIHRoaXMu
X19DRV9oYXNSZWdpc3RyeSA/IEwoYSwgYikgOiBBZChhLCBiKTsKICAgICAgICAgICAgcmV0dXJu
IGIKICAgICAgICB9KTsKICAgICAgICBJKERvY3VtZW50LnByb3RvdHlwZSwgImNyZWF0ZUVsZW1l
bnROUyIsIGZ1bmN0aW9uIChiLCBjKSB7CiAgICAgICAgICAgIGlmICh0aGlzLl9fQ0VfaGFzUmVn
aXN0cnkgJiYgKG51bGwgPT09IGIgfHwgImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiID09
PSBiKSkgewogICAgICAgICAgICAgICAgdmFyIGQgPSBhLmEuZ2V0KGMpOwogICAgICAgICAgICAg
ICAgaWYgKGQpIHJldHVybiBuZXcgZC5jb25zdHJ1Y3RvckZ1bmN0aW9uCiAgICAgICAgICAgIH0K
ICAgICAgICAgICAgYiA9IEhkLmNhbGwodGhpcywKICAgICAgICAgICAgICAgIGIsIGMpOwogICAg
ICAgICAgICBhLmIoYik7CiAgICAgICAgICAgIHJldHVybiBiCiAgICAgICAgfSk7CiAgICAgICAg
cGUoYSwgRG9jdW1lbnQucHJvdG90eXBlLCB7VjogSmQsIGFwcGVuZDogS2R9KQogICAgfTsKCiAg
ICBmdW5jdGlvbiByZSgpIHsKICAgICAgICBmdW5jdGlvbiBhKGEsIGQpIHsKICAgICAgICAgICAg
T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsICJ0ZXh0Q29udGVudCIsIHsKICAgICAgICAgICAgICAg
IGVudW1lcmFibGU6IGQuZW51bWVyYWJsZSwKICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTog
ITAsCiAgICAgICAgICAgICAgICBnZXQ6IGQuZ2V0LAogICAgICAgICAgICAgICAgc2V0OiBmdW5j
dGlvbiAoYSkgewogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm5vZGVUeXBlID09PSBOb2Rl
LlRFWFRfTk9ERSkgZC5zZXQuY2FsbCh0aGlzLCBhKTsgZWxzZSB7CiAgICAgICAgICAgICAgICAg
ICAgICAgIHZhciBjID0gdm9pZCAwOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5m
aXJzdENoaWxkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZSA9IHRoaXMuY2hp
bGROb2RlcywgaCA9IGUubGVuZ3RoOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDAg
PCBoICYmIEgodGhpcykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjID0gQXJy
YXkoaCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IDA7IGsg
PCBoOyBrKyspIGNba10gPSBlW2tdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAg
ICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgZC5zZXQuY2FsbCh0
aGlzLCBhKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGMpIGZvciAoYSA9IDA7IGEgPCBj
Lmxlbmd0aDsgYSsrKSBLKGIsIGNbYV0pCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAg
ICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0KCiAgICAgICAgdmFyIGIgPSBvZTsKICAg
ICAgICBJKE5vZGUucHJvdG90eXBlLCAiaW5zZXJ0QmVmb3JlIiwgZnVuY3Rpb24gKGEsIGQpIHsK
ICAgICAgICAgICAgaWYgKGEgaW5zdGFuY2VvZiBEb2N1bWVudEZyYWdtZW50KSB7CiAgICAgICAg
ICAgICAgICB2YXIgYyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhLmNoaWxkTm9kZXMp
OwogICAgICAgICAgICAgICAgYSA9IFBkLmNhbGwodGhpcywgYSwgZCk7CiAgICAgICAgICAgICAg
ICBpZiAoSCh0aGlzKSkgZm9yIChkID0gMDsgZCA8IGMubGVuZ3RoOyBkKyspIEooYiwgY1tkXSk7
CiAgICAgICAgICAgICAgICByZXR1cm4gYQogICAgICAgICAgICB9CiAgICAgICAgICAgIGMgPSBI
KGEpOwogICAgICAgICAgICBkID0gUGQuY2FsbCh0aGlzLCBhLCBkKTsKICAgICAgICAgICAgYyAm
JiBLKGIsIGEpOwogICAgICAgICAgICBIKHRoaXMpICYmIEooYiwgYSk7CiAgICAgICAgICAgIHJl
dHVybiBkCiAgICAgICAgfSk7CiAgICAgICAgSShOb2RlLnByb3RvdHlwZSwgImFwcGVuZENoaWxk
IiwgZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgaWYgKGEgaW5zdGFuY2VvZiBEb2N1bWVudEZy
YWdtZW50KSB7CiAgICAgICAgICAgICAgICB2YXIgYyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5h
cHBseShhLmNoaWxkTm9kZXMpOwogICAgICAgICAgICAgICAgYSA9IE9kLmNhbGwodGhpcywgYSk7
CiAgICAgICAgICAgICAgICBpZiAoSCh0aGlzKSkgZm9yICh2YXIgZSA9IDA7IGUgPCBjLmxlbmd0
aDsgZSsrKSBKKGIsIGNbZV0pOwogICAgICAgICAgICAgICAgcmV0dXJuIGEKICAgICAgICAgICAg
fQogICAgICAgICAgICBjID0gSChhKTsKICAgICAgICAgICAgZSA9IE9kLmNhbGwodGhpcywgYSk7
CiAgICAgICAgICAgIGMgJiYgSyhiLCBhKTsKICAgICAgICAgICAgSCh0aGlzKSAmJiBKKGIsIGEp
OwogICAgICAgICAgICByZXR1cm4gZQogICAgICAgIH0pOwogICAgICAgIEkoTm9kZS5wcm90b3R5
cGUsICJjbG9uZU5vZGUiLCBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICBhID0gTmQuY2FsbCh0
aGlzLCAhIWEpOwogICAgICAgICAgICB0aGlzLm93bmVyRG9jdW1lbnQuX19DRV9oYXNSZWdpc3Ry
eSA/IEwoYiwgYSkgOgogICAgICAgICAgICAgICAgQWQoYiwgYSk7CiAgICAgICAgICAgIHJldHVy
biBhCiAgICAgICAgfSk7CiAgICAgICAgSShOb2RlLnByb3RvdHlwZSwgInJlbW92ZUNoaWxkIiwg
ZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgdmFyIGMgPSBIKGEpLCBlID0gUWQuY2FsbCh0aGlz
LCBhKTsKICAgICAgICAgICAgYyAmJiBLKGIsIGEpOwogICAgICAgICAgICByZXR1cm4gZQogICAg
ICAgIH0pOwogICAgICAgIEkoTm9kZS5wcm90b3R5cGUsICJyZXBsYWNlQ2hpbGQiLCBmdW5jdGlv
biAoYSwgZCkgewogICAgICAgICAgICBpZiAoYSBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQp
IHsKICAgICAgICAgICAgICAgIHZhciBjID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KGEu
Y2hpbGROb2Rlcyk7CiAgICAgICAgICAgICAgICBhID0gUmQuY2FsbCh0aGlzLCBhLCBkKTsKICAg
ICAgICAgICAgICAgIGlmIChIKHRoaXMpKSBmb3IgKEsoYiwgZCksIGQgPSAwOyBkIDwgYy5sZW5n
dGg7IGQrKykgSihiLCBjW2RdKTsKICAgICAgICAgICAgICAgIHJldHVybiBhCiAgICAgICAgICAg
IH0KICAgICAgICAgICAgYyA9IEgoYSk7CiAgICAgICAgICAgIHZhciBmID0gUmQuY2FsbCh0aGlz
LCBhLCBkKSwgZyA9IEgodGhpcyk7CiAgICAgICAgICAgIGcgJiYgSyhiLCBkKTsKICAgICAgICAg
ICAgYyAmJiBLKGIsIGEpOwogICAgICAgICAgICBnICYmIEooYiwgYSk7CiAgICAgICAgICAgIHJl
dHVybiBmCiAgICAgICAgfSk7CiAgICAgICAgU2QgJiYgU2QuZ2V0ID8gYShOb2RlLnByb3RvdHlw
ZSwgU2QpIDogemQoYiwgZnVuY3Rpb24gKGIpIHsKICAgICAgICAgICAgYShiLCB7CiAgICAgICAg
ICAgICAgICBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgZ2V0OiBmdW5jdGlvbiAo
KSB7CiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgYSA9CiAgICAgICAgICAgICAgICAgICAg
ICAgIFtdLCBiID0gMDsgYiA8IHRoaXMuY2hpbGROb2Rlcy5sZW5ndGg7IGIrKykgYS5wdXNoKHRo
aXMuY2hpbGROb2Rlc1tiXS50ZXh0Q29udGVudCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJu
IGEuam9pbigiIikKICAgICAgICAgICAgICAgIH0sIHNldDogZnVuY3Rpb24gKGEpIHsKICAgICAg
ICAgICAgICAgICAgICBmb3IgKDsgdGhpcy5maXJzdENoaWxkOykgUWQuY2FsbCh0aGlzLCB0aGlz
LmZpcnN0Q2hpbGQpOwogICAgICAgICAgICAgICAgICAgIE9kLmNhbGwodGhpcywgZG9jdW1lbnQu
Y3JlYXRlVGV4dE5vZGUoYSkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAg
ICAgfSkKICAgIH07CgogICAgZnVuY3Rpb24gc2UoYSkgewogICAgICAgIGZ1bmN0aW9uIGIoYikg
ewogICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGMpIHsKICAgICAgICAgICAgICAgIGZvciAo
dmFyIGQgPSBbXSwgZSA9IDA7IGUgPCBhcmd1bWVudHMubGVuZ3RoOyArK2UpIGRbZV0gPSBhcmd1
bWVudHNbZV07CiAgICAgICAgICAgICAgICBlID0gW107CiAgICAgICAgICAgICAgICBmb3IgKHZh
ciBoID0gW10sIGsgPSAwOyBrIDwgZC5sZW5ndGg7IGsrKykgewogICAgICAgICAgICAgICAgICAg
IHZhciBsID0gZFtrXTsKICAgICAgICAgICAgICAgICAgICBsIGluc3RhbmNlb2YgRWxlbWVudCAm
JiBIKGwpICYmIGgucHVzaChsKTsKICAgICAgICAgICAgICAgICAgICBpZiAobCBpbnN0YW5jZW9m
IERvY3VtZW50RnJhZ21lbnQpIGZvciAobCA9IGwuZmlyc3RDaGlsZDsgbDsgbCA9IGwubmV4dFNp
YmxpbmcpIGUucHVzaChsKTsgZWxzZSBlLnB1c2gobCkKICAgICAgICAgICAgICAgIH0KICAgICAg
ICAgICAgICAgIGIuYXBwbHkodGhpcywgZCk7CiAgICAgICAgICAgICAgICBmb3IgKGQgPSAwOyBk
IDwgaC5sZW5ndGg7IGQrKykgSyhhLCBoW2RdKTsKICAgICAgICAgICAgICAgIGlmIChIKHRoaXMp
KSBmb3IgKGQgPSAwOyBkIDwgZS5sZW5ndGg7IGQrKykgaCA9IGVbZF0sIGggaW5zdGFuY2VvZiBF
bGVtZW50ICYmIEooYSwgaCkKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdmFyIGMg
PSBFbGVtZW50LnByb3RvdHlwZTsKICAgICAgICB2b2lkIDAgIT09IGVlICYmIChjLmJlZm9yZSA9
IGIoZWUpKTsKICAgICAgICB2b2lkIDAgIT09IGVlICYmIChjLmFmdGVyID0gYihmZSkpOwogICAg
ICAgIHZvaWQgMCAhPT0gZ2UgJiYKICAgICAgICBJKGMsICJyZXBsYWNlV2l0aCIsIGZ1bmN0aW9u
IChiKSB7CiAgICAgICAgICAgIGZvciAodmFyIGMgPSBbXSwgZCA9IDA7IGQgPCBhcmd1bWVudHMu
bGVuZ3RoOyArK2QpIGNbZF0gPSBhcmd1bWVudHNbZF07CiAgICAgICAgICAgIGQgPSBbXTsKICAg
ICAgICAgICAgZm9yICh2YXIgZyA9IFtdLCBoID0gMDsgaCA8IGMubGVuZ3RoOyBoKyspIHsKICAg
ICAgICAgICAgICAgIHZhciBrID0gY1toXTsKICAgICAgICAgICAgICAgIGsgaW5zdGFuY2VvZiBF
bGVtZW50ICYmIEgoaykgJiYgZy5wdXNoKGspOwogICAgICAgICAgICAgICAgaWYgKGsgaW5zdGFu
Y2VvZiBEb2N1bWVudEZyYWdtZW50KSBmb3IgKGsgPSBrLmZpcnN0Q2hpbGQ7IGs7IGsgPSBrLm5l
eHRTaWJsaW5nKSBkLnB1c2goayk7IGVsc2UgZC5wdXNoKGspCiAgICAgICAgICAgIH0KICAgICAg
ICAgICAgaCA9IEgodGhpcyk7CiAgICAgICAgICAgIGdlLmFwcGx5KHRoaXMsIGMpOwogICAgICAg
ICAgICBmb3IgKGMgPSAwOyBjIDwgZy5sZW5ndGg7IGMrKykgSyhhLCBnW2NdKTsKICAgICAgICAg
ICAgaWYgKGgpIGZvciAoSyhhLCB0aGlzKSwgYyA9IDA7IGMgPCBkLmxlbmd0aDsgYysrKSBnID0g
ZFtjXSwgZyBpbnN0YW5jZW9mIEVsZW1lbnQgJiYgSihhLCBnKQogICAgICAgIH0pOwogICAgICAg
IHZvaWQgMCAhPT0gaGUgJiYgSShjLCAicmVtb3ZlIiwgZnVuY3Rpb24gKCkgewogICAgICAgICAg
ICB2YXIgYiA9IEgodGhpcyk7CiAgICAgICAgICAgIGhlLmNhbGwodGhpcyk7CiAgICAgICAgICAg
IGIgJiYgSyhhLCB0aGlzKQogICAgICAgIH0pCiAgICB9OwoKICAgIGZ1bmN0aW9uIHRlKCkgewog
ICAgICAgIGZ1bmN0aW9uIGEoYSwgYikgewogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVy
dHkoYSwgImlubmVySFRNTCIsIHsKICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGIuZW51bWVy
YWJsZSwKICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsCiAgICAgICAgICAgICAgICBn
ZXQ6IGIuZ2V0LAogICAgICAgICAgICAgICAgc2V0OiBmdW5jdGlvbiAoYSkgewogICAgICAgICAg
ICAgICAgICAgIHZhciBjID0gdGhpcywgZSA9IHZvaWQgMDsKICAgICAgICAgICAgICAgICAgICBI
KHRoaXMpICYmIChlID0gW10sIHdkKHRoaXMsIGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAg
ICAgICAgICAgIGEgIT09IGMgJiYgZS5wdXNoKGEpCiAgICAgICAgICAgICAgICAgICAgfSkpOwog
ICAgICAgICAgICAgICAgICAgIGIuc2V0LmNhbGwodGhpcywgYSk7CiAgICAgICAgICAgICAgICAg
ICAgaWYgKGUpIGZvciAodmFyIGYgPSAwOyBmIDwgZS5sZW5ndGg7IGYrKykgewogICAgICAgICAg
ICAgICAgICAgICAgICB2YXIgZyA9IGVbZl07CiAgICAgICAgICAgICAgICAgICAgICAgIDEgPT09
IGcuX19DRV9zdGF0ZSAmJiBkLmRpc2Nvbm5lY3RlZENhbGxiYWNrKGcpCiAgICAgICAgICAgICAg
ICAgICAgfQogICAgICAgICAgICAgICAgICAgIHRoaXMub3duZXJEb2N1bWVudC5fX0NFX2hhc1Jl
Z2lzdHJ5ID8gTChkLCB0aGlzKSA6IEFkKGQsIHRoaXMpOwogICAgICAgICAgICAgICAgICAgIHJl
dHVybiBhCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfQoKICAgICAg
ICBmdW5jdGlvbiBiKGEsIGIpIHsKICAgICAgICAgICAgSShhLCAiaW5zZXJ0QWRqYWNlbnRFbGVt
ZW50IiwgZnVuY3Rpb24gKGEsIGMpIHsKICAgICAgICAgICAgICAgIHZhciBlID0gSChjKTsKICAg
ICAgICAgICAgICAgIGEgPSBiLmNhbGwodGhpcywgYSwgYyk7CiAgICAgICAgICAgICAgICBlICYm
IEsoZCwgYyk7CiAgICAgICAgICAgICAgICBIKGEpICYmIEooZCwgYyk7CiAgICAgICAgICAgICAg
ICByZXR1cm4gYQogICAgICAgICAgICB9KQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gYyhh
LCBiKSB7CiAgICAgICAgICAgIGZ1bmN0aW9uIGMoYSwgYikgewogICAgICAgICAgICAgICAgZm9y
ICh2YXIgYyA9IFtdOyBhICE9PSA=</Default>
</Parameter>

<Parameter name="Frag17">
<Default>YjsgYSA9IGEubmV4dFNpYmxpbmcpIGMucHVzaChhKTsKICAgICAgICAgICAgICAgIGZvciAoYiA9
IDA7IGIgPCBjLmxlbmd0aDsgYisrKSBMKGQsIGNbYl0pCiAgICAgICAgICAgIH0KCiAgICAgICAg
ICAgIEkoYSwgImluc2VydEFkamFjZW50SFRNTCIsIGZ1bmN0aW9uIChhLCBkKSB7CiAgICAgICAg
ICAgICAgICBhID0gYS50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICAgICAgaWYgKCJiZWZvcmVi
ZWdpbiIgPT09IGEpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgZSA9IHRoaXMucHJldmlvdXNT
aWJsaW5nOwogICAgICAgICAgICAgICAgICAgIGIuY2FsbCh0aGlzLCBhLCBkKTsKICAgICAgICAg
ICAgICAgICAgICBjKGUgfHwgdGhpcy5wYXJlbnROb2RlLmZpcnN0Q2hpbGQsIHRoaXMpCiAgICAg
ICAgICAgICAgICB9IGVsc2UgaWYgKCJhZnRlcmJlZ2luIiA9PT0gYSkgZSA9IHRoaXMuZmlyc3RD
aGlsZCwgYi5jYWxsKHRoaXMsIGEsIGQpLCBjKHRoaXMuZmlyc3RDaGlsZCwgZSk7IGVsc2UgaWYg
KCJiZWZvcmVlbmQiID09PSBhKSBlID0gdGhpcy5sYXN0Q2hpbGQsIGIuY2FsbCh0aGlzLCBhLCBk
KSwgYyhlIHx8IHRoaXMuZmlyc3RDaGlsZCwgbnVsbCk7IGVsc2UgaWYgKCJhZnRlcmVuZCIgPT09
IGEpIGUgPSB0aGlzLm5leHRTaWJsaW5nLCBiLmNhbGwodGhpcywgYSwgZCksIGModGhpcy5uZXh0
U2libGluZywKICAgICAgICAgICAgICAgICAgICBlKTsgZWxzZSB0aHJvdyBuZXcgU3ludGF4RXJy
b3IoIlRoZSB2YWx1ZSBwcm92aWRlZCAoIiArIFN0cmluZyhhKSArICIpIGlzIG5vdCBvbmUgb2Yg
J2JlZm9yZWJlZ2luJywgJ2FmdGVyYmVnaW4nLCAnYmVmb3JlZW5kJywgb3IgJ2FmdGVyZW5kJy4i
KTsKICAgICAgICAgICAgfSkKICAgICAgICB9CgogICAgICAgIHZhciBkID0gb2U7CiAgICAgICAg
VGQgJiYgSShFbGVtZW50LnByb3RvdHlwZSwgImF0dGFjaFNoYWRvdyIsIGZ1bmN0aW9uIChhKSB7
CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9fQ0Vfc2hhZG93Um9vdCA9IGEgPSBUZC5jYWxsKHRo
aXMsIGEpCiAgICAgICAgfSk7CiAgICAgICAgVWQgJiYgVWQuZ2V0ID8gYShFbGVtZW50LnByb3Rv
dHlwZSwgVWQpIDogamUgJiYgamUuZ2V0ID8gYShIVE1MRWxlbWVudC5wcm90b3R5cGUsIGplKSA6
IHpkKGQsIGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgIGEoYiwgewogICAgICAgICAgICAgICAg
ZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIGdldDogZnVuY3Rpb24gKCkgewogICAg
ICAgICAgICAgICAgICAgIHJldHVybiBOZC5jYWxsKHRoaXMsICEwKS5pbm5lckhUTUwKICAgICAg
ICAgICAgICAgIH0sIHNldDogZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgICAgICB2YXIg
YiA9ICJ0ZW1wbGF0ZSIgPT09IHRoaXMubG9jYWxOYW1lLCBjID0gYiA/IHRoaXMuY29udGVudCA6
IHRoaXMsIGQgPSBIZC5jYWxsKGRvY3VtZW50LAogICAgICAgICAgICAgICAgICAgICAgICB0aGlz
Lm5hbWVzcGFjZVVSSSwgdGhpcy5sb2NhbE5hbWUpOwogICAgICAgICAgICAgICAgICAgIGZvciAo
ZC5pbm5lckhUTUwgPSBhOyAwIDwgYy5jaGlsZE5vZGVzLmxlbmd0aDspIFFkLmNhbGwoYywgYy5j
aGlsZE5vZGVzWzBdKTsKICAgICAgICAgICAgICAgICAgICBmb3IgKGEgPSBiID8gZC5jb250ZW50
IDogZDsgMCA8IGEuY2hpbGROb2Rlcy5sZW5ndGg7KSBPZC5jYWxsKGMsIGEuY2hpbGROb2Rlc1sw
XSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICB9KTsKICAgICAgICBJ
KEVsZW1lbnQucHJvdG90eXBlLCAic2V0QXR0cmlidXRlIiwgZnVuY3Rpb24gKGEsIGIpIHsKICAg
ICAgICAgICAgaWYgKDEgIT09IHRoaXMuX19DRV9zdGF0ZSkgcmV0dXJuIFdkLmNhbGwodGhpcywg
YSwgYik7CiAgICAgICAgICAgIHZhciBjID0gVmQuY2FsbCh0aGlzLCBhKTsKICAgICAgICAgICAg
V2QuY2FsbCh0aGlzLCBhLCBiKTsKICAgICAgICAgICAgYiA9IFZkLmNhbGwodGhpcywgYSk7CiAg
ICAgICAgICAgIGQuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKHRoaXMsIGEsIGMsIGIsIG51bGwp
CiAgICAgICAgfSk7CiAgICAgICAgSShFbGVtZW50LnByb3RvdHlwZSwgInNldEF0dHJpYnV0ZU5T
IiwgZnVuY3Rpb24gKGEsIGIsIGMpIHsKICAgICAgICAgICAgaWYgKDEgIT09IHRoaXMuX19DRV9z
dGF0ZSkgcmV0dXJuIFpkLmNhbGwodGhpcywgYSwgYiwgYyk7CiAgICAgICAgICAgIHZhciBlID0g
WWQuY2FsbCh0aGlzLCBhLAogICAgICAgICAgICAgICAgYik7CiAgICAgICAgICAgIFpkLmNhbGwo
dGhpcywgYSwgYiwgYyk7CiAgICAgICAgICAgIGMgPSBZZC5jYWxsKHRoaXMsIGEsIGIpOwogICAg
ICAgICAgICBkLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLCBiLCBlLCBjLCBhKQogICAg
ICAgIH0pOwogICAgICAgIEkoRWxlbWVudC5wcm90b3R5cGUsICJyZW1vdmVBdHRyaWJ1dGUiLCBm
dW5jdGlvbiAoYSkgewogICAgICAgICAgICBpZiAoMSAhPT0gdGhpcy5fX0NFX3N0YXRlKSByZXR1
cm4gWGQuY2FsbCh0aGlzLCBhKTsKICAgICAgICAgICAgdmFyIGIgPSBWZC5jYWxsKHRoaXMsIGEp
OwogICAgICAgICAgICBYZC5jYWxsKHRoaXMsIGEpOwogICAgICAgICAgICBudWxsICE9PSBiICYm
IGQuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKHRoaXMsIGEsIGIsIG51bGwsIG51bGwpCiAgICAg
ICAgfSk7CiAgICAgICAgSShFbGVtZW50LnByb3RvdHlwZSwgInJlbW92ZUF0dHJpYnV0ZU5TIiwg
ZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgaWYgKDEgIT09IHRoaXMuX19DRV9zdGF0ZSkg
cmV0dXJuICRkLmNhbGwodGhpcywgYSwgYik7CiAgICAgICAgICAgIHZhciBjID0gWWQuY2FsbCh0
aGlzLCBhLCBiKTsKICAgICAgICAgICAgJGQuY2FsbCh0aGlzLCBhLCBiKTsKICAgICAgICAgICAg
dmFyIGUgPSBZZC5jYWxsKHRoaXMsIGEsIGIpOwogICAgICAgICAgICBjICE9PSBlICYmIGQuYXR0
cmlidXRlQ2hhbmdlZENhbGxiYWNrKHRoaXMsIGIsIGMsIGUsIGEpCiAgICAgICAgfSk7CiAgICAg
ICAga2UgPyBiKEhUTUxFbGVtZW50LnByb3RvdHlwZSwKICAgICAgICAgICAga2UpIDogYWUgPyBi
KEVsZW1lbnQucHJvdG90eXBlLCBhZSkgOiBjb25zb2xlLndhcm4oIkN1c3RvbSBFbGVtZW50czog
YEVsZW1lbnQjaW5zZXJ0QWRqYWNlbnRFbGVtZW50YCB3YXMgbm90IHBhdGNoZWQuIik7CiAgICAg
ICAgbGUgPyBjKEhUTUxFbGVtZW50LnByb3RvdHlwZSwgbGUpIDogYmUgPyBjKEVsZW1lbnQucHJv
dG90eXBlLCBiZSkgOiBjb25zb2xlLndhcm4oIkN1c3RvbSBFbGVtZW50czogYEVsZW1lbnQjaW5z
ZXJ0QWRqYWNlbnRIVE1MYCB3YXMgbm90IHBhdGNoZWQuIik7CiAgICAgICAgcGUoZCwgRWxlbWVu
dC5wcm90b3R5cGUsIHtWOiBjZSwgYXBwZW5kOiBkZX0pOwogICAgICAgIHNlKGQpCiAgICB9O3Zh
ciB1ZSA9IHdpbmRvdy5jdXN0b21FbGVtZW50czsKICAgIGlmICghdWUgfHwgdWUuZm9yY2VQb2x5
ZmlsbCB8fCAiZnVuY3Rpb24iICE9IHR5cGVvZiB1ZS5kZWZpbmUgfHwgImZ1bmN0aW9uIiAhPSB0
eXBlb2YgdWUuZ2V0KSB7CiAgICAgICAgdmFyIG9lID0gbmV3IHhkOwogICAgICAgIG5lKCk7CiAg
ICAgICAgcWUoKTsKICAgICAgICBwZShvZSwgRG9jdW1lbnRGcmFnbWVudC5wcm90b3R5cGUsIHtW
OiBMZCwgYXBwZW5kOiBNZH0pOwogICAgICAgIHJlKCk7CiAgICAgICAgdGUoKTsKICAgICAgICBk
b2N1bWVudC5fX0NFX2hhc1JlZ2lzdHJ5ID0gITA7CiAgICAgICAgdmFyIGN1c3RvbUVsZW1lbnRz
ID0gbmV3IE4ob2UpOwogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICJjdXN0
b21FbGVtZW50cyIsIHtjb25maWd1cmFibGU6ICEwLCBlbnVtZXJhYmxlOiAhMCwgdmFsdWU6IGN1
c3RvbUVsZW1lbnRzfSkKICAgIH0KICAgIDsKCiAgICBmdW5jdGlvbiB2ZSgpIHsKICAgICAgICB0
aGlzLmVuZCA9IHRoaXMuc3RhcnQgPSAwOwogICAgICAgIHRoaXMucnVsZXMgPSB0aGlzLnBhcmVu
dCA9IHRoaXMucHJldmlvdXMgPSBudWxsOwogICAgICAgIHRoaXMuY3NzVGV4dCA9IHRoaXMucGFy
c2VkQ3NzVGV4dCA9ICIiOwogICAgICAgIHRoaXMuYXRSdWxlID0gITE7CiAgICAgICAgdGhpcy50
eXBlID0gMDsKICAgICAgICB0aGlzLnBhcnNlZFNlbGVjdG9yID0gdGhpcy5zZWxlY3RvciA9IHRo
aXMua2V5ZnJhbWVzTmFtZSA9ICIiCiAgICB9CgogICAgZnVuY3Rpb24gd2UoYSkgewogICAgICAg
IGEgPSBhLnJlcGxhY2UoeGUsICIiKS5yZXBsYWNlKHllLCAiIik7CiAgICAgICAgdmFyIGIgPSB6
ZSwgYyA9IGEsIGQgPSBuZXcgdmU7CiAgICAgICAgZC5zdGFydCA9IDA7CiAgICAgICAgZC5lbmQg
PSBjLmxlbmd0aDsKICAgICAgICBmb3IgKHZhciBlID0gZCwgZiA9IDAsIGcgPSBjLmxlbmd0aDsg
ZiA8IGc7IGYrKykgaWYgKCJ7IiA9PT0gY1tmXSkgewogICAgICAgICAgICBlLnJ1bGVzIHx8IChl
LnJ1bGVzID0gW10pOwogICAgICAgICAgICB2YXIgaCA9IGUsIGsgPSBoLnJ1bGVzW2gucnVsZXMu
bGVuZ3RoIC0gMV0gfHwgbnVsbDsKICAgICAgICAgICAgZSA9IG5ldyB2ZTsKICAgICAgICAgICAg
ZS5zdGFydCA9IGYgKyAxOwogICAgICAgICAgICBlLnBhcmVudCA9IGg7CiAgICAgICAgICAgIGUu
cHJldmlvdXMgPSBrOwogICAgICAgICAgICBoLnJ1bGVzLnB1c2goZSkKICAgICAgICB9IGVsc2Ug
In0iID09PSBjW2ZdICYmIChlLmVuZCA9IGYgKyAxLCBlID0gZS5wYXJlbnQgfHwgZCk7CiAgICAg
ICAgcmV0dXJuIGIoZCwgYSkKICAgIH0KCiAgICBmdW5jdGlvbiB6ZShhLCBiKSB7CiAgICAgICAg
dmFyIGMgPSBiLnN1YnN0cmluZyhhLnN0YXJ0LCBhLmVuZCAtIDEpOwogICAgICAgIGEucGFyc2Vk
Q3NzVGV4dCA9IGEuY3NzVGV4dCA9IGMudHJpbSgpOwogICAgICAgIGEucGFyZW50ICYmIChjID0g
Yi5zdWJzdHJpbmcoYS5wcmV2aW91cyA/IGEucHJldmlvdXMuZW5kIDogYS5wYXJlbnQuc3RhcnQs
IGEuc3RhcnQgLSAxKSwgYyA9IEFlKGMpLCBjID0gYy5yZXBsYWNlKEJlLCAiICIpLCBjID0gYy5z
dWJzdHJpbmcoYy5sYXN0SW5kZXhPZigiOyIpICsgMSksIGMgPSBhLnBhcnNlZFNlbGVjdG9yID0g
YS5zZWxlY3RvciA9IGMudHJpbSgpLCBhLmF0UnVsZSA9IDAgPT09IGMuaW5kZXhPZigiQCIpLCBh
LmF0UnVsZSA/IDAgPT09IGMuaW5kZXhPZigiQG1lZGlhIikgPyBhLnR5cGUgPSBDZSA6IGMubWF0
Y2goRGUpICYmIChhLnR5cGUgPSBFZSwgYS5rZXlmcmFtZXNOYW1lID0gYS5zZWxlY3Rvci5zcGxp
dChCZSkucG9wKCkpIDogYS50eXBlID0gMCA9PT0gYy5pbmRleE9mKCItLSIpID8gRmUgOiBHZSk7
CiAgICAgICAgaWYgKGMgPSBhLnJ1bGVzKSBmb3IgKHZhciBkID0gMCwgZSA9IGMubGVuZ3RoLCBm
ID0gdm9pZCAwOyBkIDwgZSAmJiAoZiA9IGNbZF0pOyBkKyspIHplKGYsCiAgICAgICAgICAgIGIp
OwogICAgICAgIHJldHVybiBhCiAgICB9CgogICAgZnVuY3Rpb24gQWUoYSkgewogICAgICAgIHJl
dHVybiBhLnJlcGxhY2UoL1xcKFswLTlhLWZdezEsNn0pXHMvZ2ksIGZ1bmN0aW9uIChhLCBjKSB7
CiAgICAgICAgICAgIGEgPSBjOwogICAgICAgICAgICBmb3IgKGMgPSA2IC0gYS5sZW5ndGg7IGMt
LTspIGEgPSAiMCIgKyBhOwogICAgICAgICAgICByZXR1cm4gIlxcIiArIGEKICAgICAgICB9KQog
ICAgfQoKICAgIGZ1bmN0aW9uIEhlKGEsIGIsIGMpIHsKICAgICAgICBjID0gdm9pZCAwID09PSBj
ID8gIiIgOiBjOwogICAgICAgIHZhciBkID0gIiI7CiAgICAgICAgaWYgKGEuY3NzVGV4dCB8fCBh
LnJ1bGVzKSB7CiAgICAgICAgICAgIHZhciBlID0gYS5ydWxlcywgZjsKICAgICAgICAgICAgaWYg
KGYgPSBlKSBmID0gZVswXSwgZiA9ICEoZiAmJiBmLnNlbGVjdG9yICYmIDAgPT09IGYuc2VsZWN0
b3IuaW5kZXhPZigiLS0iKSk7CiAgICAgICAgICAgIGlmIChmKSB7CiAgICAgICAgICAgICAgICBm
ID0gMDsKICAgICAgICAgICAgICAgIGZvciAodmFyIGcgPSBlLmxlbmd0aCwgaCA9IHZvaWQgMDsg
ZiA8IGcgJiYgKGggPSBlW2ZdKTsgZisrKSBkID0gSGUoaCwgYiwgZCkKICAgICAgICAgICAgfSBl
bHNlIGIgPyBiID0gYS5jc3NUZXh0IDogKGIgPSBhLmNzc1RleHQsIGIgPSBiLnJlcGxhY2UoSWUs
ICIiKS5yZXBsYWNlKEplLCAiIiksIGIgPSBiLnJlcGxhY2UoS2UsICIiKS5yZXBsYWNlKExlLCAi
IikpLCAoZCA9IGIudHJpbSgpKSAmJiAoZCA9ICIgICIgKyBkICsgIlxuIikKICAgICAgICB9CiAg
ICAgICAgZCAmJiAoYS5zZWxlY3RvciAmJiAoYyArPSBhLnNlbGVjdG9yICsgIiB7XG4iKSwgYyAr
PSBkLCBhLnNlbGVjdG9yICYmIChjICs9ICJ9XG5cbiIpKTsKICAgICAgICByZXR1cm4gYwogICAg
fQoKICAgIHZhciBHZSA9IDEsIEVlID0gNywgQ2UgPSA0LCBGZSA9IDFFMywgeGUgPSAvXC9cKlte
Kl0qXCorKFteLypdW14qXSpcKispKlwvL2dpbSwgeWUgPSAvQGltcG9ydFteO10qOy9naW0sCiAg
ICAgICAgSWUgPSAvKD86XlteO1wtXHN9XSspPy0tW147e31dKj86W157fTtdKj8oPzpbO1xuXXwk
KS9naW0sCiAgICAgICAgSmUgPSAvKD86XlteO1wtXHN9XSspPy0tW147e31dKj86W157fTtdKj97
W159XSo/fSg/Ols7XG5dfCQpPy9naW0sCiAgICAgICAgS2UgPSAvQGFwcGx5XHMqXCg/W14pO10q
XCk/XHMqKD86Wztcbl18JCk/L2dpbSwgTGUgPSAvW147Ol0qPzpbXjtdKj92YXJcKFteO10qXCko
PzpbO1xuXXwkKT8vZ2ltLAogICAgICAgIERlID0gL15AW15cc10qa2V5ZnJhbWVzLywgQmUgPSAv
XHMrL2c7CiAgICB2YXIgTyA9ICEod2luZG93LlNoYWR5RE9NICYmIHdpbmRvdy5TaGFkeURPTS5p
blVzZSksIE1lOwoKICAgIGZ1bmN0aW9uIE5lKGEpIHsKICAgICAgICBNZSA9IGEgJiYgYS5zaGlt
Y3NzcHJvcGVydGllcyA/ICExIDogTyB8fCAhKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0Fw
cGxlV2ViS2l0XC82MDF8RWRnZVwvMTUvKSB8fCAhd2luZG93LkNTUyB8fCAhQ1NTLnN1cHBvcnRz
IHx8ICFDU1Muc3VwcG9ydHMoImJveC1zaGFkb3ciLCAiMCAwIDAgdmFyKC0tZm9vKSIpKQogICAg
fQoKICAgIHZhciBPZTsKICAgIHdpbmRvdy5TaGFkeUNTUyAmJiB2b2lkIDAgIT09IHdpbmRvdy5T
aGFkeUNTUy5jc3NCdWlsZCAmJiAoT2UgPSB3aW5kb3cuU2hhZHlDU1MuY3NzQnVpbGQpOwogICAg
dmFyIFBlID0gISghd2luZG93LlNoYWR5Q1NTIHx8ICF3aW5kb3cuU2hhZHlDU1MuZGlzYWJsZVJ1
bnRpbWUpOwogICAgd2luZG93LlNoYWR5Q1NTICYmIHZvaWQgMCAhPT0gd2luZG93LlNoYWR5Q1NT
Lm5hdGl2ZUNzcyA/IE1lID0gd2luZG93LlNoYWR5Q1NTLm5hdGl2ZUNzcyA6IHdpbmRvdy5TaGFk
eUNTUyA/IChOZSh3aW5kb3cuU2hhZHlDU1MpLCB3aW5kb3cuU2hhZHlDU1MgPSB2b2lkIDApIDog
TmUod2luZG93LldlYkNvbXBvbmVudHMgJiYgd2luZG93LldlYkNvbXBvbmVudHMuZmxhZ3MpOwog
ICAgdmFyIFEgPSBNZSwgUWUgPSBPZTsKICAgIHZhciBSZSA9IC8oPzpefFs7XHN7XVxzKikoLS1b
XHctXSo/KVxzKjpccyooPzooKD86Jyg/OlxcJ3wuKSo/J3wiKD86XFwifC4pKj8ifFwoW14pXSo/
XCl8W159O3tdKSspfFx7KFtefV0qKVx9KD86KD89Wztcc31dKXwkKSkvZ2ksCiAgICAgICAgU2Ug
PSAvKD86XnxcVyspQGFwcGx5XHMqXCg/KFteKTtcbl0qKVwpPy9naSwgVGUgPSAvKC0tW1x3LV0r
KVxzKihbOiw7KV18JCkvZ2ksCiAgICAgICAgVWUgPSAvKGFuaW1hdGlvblxzKjopfChhbmltYXRp
b24tbmFtZVxzKjopLywgJGUgPSAvQG1lZGlhXHMoLiopLywgYWYgPSAvXHtbXn1dKlx9L2c7CiAg
ICB2YXIgYmYgPSBuZXcgU2V0OwoKICAgIGZ1bmN0aW9uIGNmKGEsIGIpIHsKICAgICAgICBpZiAo
IWEpIHJldHVybiAiIjsKICAgICAgICAic3RyaW5nIiA9PT0gdHlwZW9mIGEgJiYgKGEgPSB3ZShh
KSk7CiAgICAgICAgYiAmJiBkZihhLCBiKTsKICAgICAgICByZXR1cm4gSGUoYSwgUSkKICAgIH0K
CiAgICBmdW5jdGlvbiBlZihhKSB7CiAgICAgICAgIWEuX19jc3NSdWxlcyAmJiBhLnRleHRDb250
ZW50ICYmIChhLl9fY3NzUnVsZXM=</Default>
</Parameter>

<Parameter name="Frag18">
<Default>ID0gd2UoYS50ZXh0Q29udGVudCkpOwogICAgICAgIHJldHVybiBhLl9fY3NzUnVsZXMgfHwgbnVs
bAogICAgfQoKICAgIGZ1bmN0aW9uIGZmKGEpIHsKICAgICAgICByZXR1cm4gISFhLnBhcmVudCAm
JiBhLnBhcmVudC50eXBlID09PSBFZQogICAgfQoKICAgIGZ1bmN0aW9uIGRmKGEsIGIsIGMsIGQp
IHsKICAgICAgICBpZiAoYSkgewogICAgICAgICAgICB2YXIgZSA9ICExLCBmID0gYS50eXBlOwog
ICAgICAgICAgICBpZiAoZCAmJiBmID09PSBDZSkgewogICAgICAgICAgICAgICAgdmFyIGcgPSBh
LnNlbGVjdG9yLm1hdGNoKCRlKTsKICAgICAgICAgICAgICAgIGcgJiYgKHdpbmRvdy5tYXRjaE1l
ZGlhKGdbMV0pLm1hdGNoZXMgfHwgKGUgPSAhMCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAg
ZiA9PT0gR2UgPyBiKGEpIDogYyAmJiBmID09PSBFZSA/IGMoYSkgOiBmID09PSBGZSAmJiAoZSA9
ICEwKTsKICAgICAgICAgICAgaWYgKChhID0gYS5ydWxlcykgJiYgIWUpIGZvciAoZSA9IDAsIGYg
PSBhLmxlbmd0aCwgZyA9IHZvaWQgMDsgZSA8IGYgJiYgKGcgPSBhW2VdKTsgZSsrKSBkZihnLCBi
LCBjLCBkKQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBnZihhLCBiLCBjLCBkKSB7CiAg
ICAgICAgdmFyIGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpOwogICAgICAgIGIg
JiYgZS5zZXRBdHRyaWJ1dGUoInNjb3BlIiwgYik7CiAgICAgICAgZS50ZXh0Q29udGVudCA9IGE7
CiAgICAgICAgaGYoZSwgYywgZCk7CiAgICAgICAgcmV0dXJuIGUKICAgIH0KCiAgICB2YXIgamYg
PSBudWxsOwoKICAgIGZ1bmN0aW9uIGtmKGEpIHsKICAgICAgICBhID0gZG9jdW1lbnQuY3JlYXRl
Q29tbWVudCgiIFNoYWR5IERPTSBzdHlsZXMgZm9yICIgKyBhICsgIiAiKTsKICAgICAgICB2YXIg
YiA9IGRvY3VtZW50LmhlYWQ7CiAgICAgICAgYi5pbnNlcnRCZWZvcmUoYSwgKGpmID8gamYubmV4
dFNpYmxpbmcgOiBudWxsKSB8fCBiLmZpcnN0Q2hpbGQpOwogICAgICAgIHJldHVybiBqZiA9IGEK
ICAgIH0KCiAgICBmdW5jdGlvbiBoZihhLCBiLCBjKSB7CiAgICAgICAgYiA9IGIgfHwgZG9jdW1l
bnQuaGVhZDsKICAgICAgICBiLmluc2VydEJlZm9yZShhLCBjICYmIGMubmV4dFNpYmxpbmcgfHwg
Yi5maXJzdENoaWxkKTsKICAgICAgICBqZiA/IGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oamYp
ID09PSBOb2RlLkRPQ1VNRU5UX1BPU0lUSU9OX1BSRUNFRElORyAmJiAoamYgPSBhKSA6IGpmID0g
YQogICAgfQoKICAgIGZ1bmN0aW9uIGxmKGEsIGIpIHsKICAgICAgICBmb3IgKHZhciBjID0gMCwg
ZCA9IGEubGVuZ3RoOyBiIDwgZDsgYisrKSBpZiAoIigiID09PSBhW2JdKSBjKys7IGVsc2UgaWYg
KCIpIiA9PT0gYVtiXSAmJiAwID09PSAtLWMpIHJldHVybiBiOwogICAgICAgIHJldHVybiAtMQog
ICAgfQoKICAgIGZ1bmN0aW9uIG1mKGEsIGIpIHsKICAgICAgICB2YXIgYyA9IGEuaW5kZXhPZigi
dmFyKCIpOwogICAgICAgIGlmICgtMSA9PT0gYykgcmV0dXJuIGIoYSwgIiIsICIiLCAiIik7CiAg
ICAgICAgdmFyIGQgPSBsZihhLCBjICsgMyksIGUgPSBhLnN1YnN0cmluZyhjICsgNCwgZCk7CiAg
ICAgICAgYyA9IGEuc3Vic3RyaW5nKDAsIGMpOwogICAgICAgIGEgPSBtZihhLnN1YnN0cmluZyhk
ICsgMSksIGIpOwogICAgICAgIGQgPSBlLmluZGV4T2YoIiwiKTsKICAgICAgICByZXR1cm4gLTEg
PT09IGQgPyBiKGMsIGUudHJpbSgpLCAiIiwgYSkgOiBiKGMsIGUuc3Vic3RyaW5nKDAsIGQpLnRy
aW0oKSwgZS5zdWJzdHJpbmcoZCArIDEpLnRyaW0oKSwgYSkKICAgIH0KCiAgICBmdW5jdGlvbiBu
ZihhLCBiKSB7CiAgICAgICAgTyA/IGEuc2V0QXR0cmlidXRlKCJjbGFzcyIsIGIpIDogd2luZG93
LlNoYWR5RE9NLm5hdGl2ZU1ldGhvZHMuc2V0QXR0cmlidXRlLmNhbGwoYSwgImNsYXNzIiwgYikK
ICAgIH0KCiAgICB2YXIgb2YgPSB3aW5kb3cuU2hhZHlET00gJiYgd2luZG93LlNoYWR5RE9NLndy
YXAgfHwgZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gYQogICAgfTsKCiAgICBmdW5jdGlv
biBwZihhKSB7CiAgICAgICAgdmFyIGIgPSBhLmxvY2FsTmFtZSwgYyA9ICIiOwogICAgICAgIGIg
PyAtMSA8IGIuaW5kZXhPZigiLSIpIHx8IChjID0gYiwgYiA9IGEuZ2V0QXR0cmlidXRlICYmIGEu
Z2V0QXR0cmlidXRlKCJpcyIpIHx8ICIiKSA6IChiID0gYS5pcywgYyA9IGEuZXh0ZW5kcyk7CiAg
ICAgICAgcmV0dXJuIHtpczogYiwgTTogY30KICAgIH0KCiAgICBmdW5jdGlvbiBxZihhKSB7CiAg
ICAgICAgZm9yICh2YXIgYiA9IFtdLCBjID0gIiIsIGQgPSAwOyAwIDw9IGQgJiYgZCA8IGEubGVu
Z3RoOyBkKyspIGlmICgiKCIgPT09IGFbZF0pIHsKICAgICAgICAgICAgdmFyIGUgPSBsZihhLCBk
KTsKICAgICAgICAgICAgYyArPSBhLnNsaWNlKGQsIGUgKyAxKTsKICAgICAgICAgICAgZCA9IGUK
ICAgICAgICB9IGVsc2UgIiwiID09PSBhW2RdID8gKGIucHVzaChjKSwgYyA9ICIiKSA6IGMgKz0g
YVtkXTsKICAgICAgICBjICYmIGIucHVzaChjKTsKICAgICAgICByZXR1cm4gYgogICAgfQoKICAg
IGZ1bmN0aW9uIHJmKGEpIHsKICAgICAgICBpZiAodm9pZCAwICE9PSBRZSkgcmV0dXJuIFFlOwog
ICAgICAgIGlmICh2b2lkIDAgPT09IGEuX19jc3NCdWlsZCkgewogICAgICAgICAgICB2YXIgYiA9
IGEuZ2V0QXR0cmlidXRlKCJjc3MtYnVpbGQiKTsKICAgICAgICAgICAgaWYgKGIpIGEuX19jc3NC
dWlsZCA9IGI7IGVsc2UgewogICAgICAgICAgICAgICAgYTp7CiAgICAgICAgICAgICAgICAgICAg
YiA9ICJ0ZW1wbGF0ZSIgPT09IGEubG9jYWxOYW1lID8gYS5jb250ZW50LmZpcnN0Q2hpbGQgOiBh
LmZpcnN0Q2hpbGQ7CiAgICAgICAgICAgICAgICAgICAgaWYgKGIgaW5zdGFuY2VvZiBDb21tZW50
ICYmIChiID0gYi50ZXh0Q29udGVudC50cmltKCkuc3BsaXQoIjoiKSwgImNzcy1idWlsZCIgPT09
IGJbMF0pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGIgPSBiWzFdOwogICAgICAgICAgICAg
ICAgICAgICAgICBicmVhayBhCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAg
ICAgIGIgPSAiIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKCIiICE9PSBi
KSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGMgPSAidGVtcGxhdGUiID09PSBhLmxvY2FsTmFt
ZSA/IGEuY29udGVudC5maXJzdENoaWxkIDogYS5maXJzdENoaWxkOwogICAgICAgICAgICAgICAg
ICAgIGMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjKQogICAgICAgICAgICAgICAgfQogICAgICAg
ICAgICAgICAgYS5fX2Nzc0J1aWxkID0gYgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAg
IHJldHVybiBhLl9fY3NzQnVpbGQgfHwgIiIKICAgIH0KCiAgICBmdW5jdGlvbiBzZihhKSB7CiAg
ICAgICAgYSA9IHZvaWQgMCA9PT0gYSA/ICIiIDogYTsKICAgICAgICByZXR1cm4gIiIgIT09IGEg
JiYgUSA/IE8gPyAic2hhZG93IiA9PT0gYSA6ICJzaGFkeSIgPT09IGEgOiAhMQogICAgfTsKCiAg
ICBmdW5jdGlvbiB0ZigpIHsKICAgIH0KCiAgICBmdW5jdGlvbiB1ZihhLCBiKSB7CiAgICAgICAg
dmYoUiwgYSwgZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgd2YoYSwgYiB8fCAiIikKICAgICAg
ICB9KQogICAgfQoKICAgIGZ1bmN0aW9uIHZmKGEsIGIsIGMpIHsKICAgICAgICBiLm5vZGVUeXBl
ID09PSBOb2RlLkVMRU1FTlRfTk9ERSAmJiBjKGIpOwogICAgICAgIHZhciBkOwogICAgICAgICJ0
ZW1wbGF0ZSIgPT09IGIubG9jYWxOYW1lID8gZCA9IChiLmNvbnRlbnQgfHwgYi5fY29udGVudCB8
fCBiKS5jaGlsZE5vZGVzIDogZCA9IGIuY2hpbGRyZW4gfHwgYi5jaGlsZE5vZGVzOwogICAgICAg
IGlmIChkKSBmb3IgKGIgPSAwOyBiIDwgZC5sZW5ndGg7IGIrKykgdmYoYSwgZFtiXSwgYykKICAg
IH0KCiAgICBmdW5jdGlvbiB3ZihhLCBiLCBjKSB7CiAgICAgICAgaWYgKGIpIGlmIChhLmNsYXNz
TGlzdCkgYyA/IChhLmNsYXNzTGlzdC5yZW1vdmUoInN0eWxlLXNjb3BlIiksIGEuY2xhc3NMaXN0
LnJlbW92ZShiKSkgOiAoYS5jbGFzc0xpc3QuYWRkKCJzdHlsZS1zY29wZSIpLCBhLmNsYXNzTGlz
dC5hZGQoYikpOyBlbHNlIGlmIChhLmdldEF0dHJpYnV0ZSkgewogICAgICAgICAgICB2YXIgZCA9
IGEuZ2V0QXR0cmlidXRlKCJjbGFzcyIpOwogICAgICAgICAgICBjID8gZCAmJiAoYiA9IGQucmVw
bGFjZSgic3R5bGUtc2NvcGUiLCAiIikucmVwbGFjZShiLCAiIiksIG5mKGEsIGIpKSA6IG5mKGEs
IChkID8gZCArICIgIiA6ICIiKSArICJzdHlsZS1zY29wZSAiICsgYikKICAgICAgICB9CiAgICB9
CgogICAgZnVuY3Rpb24geGYoYSwgYiwgYykgewogICAgICAgIHZmKFIsIGEsIGZ1bmN0aW9uIChh
KSB7CiAgICAgICAgICAgIHdmKGEsIGIsICEwKTsKICAgICAgICAgICAgd2YoYSwgYykKICAgICAg
ICB9KQogICAgfQoKICAgIGZ1bmN0aW9uIHlmKGEsIGIpIHsKICAgICAgICB2ZihSLCBhLCBmdW5j
dGlvbiAoYSkgewogICAgICAgICAgICB3ZihhLCBiIHx8ICIiLCAhMCkKICAgICAgICB9KQogICAg
fQoKICAgIGZ1bmN0aW9uIHpmKGEsIGIsIGMsIGQsIGUpIHsKICAgICAgICB2YXIgZiA9IFI7CiAg
ICAgICAgZSA9IHZvaWQgMCA9PT0gZSA/ICIiIDogZTsKICAgICAgICAiIiA9PT0gZSAmJiAoTyB8
fCAic2hhZHkiID09PSAodm9pZCAwID09PSBkID8gIiIgOiBkKSA/IGUgPSBjZihiLCBjKSA6IChh
ID0gcGYoYSksIGUgPSBBZihmLCBiLCBhLmlzLCBhLk0sIGMpICsgIlxuXG4iKSk7CiAgICAgICAg
cmV0dXJuIGUudHJpbSgpCiAgICB9CgogICAgZnVuY3Rpb24gQWYoYSwgYiwgYywgZCwgZSkgewog
ICAgICAgIHZhciBmID0gQmYoYywgZCk7CiAgICAgICAgYyA9IGMgPyAiLiIgKyBjIDogIiI7CiAg
ICAgICAgcmV0dXJuIGNmKGIsIGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgIGIuYyB8fCAoYi5z
ZWxlY3RvciA9IGIuaiA9IENmKGEsIGIsIGEuYiwgYywgZiksIGIuYyA9ICEwKTsKICAgICAgICAg
ICAgZSAmJiBlKGIsIGMsIGYpCiAgICAgICAgfSkKICAgIH0KCiAgICBmdW5jdGlvbiBCZihhLCBi
KSB7CiAgICAgICAgcmV0dXJuIGIgPyAiW2lzPSIgKyBhICsgIl0iIDogYQogICAgfQoKICAgIGZ1
bmN0aW9uIENmKGEsIGIsIGMsIGQsIGUpIHsKICAgICAgICB2YXIgZiA9IHFmKGIuc2VsZWN0b3Ip
OwogICAgICAgIGlmICghZmYoYikpIHsKICAgICAgICAgICAgYiA9IDA7CiAgICAgICAgICAgIGZv
ciAodmFyIGcgPSBmLmxlbmd0aCwgaCA9IHZvaWQgMDsgYiA8IGcgJiYgKGggPSBmW2JdKTsgYisr
KSBmW2JdID0gYy5jYWxsKGEsIGgsIGQsIGUpCiAgICAgICAgfQogICAgICAgIHJldHVybiBmLmZp
bHRlcihmdW5jdGlvbiAoYSkgewogICAgICAgICAgICByZXR1cm4gISFhCiAgICAgICAgfSkuam9p
bigiLCIpCiAgICB9CgogICAgZnVuY3Rpb24gRGYoYSkgewogICAgICAgIHJldHVybiBhLnJlcGxh
Y2UoRWYsIGZ1bmN0aW9uIChhLCBjLCBkKSB7CiAgICAgICAgICAgIC0xIDwgZC5pbmRleE9mKCIr
IikgPyBkID0gZC5yZXBsYWNlKC9cKy9nLCAiX19fIikgOiAtMSA8IGQuaW5kZXhPZigiX19fIikg
JiYgKGQgPSBkLnJlcGxhY2UoL19fXy9nLCAiKyIpKTsKICAgICAgICAgICAgcmV0dXJuICI6IiAr
IGMgKyAiKCIgKyBkICsgIikiCiAgICAgICAgfSkKICAgIH0KCiAgICBmdW5jdGlvbiBGZihhKSB7
CiAgICAgICAgZm9yICh2YXIgYiA9IFtdLCBjOyBjID0gYS5tYXRjaChHZik7KSB7CiAgICAgICAg
ICAgIHZhciBkID0gYy5pbmRleCwgZSA9IGxmKGEsIGQpOwogICAgICAgICAgICBpZiAoLTEgPT09
IGUpIHRocm93IEVycm9yKGMuaW5wdXQgKyAiIHNlbGVjdG9yIG1pc3NpbmcgJyknIik7CiAgICAg
ICAgICAgIGMgPSBhLnNsaWNlKGQsIGUgKyAxKTsKICAgICAgICAgICAgYSA9IGEucmVwbGFjZShj
LCAiXHVlMDAwIik7CiAgICAgICAgICAgIGIucHVzaChjKQogICAgICAgIH0KICAgICAgICByZXR1
cm4ge2hhOiBhLCBtYXRjaGVzOiBifQogICAgfQoKICAgIGZ1bmN0aW9uIEhmKGEsIGIpIHsKICAg
ICAgICB2YXIgYyA9IGEuc3BsaXQoIlx1ZTAwMCIpOwogICAgICAgIHJldHVybiBiLnJlZHVjZShm
dW5jdGlvbiAoYSwgYiwgZikgewogICAgICAgICAgICByZXR1cm4gYSArIGIgKyBjW2YgKyAxXQog
ICAgICAgIH0sIGNbMF0pCiAgICB9CgogICAgdGYucHJvdG90eXBlLmIgPSBmdW5jdGlvbiAoYSwg
YiwgYykgewogICAgICAgIHZhciBkID0gITE7CiAgICAgICAgYSA9IGEudHJpbSgpOwogICAgICAg
IHZhciBlID0gRWYudGVzdChhKTsKICAgICAgICBlICYmIChhID0gYS5yZXBsYWNlKEVmLCBmdW5j
dGlvbiAoYSwgYiwgYykgewogICAgICAgICAgICByZXR1cm4gIjoiICsgYiArICIoIiArIGMucmVw
bGFjZSgvXHMvZywgIiIpICsgIikiCiAgICAgICAgfSksIGEgPSBEZihhKSk7CiAgICAgICAgdmFy
IGYgPSBHZi50ZXN0KGEpOwogICAgICAgIGlmIChmKSB7CiAgICAgICAgICAgIHZhciBnID0gRmYo
YSk7CiAgICAgICAgICAgIGEgPSBnLmhhOwogICAgICAgICAgICBnID0gZy5tYXRjaGVzCiAgICAg
ICAgfQogICAgICAgIGEgPSBhLnJlcGxhY2UoSWYsICI6aG9zdCAkMSIpOwogICAgICAgIGEgPSBh
LnJlcGxhY2UoSmYsIGZ1bmN0aW9uIChhLCBlLCBmKSB7CiAgICAgICAgICAgIGQgfHwgKGEgPSBL
ZihmLCBlLCBiLCBjKSwgZCA9IGQgfHwgYS5zdG9wLCBlID0gYS5DYSwgZiA9IGEudmFsdWUpOwog
ICAgICAgICAgICByZXR1cm4gZSArIGYKICAgICAgICB9KTsKICAgICAgICBmICYmIChhID0gSGYo
YSwgZykpOwogICAgICAgIGUgJiYgKGEgPSBEZihhKSk7CiAgICAgICAgcmV0dXJuIGEKICAgIH07
CgogICAgZnVuY3Rpb24gS2YoYSwgYiwgYywgZCkgewogICAgICAgIHZhciBlID0gYS5pbmRleE9m
KCI6OnNsb3R0ZWQiKTsKICAgICAgICAwIDw9IGEuaW5kZXhPZigiOmhvc3QiKSA/IGEgPSBMZihh
LCBkKSA6IDAgIT09IGUgJiYgKGEgPSBjID8gTWYoYSwgYykgOiBhKTsKICAgICAgICBjID0gITE7
CiAgICAgICAgMCA8PSBlICYmIChiID0gIiIsIGMgPSAhMCk7CiAgICAgICAgaWYgKGMpIHsKICAg
ICAgICAgICAgdmFyIGYgPSAhMDsKICAgICAgICAgICAgYyAmJiAoYSA9IGEucmVwbGFjZShOZiwg
ZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgICAgIHJldHVybiAiID4gIiArIGIKICAgICAg
ICAgICAgfSkpCiAgICAgICAgfQogICAgICAgIGEgPSBhLnJlcGxhY2UoT2YsIGZ1bmN0aW9uIChh
LCBiLCBjKSB7CiAgICAgICAgICAgIHJldHVybiAnW2Rpcj0iJyArIGMgKyAnIl0gJyArIGIgKyAi
LCAiICsgYiArICdbZGlyPSInICsgYyArICciXScKICAgICAgICB9KTsKICAgICAgICByZXR1cm4g
e3ZhbHVlOiBhLCBDYTogYiwgc3RvcDogZn0KICAgIH0KCiAgICBmdW5jdGlvbiBNZihhLCBiKSB7
CiAgICAgICAgYSA9IGEuc3BsaXQoLyhcWy4rP1xdKS8pOwogICAgICAgIGZvciAodmFyIGMgPSBb
XSwgZCA9IDA7IGQgPCBhLmxlbmd0aDsgZCsrKSBpZiAoMSA9PT0gZCAlIDIpIGMucHVzaChhW2Rd
KTsgZWxzZSB7CiAgICAgICAgICAgIHZhciBlID0gYVtkXTsKICAgICAgICAgICAgaWYgKCIiICE9
PSBlIHx8IGQgIT09IGEubGVuZ3RoIC0gMSkgZSA9IGUuc3BsaXQoIjoiKSwgZVswXSArPSBiLCBj
LnB1c2goZS5qb2luKCI6IikpCiAgICAgICAgfQogICAgICAgIHJldHVybiBjLmpvaW4oIiIpCiAg
ICB9CgogICAgZnVuY3Rpb24gTGYoYSwgYikgewogICAgICAgIHZhciBjID0gYS5tYXRjaChQZik7
CiAgICAgICAgcmV0dXJuIChjID0gYyAmJiBjWzJdLnRyaW0oKSB8fCAiIikgPyBjWzBdLm1hdGNo
KFFmKSA/IGEucmVwbGFjZShQZiwgZnVuY3Rpb24gKGEsIGMsIGYpIHsKICAgICAgICAgICAgcmV0
dXJuIGIgKyBmCiAgICAgICAgfSkgOiBjLnNwbGl0KFFmKVswXSA9PT0gYiA/IGMgOiAic2hvdWxk
X25vdF9tYXRjaCIgOiBhLnJlcGxhY2UoIjpob3N0IiwgYikKICAgIH0KCiAgICBmdW5jdGlvbiBS
ZihhKSB7CiAgICAgICAgIjpyb28=</Default>
</Parameter>

<Parameter name="Frag19">
<Default>dCIgPT09IGEuc2VsZWN0b3IgJiYgKGEuc2VsZWN0b3IgPSAiaHRtbCIpCiAgICB9CgogICAgdGYu
cHJvdG90eXBlLmMgPSBmdW5jdGlvbiAoYSkgewogICAgICAgIHJldHVybiBhLm1hdGNoKCI6aG9z
dCIpID8gIiIgOiBhLm1hdGNoKCI6OnNsb3R0ZWQiKSA/IHRoaXMuYihhLCAiOm5vdCguc3R5bGUt
c2NvcGUpIikgOiBNZihhLnRyaW0oKSwgIjpub3QoLnN0eWxlLXNjb3BlKSIpCiAgICB9OwogICAg
cC5PYmplY3QuZGVmaW5lUHJvcGVydGllcyh0Zi5wcm90b3R5cGUsIHsKICAgICAgICBhOiB7CiAg
ICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwLCBnZXQ6IGZ1bmN0aW9u
ICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAic3R5bGUtc2NvcGUiCiAgICAgICAgICAgIH0K
ICAgICAgICB9CiAgICB9KTsKICAgIHZhciBFZiA9IC86KG50aFstXHddKylcKChbXildKylcKS8s
IEpmID0gLyhefFtccz4rfl0rKSgoPzpcWy4rP1xdfFteXHM+K349W10pKykvZywgUWYgPSAvW1su
OiMqXS8sCiAgICAgICAgSWYgPSAvXig6OnNsb3R0ZWQpLywgUGYgPSAvKDpob3N0KSg/OlwoKCg/
OlwoW14pKF0qXCl8W14pKF0qKSs/KVwpKS8sCiAgICAgICAgTmYgPSAvKD86OjpzbG90dGVkKSg/
OlwoKCg/OlwoW14pKF0qXCl8W14pKF0qKSs/KVwpKS8sIE9mID0gLyguKik6ZGlyXCgoPzoobHRy
fHJ0bCkpXCkvLAogICAgICAgIEdmID0gLzooPzptYXRjaGVzfGFueXwtKD86d2Via2l0fG1veikt
YW55KS8sIFIgPSBuZXcgdGY7CgogICAgZnVuY3Rpb24gU2YoYSwgYiwgYywgZCwgZSkgewogICAg
ICAgIHRoaXMuQSA9IGEgfHwgbnVsbDsKICAgICAgICB0aGlzLmIgPSBiIHx8IG51bGw7CiAgICAg
ICAgdGhpcy5mYSA9IGMgfHwgW107CiAgICAgICAgdGhpcy5vID0gbnVsbDsKICAgICAgICB0aGlz
LmNzc0J1aWxkID0gZSB8fCAiIjsKICAgICAgICB0aGlzLk0gPSBkIHx8ICIiOwogICAgICAgIHRo
aXMuYSA9IHRoaXMucyA9IHRoaXMudyA9IG51bGwKICAgIH0KCiAgICBmdW5jdGlvbiBUKGEpIHsK
ICAgICAgICByZXR1cm4gYSA/IGEuX19zdHlsZUluZm8gOiBudWxsCiAgICB9CgogICAgZnVuY3Rp
b24gVGYoYSwgYikgewogICAgICAgIHJldHVybiBhLl9fc3R5bGVJbmZvID0gYgogICAgfQoKICAg
IFNmLnByb3RvdHlwZS5jID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB0aGlzLkEKICAg
IH07CiAgICBTZi5wcm90b3R5cGUuX2dldFN0eWxlUnVsZXMgPSBTZi5wcm90b3R5cGUuYzsKCiAg
ICBmdW5jdGlvbiBVZihhKSB7CiAgICAgICAgdmFyIGIgPSB0aGlzLm1hdGNoZXMgfHwgdGhpcy5t
YXRjaGVzU2VsZWN0b3IgfHwgdGhpcy5tb3pNYXRjaGVzU2VsZWN0b3IgfHwgdGhpcy5tc01hdGNo
ZXNTZWxlY3RvciB8fCB0aGlzLm9NYXRjaGVzU2VsZWN0b3IgfHwgdGhpcy53ZWJraXRNYXRjaGVz
U2VsZWN0b3I7CiAgICAgICAgcmV0dXJuIGIgJiYgYi5jYWxsKHRoaXMsIGEpCiAgICB9CgogICAg
dmFyIFZmID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgiVHJpZGVudCIpOwoKICAgIGZ1bmN0
aW9uIFdmKCkgewogICAgfQoKICAgIGZ1bmN0aW9uIFhmKGEpIHsKICAgICAgICB2YXIgYiA9IHt9
LCBjID0gW10sIGQgPSAwOwogICAgICAgIGRmKGEsIGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAg
IFlmKGEpOwogICAgICAgICAgICBhLmluZGV4ID0gZCsrOwogICAgICAgICAgICBhID0gYS5pLmNz
c1RleHQ7CiAgICAgICAgICAgIGZvciAodmFyIGM7IGMgPSBUZS5leGVjKGEpOykgewogICAgICAg
ICAgICAgICAgdmFyIGUgPSBjWzFdOwogICAgICAgICAgICAgICAgIjoiICE9PSBjWzJdICYmIChi
W2VdID0gITApCiAgICAgICAgICAgIH0KICAgICAgICB9LCBmdW5jdGlvbiAoYSkgewogICAgICAg
ICAgICBjLnB1c2goYSkKICAgICAgICB9KTsKICAgICAgICBhLmIgPSBjOwogICAgICAgIGEgPSBb
XTsKICAgICAgICBmb3IgKHZhciBlIGluIGIpIGEucHVzaChlKTsKICAgICAgICByZXR1cm4gYQog
ICAgfQoKICAgIGZ1bmN0aW9uIFlmKGEpIHsKICAgICAgICBpZiAoIWEuaSkgewogICAgICAgICAg
ICB2YXIgYiA9IHt9LCBjID0ge307CiAgICAgICAgICAgIFpmKGEsIGMpICYmIChiLnYgPSBjLCBh
LnJ1bGVzID0gbnVsbCk7CiAgICAgICAgICAgIGIuY3NzVGV4dCA9IGEucGFyc2VkQ3NzVGV4dC5y
ZXBsYWNlKGFmLCAiIikucmVwbGFjZShSZSwgIiIpOwogICAgICAgICAgICBhLmkgPSBiCiAgICAg
ICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIFpmKGEsIGIpIHsKICAgICAgICB2YXIgYyA9IGEuaTsK
ICAgICAgICBpZiAoYykgewogICAgICAgICAgICBpZiAoYy52KSByZXR1cm4gT2JqZWN0LmFzc2ln
bihiLCBjLnYpLCAhMAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGMgPSBhLnBhcnNlZENz
c1RleHQ7CiAgICAgICAgICAgIGZvciAodmFyIGQ7IGEgPSBSZS5leGVjKGMpOykgewogICAgICAg
ICAgICAgICAgZCA9IChhWzJdIHx8IGFbM10pLnRyaW0oKTsKICAgICAgICAgICAgICAgIGlmICgi
aW5oZXJpdCIgIT09IGQgfHwgInVuc2V0IiAhPT0gZCkgYlthWzFdLnRyaW0oKV0gPSBkOwogICAg
ICAgICAgICAgICAgZCA9ICEwCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGQKICAg
ICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gJGYoYSwgYiwgYykgewogICAgICAgIGIgJiYgKGIg
PSAwIDw9IGIuaW5kZXhPZigiOyIpID8gYWcoYSwgYiwgYykgOiBtZihiLCBmdW5jdGlvbiAoYiwg
ZSwgZiwgZykgewogICAgICAgICAgICBpZiAoIWUpIHJldHVybiBiICsgZzsKICAgICAgICAgICAg
KGUgPSAkZihhLCBjW2VdLCBjKSkgJiYgImluaXRpYWwiICE9PSBlID8gImFwcGx5LXNoaW0taW5o
ZXJpdCIgPT09IGUgJiYgKGUgPSAiaW5oZXJpdCIpIDogZSA9ICRmKGEsIGNbZl0gfHwgZiwgYykg
fHwgZjsKICAgICAgICAgICAgcmV0dXJuIGIgKyAoZSB8fCAiIikgKyBnCiAgICAgICAgfSkpOwog
ICAgICAgIHJldHVybiBiICYmIGIudHJpbSgpIHx8ICIiCiAgICB9CgogICAgZnVuY3Rpb24gYWco
YSwgYiwgYykgewogICAgICAgIGIgPSBiLnNwbGl0KCI7Iik7CiAgICAgICAgZm9yICh2YXIgZCA9
IDAsIGUsIGY7IGQgPCBiLmxlbmd0aDsgZCsrKSBpZiAoZSA9IGJbZF0pIHsKICAgICAgICAgICAg
U2UubGFzdEluZGV4ID0gMDsKICAgICAgICAgICAgaWYgKGYgPSBTZS5leGVjKGUpKSBlID0gJGYo
YSwgY1tmWzFdXSwgYyk7IGVsc2UgaWYgKGYgPSBlLmluZGV4T2YoIjoiKSwgLTEgIT09IGYpIHsK
ICAgICAgICAgICAgICAgIHZhciBnID0gZS5zdWJzdHJpbmcoZik7CiAgICAgICAgICAgICAgICBn
ID0gZy50cmltKCk7CiAgICAgICAgICAgICAgICBnID0gJGYoYSwgZywgYykgfHwgZzsKICAgICAg
ICAgICAgICAgIGUgPSBlLnN1YnN0cmluZygwLCBmKSArIGcKICAgICAgICAgICAgfQogICAgICAg
ICAgICBiW2RdID0gZSAmJiBlLmxhc3RJbmRleE9mKCI7IikgPT09IGUubGVuZ3RoIC0gMSA/IGUu
c2xpY2UoMCwgLTEpIDogZSB8fCAiIgogICAgICAgIH0KICAgICAgICByZXR1cm4gYi5qb2luKCI7
IikKICAgIH0KCiAgICBmdW5jdGlvbiBiZyhhLCBiKSB7CiAgICAgICAgdmFyIGMgPSB7fSwgZCA9
IFtdOwogICAgICAgIGRmKGEsIGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIGEuaSB8fCBZZihh
KTsKICAgICAgICAgICAgdmFyIGUgPSBhLmogfHwgYS5wYXJzZWRTZWxlY3RvcjsKICAgICAgICAg
ICAgYiAmJiBhLmkudiAmJiBlICYmIFVmLmNhbGwoYiwgZSkgJiYgKFpmKGEsIGMpLCBhID0gYS5p
bmRleCwgZSA9IHBhcnNlSW50KGEgLyAzMiwgMTApLCBkW2VdID0gKGRbZV0gfHwgMCkgfCAxIDw8
IGEgJSAzMikKICAgICAgICB9LCBudWxsLCAhMCk7CiAgICAgICAgcmV0dXJuIHt2OiBjLCBrZXk6
IGR9CiAgICB9CgogICAgZnVuY3Rpb24gY2coYSwgYiwgYywgZCkgewogICAgICAgIGIuaSB8fCBZ
ZihiKTsKICAgICAgICBpZiAoYi5pLnYpIHsKICAgICAgICAgICAgdmFyIGUgPSBwZihhKTsKICAg
ICAgICAgICAgYSA9IGUuaXM7CiAgICAgICAgICAgIGUgPSBlLk07CiAgICAgICAgICAgIGUgPSBh
ID8gQmYoYSwgZSkgOiAiaHRtbCI7CiAgICAgICAgICAgIHZhciBmID0gYi5wYXJzZWRTZWxlY3Rv
ciwgZyA9ICI6aG9zdCA+ICoiID09PSBmIHx8ICJodG1sIiA9PT0gZiwgaCA9IDAgPT09IGYuaW5k
ZXhPZigiOmhvc3QiKSAmJiAhZzsKICAgICAgICAgICAgInNoYWR5IiA9PT0gYyAmJiAoZyA9IGYg
PT09IGUgKyAiID4gKi4iICsgZSB8fCAtMSAhPT0gZi5pbmRleE9mKCJodG1sIiksIGggPSAhZyAm
JiAwID09PSBmLmluZGV4T2YoZSkpOwogICAgICAgICAgICBpZiAoZyB8fCBoKSBjID0gZSwgaCAm
JiAoYi5qIHx8IChiLmogPSBDZihSLCBiLCBSLmIsIGEgPyAiLiIgKyBhIDogIiIsIGUpKSwgYyA9
IGIuaiB8fCBlKSwgZCh7CiAgICAgICAgICAgICAgICBoYTogYywKICAgICAgICAgICAgICAgIElh
OiBoLAogICAgICAgICAgICAgICAgWmE6IGcKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9
CgogICAgZnVuY3Rpb24gZGcoYSwgYiwgYykgewogICAgICAgIHZhciBkID0ge30sIGUgPSB7fTsK
ICAgICAgICBkZihiLCBmdW5jdGlvbiAoYikgewogICAgICAgICAgICBjZyhhLCBiLCBjLCBmdW5j
dGlvbiAoYykgewogICAgICAgICAgICAgICAgVWYuY2FsbChhLl9lbGVtZW50IHx8IGEsIGMuaGEp
ICYmIChjLklhID8gWmYoYiwgZCkgOiBaZihiLCBlKSkKICAgICAgICAgICAgfSkKICAgICAgICB9
LCBudWxsLCAhMCk7CiAgICAgICAgcmV0dXJuIHtSYTogZSwgSGE6IGR9CiAgICB9CgogICAgZnVu
Y3Rpb24gZWcoYSwgYiwgYywgZCkgewogICAgICAgIHZhciBlID0gcGYoYiksIGYgPSBCZihlLmlz
LCBlLk0pLAogICAgICAgICAgICBnID0gbmV3IFJlZ0V4cCgiKD86XnxbXi4jWzpdKSIgKyAoYi5l
eHRlbmRzID8gIlxcIiArIGYuc2xpY2UoMCwgLTEpICsgIlxcXSIgOiBmKSArICIoJHxbLjpbXFxz
Pit+XSkiKSwKICAgICAgICAgICAgaCA9IFQoYik7CiAgICAgICAgZSA9IGguQTsKICAgICAgICBo
ID0gaC5jc3NCdWlsZDsKICAgICAgICB2YXIgayA9IGZnKGUsIGQpOwogICAgICAgIHJldHVybiB6
ZihiLCBlLCBmdW5jdGlvbiAoYikgewogICAgICAgICAgICB2YXIgZSA9ICIiOwogICAgICAgICAg
ICBiLmkgfHwgWWYoYik7CiAgICAgICAgICAgIGIuaS5jc3NUZXh0ICYmIChlID0gYWcoYSwgYi5p
LmNzc1RleHQsIGMpKTsKICAgICAgICAgICAgYi5jc3NUZXh0ID0gZTsKICAgICAgICAgICAgaWYg
KCFPICYmICFmZihiKSAmJiBiLmNzc1RleHQpIHsKICAgICAgICAgICAgICAgIHZhciBoID0gZSA9
IGIuY3NzVGV4dDsKICAgICAgICAgICAgICAgIG51bGwgPT0gYi5uYSAmJiAoYi5uYSA9IFVlLnRl
c3QoZSkpOwogICAgICAgICAgICAgICAgaWYgKGIubmEpIGlmIChudWxsID09IGIuVSkgewogICAg
ICAgICAgICAgICAgICAgIGIuVSA9IFtdOwogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGwg
aW4gaykgaCA9IGtbbF0sIGggPSBoKGUpLCBlICE9PSBoICYmIChlID0gaCwgYi5VLnB1c2gobCkp
CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGZvciAobCA9IDA7
IGwgPCBiLlUubGVuZ3RoOyArK2wpIGggPSBrW2IuVVtsXV0sIGUgPSBoKGUpOwogICAgICAgICAg
ICAgICAgICAgIGggPSBlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBiLmNzc1Rl
eHQgPSBoOwogICAgICAgICAgICAgICAgYi5qID0gYi5qIHx8CiAgICAgICAgICAgICAgICAgICAg
Yi5zZWxlY3RvcjsKICAgICAgICAgICAgICAgIGUgPSAiLiIgKyBkOwogICAgICAgICAgICAgICAg
bCA9IHFmKGIuaik7CiAgICAgICAgICAgICAgICBoID0gMDsKICAgICAgICAgICAgICAgIGZvciAo
dmFyIE0gPSBsLmxlbmd0aCwgVSA9IHZvaWQgMDsgaCA8IE0gJiYgKFUgPSBsW2hdKTsgaCsrKSBs
W2hdID0gVS5tYXRjaChnKSA/IFUucmVwbGFjZShmLCBlKSA6IGUgKyAiICIgKyBVOwogICAgICAg
ICAgICAgICAgYi5zZWxlY3RvciA9IGwuam9pbigiLCIpCiAgICAgICAgICAgIH0KICAgICAgICB9
LCBoKQogICAgfQoKICAgIGZ1bmN0aW9uIGZnKGEsIGIpIHsKICAgICAgICBhID0gYS5iOwogICAg
ICAgIHZhciBjID0ge307CiAgICAgICAgaWYgKCFPICYmIGEpIGZvciAodmFyIGQgPSAwLCBlID0g
YVtkXTsgZCA8IGEubGVuZ3RoOyBlID0gYVsrK2RdKSB7CiAgICAgICAgICAgIHZhciBmID0gZSwg
ZyA9IGI7CiAgICAgICAgICAgIGYuZiA9IG5ldyBSZWdFeHAoIlxcYiIgKyBmLmtleWZyYW1lc05h
bWUgKyAiKD8hXFxCfC0pIiwgImciKTsKICAgICAgICAgICAgZi5hID0gZi5rZXlmcmFtZXNOYW1l
ICsgIi0iICsgZzsKICAgICAgICAgICAgZi5qID0gZi5qIHx8IGYuc2VsZWN0b3I7CiAgICAgICAg
ICAgIGYuc2VsZWN0b3IgPSBmLmoucmVwbGFjZShmLmtleWZyYW1lc05hbWUsIGYuYSk7CiAgICAg
ICAgICAgIGNbZS5rZXlmcmFtZXNOYW1lXSA9IGdnKGUpCiAgICAgICAgfQogICAgICAgIHJldHVy
biBjCiAgICB9CgogICAgZnVuY3Rpb24gZ2coYSkgewogICAgICAgIHJldHVybiBmdW5jdGlvbiAo
YikgewogICAgICAgICAgICByZXR1cm4gYi5yZXBsYWNlKGEuZiwgYS5hKQogICAgICAgIH0KICAg
IH0KCiAgICBmdW5jdGlvbiBoZyhhLCBiKSB7CiAgICAgICAgdmFyIGMgPSBpZywgZCA9IGVmKGEp
OwogICAgICAgIGEudGV4dENvbnRlbnQgPSBjZihkLCBmdW5jdGlvbiAoYSkgewogICAgICAgICAg
ICB2YXIgZCA9IGEuY3NzVGV4dCA9IGEucGFyc2VkQ3NzVGV4dDsKICAgICAgICAgICAgYS5pICYm
IGEuaS5jc3NUZXh0ICYmIChkID0gZC5yZXBsYWNlKEllLCAiIikucmVwbGFjZShKZSwgIiIpLCBh
LmNzc1RleHQgPSBhZyhjLCBkLCBiKSkKICAgICAgICB9KQogICAgfQoKICAgIHAuT2JqZWN0LmRl
ZmluZVByb3BlcnRpZXMoV2YucHJvdG90eXBlLCB7CiAgICAgICAgYTogewogICAgICAgICAgICBj
b25maWd1cmFibGU6ICEwLCBlbnVtZXJhYmxlOiAhMCwgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAg
ICAgICAgICAgICByZXR1cm4gIngtc2NvcGUiCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9
KTsKICAgIHZhciBpZyA9IG5ldyBXZjsKICAgIHZhciBqZyA9IHt9LCBrZyA9IHdpbmRvdy5jdXN0
b21FbGVtZW50czsKICAgIGlmIChrZyAmJiAhTyAmJiAhUGUpIHsKICAgICAgICB2YXIgbGcgPSBr
Zy5kZWZpbmU7CiAgICAgICAga2cuZGVmaW5lID0gZnVuY3Rpb24gKGEsIGIsIGMpIHsKICAgICAg
ICAgICAgamdbYV0gfHwgKGpnW2FdID0ga2YoYSkpOwogICAgICAgICAgICBsZy5jYWxsKGtnLCBh
LCBiLCBjKQogICAgICAgIH0KICAgIH0KICAgIDsKCiAgICBmdW5jdGlvbiBtZygpIHsKICAgICAg
ICB0aGlzLmNhY2hlID0ge30KICAgIH0KCiAgICBtZy5wcm90b3R5cGUuc3RvcmUgPSBmdW5jdGlv
biAoYSwgYiwgYywgZCkgewogICAgICAgIHZhciBlID0gdGhpcy5jYWNoZVthXSB8fCBbXTsKICAg
ICAgICBlLnB1c2goe3Y6IGIsIHN0eWxlRWxlbWVudDogYywgczogZH0pOwogICAgICAgIDEwMCA8
IGUubGVuZ3RoICYmIGUuc2hpZnQoKTsKICAgICAgICB0aGlzLmNhY2hlW2FdID0gZQogICAgfTsK
CiAgICBmdW5jdGlvbiBuZygpIHsKICAgIH0KCiAgICB2YXIgb2cgPSBuZXcgUmVnRXhwKFIuYSAr
ICJcXHMqKFteXFxzXSopIik7CgogICAgZnVuY3Rpb24gcGcoYSkgewogICAgICAgIHJldHVybiAo
YSA9IChhLmNsYXNzTGlzdCAmJiBhLmNsYXNzTGlzdC52YWx1ZSA/IGEuY2xhc3NMaXN0LnZhbHVl
IDogYS5nZXRBdHRyaWJ1dGUoImNsYXNzIikgfHwgIiIpLm1hdGNoKG9nKSkgPyBhWzFdIDogIiIK
ICAgIH0KCiAgICBmdW5jdGlvbiBxZyhhKSB7CiAgICAgICAgdmFyIGIgPSBvZihhKS5nZXRSb290
Tm9kZSgpOwogICAgICAgIHJldHVybiBiID09PSBhIHx8IGIgPT09IGEub3duZXJEb2N1bWVudCA/
ICIiIDogKGEgPSBiLmhvc3QpID8gcGYoYSkuaXMgOiAiIgogICAgfQoKICAgIGZ1bmN0aW9uIHJn
KGEpIHsKICAgICAgICBmb3IgKHY=</Default>
</Parameter>

<Parameter name="Frag2">
<Default>aW1wb3J0Tm9kZTsKICAgICAgICAgICAgRG9jdW1lbnQucHJvdG90eXBlLmltcG9ydE5vZGUgPSBm
dW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICAgICAgYiA9IGguY2FsbCh0aGlzLCBhLCBiIHx8
ICExKTsKICAgICAgICAgICAgICAgIGEgaW5zdGFuY2VvZiBEb2N1bWVudEZyYWdtZW50ICYmIChi
Ll9fcHJvdG9fXyA9IERvY3VtZW50RnJhZ21lbnQucHJvdG90eXBlKTsKICAgICAgICAgICAgICAg
IHJldHVybiBiCiAgICAgICAgICAgIH0KICAgICAgICB9KCk7CiAgICAgICAgdmFyIGYgPSBOb2Rl
LnByb3RvdHlwZS5jbG9uZU5vZGUsIGcgPSBEb2N1bWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVu
dCwgaCA9IERvY3VtZW50LnByb3RvdHlwZS5pbXBvcnROb2RlLAogICAgICAgICAgICBrID0gTm9k
ZS5wcm90b3R5cGUucmVtb3ZlQ2hpbGQsIGwgPSBOb2RlLnByb3RvdHlwZS5hcHBlbmRDaGlsZCwg
bSA9IE5vZGUucHJvdG90eXBlLnJlcGxhY2VDaGlsZCwKICAgICAgICAgICAgcSA9IERPTVBhcnNl
ci5wcm90b3R5cGUucGFyc2VGcm9tU3RyaW5nLAogICAgICAgICAgICB4ID0gT2JqZWN0LmdldE93
blByb3BlcnR5RGVzY3JpcHRvcih3aW5kb3cuSFRNTEVsZW1lbnQucHJvdG90eXBlLCAiaW5uZXJI
VE1MIikgfHwgewogICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAg
ICAgICAgICAgcmV0dXJuIHRoaXMuaW5uZXJIVE1MCiAgICAgICAgICAgICAgICB9LCBzZXQ6IGZ1
bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbm5lckhUTUwgPSBhCiAgICAg
ICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIE0gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNj
cmlwdG9yKHdpbmRvdy5Ob2RlLnByb3RvdHlwZSwgImNoaWxkTm9kZXMiKSB8fCB7CiAgICAgICAg
ICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhp
cy5jaGlsZE5vZGVzCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIFUgPSBFbGVtZW50
LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yQWxsLCB1YSA9IERvY3VtZW50LnByb3RvdHlwZS5xdWVy
eVNlbGVjdG9yQWxsLAogICAgICAgICAgICBsYiA9IERvY3VtZW50RnJhZ21lbnQucHJvdG90eXBl
LnF1ZXJ5U2VsZWN0b3JBbGwsIG1iID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgaWYg
KCFjKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50
KCJ0ZW1wbGF0ZSIpLCBiID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGVtcGxhdGUiKTsKICAg
ICAgICAgICAgICAgICAgICBiLmNvbnRlbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxl
bWVudCgiZGl2IikpOwogICAgICAgICAgICAgICAgICAgIGEuY29udGVudC5hcHBlbmRDaGlsZChi
KTsKICAgICAgICAgICAgICAgICAgICBhID0gYS5jbG9uZU5vZGUoITApOwogICAgICAgICAgICAg
ICAgICAgIHJldHVybiAwID09PSBhLmNvbnRlbnQuY2hpbGROb2Rlcy5sZW5ndGggfHwgMCA9PT0g
YS5jb250ZW50LmZpcnN0Q2hpbGQuY29udGVudC5jaGlsZE5vZGVzLmxlbmd0aCB8fCBkCiAgICAg
ICAgICAgICAgICB9CiAgICAgICAgICAgIH0oKTsKICAgICAgICBpZiAoYykgewogICAgICAgICAg
ICB2YXIgUyA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCgidGVt
cGxhdGUiKSwgQyA9ICEwLCBWID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3R5bGUiKTsKICAg
ICAgICAgICAgVi50ZXh0Q29udGVudCA9ICJ0ZW1wbGF0ZXtkaXNwbGF5Om5vbmU7fSI7CiAgICAg
ICAgICAgIHZhciBoYSA9IGRvY3VtZW50LmhlYWQ7CiAgICAgICAgICAgIGhhLmluc2VydEJlZm9y
ZShWLCBoYS5maXJzdEVsZW1lbnRDaGlsZCk7CiAgICAgICAgICAgIGEucHJvdG90eXBlID0gT2Jq
ZWN0LmNyZWF0ZShIVE1MRWxlbWVudC5wcm90b3R5cGUpOwogICAgICAgICAgICB2YXIgdmEgPSAh
ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikuaGFzT3duUHJvcGVydHkoImlubmVySFRNTCIp
OwogICAgICAgICAgICBhLkcgPSBmdW5jdGlvbiAoYikgewogICAgICAgICAgICAgICAgaWYgKCFi
LmNvbnRlbnQgJiYgYi5uYW1lc3BhY2VVUkkgPT09CiAgICAgICAgICAgICAgICAgICAgZG9jdW1l
bnQuZG9jdW1lbnRFbGVtZW50Lm5hbWVzcGFjZVVSSSkgewogICAgICAgICAgICAgICAgICAgIGIu
Y29udGVudCA9IFMuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpOwogICAgICAgICAgICAgICAgICAg
IGZvciAodmFyIGM7IGMgPSBiLmZpcnN0Q2hpbGQ7KSBsLmNhbGwoYi5jb250ZW50LCBjKTsKICAg
ICAgICAgICAgICAgICAgICBpZiAodmEpIGIuX19wcm90b19fID0gYS5wcm90b3R5cGU7IGVsc2Ug
aWYgKGIuY2xvbmVOb2RlID0gZnVuY3Rpb24gKGIpIHsKICAgICAgICAgICAgICAgICAgICAgICAg
cmV0dXJuIGEuYSh0aGlzLCBiKQogICAgICAgICAgICAgICAgICAgIH0sIEMpIHRyeSB7CiAgICAg
ICAgICAgICAgICAgICAgICAgIFAoYiksIFcoYikKICAgICAgICAgICAgICAgICAgICB9IGNhdGNo
IChUZykgewogICAgICAgICAgICAgICAgICAgICAgICBDID0gITEKICAgICAgICAgICAgICAgICAg
ICB9CiAgICAgICAgICAgICAgICAgICAgYS5DKGIuY29udGVudCkKICAgICAgICAgICAgICAgIH0K
ICAgICAgICAgICAgfTsKICAgICAgICAgICAgdmFyIFggPSB7CiAgICAgICAgICAgICAgICBvcHRp
b246IFsic2VsZWN0Il0sCiAgICAgICAgICAgICAgICB0aGVhZDogWyJ0YWJsZSJdLAogICAgICAg
ICAgICAgICAgY29sOiBbImNvbGdyb3VwIiwgInRhYmxlIl0sCiAgICAgICAgICAgICAgICB0cjog
WyJ0Ym9keSIsICJ0YWJsZSJdLAogICAgICAgICAgICAgICAgdGg6IFsidHIiLCAidGJvZHkiLCAi
dGFibGUiXSwKICAgICAgICAgICAgICAgIHRkOiBbInRyIiwgInRib2R5IiwgInRhYmxlIl0KICAg
ICAgICAgICAgfSwgUCA9IGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgICAgICBPYmplY3QuZGVm
aW5lUHJvcGVydHkoYiwgImlubmVySFRNTCIsIHsKICAgICAgICAgICAgICAgICAgICBnZXQ6IGZ1
bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5iKHRoaXMpCiAgICAg
ICAgICAgICAgICAgICAgfSwgc2V0OiBmdW5jdGlvbiAoYikgewogICAgICAgICAgICAgICAgICAg
ICAgICB2YXIgYyA9IFhbKC88KFthLXpdW14vXDA+XHgyMFx0XHJcblxmXSspL2kuZXhlYyhiKSB8
fAogICAgICAgICAgICAgICAgICAgICAgICAgICAgWyIiLCAiIl0pWzFdLnRvTG93ZXJDYXNlKCld
OwogICAgICAgICAgICAgICAgICAgICAgICBpZiAoYykgZm9yICh2YXIgZCA9IDA7IGQgPCBjLmxl
bmd0aDsgZCsrKSBiID0gIjwiICsgY1tkXSArICI+IiArIGIgKyAiPC8iICsgY1tkXSArICI+IjsK
ICAgICAgICAgICAgICAgICAgICAgICAgUy5ib2R5LmlubmVySFRNTCA9IGI7CiAgICAgICAgICAg
ICAgICAgICAgICAgIGZvciAoYS5DKFMpOyB0aGlzLmNvbnRlbnQuZmlyc3RDaGlsZDspIGsuY2Fs
bCh0aGlzLmNvbnRlbnQsIHRoaXMuY29udGVudC5maXJzdENoaWxkKTsKICAgICAgICAgICAgICAg
ICAgICAgICAgYiA9IFMuYm9keTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGMpIGZvciAo
ZCA9IDA7IGQgPCBjLmxlbmd0aDsgZCsrKSBiID0gYi5sYXN0Q2hpbGQ7CiAgICAgICAgICAgICAg
ICAgICAgICAgIGZvciAoOyBiLmZpcnN0Q2hpbGQ7KSBsLmNhbGwodGhpcy5jb250ZW50LCBiLmZp
cnN0Q2hpbGQpCiAgICAgICAgICAgICAgICAgICAgfSwgY29uZmlndXJhYmxlOiAhMAogICAgICAg
ICAgICAgICAgfSkKICAgICAgICAgICAgfSwgVyA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAg
ICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYSwgIm91dGVySFRNTCIsIHsKICAgICAgICAgICAg
ICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJu
ICI8dGVtcGxhdGU+IiArIHRoaXMuaW5uZXJIVE1MICsgIjwvdGVtcGxhdGU+IgogICAgICAgICAg
ICAgICAgICAgIH0sIHNldDogZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAg
aWYgKHRoaXMucGFyZW50Tm9kZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgUy5ib2R5
LmlubmVySFRNTCA9IGE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGEgPSB0aGlz
Lm93bmVyRG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpOyBTLmJvZHkuZmlyc3RDaGls
ZDspIGwuY2FsbChhLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFMuYm9keS5maXJz
dENoaWxkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0uY2FsbCh0aGlzLnBhcmVudE5v
ZGUsIGEsIHRoaXMpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB0aHJvdyBFcnJvcigi
RmFpbGVkIHRvIHNldCB0aGUgJ291dGVySFRNTCcgcHJvcGVydHkgb24gJ0VsZW1lbnQnOiBUaGlz
IGVsZW1lbnQgaGFzIG5vIHBhcmVudCBub2RlLiIpOwogICAgICAgICAgICAgICAgICAgIH0sIGNv
bmZpZ3VyYWJsZTogITAKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH07CiAgICAgICAg
ICAgIFAoYS5wcm90b3R5cGUpOwogICAgICAgICAgICBXKGEucHJvdG90eXBlKTsKICAgICAgICAg
ICAgYS5DID0gZnVuY3Rpb24gKGMpIHsKICAgICAgICAgICAgICAgIGMgPSBiKGMsICJ0ZW1wbGF0
ZSIpOwogICAgICAgICAgICAgICAgZm9yICh2YXIgZCA9IDAsIGUgPSBjLmxlbmd0aCwgZjsgZCA8
IGUgJiYgKGYgPSBjW2RdKTsgZCsrKSBhLkcoZikKICAgICAgICAgICAgfTsKICAgICAgICAgICAg
ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsIGZ1bmN0aW9uICgp
IHsKICAgICAgICAgICAgICAgIGEuQyhkb2N1bWVudCkKICAgICAgICAgICAgfSk7CiAgICAgICAg
ICAgIERvY3VtZW50LnByb3RvdHlwZS5jcmVhdGVFbGVtZW50ID0gZnVuY3Rpb24gKCkgewogICAg
ICAgICAgICAgICAgdmFyIGIgPSBnLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAg
ICAgICAidGVtcGxhdGUiID09PSBiLmxvY2FsTmFtZSAmJiBhLkcoYik7CiAgICAgICAgICAgICAg
ICByZXR1cm4gYgogICAgICAgICAgICB9OwogICAgICAgICAgICBET01QYXJzZXIucHJvdG90eXBl
LnBhcnNlRnJvbVN0cmluZyA9CiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7CiAgICAgICAg
ICAgICAgICAgICAgdmFyIGIgPSBxLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAg
ICAgICAgICAgYS5DKGIpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBiCiAgICAgICAgICAg
ICAgICB9OwogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoSFRNTEVsZW1lbnQucHJv
dG90eXBlLCAiaW5uZXJIVE1MIiwgewogICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7
CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5iKHRoaXMpCiAgICAgICAgICAgICAgICB9LCBz
ZXQ6IGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgICAgICAgICAgeC5zZXQuY2FsbCh0aGlzLCBi
KTsKICAgICAgICAgICAgICAgICAgICBhLkModGhpcykKICAgICAgICAgICAgICAgIH0sIGNvbmZp
Z3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB2
YXIgVmUgPSAvWyZcdTAwQTAiXS9nLCB5YyA9IC9bJlx1MDBBMDw+XS9nLCB6YyA9IGZ1bmN0aW9u
IChhKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKGEpIHsKICAgICAgICAgICAgICAgICAgICBj
YXNlICImIjoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICImYW1wOyI7CiAgICAgICAg
ICAgICAgICAgICAgY2FzZSAiPCI6CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAiJmx0
OyI7CiAgICAgICAgICAgICAgICAgICAgY2FzZSAiPiI6CiAgICAgICAgICAgICAgICAgICAgICAg
IHJldHVybiAiJmd0OyI7CiAgICAgICAgICAgICAgICAgICAgY2FzZSAnIic6CiAgICAgICAgICAg
ICAgICAgICAgICAgIHJldHVybiAiJnF1b3Q7IjsKICAgICAgICAgICAgICAgICAgICBjYXNlICJc
dTAwYTAiOgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gIiZuYnNwOyIKICAgICAgICAg
ICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgViA9IGZ1bmN0aW9uIChhKSB7CiAg
ICAgICAgICAgICAgICBmb3IgKHZhciBiID0ge30sIGMgPSAwOyBjIDwgYS5sZW5ndGg7IGMrKykg
YlthW2NdXSA9ICEwOwogICAgICAgICAgICAgICAgcmV0dXJuIGIKICAgICAgICAgICAgfTsKICAg
ICAgICAgICAgdmFyIFdlID0gVigiYXJlYSBiYXNlIGJyIGNvbCBjb21tYW5kIGVtYmVkIGhyIGlt
ZyBpbnB1dCBrZXlnZW4gbGluayBtZXRhIHBhcmFtIHNvdXJjZSB0cmFjayB3YnIiLnNwbGl0KCIg
IikpLAogICAgICAgICAgICAgICAgWGUgPSBWKCJzdHlsZSBzY3JpcHQgeG1wIGlmcmFtZSBub2Vt
YmVkIG5vZnJhbWVzIHBsYWludGV4dCBub3NjcmlwdCIuc3BsaXQoIiAiKSksIG5iID0gZnVuY3Rp
b24gKGEsIGIpIHsKICAgICAgICAgICAgICAgICAgICAidGVtcGxhdGUiID09PSBhLmxvY2FsTmFt
ZSAmJiAoYSA9IGEuY29udGVudCk7CiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgYyA9ICIi
LCBkID0gYiA/IGIoYSkgOiBNLmdldC5jYWxsKGEpLCBlID0gMCwgZiA9IGQubGVuZ3RoLCBnOyBl
IDwgZiAmJiAoZyA9IGRbZV0pOyBlKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgYTp7CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaCA9IGc7CiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICB2YXIgayA9IGE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbCA9IGI7
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGgubm9kZVR5cGUpIHsKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIE5vZGUuRUxFTUVOVF9OT0RFOgogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBQID0gaC5sb2NhbE5hbWUsIG0g
PSAiPCIgKyBQLCBXID0gaC5hdHRyaWJ1dGVzLCBxID0gMDsgayA9IFdbcV07IHErKykgbSArPSAi
ICIgKyBrLm5hbWUgKyAnPSInICsgay52YWx1ZS5yZXBsYWNlKFZlLCB6YykgKyAnIic7CiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG0gKz0gIj4iOwogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBoID0gV2VbUF0gPyBtIDogbSArIG5iKGgsIGwpICsgIjwvIiAr
IFAgKyAiPiI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7CiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBOb2RlLlRFWFRfTk9ERToKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaCA9IGguZGF0YTsKICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgaCA9IGsgJiYgWGVbay5sb2NhbE5hbWVdID8gaCA6IGgucmVw
bGFjZSh5YywgemMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhayBh
OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgTm9kZS5DT01NRU5UX05PREU6
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGggPSAiXHgzYyEtLSIgKyBoLmRh
dGEgKyAiLS1ceDNlIjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsg
YTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyB3aW5kb3cuY29uc29sZS5lcnJvcihoKSwgRXJy
b3IoIm5vdCBpbXBsZW1lbnRlZCIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAg
ICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGMgKz0gaAogICAg
ICAgICAgICAgICAgICAgIH0KICA=</Default>
</Parameter>

<Parameter name="Frag20">
<Default>YXIgYiA9IDA7IGIgPCBhLmxlbmd0aDsgYisrKSB7CiAgICAgICAgICAgIHZhciBjID0gYVtiXTsK
ICAgICAgICAgICAgaWYgKGMudGFyZ2V0ICE9PSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgJiYg
Yy50YXJnZXQgIT09IGRvY3VtZW50LmhlYWQpIGZvciAodmFyIGQgPSAwOyBkIDwgYy5hZGRlZE5v
ZGVzLmxlbmd0aDsgZCsrKSB7CiAgICAgICAgICAgICAgICB2YXIgZSA9IGMuYWRkZWROb2Rlc1tk
XTsKICAgICAgICAgICAgICAgIGlmIChlLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkg
ewogICAgICAgICAgICAgICAgICAgIHZhciBmID0gZS5nZXRSb290Tm9kZSgpLCBnID0gcGcoZSk7
CiAgICAgICAgICAgICAgICAgICAgaWYgKGcgJiYgZiA9PT0gZS5vd25lckRvY3VtZW50ICYmICgi
c3R5bGUiICE9PSBlLmxvY2FsTmFtZSAmJiAidGVtcGxhdGUiICE9PSBlLmxvY2FsTmFtZSB8fCAi
IiA9PT0gcmYoZSkpKSB5ZihlLCBnKTsgZWxzZSBpZiAoZiBpbnN0YW5jZW9mIFNoYWRvd1Jvb3Qp
IGZvciAoZiA9IHFnKGUpLCBmICE9PSBnICYmIHhmKGUsIGcsIGYpLCBlID0gd2luZG93LlNoYWR5
RE9NLm5hdGl2ZU1ldGhvZHMucXVlcnlTZWxlY3RvckFsbC5jYWxsKGUsICI6bm90KC4iICsgUi5h
ICsgIikiKSwgZyA9IDA7IGcgPCBlLmxlbmd0aDsgZysrKSB7CiAgICAgICAgICAgICAgICAgICAg
ICAgIGYgPSBlW2ddOwogICAgICAgICAgICAgICAgICAgICAgICB2YXIgaCA9IHFnKGYpOwogICAg
ICAgICAgICAgICAgICAgICAgICBoICYmIHdmKGYsIGgpCiAgICAgICAgICAgICAgICAgICAgfQog
ICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIGlmICgh
KE8gfHwgd2luZG93LlNoYWR5RE9NICYmIHdpbmRvdy5TaGFkeURPTS5oYW5kbGVzRHluYW1pY1Nj
b3BpbmcpKSB7CiAgICAgICAgdmFyIHNnID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIocmcpLCB0ZyA9
IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIHNnLm9ic2VydmUoYSwge2NoaWxkTGlzdDogITAs
IHN1YnRyZWU6ICEwfSkKICAgICAgICB9OwogICAgICAgIGlmICh3aW5kb3cuY3VzdG9tRWxlbWVu
dHMgJiYgIXdpbmRvdy5jdXN0b21FbGVtZW50cy5wb2x5ZmlsbFdyYXBGbHVzaENhbGxiYWNrKSB0
Zyhkb2N1bWVudCk7IGVsc2UgewogICAgICAgICAgICB2YXIgdWcgPSBmdW5jdGlvbiAoKSB7CiAg
ICAgICAgICAgICAgICB0Zyhkb2N1bWVudC5ib2R5KQogICAgICAgICAgICB9OwogICAgICAgICAg
ICB3aW5kb3cuSFRNTEltcG9ydHMgPyB3aW5kb3cuSFRNTEltcG9ydHMud2hlblJlYWR5KHVnKSA6
IHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBpZiAo
ImxvYWRpbmciID09PSBkb2N1bWVudC5yZWFkeVN0YXRlKSB7CiAgICAgICAgICAgICAgICAgICAg
dmFyIGEgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHVnKCk7CiAgICAg
ICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoInJlYWR5c3Rh
dGVjaGFuZ2UiLCBhKQogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAg
ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigicmVhZHlzdGF0ZWNoYW5nZSIsCiAgICAgICAgICAg
ICAgICAgICAgICAgIGEpCiAgICAgICAgICAgICAgICB9IGVsc2UgdWcoKQogICAgICAgICAgICB9
KQogICAgICAgIH0KICAgICAgICBuZyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmcoc2cu
dGFrZVJlY29yZHMoKSkKICAgICAgICB9CiAgICB9CiAgICB2YXIgdmcgPSBuZzsKICAgIHZhciB3
ZyA9IHt9OwogICAgdmFyIHhnID0gUHJvbWlzZS5yZXNvbHZlKCk7CgogICAgZnVuY3Rpb24geWco
YSkgewogICAgICAgIGlmIChhID0gd2dbYV0pIGEuX2FwcGx5U2hpbUN1cnJlbnRWZXJzaW9uID0g
YS5fYXBwbHlTaGltQ3VycmVudFZlcnNpb24gfHwgMCwgYS5fYXBwbHlTaGltVmFsaWRhdGluZ1Zl
cnNpb24gPSBhLl9hcHBseVNoaW1WYWxpZGF0aW5nVmVyc2lvbiB8fCAwLCBhLl9hcHBseVNoaW1O
ZXh0VmVyc2lvbiA9IChhLl9hcHBseVNoaW1OZXh0VmVyc2lvbiB8fCAwKSArIDEKICAgIH0KCiAg
ICBmdW5jdGlvbiB6ZyhhKSB7CiAgICAgICAgcmV0dXJuIGEuX2FwcGx5U2hpbUN1cnJlbnRWZXJz
aW9uID09PSBhLl9hcHBseVNoaW1OZXh0VmVyc2lvbgogICAgfQoKICAgIGZ1bmN0aW9uIEFnKGEp
IHsKICAgICAgICBhLl9hcHBseVNoaW1WYWxpZGF0aW5nVmVyc2lvbiA9IGEuX2FwcGx5U2hpbU5l
eHRWZXJzaW9uOwogICAgICAgIGEuX3ZhbGlkYXRpbmcgfHwgKGEuX3ZhbGlkYXRpbmcgPSAhMCwg
eGcudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGEuX2FwcGx5U2hpbUN1cnJlbnRWZXJz
aW9uID0gYS5fYXBwbHlTaGltTmV4dFZlcnNpb247CiAgICAgICAgICAgIGEuX3ZhbGlkYXRpbmcg
PSAhMQogICAgICAgIH0pKQogICAgfTt2YXIgQmcgPSB7fSwgQ2cgPSBuZXcgbWc7CgogICAgZnVu
Y3Rpb24gWSgpIHsKICAgICAgICB0aGlzLmwgPSB7fTsKICAgICAgICB0aGlzLmMgPSBkb2N1bWVu
dC5kb2N1bWVudEVsZW1lbnQ7CiAgICAgICAgdmFyIGEgPSBuZXcgdmU7CiAgICAgICAgYS5ydWxl
cyA9IFtdOwogICAgICAgIHRoaXMuZiA9IFRmKHRoaXMuYywgbmV3IFNmKGEpKTsKICAgICAgICB0
aGlzLmcgPSAhMTsKICAgICAgICB0aGlzLmIgPSB0aGlzLmEgPSBudWxsCiAgICB9CgogICAgbiA9
IFkucHJvdG90eXBlOwogICAgbi5mbHVzaCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2ZygpCiAg
ICB9OwogICAgbi5GYSA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIGVmKGEpCiAgICB9
OwogICAgbi5WYSA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIGNmKGEpCiAgICB9Owog
ICAgbi5wcmVwYXJlVGVtcGxhdGUgPSBmdW5jdGlvbiAoYSwgYiwgYykgewogICAgICAgIHRoaXMu
cHJlcGFyZVRlbXBsYXRlRG9tKGEsIGIpOwogICAgICAgIHRoaXMucHJlcGFyZVRlbXBsYXRlU3R5
bGVzKGEsIGIsIGMpCiAgICB9OwogICAgbi5wcmVwYXJlVGVtcGxhdGVTdHlsZXMgPSBmdW5jdGlv
biAoYSwgYiwgYykgewogICAgICAgIGlmICghYS5fcHJlcGFyZWQgJiYgIVBlKSB7CiAgICAgICAg
ICAgIE8gfHwgamdbYl0gfHwgKGpnW2JdID0ga2YoYikpOwogICAgICAgICAgICBhLl9wcmVwYXJl
ZCA9ICEwOwogICAgICAgICAgICBhLm5hbWUgPSBiOwogICAgICAgICAgICBhLmV4dGVuZHMgPSBj
OwogICAgICAgICAgICB3Z1tiXSA9IGE7CiAgICAgICAgICAgIHZhciBkID0gcmYoYSksIGUgPSBz
ZihkKTsKICAgICAgICAgICAgYyA9IHtpczogYiwgZXh0ZW5kczogY307CiAgICAgICAgICAgIGZv
ciAodmFyIGYgPSBbXSwgZyA9IGEuY29udGVudC5xdWVyeVNlbGVjdG9yQWxsKCJzdHlsZSIpLCBo
ID0gMDsgaCA8IGcubGVuZ3RoOyBoKyspIHsKICAgICAgICAgICAgICAgIHZhciBrID0gZ1toXTsK
ICAgICAgICAgICAgICAgIGlmIChrLmhhc0F0dHJpYnV0ZSgic2hhZHktdW5zY29wZWQiKSkgewog
ICAgICAgICAgICAgICAgICAgIGlmICghTykgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIg
bCA9IGsudGV4dENvbnRlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgIGJmLmhhcyhsKSB8fCAo
YmYuYWRkKGwpLCBsID0gay5jbG9uZU5vZGUoITApLCBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxk
KGwpKTsKICAgICAgICAgICAgICAgICAgICAgICAgay5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGsp
CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIGYucHVzaChrLnRl
eHRDb250ZW50KSwgay5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspCiAgICAgICAgICAgIH0KICAg
ICAgICAgICAgZiA9IGYuam9pbigiIikudHJpbSgpICsgKEJnW2JdIHx8ICIiKTsKICAgICAgICAg
ICAgRGcodGhpcyk7CiAgICAgICAgICAgIGlmICghZSkgewogICAgICAgICAgICAgICAgaWYgKGcg
PSAhZCkgZyA9IFNlLnRlc3QoZikgfHwgUmUudGVzdChmKSwgU2UubGFzdEluZGV4ID0gMCwgUmUu
bGFzdEluZGV4ID0gMDsKICAgICAgICAgICAgICAgIGggPSB3ZShmKTsKICAgICAgICAgICAgICAg
IGcgJiYgUSAmJiB0aGlzLmEgJiYgdGhpcy5hLnRyYW5zZm9ybVJ1bGVzKGgsIGIpOwogICAgICAg
ICAgICAgICAgYS5fc3R5bGVBc3QgPSBoCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZyA9IFtd
OwogICAgICAgICAgICBRIHx8IChnID0gWGYoYS5fc3R5bGVBc3QpKTsKICAgICAgICAgICAgaWYg
KCFnLmxlbmd0aCB8fCBRKSBoID0gTyA/IGEuY29udGVudCA6IG51bGwsIGIgPSBqZ1tiXSB8fCBu
dWxsLCBkID0gemYoYywgYS5fc3R5bGVBc3QsIG51bGwsIGQsIGUgPyBmIDogIiIpLCBkID0gZC5s
ZW5ndGggPyBnZihkLCBjLmlzLCBoLCBiKSA6IG51bGwsIGEuX3N0eWxlID0gZDsKICAgICAgICAg
ICAgYS5hID0gZwogICAgICAgIH0KICAgIH07CiAgICBuLlFhID0gZnVuY3Rpb24gKGEsIGIpIHsK
ICAgICAgICBCZ1tiXSA9IGEuam9pbigiICIpCiAgICB9OwogICAgbi5wcmVwYXJlVGVtcGxhdGVE
b20gPSBmdW5jdGlvbiAoYSwgYikgewogICAgICAgIGlmICghUGUpIHsKICAgICAgICAgICAgdmFy
IGMgPSByZihhKTsKICAgICAgICAgICAgTyB8fCAic2hhZHkiID09PSBjIHx8IGEuX2RvbVByZXBh
cmVkIHx8IChhLl9kb21QcmVwYXJlZCA9ICEwLCB1ZihhLmNvbnRlbnQsIGIpKQogICAgICAgIH0K
ICAgIH07CgogICAgZnVuY3Rpb24gRWcoYSkgewogICAgICAgIHZhciBiID0gcGYoYSksIGMgPSBi
LmlzOwogICAgICAgIGIgPSBiLk07CiAgICAgICAgdmFyIGQgPSBqZ1tjXSB8fCBudWxsLCBlID0g
d2dbY107CiAgICAgICAgaWYgKGUpIHsKICAgICAgICAgICAgYyA9IGUuX3N0eWxlQXN0OwogICAg
ICAgICAgICB2YXIgZiA9IGUuYTsKICAgICAgICAgICAgZSA9IHJmKGUpOwogICAgICAgICAgICBi
ID0gbmV3IFNmKGMsIGQsIGYsIGIsIGUpOwogICAgICAgICAgICBUZihhLCBiKTsKICAgICAgICAg
ICAgcmV0dXJuIGIKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gRmcoYSkgewogICAgICAg
ICFhLmIgJiYgd2luZG93LlNoYWR5Q1NTICYmIHdpbmRvdy5TaGFkeUNTUy5DdXN0b21TdHlsZUlu
dGVyZmFjZSAmJiAoYS5iID0gd2luZG93LlNoYWR5Q1NTLkN1c3RvbVN0eWxlSW50ZXJmYWNlLCBh
LmIudHJhbnNmb3JtQ2FsbGJhY2sgPSBmdW5jdGlvbiAoYikgewogICAgICAgICAgICBhLnJhKGIp
CiAgICAgICAgfSwgYS5iLnZhbGlkYXRlQ2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAg
ICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAo
YS5iLmVucXVldWVkIHx8IGEuZykgJiYgYS5mbHVzaEN1c3RvbVN0eWxlcygpCiAgICAgICAgICAg
IH0pCiAgICAgICAgfSkKICAgIH0KCiAgICBmdW5jdGlvbiBEZyhhKSB7CiAgICAgICAgIWEuYSAm
JiB3aW5kb3cuU2hhZHlDU1MgJiYgd2luZG93LlNoYWR5Q1NTLkFwcGx5U2hpbSAmJiAoYS5hID0g
d2luZG93LlNoYWR5Q1NTLkFwcGx5U2hpbSwgYS5hLmludmFsaWRDYWxsYmFjayA9IHlnKTsKICAg
ICAgICBGZyhhKQogICAgfQoKICAgIG4uZmx1c2hDdXN0b21TdHlsZXMgPSBmdW5jdGlvbiAoKSB7
CiAgICAgICAgaWYgKCFQZSAmJiAoRGcodGhpcyksIHRoaXMuYikpIHsKICAgICAgICAgICAgdmFy
IGEgPSB0aGlzLmIucHJvY2Vzc1N0eWxlcygpOwogICAgICAgICAgICBpZiAodGhpcy5iLmVucXVl
dWVkICYmICFzZih0aGlzLmYuY3NzQnVpbGQpKSB7CiAgICAgICAgICAgICAgICBpZiAoUSkgewog
ICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5mLmNzc0J1aWxkKSBmb3IgKHZhciBiID0gMDsg
YiA8IGEubGVuZ3RoOyBiKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGMgPSB0aGlz
LmIuZ2V0U3R5bGVGb3JDdXN0b21TdHlsZShhW2JdKTsKICAgICAgICAgICAgICAgICAgICAgICAg
aWYgKGMgJiYgUSAmJiB0aGlzLmEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBk
ID0gZWYoYyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZyh0aGlzKTsKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIHRoaXMuYS50cmFuc2Zvcm1SdWxlcyhkKTsKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIGMudGV4dENvbnRlbnQgPSBjZihkKQogICAgICAgICAgICAgICAgICAg
ICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAg
ICAgICAgICAgICAgICAgICBHZyh0aGlzLCB0aGlzLmMsIHRoaXMuZik7CiAgICAgICAgICAgICAg
ICAgICAgZm9yIChiID0gMDsgYiA8IGEubGVuZ3RoOyBiKyspIChjID0gdGhpcy5iLmdldFN0eWxl
Rm9yQ3VzdG9tU3R5bGUoYVtiXSkpICYmIGhnKGMsIHRoaXMuZi53KTsKICAgICAgICAgICAgICAg
ICAgICB0aGlzLmcgJiYgdGhpcy5zdHlsZURvY3VtZW50KCkKICAgICAgICAgICAgICAgIH0KICAg
ICAgICAgICAgICAgIHRoaXMuYi5lbnF1ZXVlZCA9ICExCiAgICAgICAgICAgIH0KICAgICAgICB9
CiAgICB9OwogICAgbi5zdHlsZUVsZW1lbnQgPSBmdW5jdGlvbiAoYSwgYikgewogICAgICAgIGlm
IChQZSkgewogICAgICAgICAgICBpZiAoYikgewogICAgICAgICAgICAgICAgVChhKSB8fCBUZihh
LCBuZXcgU2YobnVsbCkpOwogICAgICAgICAgICAgICAgdmFyIGMgPSBUKGEpOwogICAgICAgICAg
ICAgICAgYy5vID0gYy5vIHx8IHt9OwogICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihjLm8s
IGIpOwogICAgICAgICAgICAgICAgSGcodGhpcywgYSwgYykKICAgICAgICAgICAgfQogICAgICAg
IH0gZWxzZSBpZiAoYyA9IFQoYSkgfHwgRWcoYSkpIGlmIChhICE9PSB0aGlzLmMgJiYgKHRoaXMu
ZyA9ICEwKSwgYiAmJiAoYy5vID0gYy5vIHx8IHt9LCBPYmplY3QuYXNzaWduKGMubywgYikpLCBR
KSBIZyh0aGlzLCBhLCBjKTsgZWxzZSBpZiAodGhpcy5mbHVzaCgpLCBHZyh0aGlzLCBhLCBjKSwg
Yy5mYSAmJiBjLmZhLmxlbmd0aCkgewogICAgICAgICAgICBiID0gcGYoYSkuaXM7CiAgICAgICAg
ICAgIHZhciBkOwogICAgICAgICAgICBhOnsKICAgICAgICAgICAgICAgIGlmIChkID0gQ2cuY2Fj
aGVbYl0pIGZvciAodmFyIGUgPSBkLmxlbmd0aCAtIDE7IDAgPD0gZTsgZS0tKSB7CiAgICAgICAg
ICAgICAgICAgICAgdmFyIGYgPSBkW2VdOwogICAgICAgICAgICAgICAgICAgIGI6ewogICAgICAg
ICAgICAgICAgICAgICAgICB2YXIgZyA9IGMuZmE7CiAgICAgICAgICAgICAgICAgICAgICAgIGZv
ciAodmFyIGggPSAwOyBoIDwgZy5sZW5ndGg7IGgrKykgewogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgdmFyIGsgPSBnW2hdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGYudltr
XSAhPT0gYy53W2tdKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZyA9ICExOwog
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGIKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAg
ICAgICBnID0gITAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgaWYg
KGcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZCA9IGY7CiAgICAgICAgICAgICAgICAgICAg
ICAgIGJyZWFrIGEKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAg
ICAgICAgICAgICBkID0gdm9pZCAwCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZyA9IGQgPyBk
LnN0eWxlRWxlbWVudCA6IG51bGw7CiAgICAgICAgICAgIGUgPSBjLnM7CiAgICAgICAgICAgIChm
ID0gZCAmJiBkLnMpIHx8IChmID0gdGhpcy5sW2JdID0gKHRoaXMubFtiXSB8fCAwKSArIDEsIGYg
PSBiICsgIi0iICsgZik7CiAgICAgICAgICAgIGMucyA9IGY7CiAgICAgICAgICAgIGYgPSBjLnM7
CiAgICAgICAgICAgIGggPSBpZzs=</Default>
</Parameter>

<Parameter name="Frag21">
<Default>CiAgICAgICAgICAgIGggPSBnID8gZy50ZXh0Q29udGVudCB8fCAiIiA6IGVnKGgsIGEsIGMudywg
Zik7CiAgICAgICAgICAgIGsgPSBUKGEpOwogICAgICAgICAgICB2YXIgbCA9IGsuYTsKICAgICAg
ICAgICAgbCAmJiAhTyAmJiBsICE9PSBnICYmIChsLl91c2VDb3VudC0tLCAwID49IGwuX3VzZUNv
dW50ICYmIGwucGFyZW50Tm9kZSAmJiBsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobCkpOwogICAg
ICAgICAgICBPID8gay5hID8gKGsuYS50ZXh0Q29udGVudCA9IGgsIGcgPSBrLmEpIDogaCAmJiAo
ZyA9IGdmKGgsIGYsIGEuc2hhZG93Um9vdCwgay5iKSkgOiBnID8gZy5wYXJlbnROb2RlIHx8IChW
ZiAmJiAtMSA8IGguaW5kZXhPZigiQG1lZGlhIikgJiYgKGcudGV4dENvbnRlbnQgPSBoKSwgaGYo
ZywgbnVsbCwgay5iKSkgOiBoICYmIChnID0gZ2YoaCwgZiwgbnVsbCwgay5iKSk7CiAgICAgICAg
ICAgIGcgJiYgKGcuX3VzZUNvdW50ID0gZy5fdXNlQ291bnQgfHwgMCwgay5hICE9IGcgJiYgZy5f
dXNlQ291bnQrKywgay5hID0gZyk7CiAgICAgICAgICAgIGYgPSBnOwogICAgICAgICAgICBPIHx8
IChnID0gYy5zLCBrID0gaCA9IGEuZ2V0QXR0cmlidXRlKCJjbGFzcyIpIHx8ICIiLCBlICYmIChr
ID0gaC5yZXBsYWNlKG5ldyBSZWdFeHAoIlxccyp4LXNjb3BlXFxzKiIgKwogICAgICAgICAgICAg
ICAgZSArICJcXHMqIiwgImciKSwgIiAiKSksIGsgKz0gKGsgPyAiICIgOiAiIikgKyAieC1zY29w
ZSAiICsgZywgaCAhPT0gayAmJiBuZihhLCBrKSk7CiAgICAgICAgICAgIGQgfHwgQ2cuc3RvcmUo
YiwgYy53LCBmLCBjLnMpCiAgICAgICAgfQogICAgfTsKCiAgICBmdW5jdGlvbiBIZyhhLCBiLCBj
KSB7CiAgICAgICAgdmFyIGQgPSBwZihiKS5pczsKICAgICAgICBpZiAoYy5vKSB7CiAgICAgICAg
ICAgIHZhciBlID0gYy5vLCBmOwogICAgICAgICAgICBmb3IgKGYgaW4gZSkgbnVsbCA9PT0gZiA/
IGIuc3R5bGUucmVtb3ZlUHJvcGVydHkoZikgOiBiLnN0eWxlLnNldFByb3BlcnR5KGYsIGVbZl0p
CiAgICAgICAgfQogICAgICAgIGUgPSB3Z1tkXTsKICAgICAgICBpZiAoISghZSAmJiBiICE9PSBh
LmMgfHwgZSAmJiAiIiAhPT0gcmYoZSkpICYmIGUgJiYgZS5fc3R5bGUgJiYgIXpnKGUpKSB7CiAg
ICAgICAgICAgIGlmICh6ZyhlKSB8fCBlLl9hcHBseVNoaW1WYWxpZGF0aW5nVmVyc2lvbiAhPT0g
ZS5fYXBwbHlTaGltTmV4dFZlcnNpb24pIERnKGEpLCBhLmEgJiYgYS5hLnRyYW5zZm9ybVJ1bGVz
KGUuX3N0eWxlQXN0LCBkKSwgZS5fc3R5bGUudGV4dENvbnRlbnQgPSB6ZihiLCBjLkEpLCBBZyhl
KTsKICAgICAgICAgICAgTyAmJiAoYSA9IGIuc2hhZG93Um9vdCkgJiYgKGEgPSBhLnF1ZXJ5U2Vs
ZWN0b3IoInN0eWxlIikpICYmIChhLnRleHRDb250ZW50ID0gemYoYiwgYy5BKSk7CiAgICAgICAg
ICAgIGMuQSA9IGUuX3N0eWxlQXN0CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIElnKGEs
IGIpIHsKICAgICAgICByZXR1cm4gKGIgPSBvZihiKS5nZXRSb290Tm9kZSgpLmhvc3QpID8gVChi
KSB8fCBFZyhiKSA/IGIgOiBJZyhhLCBiKSA6IGEuYwogICAgfQoKICAgIGZ1bmN0aW9uIEdnKGEs
IGIsIGMpIHsKICAgICAgICB2YXIgZCA9IElnKGEsIGIpLCBlID0gVChkKSwgZiA9IGUudzsKICAg
ICAgICBkID09PSBhLmMgfHwgZiB8fCAoR2coYSwgZCwgZSksIGYgPSBlLncpOwogICAgICAgIGEg
PSBPYmplY3QuY3JlYXRlKGYgfHwgbnVsbCk7CiAgICAgICAgZCA9IGRnKGIsIGMuQSwgYy5jc3NC
dWlsZCk7CiAgICAgICAgYiA9IGJnKGUuQSwgYikudjsKICAgICAgICBPYmplY3QuYXNzaWduKGEs
IGQuSGEsIGIsIGQuUmEpOwogICAgICAgIGIgPSBjLm87CiAgICAgICAgZm9yICh2YXIgZyBpbiBi
KSBpZiAoKGUgPSBiW2ddKSB8fCAwID09PSBlKSBhW2ddID0gZTsKICAgICAgICBnID0gaWc7CiAg
ICAgICAgYiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGEpOwogICAgICAgIGZvciAoZSA9
IDA7IGUgPCBiLmxlbmd0aDsgZSsrKSBkID0gYltlXSwgYVtkXSA9ICRmKGcsIGFbZF0sIGEpOwog
ICAgICAgIGMudyA9IGEKICAgIH0KCiAgICBuLnN0eWxlRG9jdW1lbnQgPSBmdW5jdGlvbiAoYSkg
ewogICAgICAgIHRoaXMuc3R5bGVTdWJ0cmVlKHRoaXMuYywgYSkKICAgIH07CiAgICBuLnN0eWxl
U3VidHJlZSA9IGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgdmFyIGMgPSBvZihhKSwgZCA9IGMu
c2hhZG93Um9vdDsKICAgICAgICAoZCB8fCBhID09PSB0aGlzLmMpICYmIHRoaXMuc3R5bGVFbGVt
ZW50KGEsIGIpOwogICAgICAgIGlmIChhID0gZCAmJiAoZC5jaGlsZHJlbiB8fCBkLmNoaWxkTm9k
ZXMpKSBmb3IgKGMgPSAwOyBjIDwgYS5sZW5ndGg7IGMrKykgdGhpcy5zdHlsZVN1YnRyZWUoYVtj
XSk7IGVsc2UgaWYgKGMgPSBjLmNoaWxkcmVuIHx8IGMuY2hpbGROb2RlcykgZm9yIChhID0gMDsg
YSA8IGMubGVuZ3RoOyBhKyspIHRoaXMuc3R5bGVTdWJ0cmVlKGNbYV0pCiAgICB9OwogICAgbi5y
YSA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgdmFyIGIgPSB0aGlzLCBjID0gcmYoYSk7CiAgICAg
ICAgYyAhPT0gdGhpcy5mLmNzc0J1aWxkICYmICh0aGlzLmYuY3NzQnVpbGQgPSBjKTsKICAgICAg
ICBpZiAoIXNmKGMpKSB7CiAgICAgICAgICAgIHZhciBkID0gZWYoYSk7CiAgICAgICAgICAgIGRm
KGQsIGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgICBpZiAoTykgUmYoYSk7IGVsc2Ugewog
ICAgICAgICAgICAgICAgICAgIHZhciBkID0gUjsKICAgICAgICAgICAgICAgICAgICBhLnNlbGVj
dG9yID0gYS5wYXJzZWRTZWxlY3RvcjsKICAgICAgICAgICAgICAgICAgICBSZihhKTsKICAgICAg
ICAgICAgICAgICAgICBhLnNlbGVjdG9yID0gYS5qID0gQ2YoZCwgYSwgZC5jLCB2b2lkIDAsIHZv
aWQgMCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIFEgJiYgIiIgPT09IGMgJiYg
KERnKGIpLCBiLmEgJiYgYi5hLnRyYW5zZm9ybVJ1bGUoYSkpCiAgICAgICAgICAgIH0pOwogICAg
ICAgICAgICBRID8gYS50ZXh0Q29udGVudCA9IGNmKGQpIDogdGhpcy5mLkEucnVsZXMucHVzaChk
KQogICAgICAgIH0KICAgIH07CiAgICBuLmdldENvbXB1dGVkU3R5bGVWYWx1ZSA9IGZ1bmN0aW9u
IChhLCBiKSB7CiAgICAgICAgdmFyIGM7CiAgICAgICAgUSB8fCAoYyA9IChUKGEpIHx8IFQoSWco
dGhpcywgYSkpKS53W2JdKTsKICAgICAgICByZXR1cm4gKGMgPSBjIHx8IHdpbmRvdy5nZXRDb21w
dXRlZFN0eWxlKGEpLmdldFByb3BlcnR5VmFsdWUoYikpID8gYy50cmltKCkgOiAiIgogICAgfTsK
ICAgIG4uVWEgPSBmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHZhciBjID0gb2YoYSkuZ2V0Um9v
dE5vZGUoKTsKICAgICAgICBiID0gYiA/IGIuc3BsaXQoL1xzLykgOiBbXTsKICAgICAgICBjID0g
Yy5ob3N0ICYmIGMuaG9zdC5sb2NhbE5hbWU7CiAgICAgICAgaWYgKCFjKSB7CiAgICAgICAgICAg
IHZhciBkID0gYS5nZXRBdHRyaWJ1dGUoImNsYXNzIik7CiAgICAgICAgICAgIGlmIChkKSB7CiAg
ICAgICAgICAgICAgICBkID0gZC5zcGxpdCgvXHMvKTsKICAgICAgICAgICAgICAgIGZvciAodmFy
IGUgPSAwOyBlIDwgZC5sZW5ndGg7IGUrKykgaWYgKGRbZV0gPT09IFIuYSkgewogICAgICAgICAg
ICAgICAgICAgIGMgPSBkW2UgKyAxXTsKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAg
ICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGMgJiYgYi5wdXNoKFIu
YSwgYyk7CiAgICAgICAgUSB8fCAoYyA9IFQoYSkpICYmIGMucyAmJiBiLnB1c2goaWcuYSwgYy5z
KTsKICAgICAgICBuZihhLCBiLmpvaW4oIiAiKSkKICAgIH07CiAgICBuLkJhID0gZnVuY3Rpb24g
KGEpIHsKICAgICAgICByZXR1cm4gVChhKQogICAgfTsKICAgIG4uVGEgPSBmdW5jdGlvbiAoYSwg
YikgewogICAgICAgIHdmKGEsIGIpCiAgICB9OwogICAgbi5XYSA9IGZ1bmN0aW9uIChhLCBiKSB7
CiAgICAgICAgd2YoYSwgYiwgITApCiAgICB9OwogICAgbi5TYSA9IGZ1bmN0aW9uIChhKSB7CiAg
ICAgICAgcmV0dXJuIHFnKGEpCiAgICB9OwogICAgbi5EYSA9IGZ1bmN0aW9uIChhKSB7CiAgICAg
ICAgcmV0dXJuIHBnKGEpCiAgICB9OwogICAgWS5wcm90b3R5cGUuZmx1c2ggPSBZLnByb3RvdHlw
ZS5mbHVzaDsKICAgIFkucHJvdG90eXBlLnByZXBhcmVUZW1wbGF0ZSA9IFkucHJvdG90eXBlLnBy
ZXBhcmVUZW1wbGF0ZTsKICAgIFkucHJvdG90eXBlLnN0eWxlRWxlbWVudCA9IFkucHJvdG90eXBl
LnN0eWxlRWxlbWVudDsKICAgIFkucHJvdG90eXBlLnN0eWxlRG9jdW1lbnQgPSBZLnByb3RvdHlw
ZS5zdHlsZURvY3VtZW50OwogICAgWS5wcm90b3R5cGUuc3R5bGVTdWJ0cmVlID0gWS5wcm90b3R5
cGUuc3R5bGVTdWJ0cmVlOwogICAgWS5wcm90b3R5cGUuZ2V0Q29tcHV0ZWRTdHlsZVZhbHVlID0g
WS5wcm90b3R5cGUuZ2V0Q29tcHV0ZWRTdHlsZVZhbHVlOwogICAgWS5wcm90b3R5cGUuc2V0RWxl
bWVudENsYXNzID0gWS5wcm90b3R5cGUuVWE7CiAgICBZLnByb3RvdHlwZS5fc3R5bGVJbmZvRm9y
Tm9kZSA9IFkucHJvdG90eXBlLkJhOwogICAgWS5wcm90b3R5cGUudHJhbnNmb3JtQ3VzdG9tU3R5
bGVGb3JEb2N1bWVudCA9IFkucHJvdG90eXBlLnJhOwogICAgWS5wcm90b3R5cGUuZ2V0U3R5bGVB
c3QgPSBZLnByb3RvdHlwZS5GYTsKICAgIFkucHJvdG90eXBlLnN0eWxlQXN0VG9TdHJpbmcgPSBZ
LnByb3RvdHlwZS5WYTsKICAgIFkucHJvdG90eXBlLmZsdXNoQ3VzdG9tU3R5bGVzID0gWS5wcm90
b3R5cGUuZmx1c2hDdXN0b21TdHlsZXM7CiAgICBZLnByb3RvdHlwZS5zY29wZU5vZGUgPSBZLnBy
b3RvdHlwZS5UYTsKICAgIFkucHJvdG90eXBlLnVuc2NvcGVOb2RlID0gWS5wcm90b3R5cGUuV2E7
CiAgICBZLnByb3RvdHlwZS5zY29wZUZvck5vZGUgPSBZLnByb3RvdHlwZS5TYTsKICAgIFkucHJv
dG90eXBlLmN1cnJlbnRTY29wZUZvck5vZGUgPSBZLnByb3RvdHlwZS5EYTsKICAgIFkucHJvdG90
eXBlLnByZXBhcmVBZG9wdGVkQ3NzVGV4dCA9IFkucHJvdG90eXBlLlFhOwogICAgT2JqZWN0LmRl
ZmluZVByb3BlcnRpZXMoWS5wcm90b3R5cGUsIHsKICAgICAgICBuYXRpdmVTaGFkb3c6IHsKICAg
ICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gTwogICAg
ICAgICAgICB9CiAgICAgICAgfSwgbmF0aXZlQ3NzOiB7CiAgICAgICAgICAgIGdldDogZnVuY3Rp
b24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIFEKICAgICAgICAgICAgfQogICAgICAgIH0K
ICAgIH0pOwogICAgdmFyIFogPSBuZXcgWSwgSmcsIEtnOwogICAgd2luZG93LlNoYWR5Q1NTICYm
IChKZyA9IHdpbmRvdy5TaGFkeUNTUy5BcHBseVNoaW0sIEtnID0gd2luZG93LlNoYWR5Q1NTLkN1
c3RvbVN0eWxlSW50ZXJmYWNlKTsKICAgIHdpbmRvdy5TaGFkeUNTUyA9IHsKICAgICAgICBTY29w
aW5nU2hpbTogWiwgcHJlcGFyZVRlbXBsYXRlOiBmdW5jdGlvbiAoYSwgYiwgYykgewogICAgICAg
ICAgICBaLmZsdXNoQ3VzdG9tU3R5bGVzKCk7CiAgICAgICAgICAgIFoucHJlcGFyZVRlbXBsYXRl
KGEsIGIsIGMpCiAgICAgICAgfSwgcHJlcGFyZVRlbXBsYXRlRG9tOiBmdW5jdGlvbiAoYSwgYikg
ewogICAgICAgICAgICBaLnByZXBhcmVUZW1wbGF0ZURvbShhLCBiKQogICAgICAgIH0sIHByZXBh
cmVUZW1wbGF0ZVN0eWxlczogZnVuY3Rpb24gKGEsIGIsIGMpIHsKICAgICAgICAgICAgWi5mbHVz
aEN1c3RvbVN0eWxlcygpOwogICAgICAgICAgICBaLnByZXBhcmVUZW1wbGF0ZVN0eWxlcyhhLCBi
LCBjKQogICAgICAgIH0sIHN0eWxlU3VidHJlZTogZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAg
ICAgWi5mbHVzaEN1c3RvbVN0eWxlcygpOwogICAgICAgICAgICBaLnN0eWxlU3VidHJlZShhLCBi
KQogICAgICAgIH0sIHN0eWxlRWxlbWVudDogZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgWi5m
bHVzaEN1c3RvbVN0eWxlcygpOwogICAgICAgICAgICBaLnN0eWxlRWxlbWVudChhKQogICAgICAg
IH0sIHN0eWxlRG9jdW1lbnQ6IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIFouZmx1c2hDdXN0
b21TdHlsZXMoKTsKICAgICAgICAgICAgWi5zdHlsZURvY3VtZW50KGEpCiAgICAgICAgfSwgZmx1
c2hDdXN0b21TdHlsZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgWi5mbHVzaEN1c3RvbVN0
eWxlcygpCiAgICAgICAgfSwKICAgICAgICBnZXRDb21wdXRlZFN0eWxlVmFsdWU6IGZ1bmN0aW9u
IChhLCBiKSB7CiAgICAgICAgICAgIHJldHVybiBaLmdldENvbXB1dGVkU3R5bGVWYWx1ZShhLCBi
KQogICAgICAgIH0sIG5hdGl2ZUNzczogUSwgbmF0aXZlU2hhZG93OiBPLCBjc3NCdWlsZDogUWUs
IGRpc2FibGVSdW50aW1lOiBQZQogICAgfTsKICAgIEpnICYmICh3aW5kb3cuU2hhZHlDU1MuQXBw
bHlTaGltID0gSmcpOwogICAgS2cgJiYgKHdpbmRvdy5TaGFkeUNTUy5DdXN0b21TdHlsZUludGVy
ZmFjZSA9IEtnKTsKICAgIHZhciBMZyA9IHdpbmRvdy5jdXN0b21FbGVtZW50cywgTWcgPSB3aW5k
b3cuSFRNTEltcG9ydHMsIE5nID0gd2luZG93LkhUTUxUZW1wbGF0ZUVsZW1lbnQ7CiAgICB3aW5k
b3cuV2ViQ29tcG9uZW50cyA9IHdpbmRvdy5XZWJDb21wb25lbnRzIHx8IHt9OwogICAgaWYgKExn
ICYmIExnLnBvbHlmaWxsV3JhcEZsdXNoQ2FsbGJhY2spIHsKICAgICAgICB2YXIgT2csIFBnID0g
ZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoT2cpIHsKICAgICAgICAgICAgICAgIE5nLkMg
JiYgTmcuQyh3aW5kb3cuZG9jdW1lbnQpOwogICAgICAgICAgICAgICAgdmFyIGEgPSBPZzsKICAg
ICAgICAgICAgICAgIE9nID0gbnVsbDsKICAgICAgICAgICAgICAgIGEoKTsKICAgICAgICAgICAg
ICAgIHJldHVybiAhMAogICAgICAgICAgICB9CiAgICAgICAgfSwgUWcgPSBNZy53aGVuUmVhZHk7
CiAgICAgICAgTGcucG9seWZpbGxXcmFwRmx1c2hDYWxsYmFjayhmdW5jdGlvbiAoYSkgewogICAg
ICAgICAgICBPZyA9IGE7CiAgICAgICAgICAgIFFnKFBnKQogICAgICAgIH0pOwogICAgICAgIE1n
LndoZW5SZWFkeSA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIFFnKGZ1bmN0aW9uICgpIHsK
ICAgICAgICAgICAgICAgIFBnKCkgPyBNZy53aGVuUmVhZHkoYSkgOiBhKCkKICAgICAgICAgICAg
fSkKICAgICAgICB9CiAgICB9CiAgICBNZy53aGVuUmVhZHkoZnVuY3Rpb24gKCkgewogICAgICAg
IHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHdpbmRvdy5X
ZWJDb21wb25lbnRzLnJlYWR5ID0gITA7CiAgICAgICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZl
bnQobmV3IEN1c3RvbUV2ZW50KCJXZWJDb21wb25lbnRzUmVhZHkiLCB7YnViYmxlczogITB9KSkK
ICAgICAgICB9KQogICAgfSk7CiAgICB2YXIgUmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJz
dHlsZSIpOwogICAgUmcudGV4dENvbnRlbnQgPSAiYm9keSB7dHJhbnNpdGlvbjogb3BhY2l0eSBl
YXNlLWluIDAuMnM7IH0gXG5ib2R5W3VucmVzb2x2ZWRdIHtvcGFjaXR5OiAwOyBkaXNwbGF5OiBi
bG9jazsgb3ZlcmZsb3c6IGhpZGRlbjsgcG9zaXRpb246IHJlbGF0aXZlOyB9IFxuIjsKICAgIHZh
ciBTZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoImhlYWQiKTsKICAgIFNnLmluc2VydEJlZm9y
ZShSZywgU2cuZmlyc3RDaGlsZCk7Cn0pLmNhbGwodGhpcyk7CgovLyMgc291cmNlTWFwcGluZ1VS
TD13ZWJjb21wb25lbnRzLWxpdGUuanMubWFwCg==</Default>
</Parameter>

<Parameter name="Frag3">
<Default>ICAgICAgICAgICAgICAgICAgcmV0dXJuIGMKICAgICAgICAgICAgICAgIH0KICAgICAgICB9CiAg
ICAgICAgaWYgKGMgfHwgbWIpIHsKICAgICAgICAgICAgYS5hID0gZnVuY3Rpb24gKGEsIGIpIHsK
ICAgICAgICAgICAgICAgIHZhciBjID0gZi5jYWxsKGEsICExKTsKICAgICAgICAgICAgICAgIHRo
aXMuRyAmJiB0aGlzLkcoYyk7CiAgICAgICAgICAgICAgICBiICYmIChsLmNhbGwoYy5jb250ZW50
LCBmLmNhbGwoYS5jb250ZW50LCAhMCkpLCBvYihjLmNvbnRlbnQsIGEuY29udGVudCkpOwogICAg
ICAgICAgICAgICAgcmV0dXJuIGMKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdmFyIG9iID0g
ZnVuY3Rpb24gKGMsIGQpIHsKICAgICAgICAgICAgICAgIGlmIChkLnF1ZXJ5U2VsZWN0b3JBbGwg
JiYgKGQgPSBiKGQsICJ0ZW1wbGF0ZSIpLCAwICE9PSBkLmxlbmd0aCkpIHsKICAgICAgICAgICAg
ICAgICAgICBjID0gYihjLCAidGVtcGxhdGUiKTsKICAgICAgICAgICAgICAgICAgICBmb3IgKHZh
ciBlID0gMCwgZiA9IGMubGVuZ3RoLCBnLCBoOyBlIDwgZjsgZSsrKSBoID0gZFtlXSwgZyA9IGNb
ZV0sIGEgJiYgYS5HICYmIGEuRyhoKSwgbS5jYWxsKGcucGFyZW50Tm9kZSwgWWUuY2FsbChoLCAh
MCksIGcpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIFllID0gTm9kZS5wcm90b3R5
cGUuY2xvbmVOb2RlID0KICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAg
ICAgICAgICAgaWYgKCFlICYmIGQgJiYgdGhpcyBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnQp
IGlmIChiKSB2YXIgYyA9IFplLmNhbGwodGhpcy5vd25lckRvY3VtZW50LCB0aGlzLCAhMCk7IGVs
c2UgcmV0dXJuIHRoaXMub3duZXJEb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7IGVs
c2UgdGhpcy5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUgJiYgInRlbXBsYXRlIiA9PT0g
dGhpcy5sb2NhbE5hbWUgJiYgdGhpcy5uYW1lc3BhY2VVUkkgPT0gZG9jdW1lbnQuZG9jdW1lbnRF
bGVtZW50Lm5hbWVzcGFjZVVSSSA/IGMgPSBhLmEodGhpcywgYikgOiBjID0gZi5jYWxsKHRoaXMs
IGIpOwogICAgICAgICAgICAgICAgICAgIGIgJiYgb2IoYywgdGhpcyk7CiAgICAgICAgICAgICAg
ICAgICAgcmV0dXJuIGMKICAgICAgICAgICAgICAgIH0sIFplID0gRG9jdW1lbnQucHJvdG90eXBl
LmltcG9ydE5vZGUgPSBmdW5jdGlvbiAoYywgZCkgewogICAgICAgICAgICAgICAgZCA9IGQgfHwg
ITE7CiAgICAgICAgICAgICAgICBpZiAoInRlbXBsYXRlIiA9PT0gYy5sb2NhbE5hbWUpIHJldHVy
biBhLmEoYywgZCk7CiAgICAgICAgICAgICAgICB2YXIgZSA9IGguY2FsbCh0aGlzLCBjLCBkKTsK
ICAgICAgICAgICAgICAgIGlmIChkKSB7CiAgICAgICAgICAgICAgICAgICAgb2IoZSwgYyk7CiAg
ICAgICAgICAgICAgICAgICAgYyA9IGIoZSwgJ3NjcmlwdDpub3QoW3R5cGVdKSxzY3JpcHRbdHlw
ZT0iYXBwbGljYXRpb24vamF2YXNjcmlwdCJdLHNjcmlwdFt0eXBlPSJ0ZXh0L2phdmFzY3JpcHQi
XScpOwogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGYsIGsgPSAwOyBrIDwgYy5sZW5ndGg7
IGsrKykgewogICAgICAgICAgICAgICAgICAgICAgICBmID0gY1trXTsKICAgICAgICAgICAgICAg
ICAgICAgICAgZCA9IGcuY2FsbChkb2N1bWVudCwgInNjcmlwdCIpOwogICAgICAgICAgICAgICAg
ICAgICAgICBkLnRleHRDb250ZW50ID0gZi50ZXh0Q29udGVudDsKICAgICAgICAgICAgICAgICAg
ICAgICAgZm9yICh2YXIgbCA9IGYuYXR0cmlidXRlcywgUCA9IDAsIFc7IFAgPCBsLmxlbmd0aDsg
UCsrKSBXID0gbFtQXSwgZC5zZXRBdHRyaWJ1dGUoVy5uYW1lLCBXLnZhbHVlKTsKICAgICAgICAg
ICAgICAgICAgICAgICAgbS5jYWxsKGYucGFyZW50Tm9kZSwgZCwgZikKICAgICAgICAgICAgICAg
ICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gZQogICAgICAg
ICAgICB9CiAgICAgICAgfQogICAgICAgIGMgJiYgKHdpbmRvdy5IVE1MVGVtcGxhdGVFbGVtZW50
ID0gYSkKICAgIH0pKCk7CiAgICB2YXIga2EgPSBzZXRUaW1lb3V0OwoKICAgIGZ1bmN0aW9uIGxh
KCkgewogICAgfQoKICAgIGZ1bmN0aW9uIG1hKGEsIGIpIHsKICAgICAgICByZXR1cm4gZnVuY3Rp
b24gKCkgewogICAgICAgICAgICBhLmFwcGx5KGIsIGFyZ3VtZW50cykKICAgICAgICB9CiAgICB9
CgogICAgZnVuY3Rpb24gcihhKSB7CiAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIHIpKSB0
aHJvdyBuZXcgVHlwZUVycm9yKCJQcm9taXNlcyBtdXN0IGJlIGNvbnN0cnVjdGVkIHZpYSBuZXci
KTsKICAgICAgICBpZiAoImZ1bmN0aW9uIiAhPT0gdHlwZW9mIGEpIHRocm93IG5ldyBUeXBlRXJy
b3IoIm5vdCBhIGZ1bmN0aW9uIik7CiAgICAgICAgdGhpcy51ID0gMDsKICAgICAgICB0aGlzLm1h
ID0gITE7CiAgICAgICAgdGhpcy5oID0gdm9pZCAwOwogICAgICAgIHRoaXMuSSA9IFtdOwogICAg
ICAgIG5hKGEsIHRoaXMpCiAgICB9CgogICAgZnVuY3Rpb24gb2EoYSwgYikgewogICAgICAgIGZv
ciAoOyAzID09PSBhLnU7KSBhID0gYS5oOwogICAgICAgIDAgPT09IGEudSA/IGEuSS5wdXNoKGIp
IDogKGEubWEgPSAhMCwgcGEoZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgYyA9IDEgPT09
IGEudSA/IGIuTmEgOiBiLk9hOwogICAgICAgICAgICBpZiAobnVsbCA9PT0gYykgKDEgPT09IGEu
dSA/IHFhIDogcmEpKGIuZ2EsIGEuaCk7IGVsc2UgewogICAgICAgICAgICAgICAgdHJ5IHsKICAg
ICAgICAgICAgICAgICAgICB2YXIgZCA9IGMoYS5oKQogICAgICAgICAgICAgICAgfSBjYXRjaCAo
ZSkgewogICAgICAgICAgICAgICAgICAgIHJhKGIuZ2EsIGUpOwogICAgICAgICAgICAgICAgICAg
IHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcWEoYi5nYSwgZCkKICAg
ICAgICAgICAgfQogICAgICAgIH0pKQogICAgfQoKICAgIGZ1bmN0aW9uIHFhKGEsIGIpIHsKICAg
ICAgICB0cnkgewogICAgICAgICAgICBpZiAoYiA9PT0gYSkgdGhyb3cgbmV3IFR5cGVFcnJvcigi
QSBwcm9taXNlIGNhbm5vdCBiZSByZXNvbHZlZCB3aXRoIGl0c2VsZi4iKTsKICAgICAgICAgICAg
aWYgKGIgJiYgKCJvYmplY3QiID09PSB0eXBlb2YgYiB8fCAiZnVuY3Rpb24iID09PSB0eXBlb2Yg
YikpIHsKICAgICAgICAgICAgICAgIHZhciBjID0gYi50aGVuOwogICAgICAgICAgICAgICAgaWYg
KGIgaW5zdGFuY2VvZiByKSB7CiAgICAgICAgICAgICAgICAgICAgYS51ID0gMzsKICAgICAgICAg
ICAgICAgICAgICBhLmggPSBiOwogICAgICAgICAgICAgICAgICAgIHNhKGEpOwogICAgICAgICAg
ICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKCJm
dW5jdGlvbiIgPT09IHR5cGVvZiBjKSB7CiAgICAgICAgICAgICAgICAgICAgbmEobWEoYywgYiks
IGEpOwogICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAg
ICAgICB9CiAgICAgICAgICAgIGEudSA9IDE7CiAgICAgICAgICAgIGEuaCA9IGI7CiAgICAgICAg
ICAgIHNhKGEpCiAgICAgICAgfSBjYXRjaCAoZCkgewogICAgICAgICAgICByYShhLCBkKQogICAg
ICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiByYShhLCBiKSB7CiAgICAgICAgYS51ID0gMjsKICAg
ICAgICBhLmggPSBiOwogICAgICAgIHNhKGEpCiAgICB9CgogICAgZnVuY3Rpb24gc2EoYSkgewog
ICAgICAgIDIgPT09IGEudSAmJiAwID09PSBhLkkubGVuZ3RoICYmIHBhKGZ1bmN0aW9uICgpIHsK
ICAgICAgICAgICAgYS5tYSB8fCAidW5kZWZpbmVkIiAhPT0gdHlwZW9mIGNvbnNvbGUgJiYgY29u
c29sZSAmJiBjb25zb2xlLndhcm4oIlBvc3NpYmxlIFVuaGFuZGxlZCBQcm9taXNlIFJlamVjdGlv
bjoiLCBhLmgpCiAgICAgICAgfSk7CiAgICAgICAgZm9yICh2YXIgYiA9IDAsIGMgPSBhLkkubGVu
Z3RoOyBiIDwgYzsgYisrKSBvYShhLCBhLklbYl0pOwogICAgICAgIGEuSSA9IG51bGwKICAgIH0K
CiAgICBmdW5jdGlvbiB0YShhLCBiLCBjKSB7CiAgICAgICAgdGhpcy5OYSA9ICJmdW5jdGlvbiIg
PT09IHR5cGVvZiBhID8gYSA6IG51bGw7CiAgICAgICAgdGhpcy5PYSA9ICJmdW5jdGlvbiIgPT09
IHR5cGVvZiBiID8gYiA6IG51bGw7CiAgICAgICAgdGhpcy5nYSA9IGMKICAgIH0KCiAgICBmdW5j
dGlvbiBuYShhLCBiKSB7CiAgICAgICAgdmFyIGMgPSAhMTsKICAgICAgICB0cnkgewogICAgICAg
ICAgICBhKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgICBjIHx8IChjID0gITAsIHFhKGIs
IGEpKQogICAgICAgICAgICB9LCBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICAgICAgYyB8fCAo
YyA9ICEwLCByYShiLCBhKSkKICAgICAgICAgICAgfSkKICAgICAgICB9IGNhdGNoIChkKSB7CiAg
ICAgICAgICAgIGMgfHwgKGMgPSAhMCwgcmEoYiwgZCkpCiAgICAgICAgfQogICAgfQoKICAgIHIu
cHJvdG90eXBlWyJjYXRjaCJdID0gZnVuY3Rpb24gKGEpIHsKICAgICAgICByZXR1cm4gdGhpcy50
aGVuKG51bGwsIGEpCiAgICB9OwogICAgci5wcm90b3R5cGUudGhlbiA9IGZ1bmN0aW9uIChhLCBi
KSB7CiAgICAgICAgdmFyIGMgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihsYSk7CiAgICAgICAgb2Eo
dGhpcywgbmV3IHRhKGEsIGIsIGMpKTsKICAgICAgICByZXR1cm4gYwogICAgfTsKICAgIHIucHJv
dG90eXBlWyJmaW5hbGx5Il0gPSBmdW5jdGlvbiAoYSkgewogICAgICAgIHZhciBiID0gdGhpcy5j
b25zdHJ1Y3RvcjsKICAgICAgICByZXR1cm4gdGhpcy50aGVuKGZ1bmN0aW9uIChjKSB7CiAgICAg
ICAgICAgIHJldHVybiBiLnJlc29sdmUoYSgpKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAg
ICAgICAgIHJldHVybiBjCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwgZnVuY3Rpb24gKGMpIHsK
ICAgICAgICAgICAgcmV0dXJuIGIucmVzb2x2ZShhKCkpLnRoZW4oZnVuY3Rpb24gKCkgewogICAg
ICAgICAgICAgICAgcmV0dXJuIGIucmVqZWN0KGMpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSkK
ICAgIH07CgogICAgZnVuY3Rpb24gd2EoYSkgewogICAgICAgIHJldHVybiBuZXcgcihmdW5jdGlv
biAoYiwgYykgewogICAgICAgICAgICBmdW5jdGlvbiBkKGEsIGcpIHsKICAgICAgICAgICAgICAg
IHRyeSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGcgJiYgKCJvYmplY3QiID09PSB0eXBlb2Yg
ZyB8fCAiZnVuY3Rpb24iID09PSB0eXBlb2YgZykpIHsKICAgICAgICAgICAgICAgICAgICAgICAg
dmFyIGggPSBnLnRoZW47CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgiZnVuY3Rpb24iID09
PSB0eXBlb2YgaCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaC5jYWxsKGcsIGZ1bmN0
aW9uIChiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZChhLCBiKQogICAgICAg
ICAgICAgICAgICAgICAgICAgICAgfSwgYyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBy
ZXR1cm4KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAg
ICAgICAgICAgICAgICAgICBlW2FdID0gZzsKICAgICAgICAgICAgICAgICAgICAwID09PSAtLWYg
JiYgYihlKQogICAgICAgICAgICAgICAgfSBjYXRjaCAobSkgewogICAgICAgICAgICAgICAgICAg
IGMobSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCFh
IHx8ICJ1bmRlZmluZWQiID09PSB0eXBlb2YgYS5sZW5ndGgpIHRocm93IG5ldyBUeXBlRXJyb3Io
IlByb21pc2UuYWxsIGFjY2VwdHMgYW4gYXJyYXkiKTsKICAgICAgICAgICAgdmFyIGUgPSBBcnJh
eS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTsKICAgICAgICAgICAgaWYgKDAgPT09IGUubGVuZ3Ro
KSByZXR1cm4gYihbXSk7CiAgICAgICAgICAgIGZvciAodmFyIGYgPSBlLmxlbmd0aCwgZyA9IDA7
IGcgPCBlLmxlbmd0aDsgZysrKSBkKGcsIGVbZ10pCiAgICAgICAgfSkKICAgIH0KCiAgICBmdW5j
dGlvbiB4YShhKSB7CiAgICAgICAgcmV0dXJuIGEgJiYgIm9iamVjdCIgPT09IHR5cGVvZiBhICYm
IGEuY29uc3RydWN0b3IgPT09IHIgPyBhIDogbmV3IHIoZnVuY3Rpb24gKGIpIHsKICAgICAgICAg
ICAgYihhKQogICAgICAgIH0pCiAgICB9CgogICAgZnVuY3Rpb24geWEoYSkgewogICAgICAgIHJl
dHVybiBuZXcgcihmdW5jdGlvbiAoYiwgYykgewogICAgICAgICAgICBjKGEpCiAgICAgICAgfSkK
ICAgIH0KCiAgICBmdW5jdGlvbiB6YShhKSB7CiAgICAgICAgcmV0dXJuIG5ldyByKGZ1bmN0aW9u
IChiLCBjKSB7CiAgICAgICAgICAgIGZvciAodmFyIGQgPSAwLCBlID0gYS5sZW5ndGg7IGQgPCBl
OyBkKyspIGFbZF0udGhlbihiLCBjKQogICAgICAgIH0pCiAgICB9CgogICAgdmFyIHBhID0gImZ1
bmN0aW9uIiA9PT0gdHlwZW9mIHNldEltbWVkaWF0ZSAmJiBmdW5jdGlvbiAoYSkgewogICAgICAg
IHNldEltbWVkaWF0ZShhKQogICAgfSB8fCBmdW5jdGlvbiAoYSkgewogICAgICAgIGthKGEsIDAp
CiAgICB9Oy8qCgpDb3B5cmlnaHQgKGMpIDIwMTcgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3Jz
LiBBbGwgcmlnaHRzIHJlc2VydmVkLgpUaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0
aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0xJ
Q0VOU0UudHh0ClRoZSBjb21wbGV0ZSBzZXQgb2YgYXV0aG9ycyBtYXkgYmUgZm91bmQgYXQgaHR0
cDovL3BvbHltZXIuZ2l0aHViLmlvL0FVVEhPUlMudHh0ClRoZSBjb21wbGV0ZSBzZXQgb2YgY29u
dHJpYnV0b3JzIG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQ09OVFJJ
QlVUT1JTLnR4dApDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhcyBwYXJ0IG9mIHRoZSBwb2x5
bWVyIHByb2plY3QgaXMgYWxzbwpzdWJqZWN0IHRvIGFuIGFkZGl0aW9uYWwgSVAgcmlnaHRzIGdy
YW50IGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9QQVRFTlRTLnR4dAoqLwogICAg
aWYgKCF3aW5kb3cuUHJvbWlzZSkgewogICAgICAgIHdpbmRvdy5Qcm9taXNlID0gcjsKICAgICAg
ICByLnByb3RvdHlwZS50aGVuID0gci5wcm90b3R5cGUudGhlbjsKICAgICAgICByLmFsbCA9IHdh
OwogICAgICAgIHIucmFjZSA9IHphOwogICAgICAgIHIucmVzb2x2ZSA9IHhhOwogICAgICAgIHIu
cmVqZWN0ID0geWE7CiAgICAgICAgdmFyIEFhID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIp
LCBCYSA9IFtdOwogICAgICAgIChuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAoKSB7CiAg
ICAgICAgICAgIGZvciAodmFyIGEgPSBCYS5sZW5ndGgsIGIgPSAwOyBiIDwgYTsgYisrKSBCYVti
XSgpOwogICAgICAgICAgICBCYS5zcGxpY2UoMCwgYSkKICAgICAgICB9KSkub2JzZXJ2ZShBYSwg
e2NoYXJhY3RlckRhdGE6ICEwfSk7CiAgICAgICAgcGEgPSBmdW5jdGlvbiAoYSkgewogICAgICAg
ICAgICBCYS5wdXNoKGEpOwogICAgICAgICAgICBBYS50ZXh0Q29udGVudCA9IDAgPCBBYS50ZXh0
Q29udGVudC5sZW5ndGggPyAiIiA6ICJhIgogICAgICAgIH0KICAgIH0KICAgIDsoZnVuY3Rpb24g
KGEpIHsKICAgICAgICBmdW5jdGlvbiBiKGEsIGIpIHsKICAgICAgICAgICAgaWYgKCJmdW5jdGlv
biIgPT09IHR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQpIHJldHVybiBuZXcgQ3VzdG9tRXZlbnQo
YSwgYik7CiAgICAgICAgICAgIHZhciBjID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkN1c3RvbUV2
ZW50Iik7CiAgICAgICAgICAgIGMuaW5pdEN1c3RvbUV2ZW50KGEsICEhYi5idWJibGVzLCAhIWIu
Y2FuY2VsYWJsZSwgYi5kZXRhaWwpOwogICAgICAgICAgICByZXR1cm4gYwogICAgICAgIH0KCiAg
ICAgICAgZnVuY3Rpb24gYyhhKSB7CiAgICAgICAgICAgIGlmIChNKSByZXR1cm4gYS5vd25lckRv
Y3VtZW50ICE9PSBkb2N1bWVudCA=</Default>
</Parameter>

<Parameter name="Frag4">
<Default>PyBhLm93bmVyRG9jdW1lbnQgOiBudWxsOwogICAgICAgICAgICB2YXIgYiA9IGEuX19pbXBvcnRE
b2M7CiAgICAgICAgICAgIGlmICghYiAmJiBhLnBhcmVudE5vZGUpIHsKICAgICAgICAgICAgICAg
IGIgPSBhLnBhcmVudE5vZGU7CiAgICAgICAgICAgICAgICBpZiAoImZ1bmN0aW9uIiA9PT0gdHlw
ZW9mIGIuY2xvc2VzdCkgYiA9IGIuY2xvc2VzdCgibGlua1tyZWw9aW1wb3J0XSIpOyBlbHNlIGZv
ciAoOyAhaChiKSAmJiAoYiA9IGIucGFyZW50Tm9kZSk7KSA7CiAgICAgICAgICAgICAgICBhLl9f
aW1wb3J0RG9jID0gYgogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBiCiAgICAgICAg
fQoKICAgICAgICBmdW5jdGlvbiBkKGEpIHsKICAgICAgICAgICAgdmFyIGIgPSBtKGRvY3VtZW50
LCAibGlua1tyZWw9aW1wb3J0XTpub3QoW2ltcG9ydC1kZXBlbmRlbmN5XSkiKSwKICAgICAgICAg
ICAgICAgIGMgPSBiLmxlbmd0aDsKICAgICAgICAgICAgYyA/IHEoYiwgZnVuY3Rpb24gKGIpIHsK
ICAgICAgICAgICAgICAgIHJldHVybiBnKGIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAg
ICAgICAwID09PSAtLWMgJiYgYSgpCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KSA6
IGEoKQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gZShhKSB7CiAgICAgICAgICAgIGZ1bmN0
aW9uIGIoKSB7CiAgICAgICAgICAgICAgICAibG9hZGluZyIgIT09IGRvY3VtZW50LnJlYWR5U3Rh
dGUgJiYgZG9jdW1lbnQuYm9keSAmJiAoZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVh
ZHlzdGF0ZWNoYW5nZSIsIGIpLCBhKCkpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGRvY3Vt
ZW50LmFkZEV2ZW50TGlzdGVuZXIoInJlYWR5c3RhdGVjaGFuZ2UiLCBiKTsKICAgICAgICAgICAg
YigpCiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBmKGEpIHsKICAgICAgICAgICAgZShmdW5j
dGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZChmdW5jdGlvbiAoKSB7CiAgICAgICAg
ICAgICAgICAgICAgcmV0dXJuIGEgJiYgYSgpCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAg
ICB9KQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gZyhhLCBiKSB7CiAgICAgICAgICAgIGlm
IChhLl9fbG9hZGVkKSBiICYmIGIoKTsgZWxzZSBpZiAoInNjcmlwdCIgPT09IGEubG9jYWxOYW1l
ICYmICFhLnNyYyB8fCAic3R5bGUiID09PSBhLmxvY2FsTmFtZSAmJiAhYS5maXJzdENoaWxkKSBh
Ll9fbG9hZGVkID0gITAsIGIgJiYgYigpOyBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciBjID0g
ZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgICBhLnJlbW92ZUV2ZW50TGlzdGVuZXIo
ZC50eXBlLAogICAgICAgICAgICAgICAgICAgICAgICBjKTsKICAgICAgICAgICAgICAgICAgICBh
Ll9fbG9hZGVkID0gITA7CiAgICAgICAgICAgICAgICAgICAgYiAmJiBiKCkKICAgICAgICAgICAg
ICAgIH07CiAgICAgICAgICAgICAgICBhLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLCBjKTsKICAg
ICAgICAgICAgICAgIGhhICYmICJzdHlsZSIgPT09IGEubG9jYWxOYW1lIHx8IGEuYWRkRXZlbnRM
aXN0ZW5lcigiZXJyb3IiLCBjKQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBmdW5j
dGlvbiBoKGEpIHsKICAgICAgICAgICAgcmV0dXJuIGEubm9kZVR5cGUgPT09IE5vZGUuRUxFTUVO
VF9OT0RFICYmICJsaW5rIiA9PT0gYS5sb2NhbE5hbWUgJiYgImltcG9ydCIgPT09IGEucmVsCiAg
ICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBrKCkgewogICAgICAgICAgICB2YXIgYSA9IHRoaXM7
CiAgICAgICAgICAgIHRoaXMuYSA9IHt9OwogICAgICAgICAgICB0aGlzLmIgPSAwOwogICAgICAg
ICAgICB0aGlzLmMgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAoYikgewogICAgICAg
ICAgICAgICAgcmV0dXJuIGEuSmEoYikKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMu
Yy5vYnNlcnZlKGRvY3VtZW50LmhlYWQsIHtjaGlsZExpc3Q6ICEwLCBzdWJ0cmVlOiAhMH0pOwog
ICAgICAgICAgICB0aGlzLmxvYWRJbXBvcnRzKGRvY3VtZW50KQogICAgICAgIH0KCiAgICAgICAg
ZnVuY3Rpb24gbChhKSB7CiAgICAgICAgICAgIHEobShhLCAidGVtcGxhdGUiKSwgZnVuY3Rpb24g
KGEpIHsKICAgICAgICAgICAgICAgIHEobShhLmNvbnRlbnQsICdzY3JpcHQ6bm90KFt0eXBlXSks
c2NyaXB0W3R5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiXSxzY3JpcHRbdHlwZT0idGV4dC9q
YXZhc2NyaXB0Il0sc2NyaXB0W3R5cGU9Im1vZHVsZSJdJyksCiAgICAgICAgICAgICAgICAgICAg
ZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGIgPSBkb2N1bWVudC5j
cmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgICAgICAgICAgICAgICAgICAgICAgcShhLmF0dHJp
YnV0ZXMsIGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4g
Yi5zZXRBdHRyaWJ1dGUoYS5uYW1lLCBhLnZhbHVlKQogICAgICAgICAgICAgICAgICAgICAgICB9
KTsKICAgICAgICAgICAgICAgICAgICAgICAgYi50ZXh0Q29udGVudCA9IGEudGV4dENvbnRlbnQ7
CiAgICAgICAgICAgICAgICAgICAgICAgIGEucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoYiwgYSkK
ICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGwoYS5jb250ZW50KQogICAg
ICAgICAgICB9KQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gbShhLCBiKSB7CiAgICAgICAg
ICAgIHJldHVybiBhLmNoaWxkTm9kZXMubGVuZ3RoID8gYS5xdWVyeVNlbGVjdG9yQWxsKGIpIDog
VQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gcShhLCBiLCBjKSB7CiAgICAgICAgICAgIHZh
ciBkID0gYSA/IGEubGVuZ3RoIDogMCwgZSA9IGMgPyAtMSA6IDE7CiAgICAgICAgICAgIGZvciAo
YyA9IGMgPyBkIC0gMSA6IDA7IGMgPCBkICYmIDAgPD0gYzsgYyArPSBlKSBiKGFbY10sIGMpCiAg
ICAgICAgfQoKICAgICAgICB2YXIgeCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpbmsiKSwg
TSA9ICJpbXBvcnQiIGluIHgsIFUgPSB4LnF1ZXJ5U2VsZWN0b3JBbGwoIioiKSwgdWEgPSBudWxs
OwogICAgICAgICExID09PSAiY3VycmVudFNjcmlwdCIgaW4gZG9jdW1lbnQgJiYgT2JqZWN0LmRl
ZmluZVByb3BlcnR5KGRvY3VtZW50LCAiY3VycmVudFNjcmlwdCIsCiAgICAgICAgICAgIHsKICAg
ICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIHJldHVy
biB1YSB8fCAoImNvbXBsZXRlIiAhPT0gZG9jdW1lbnQucmVhZHlTdGF0ZSA/IGRvY3VtZW50LnNj
cmlwdHNbZG9jdW1lbnQuc2NyaXB0cy5sZW5ndGggLSAxXSA6IG51bGwpCiAgICAgICAgICAgICAg
ICB9LCBjb25maWd1cmFibGU6ICEwCiAgICAgICAgICAgIH0pOwogICAgICAgIHZhciBsYiA9IC8o
dXJsXCgpKFteKV0qKShcKSkvZywgbWIgPSAvKEBpbXBvcnRbXHNdKyg/IXVybFwoKSkoW147XSop
KDspL2csCiAgICAgICAgICAgIFMgPSAvKDxsaW5rW14+XSopKHJlbD1bJ3wiXT9zdHlsZXNoZWV0
Wyd8Il0/W14+XSo+KS9nLCBDID0gewogICAgICAgICAgICAgICAgRWE6IGZ1bmN0aW9uIChhLCBi
KSB7CiAgICAgICAgICAgICAgICAgICAgYS5ocmVmICYmIGEuc2V0QXR0cmlidXRlKCJocmVmIiwg
Qy5YKGEuZ2V0QXR0cmlidXRlKCJocmVmIiksIGIpKTsKICAgICAgICAgICAgICAgICAgICBhLnNy
YyAmJiBhLnNldEF0dHJpYnV0ZSgic3JjIiwgQy5YKGEuZ2V0QXR0cmlidXRlKCJzcmMiKSwgYikp
OwogICAgICAgICAgICAgICAgICAgIGlmICgic3R5bGUiID09PSBhLmxvY2FsTmFtZSkgewogICAg
ICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IEMucWEoYS50ZXh0Q29udGVudCwgYiwgbGIpOwog
ICAgICAgICAgICAgICAgICAgICAgICBhLnRleHRDb250ZW50ID0gQy5xYShjLCBiLCBtYikKICAg
ICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LCBxYTogZnVuY3Rpb24gKGEsIGIs
IGMpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5yZXBsYWNlKGMsCiAgICAgICAgICAg
ICAgICAgICAgICAgIGZ1bmN0aW9uIChhLCBjLCBkLCBlKSB7CiAgICAgICAgICAgICAgICAgICAg
ICAgICAgICBhID0gZC5yZXBsYWNlKC9bIiddL2csICIiKTsKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIGIgJiYgKGEgPSBDLlgoYSwgYikpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAg
cmV0dXJuIGMgKyAiJyIgKyBhICsgIiciICsgZQogICAgICAgICAgICAgICAgICAgICAgICB9KQog
ICAgICAgICAgICAgICAgfSwgWDogZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgICAgICAgICAg
ICBpZiAodm9pZCAwID09PSBDLmFhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIEMuYWEgPSAh
MTsKICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIHZhciBjID0gbmV3IFVSTCgiYiIsICJodHRwOi8vYSIpOwogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgYy5wYXRobmFtZSA9ICJjJTIwZCI7CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICBDLmFhID0gImh0dHA6Ly9hL2MlMjBkIiA9PT0gYy5ocmVmCiAgICAgICAgICAgICAgICAgICAg
ICAgIH0gY2F0Y2ggKHljKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAg
ICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgaWYgKEMuYWEpIHJldHVybiAobmV3IFVSTChh
LCBiKSkuaHJlZjsKICAgICAgICAgICAgICAgICAgICBjID0gQy54YTsKICAgICAgICAgICAgICAg
ICAgICBjIHx8IChjID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50
KCJ0ZW1wIiksIEMueGEgPSBjLCBjLmphID0gYy5jcmVhdGVFbGVtZW50KCJiYXNlIiksIGMuaGVh
ZC5hcHBlbmRDaGlsZChjLmphKSwgYy5pYSA9IGMuY3JlYXRlRWxlbWVudCgiYSIpKTsKICAgICAg
ICAgICAgICAgICAgICBjLmphLmhyZWYgPSBiOwogICAgICAgICAgICAgICAgICAgIGMuaWEuaHJl
ZiA9IGE7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGMuaWEuaHJlZiB8fCBhCiAgICAgICAg
ICAgICAgICB9CiAgICAgICAgICAgIH0sIFYgPSB7CiAgICAgICAgICAgICAgICBhc3luYzogITAs
IGxvYWQ6IGZ1bmN0aW9uIChhLCBiLCBjKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGEpIGlm
IChhLm1hdGNoKC9eZGF0YTovKSkgewogICAgICAgICAgICAgICAgICAgICAgICBhID0KICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIGEuc3BsaXQoIiwiKTsKICAgICAgICAgICAgICAgICAgICAg
ICAgdmFyIGQgPSBhWzFdOwogICAgICAgICAgICAgICAgICAgICAgICBkID0gLTEgPCBhWzBdLmlu
ZGV4T2YoIjtiYXNlNjQiKSA/IGF0b2IoZCkgOiBkZWNvZGVVUklDb21wb25lbnQoZCk7CiAgICAg
ICAgICAgICAgICAgICAgICAgIGIoZCkKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAg
ICAgICAgICAgICAgICAgICAgICB2YXIgZSA9IG5ldyBYTUxIdHRwUmVxdWVzdDsKICAgICAgICAg
ICAgICAgICAgICAgICAgZS5vcGVuKCJHRVQiLCBhLCBWLmFzeW5jKTsKICAgICAgICAgICAgICAg
ICAgICAgICAgZS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICB2YXIgYSA9IGUucmVzcG9uc2VVUkwgfHwgZS5nZXRSZXNwb25zZUhlYWRlcigiTG9jYXRp
b24iKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgJiYgMCA9PT0gYS5pbmRleE9mKCIv
IikgJiYgKGEgPSAobG9jYXRpb24ub3JpZ2luIHx8IGxvY2F0aW9uLnByb3RvY29sICsgIi8vIiAr
IGxvY2F0aW9uLmhvc3QpICsgYSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZCA9
IGUucmVzcG9uc2UgfHwgZS5yZXNwb25zZVRleHQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAzMDQgPT09IGUuc3RhdHVzIHx8IDAgPT09IGUuc3RhdHVzIHx8IDIwMCA8PSBlLnN0YXR1cyAm
JiAzMDAgPiBlLnN0YXR1cyA/IGIoZCwgYSkgOiBjKGQpCiAgICAgICAgICAgICAgICAgICAgICAg
IH07CiAgICAgICAgICAgICAgICAgICAgICAgIGUuc2VuZCgpCiAgICAgICAgICAgICAgICAgICAg
fSBlbHNlIGMoImVycm9yOiBocmVmIG11c3QgYmUgc3BlY2lmaWVkIikKICAgICAgICAgICAgICAg
IH0KICAgICAgICAgICAgfSwgaGEgPSAvVHJpZGVudC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50
KSB8fCAvRWRnZVwvXGQuL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTsKICAgICAgICBrLnBy
b3RvdHlwZS5sb2FkSW1wb3J0cyA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIHZhciBiID0g
dGhpczsKICAgICAgICAgICAgYSA9IG0oYSwgImxpbmtbcmVsPWltcG9ydF0iKTsKICAgICAgICAg
ICAgcShhLCBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGIuZyhhKQogICAg
ICAgICAgICB9KQogICAgICAgIH07CiAgICAgICAgay5wcm90b3R5cGUuZyA9IGZ1bmN0aW9uIChh
KSB7CiAgICAgICAgICAgIHZhciBiID0gdGhpcywgYyA9IGEuaHJlZjsKICAgICAgICAgICAgaWYg
KHZvaWQgMCAhPT0gdGhpcy5hW2NdKSB7CiAgICAgICAgICAgICAgICB2YXIgZCA9IHRoaXMuYVtj
XTsKICAgICAgICAgICAgICAgIGQgJiYgZC5fX2xvYWRlZCAmJiAoYS5fX2ltcG9ydCA9IGQsIHRo
aXMuZihhKSkKICAgICAgICAgICAgfSBlbHNlIHRoaXMuYisrLCB0aGlzLmFbY10gPSAicGVuZGlu
ZyIsIFYubG9hZChjLCBmdW5jdGlvbiAoYSwgZCkgewogICAgICAgICAgICAgICAgYSA9IGIuS2Eo
YSwgZCB8fCBjKTsKICAgICAgICAgICAgICAgIGIuYVtjXSA9IGE7CiAgICAgICAgICAgICAgICBi
LmItLTsKICAgICAgICAgICAgICAgIGIubG9hZEltcG9ydHMoYSk7CiAgICAgICAgICAgICAgICBi
LmwoKQogICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBiLmFbY10g
PSBudWxsOwogICAgICAgICAgICAgICAgYi5iLS07CiAgICAgICAgICAgICAgICBiLmwoKQogICAg
ICAgICAgICB9KQogICAgICAgIH07CiAgICAgICAgay5wcm90b3R5cGUuS2EgPSBmdW5jdGlvbiAo
YSwgYikgewogICAgICAgICAgICBpZiAoIWEpIHJldHVybiBkb2N1bWVudC5jcmVhdGVEb2N1bWVu
dEZyYWdtZW50KCk7CiAgICAgICAgICAgIGhhICYmIChhID0gYS5yZXBsYWNlKFMsIGZ1bmN0aW9u
IChhLCBiLCBjKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gLTEgPT09CiAgICAgICAgICAgICAg
ICBhLmluZGV4T2YoInR5cGU9IikgPyBiICsgIiB0eXBlPWltcG9ydC1kaXNhYmxlICIgKyBjIDog
YQogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIHZhciBjID0gZG9jdW1lbnQuY3JlYXRlRWxl
bWVudCgidGVtcGxhdGUiKTsKICAgICAgICAgICAgYy5pbm5lckhUTUwgPSBhOwogICAgICAgICAg
ICBpZiAoYy5jb250ZW50KSBhID0gYy5jb250ZW50LCBsKGEpOyBlbHNlIGZvciAoYSA9IGRvY3Vt
ZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsgYy5maXJzdENoaWxkOykgYS5hcHBlbmRDaGls
ZChjLmZpcnN0Q2hpbGQpOwogICAgICAgICAgICBpZiAoYyA9IGEucXVlcnlTZWxlY3RvcigiYmFz
ZSIpKSBiID0gQy5YKGMuZ2V0QXR0cmlidXRlKCJocmVmIiksIGIpLCBjLnJlbW92ZUF0dHJpYnV0
ZSgiaHJlZiIpOwogICAgICAgICAgICBjID0gbShhLCAnbGlua1tyZWw9aW1wb3J0XSxsaW5rW3Jl
bD1zdHlsZXNoZWV0XVtocmVmXVt0eXBlPWltcG9ydC1kaXNhYmxlXSxzdHlsZTpub3QoW3R5cGVd
KSxsaW5rW3JlbD1zdHlsZXNoZWV0XVtocmVmXTpub3QoW3R5cGVdKSxzY3JpcHQ6bm90KFt0eXBl
XSksc2NyaXB0W3R5cGU9ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQiXSxzY3JpcHRbdHlwZT0idGV4
dC9qYXZhc2NyaXB0Il0sc2NyaXB0W3R5cGU9Im1vZHVsZSJdJyk7CiAgICAgICAgICAgIHZhciBk
ID0gMDsKICAgICAgICAgICAgcSg=</Default>
</Parameter>

<Parameter name="Frag5">
<Default>YywgZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgIGcoYSk7CiAgICAgICAgICAgICAgICBD
LkVhKGEsIGIpOwogICAgICAgICAgICAgICAgYS5zZXRBdHRyaWJ1dGUoImltcG9ydC1kZXBlbmRl
bmN5IiwgIiIpOwogICAgICAgICAgICAgICAgaWYgKCJzY3JpcHQiID09PSBhLmxvY2FsTmFtZSAm
JiAhYS5zcmMgJiYgYS50ZXh0Q29udGVudCkgewogICAgICAgICAgICAgICAgICAgIGlmICgibW9k
dWxlIiA9PT0gYS50eXBlKSB0aHJvdyBFcnJvcigiSW5saW5lIG1vZHVsZSBzY3JpcHRzIGFyZSBu
b3Qgc3VwcG9ydGVkIGluIEhUTUwgSW1wb3J0cy4iKTsKICAgICAgICAgICAgICAgICAgICBhLnNl
dEF0dHJpYnV0ZSgic3JjIiwgImRhdGE6dGV4dC9qYXZhc2NyaXB0O2NoYXJzZXQ9dXRmLTgsIiAr
IGVuY29kZVVSSUNvbXBvbmVudChhLnRleHRDb250ZW50ICsgKCJcbi8vIyBzb3VyY2VVUkw9IiAr
IGIgKyAoZCA/ICItIiArIGQgOiAiIikgKyAiLmpzXG4iKSkpOwogICAgICAgICAgICAgICAgICAg
IGEudGV4dENvbnRlbnQgPSAiIjsKICAgICAgICAgICAgICAgICAgICBkKysKICAgICAgICAgICAg
ICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybiBhCiAgICAgICAgfTsKICAg
ICAgICBrLnByb3RvdHlwZS5sID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgYSA9IHRo
aXM7CiAgICAgICAgICAgIGlmICghdGhpcy5iKSB7CiAgICAgICAgICAgICAgICB0aGlzLmMuZGlz
Y29ubmVjdCgpOwogICAgICAgICAgICAgICAgdGhpcy5mbGF0dGVuKGRvY3VtZW50KTsKICAgICAg
ICAgICAgICAgIHZhciBiID0gITEsIGMgPSAhMSwgZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAg
ICAgICAgICAgICBjICYmCiAgICAgICAgICAgICAgICAgICAgYiAmJiAoYS5sb2FkSW1wb3J0cyhk
b2N1bWVudCksIGEuYiB8fCAoYS5jLm9ic2VydmUoZG9jdW1lbnQuaGVhZCwgewogICAgICAgICAg
ICAgICAgICAgICAgICBjaGlsZExpc3Q6ICEwLAogICAgICAgICAgICAgICAgICAgICAgICBzdWJ0
cmVlOiAhMAogICAgICAgICAgICAgICAgICAgIH0pLCBhLmRhKCkpKQogICAgICAgICAgICAgICAg
fTsKICAgICAgICAgICAgICAgIHRoaXMuTWEoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAg
ICAgIGMgPSAhMDsKICAgICAgICAgICAgICAgICAgICBkKCkKICAgICAgICAgICAgICAgIH0pOwog
ICAgICAgICAgICAgICAgdGhpcy5MYShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAg
YiA9ICEwOwogICAgICAgICAgICAgICAgICAgIGQoKQogICAgICAgICAgICAgICAgfSkKICAgICAg
ICAgICAgfQogICAgICAgIH07CiAgICAgICAgay5wcm90b3R5cGUuZmxhdHRlbiA9IGZ1bmN0aW9u
IChhKSB7CiAgICAgICAgICAgIHZhciBiID0gdGhpczsKICAgICAgICAgICAgYSA9IG0oYSwgImxp
bmtbcmVsPWltcG9ydF0iKTsKICAgICAgICAgICAgcShhLCBmdW5jdGlvbiAoYSkgewogICAgICAg
ICAgICAgICAgdmFyIGMgPSBiLmFbYS5ocmVmXTsKICAgICAgICAgICAgICAgIChhLl9faW1wb3J0
ID0gYykgJiYgYy5ub2RlVHlwZSA9PT0gTm9kZS5ET0NVTUVOVF9GUkFHTUVOVF9OT0RFICYmIChi
LmFbYS5ocmVmXSA9IGEsIGEucmVhZHlTdGF0ZSA9ICJsb2FkaW5nIiwgYS5fX2ltcG9ydCA9IGEs
IGIuZmxhdHRlbihjKSwgYS5hcHBlbmRDaGlsZChjKSkKICAgICAgICAgICAgfSkKICAgICAgICB9
OwogICAgICAgIGsucHJvdG90eXBlLkxhID0gZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgZnVu
Y3Rpb24gYihlKSB7CiAgICAgICAgICAgICAgICBpZiAoZSA8IGQpIHsKICAgICAgICAgICAgICAg
ICAgICB2YXIgZiA9IGNbZV0sIGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsK
ICAgICAgICAgICAgICAgICAgICBmLnJlbW92ZUF0dHJpYnV0ZSgiaW1wb3J0LWRlcGVuZGVuY3ki
KTsKICAgICAgICAgICAgICAgICAgICBxKGYuYXR0cmlidXRlcywgZnVuY3Rpb24gKGEpIHsKICAg
ICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGguc2V0QXR0cmlidXRlKGEubmFtZSwgYS52YWx1
ZSkKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB1YSA9IGg7CiAg
ICAgICAgICAgICAgICAgICAgZi5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChoLCBmKTsKICAgICAg
ICAgICAgICAgICAgICBnKGgsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAg
dWEgPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICBiKGUgKyAxKQogICAgICAgICAgICAg
ICAgICAgIH0pCiAgICAgICAgICAgICAgICB9IGVsc2UgYSgpCiAgICAgICAgICAgIH0KCiAgICAg
ICAgICAgIHZhciBjID0gbShkb2N1bWVudCwgInNjcmlwdFtpbXBvcnQtZGVwZW5kZW5jeV0iKSwg
ZCA9IGMubGVuZ3RoOwogICAgICAgICAgICBiKDApCiAgICAgICAgfTsKICAgICAgICBrLnByb3Rv
dHlwZS5NYSA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIHZhciBiID0gbShkb2N1bWVudCwg
InN0eWxlW2ltcG9ydC1kZXBlbmRlbmN5XSxsaW5rW3JlbD1zdHlsZXNoZWV0XVtpbXBvcnQtZGVw
ZW5kZW5jeV0iKSwgZCA9IGIubGVuZ3RoOwogICAgICAgICAgICBpZiAoZCkgewogICAgICAgICAg
ICAgICAgdmFyIGUgPSBoYSAmJiAhIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoImxpbmtbcmVsPXN0
eWxlc2hlZXRdW2hyZWZdW3R5cGU9aW1wb3J0LWRpc2FibGVdIik7CiAgICAgICAgICAgICAgICBx
KGIsIGZ1bmN0aW9uIChiKSB7CiAgICAgICAgICAgICAgICAgICAgZyhiLCBmdW5jdGlvbiAoKSB7
CiAgICAgICAgICAgICAgICAgICAgICAgIGIucmVtb3ZlQXR0cmlidXRlKCJpbXBvcnQtZGVwZW5k
ZW5jeSIpOwogICAgICAgICAgICAgICAgICAgICAgICAwID09PSAtLWQgJiYKICAgICAgICAgICAg
ICAgICAgICAgICAgYSgpCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAg
ICAgaWYgKGUgJiYgYi5wYXJlbnROb2RlICE9PSBkb2N1bWVudC5oZWFkKSB7CiAgICAgICAgICAg
ICAgICAgICAgICAgIHZhciBmID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChiLmxvY2FsTmFtZSk7
CiAgICAgICAgICAgICAgICAgICAgICAgIGYuX19hcHBsaWVkRWxlbWVudCA9IGI7CiAgICAgICAg
ICAgICAgICAgICAgICAgIGYuc2V0QXR0cmlidXRlKCJ0eXBlIiwgImltcG9ydC1wbGFjZWhvbGRl
ciIpOwogICAgICAgICAgICAgICAgICAgICAgICBiLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGYs
IGIubmV4dFNpYmxpbmcpOwogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGYgPSBjKGIpOyBm
ICYmIGMoZik7KSBmID0gYyhmKTsKICAgICAgICAgICAgICAgICAgICAgICAgZi5wYXJlbnROb2Rl
ICE9PSBkb2N1bWVudC5oZWFkICYmIChmID0gbnVsbCk7CiAgICAgICAgICAgICAgICAgICAgICAg
IGRvY3VtZW50LmhlYWQuaW5zZXJ0QmVmb3JlKGIsIGYpOwogICAgICAgICAgICAgICAgICAgICAg
ICBiLnJlbW92ZUF0dHJpYnV0ZSgidHlwZSIpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAg
ICAgICAgICAgfSkKICAgICAgICAgICAgfSBlbHNlIGEoKQogICAgICAgIH07CiAgICAgICAgay5w
cm90b3R5cGUuZGEgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBhID0gdGhpcywgYiA9
IG0oZG9jdW1lbnQsICJsaW5rW3JlbD1pbXBvcnRdIik7CiAgICAgICAgICAgIHEoYiwgZnVuY3Rp
b24gKGIpIHsKICAgICAgICAgICAgICAgIHJldHVybiBhLmYoYikKICAgICAgICAgICAgfSwgITAp
CiAgICAgICAgfTsKICAgICAgICBrLnByb3RvdHlwZS5mID0gZnVuY3Rpb24gKGEpIHsKICAgICAg
ICAgICAgYS5fX2xvYWRlZCB8fCAoYS5fX2xvYWRlZCA9ICEwLCBhLmltcG9ydCAmJiAoYS5pbXBv
cnQucmVhZHlTdGF0ZSA9CiAgICAgICAgICAgICAgICAiY29tcGxldGUiKSwgYS5kaXNwYXRjaEV2
ZW50KGIoYS5pbXBvcnQgPyAibG9hZCIgOiAiZXJyb3IiLCB7CiAgICAgICAgICAgICAgICBidWJi
bGVzOiAhMSwKICAgICAgICAgICAgICAgIGNhbmNlbGFibGU6ICExLAogICAgICAgICAgICAgICAg
ZGV0YWlsOiB2b2lkIDAKICAgICAgICAgICAgfSkpKQogICAgICAgIH07CiAgICAgICAgay5wcm90
b3R5cGUuSmEgPSBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICB2YXIgYiA9IHRoaXM7CiAgICAg
ICAgICAgIHEoYSwgZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgIHJldHVybiBxKGEuYWRk
ZWROb2RlcywgZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgICAgICBhICYmIGEubm9kZVR5
cGUgPT09IE5vZGUuRUxFTUVOVF9OT0RFICYmIChoKGEpID8gYi5nKGEpIDogYi5sb2FkSW1wb3J0
cyhhKSkKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfTsKICAgICAg
ICB2YXIgdmEgPSBudWxsOwogICAgICAgIGlmIChNKSB4ID0gbShkb2N1bWVudCwgImxpbmtbcmVs
PWltcG9ydF0iKSwgcSh4LCBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICBhLmltcG9ydCAmJiAi
bG9hZGluZyIgPT09IGEuaW1wb3J0LnJlYWR5U3RhdGUgfHwgKGEuX19sb2FkZWQgPSAhMCkKICAg
ICAgICB9KSwgeCA9IGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIGEgPSBhLnRhcmdldDsKICAg
ICAgICAgICAgaChhKSAmJiAoYS5fX2xvYWRlZCA9ICEwKQogICAgICAgIH0sIGRvY3VtZW50LmFk
ZEV2ZW50TGlzdGVuZXIoImxvYWQiLCB4LCAhMCksIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIo
ImVycm9yIiwKICAgICAgICAgICAgeCwgITApOyBlbHNlIHsKICAgICAgICAgICAgdmFyIFggPSBP
YmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE5vZGUucHJvdG90eXBlLCAiYmFzZVVSSSIp
OwogICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoKCFYIHx8IFguY29uZmlndXJhYmxl
ID8gTm9kZSA6IEVsZW1lbnQpLnByb3RvdHlwZSwgImJhc2VVUkkiLCB7CiAgICAgICAgICAgICAg
ICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYSA9IGgodGhpcykg
PyB0aGlzIDogYyh0aGlzKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gYSA/IGEuaHJlZiA6
IFggJiYgWC5nZXQgPyBYLmdldC5jYWxsKHRoaXMpIDogKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Io
ImJhc2UiKSB8fCB3aW5kb3cubG9jYXRpb24pLmhyZWYKICAgICAgICAgICAgICAgIH0sIGNvbmZp
Z3VyYWJsZTogITAsIGVudW1lcmFibGU6ICEwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBP
YmplY3QuZGVmaW5lUHJvcGVydHkoSFRNTExpbmtFbGVtZW50LnByb3RvdHlwZSwgImltcG9ydCIs
IHsKICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAg
IHJldHVybiB0aGlzLl9faW1wb3J0IHx8IG51bGwKICAgICAgICAgICAgICAgIH0sIGNvbmZpZ3Vy
YWJsZTogITAsIGVudW1lcmFibGU6ICEwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBlKGZ1
bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhID0gbmV3IGsKICAgICAgICAgICAgfSkKICAg
ICAgICB9CiAgICAgICAgZihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBkb2N1bWVu
dC5kaXNwYXRjaEV2ZW50KGIoIkhUTUxJbXBvcnRzTG9hZGVkIiwKICAgICAgICAgICAgICAgIHtj
YW5jZWxhYmxlOiAhMCwgYnViYmxlczogITAsIGRldGFpbDogdm9pZCAwfSkpCiAgICAgICAgfSk7
CiAgICAgICAgYS51c2VOYXRpdmUgPSBNOwogICAgICAgIGEud2hlblJlYWR5ID0gZjsKICAgICAg
ICBhLmltcG9ydEZvckVsZW1lbnQgPSBjOwogICAgICAgIGEubG9hZEltcG9ydHMgPSBmdW5jdGlv
biAoYSkgewogICAgICAgICAgICB2YSAmJiB2YS5sb2FkSW1wb3J0cyhhKQogICAgICAgIH0KICAg
IH0pKHdpbmRvdy5IVE1MSW1wb3J0cyA9IHdpbmRvdy5IVE1MSW1wb3J0cyB8fCB7fSk7LyoKCiBD
b3B5cmlnaHQgKGMpIDIwMTQgVGhlIFBvbHltZXIgUHJvamVjdCBBdXRob3JzLiBBbGwgcmlnaHRz
IHJlc2VydmVkLgogVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHls
ZSBsaWNlbnNlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9MSUNFTlNFLnR4dAog
VGhlIGNvbXBsZXRlIHNldCBvZiBhdXRob3JzIG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1l
ci5naXRodWIuaW8vQVVUSE9SUy50eHQKIFRoZSBjb21wbGV0ZSBzZXQgb2YgY29udHJpYnV0b3Jz
IG1heSBiZSBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQ09OVFJJQlVUT1JTLnR4
dAogQ29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXMgcGFydCBvZiB0aGUgcG9seW1lciBwcm9q
ZWN0IGlzIGFsc28KIHN1YmplY3QgdG8gYW4gYWRkaXRpb25hbCBJUCByaWdodHMgZ3JhbnQgZm91
bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0CiovCiAgICB3aW5kb3cu
V2ViQ29tcG9uZW50cyA9IHdpbmRvdy5XZWJDb21wb25lbnRzIHx8IHtmbGFnczoge319OwogICAg
dmFyIENhID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2NyaXB0W3NyYyo9IndlYmNvbXBvbmVu
dHMtbGl0ZS5qcyJdJyksIERhID0gL3djLSguKykvLCB0ID0ge307CiAgICBpZiAoIXQubm9PcHRz
KSB7CiAgICAgICAgbG9jYXRpb24uc2VhcmNoLnNsaWNlKDEpLnNwbGl0KCImIikuZm9yRWFjaChm
dW5jdGlvbiAoYSkgewogICAgICAgICAgICBhID0gYS5zcGxpdCgiPSIpOwogICAgICAgICAgICB2
YXIgYjsKICAgICAgICAgICAgYVswXSAmJiAoYiA9IGFbMF0ubWF0Y2goRGEpKSAmJiAodFtiWzFd
XSA9IGFbMV0gfHwgITApCiAgICAgICAgfSk7CiAgICAgICAgaWYgKENhKSBmb3IgKHZhciBFYSA9
IDAsIEZhID0gdm9pZCAwOyBGYSA9IENhLmF0dHJpYnV0ZXNbRWFdOyBFYSsrKSAic3JjIiAhPT0g
RmEubmFtZSAmJiAodFtGYS5uYW1lXSA9IEZhLnZhbHVlIHx8ICEwKTsKICAgICAgICBpZiAodC5s
b2cgJiYgdC5sb2cuc3BsaXQpIHsKICAgICAgICAgICAgdmFyIEdhID0gdC5sb2cuc3BsaXQoIiwi
KTsKICAgICAgICAgICAgdC5sb2cgPSB7fTsKICAgICAgICAgICAgR2EuZm9yRWFjaChmdW5jdGlv
biAoYSkgewogICAgICAgICAgICAgICAgdC5sb2dbYV0gPSAhMAogICAgICAgICAgICB9KQogICAg
ICAgIH0gZWxzZSB0LmxvZyA9IHt9CiAgICB9CiAgICB3aW5kb3cuV2ViQ29tcG9uZW50cy5mbGFn
cyA9IHQ7CiAgICB2YXIgSGEgPSB0LnNoYWR5ZG9tOwogICAgSGEgJiYgKHdpbmRvdy5TaGFkeURP
TSA9IHdpbmRvdy5TaGFkeURPTSB8fCB7fSwgd2luZG93LlNoYWR5RE9NLmZvcmNlID0gSGEpOwog
ICAgdmFyIElhID0gdC5yZWdpc3RlciB8fCB0LmNlOwogICAgSWEgJiYgd2luZG93LmN1c3RvbUVs
ZW1lbnRzICYmICh3aW5kb3cuY3VzdG9tRWxlbWVudHMuZm9yY2VQb2x5ZmlsbCA9IElhKTsvKgoK
Q29weXJpZ2h0IChjKSAyMDE2IFRoZSBQb2x5bWVyIFByb2plY3QgQXV0aG9ycy4gQWxsIHJpZ2h0
cyByZXNlcnZlZC4KVGhpcyBjb2RlIG1heSBvbmx5IGJlIHVzZWQgdW5kZXIgdGhlIEJTRCBzdHls
ZSBsaWNlbnNlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9MSUNFTlNFLnR4dApU
aGUgY29tcGxldGUgc2V0IG9mIGF1dGhvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVy
LmdpdGh1Yi5pby9BVVRIT1JTLnR4dApUaGUgY29tcGxldGUgc2V0IG9mIGNvbnRyaWJ1dG9ycyBt
YXkgYmUgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0NPTlRSSUJVVE9SUy50eHQK
Q29kZSBkaXN0cmlidXRlZCBieSBHb29nbGUgYXMgcGFydCBvZiB0aGUgcG9seW1lciBwcm9qZWN0
IGlzIGFsc28Kc3ViamVjdCB0byBhbiBhZGRpdGlvbmFsIElQIHJpZ2h0cyBncmFudCBmb3VuZCBh
dCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vUEFURU5UUy50eHQKKi8KICAgIGZ1bmN0aW9uIEph
KCkgewogICAgICAgIHRoaXMucGEgPSB0aGlzLnJvb3QgPSBudWxsOwogICAgICAgIHRoaXMuVCA9
ICExOwogICAgICAgIHRoaXMuRCA=</Default>
</Parameter>

<Parameter name="Frag6">
<Default>PSB0aGlzLlAgPSB0aGlzLmNhID0gdGhpcy5hc3NpZ25lZFNsb3QgPSB0aGlzLmFzc2lnbmVkTm9k
ZXMgPSB0aGlzLkggPSBudWxsOwogICAgICAgIHRoaXMuY2hpbGROb2RlcyA9IHRoaXMubmV4dFNp
YmxpbmcgPSB0aGlzLnByZXZpb3VzU2libGluZyA9IHRoaXMubGFzdENoaWxkID0gdGhpcy5maXJz
dENoaWxkID0gdGhpcy5wYXJlbnROb2RlID0gdGhpcy5LID0gdm9pZCAwOwogICAgICAgIHRoaXMu
a2EgPSB0aGlzLmxhID0gITE7CiAgICAgICAgdGhpcy5PID0ge30KICAgIH0KCiAgICBKYS5wcm90
b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiB7fQogICAgfTsKCiAg
ICBmdW5jdGlvbiB1KGEpIHsKICAgICAgICBhLl9fc2hhZHkgfHwgKGEuX19zaGFkeSA9IG5ldyBK
YSk7CiAgICAgICAgcmV0dXJuIGEuX19zaGFkeQogICAgfQoKICAgIGZ1bmN0aW9uIHYoYSkgewog
ICAgICAgIHJldHVybiBhICYmIGEuX19zaGFkeQogICAgfTt2YXIgdyA9IHdpbmRvdy5TaGFkeURP
TSB8fCB7fTsKICAgIHcuR2EgPSAhKCFFbGVtZW50LnByb3RvdHlwZS5hdHRhY2hTaGFkb3cgfHwg
IU5vZGUucHJvdG90eXBlLmdldFJvb3ROb2RlKTsKICAgIHZhciBLYSA9IE9iamVjdC5nZXRPd25Q
cm9wZXJ0eURlc2NyaXB0b3IoTm9kZS5wcm90b3R5cGUsICJmaXJzdENoaWxkIik7CiAgICB3Lm0g
PSAhIShLYSAmJiBLYS5jb25maWd1cmFibGUgJiYgS2EuZ2V0KTsKICAgIHcuZWEgPSB3LmZvcmNl
IHx8ICF3LkdhOwogICAgdy5KID0gdy5ub1BhdGNoIHx8ICExOwogICAgdy5vYSA9IHcucHJlZmVy
UGVyZm9ybWFuY2U7CgogICAgZnVuY3Rpb24geShhKSB7CiAgICAgICAgcmV0dXJuIChhID0gdihh
KSkgJiYgdm9pZCAwICE9PSBhLmZpcnN0Q2hpbGQKICAgIH0KCiAgICBmdW5jdGlvbiB6KGEpIHsK
ICAgICAgICByZXR1cm4gIlNoYWR5Um9vdCIgPT09IGEuemEKICAgIH0KCiAgICBmdW5jdGlvbiBM
YShhKSB7CiAgICAgICAgcmV0dXJuIChhID0gKGEgPSB2KGEpKSAmJiBhLnJvb3QpICYmIE1hKGEp
CiAgICB9CgogICAgdmFyIE5hID0gRWxlbWVudC5wcm90b3R5cGUsCiAgICAgICAgT2EgPSBOYS5t
YXRjaGVzIHx8IE5hLm1hdGNoZXNTZWxlY3RvciB8fCBOYS5tb3pNYXRjaGVzU2VsZWN0b3IgfHwg
TmEubXNNYXRjaGVzU2VsZWN0b3IgfHwgTmEub01hdGNoZXNTZWxlY3RvciB8fCBOYS53ZWJraXRN
YXRjaGVzU2VsZWN0b3IsCiAgICAgICAgUGEgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiIiks
IFFhID0gMCwgUmEgPSBbXTsKICAgIChuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbiAoKSB7
CiAgICAgICAgZm9yICg7IFJhLmxlbmd0aDspIHRyeSB7CiAgICAgICAgICAgIFJhLnNoaWZ0KCko
KQogICAgICAgIH0gY2F0Y2ggKGEpIHsKICAgICAgICAgICAgdGhyb3cgUGEudGV4dENvbnRlbnQg
PSBRYSsrLCBhOwogICAgICAgIH0KICAgIH0pKS5vYnNlcnZlKFBhLCB7Y2hhcmFjdGVyRGF0YTog
ITB9KTsKCiAgICBmdW5jdGlvbiBTYShhKSB7CiAgICAgICAgUmEucHVzaChhKTsKICAgICAgICBQ
YS50ZXh0Q29udGVudCA9IFFhKysKICAgIH0KCiAgICB2YXIgVGEgPSAhIWRvY3VtZW50LmNvbnRh
aW5zOwoKICAgIGZ1bmN0aW9uIFVhKGEsIGIpIHsKICAgICAgICBmb3IgKDsgYjspIHsKICAgICAg
ICAgICAgaWYgKGIgPT0gYSkgcmV0dXJuICEwOwogICAgICAgICAgICBiID0gYi5fX3NoYWR5X3Bh
cmVudE5vZGUKICAgICAgICB9CiAgICAgICAgcmV0dXJuICExCiAgICB9CgogICAgZnVuY3Rpb24g
VmEoYSkgewogICAgICAgIGZvciAodmFyIGIgPSBhLmxlbmd0aCAtIDE7IDAgPD0gYjsgYi0tKSB7
CiAgICAgICAgICAgIHZhciBjID0gYVtiXSwgZCA9IGMuZ2V0QXR0cmlidXRlKCJpZCIpIHx8IGMu
Z2V0QXR0cmlidXRlKCJuYW1lIik7CiAgICAgICAgICAgIGQgJiYgImxlbmd0aCIgIT09IGQgJiYg
aXNOYU4oZCkgJiYgKGFbZF0gPSBjKQogICAgICAgIH0KICAgICAgICBhLml0ZW0gPSBmdW5jdGlv
biAoYikgewogICAgICAgICAgICByZXR1cm4gYVtiXQogICAgICAgIH07CiAgICAgICAgYS5uYW1l
ZEl0ZW0gPSBmdW5jdGlvbiAoYikgewogICAgICAgICAgICBpZiAoImxlbmd0aCIgIT09IGIgJiYg
aXNOYU4oYikgJiYgYVtiXSkgcmV0dXJuIGFbYl07CiAgICAgICAgICAgIGZvciAodmFyIGMgPSBp
YShhKSwgZCA9IGMubmV4dCgpOyAhZC5kb25lOyBkID0gYy5uZXh0KCkpIGlmIChkID0gZC52YWx1
ZSwgKGQuZ2V0QXR0cmlidXRlKCJpZCIpIHx8IGQuZ2V0QXR0cmlidXRlKCJuYW1lIikpID09IGIp
IHJldHVybiBkOwogICAgICAgICAgICByZXR1cm4gbnVsbAogICAgICAgIH07CiAgICAgICAgcmV0
dXJuIGEKICAgIH0KCiAgICBmdW5jdGlvbiBBKGEsIGIsIGMsIGQpIHsKICAgICAgICBjID0gdm9p
ZCAwID09PSBjID8gIiIgOiBjOwogICAgICAgIGZvciAodmFyIGUgaW4gYikgewogICAgICAgICAg
ICB2YXIgZiA9IGJbZV07CiAgICAgICAgICAgIGlmICghKGQgJiYgMCA8PSBkLmluZGV4T2YoZSkp
KSB7CiAgICAgICAgICAgICAgICBmLmNvbmZpZ3VyYWJsZSA9ICEwOwogICAgICAgICAgICAgICAg
dmFyIGcgPSBjICsgZTsKICAgICAgICAgICAgICAgIGlmIChmLnZhbHVlKSBhW2ddID0gZi52YWx1
ZTsgZWxzZSB0cnkgewogICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShh
LCBnLCBmKQogICAgICAgICAgICAgICAgfSBjYXRjaCAoaCkgewogICAgICAgICAgICAgICAgfQog
ICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIEIoYSkgewogICAgICAg
IHZhciBiID0ge307CiAgICAgICAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoYSkuZm9yRWFj
aChmdW5jdGlvbiAoYykgewogICAgICAgICAgICBiW2NdID0gT2JqZWN0LmdldE93blByb3BlcnR5
RGVzY3JpcHRvcihhLCBjKQogICAgICAgIH0pOwogICAgICAgIHJldHVybiBiCiAgICB9O3ZhciBX
YSA9IFtdLCBYYTsKCiAgICBmdW5jdGlvbiBZYShhKSB7CiAgICAgICAgWGEgfHwgKFhhID0gITAs
IFNhKFphKSk7CiAgICAgICAgV2EucHVzaChhKQogICAgfQoKICAgIGZ1bmN0aW9uIFphKCkgewog
ICAgICAgIFhhID0gITE7CiAgICAgICAgZm9yICh2YXIgYSA9ICEhV2EubGVuZ3RoOyBXYS5sZW5n
dGg7KSBXYS5zaGlmdCgpKCk7CiAgICAgICAgcmV0dXJuIGEKICAgIH0KCiAgICBaYS5saXN0ID0g
V2E7CgogICAgZnVuY3Rpb24gJGEoKSB7CiAgICAgICAgdGhpcy5hID0gITE7CiAgICAgICAgdGhp
cy5hZGRlZE5vZGVzID0gW107CiAgICAgICAgdGhpcy5yZW1vdmVkTm9kZXMgPSBbXTsKICAgICAg
ICB0aGlzLlMgPSBuZXcgU2V0CiAgICB9CgogICAgZnVuY3Rpb24gYWIoYSkgewogICAgICAgIGEu
YSB8fCAoYS5hID0gITAsIFNhKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgYS5mbHVzaCgpCiAg
ICAgICAgfSkpCiAgICB9CgogICAgJGEucHJvdG90eXBlLmZsdXNoID0gZnVuY3Rpb24gKCkgewog
ICAgICAgIGlmICh0aGlzLmEpIHsKICAgICAgICAgICAgdGhpcy5hID0gITE7CiAgICAgICAgICAg
IHZhciBhID0gdGhpcy50YWtlUmVjb3JkcygpOwogICAgICAgICAgICBhLmxlbmd0aCAmJiB0aGlz
LlMuZm9yRWFjaChmdW5jdGlvbiAoYikgewogICAgICAgICAgICAgICAgYihhKQogICAgICAgICAg
ICB9KQogICAgICAgIH0KICAgIH07CiAgICAkYS5wcm90b3R5cGUudGFrZVJlY29yZHMgPSBmdW5j
dGlvbiAoKSB7CiAgICAgICAgaWYgKHRoaXMuYWRkZWROb2Rlcy5sZW5ndGggfHwgdGhpcy5yZW1v
dmVkTm9kZXMubGVuZ3RoKSB7CiAgICAgICAgICAgIHZhciBhID0gW3thZGRlZE5vZGVzOiB0aGlz
LmFkZGVkTm9kZXMsIHJlbW92ZWROb2RlczogdGhpcy5yZW1vdmVkTm9kZXN9XTsKICAgICAgICAg
ICAgdGhpcy5hZGRlZE5vZGVzID0gW107CiAgICAgICAgICAgIHRoaXMucmVtb3ZlZE5vZGVzID0g
W107CiAgICAgICAgICAgIHJldHVybiBhCiAgICAgICAgfQogICAgICAgIHJldHVybiBbXQogICAg
fTsKCiAgICBmdW5jdGlvbiBiYihhLCBiKSB7CiAgICAgICAgdmFyIGMgPSB1KGEpOwogICAgICAg
IGMuSCB8fCAoYy5IID0gbmV3ICRhKTsKICAgICAgICBjLkguUy5hZGQoYik7CiAgICAgICAgdmFy
IGQgPSBjLkg7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgeWE6IGIsIEY6IGQsIEFhOiBh
LCB0YWtlUmVjb3JkczogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGQudGFr
ZVJlY29yZHMoKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGNi
KGEpIHsKICAgICAgICB2YXIgYiA9IGEgJiYgYS5GOwogICAgICAgIGIgJiYgKGIuUy5kZWxldGUo
YS55YSksIGIuUy5zaXplIHx8ICh1KGEuQWEpLkggPSBudWxsKSkKICAgIH0KCiAgICBmdW5jdGlv
biBkYihhLCBiKSB7CiAgICAgICAgdmFyIGMgPSBiLmdldFJvb3ROb2RlKCk7CiAgICAgICAgcmV0
dXJuIGEubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgICAgIHZhciBiID0gYyA9PT0gYS50YXJn
ZXQuZ2V0Um9vdE5vZGUoKTsKICAgICAgICAgICAgaWYgKGIgJiYgYS5hZGRlZE5vZGVzKSB7CiAg
ICAgICAgICAgICAgICBpZiAoYiA9IEFycmF5LmZyb20oYS5hZGRlZE5vZGVzKS5maWx0ZXIoZnVu
Y3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gYyA9PT0gYS5nZXRSb290Tm9k
ZSgpCiAgICAgICAgICAgICAgICB9KSwgYi5sZW5ndGgpIHJldHVybiBhID0gT2JqZWN0LmNyZWF0
ZShhKSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsICJhZGRlZE5vZGVzIiwgewogICAgICAgICAg
ICAgICAgICAgIHZhbHVlOiBiLAogICAgICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAK
ICAgICAgICAgICAgICAgIH0pLCBhCiAgICAgICAgICAgIH0gZWxzZSBpZiAoYikgcmV0dXJuIGEK
ICAgICAgICB9KS5maWx0ZXIoZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgcmV0dXJuIGEKICAg
ICAgICB9KQogICAgfTt2YXIgZWIgPSAvWyZcdTAwQTAiXS9nLCBmYiA9IC9bJlx1MDBBMDw+XS9n
OwoKICAgIGZ1bmN0aW9uIGdiKGEpIHsKICAgICAgICBzd2l0Y2ggKGEpIHsKICAgICAgICAgICAg
Y2FzZSAiJiI6CiAgICAgICAgICAgICAgICByZXR1cm4gIiZhbXA7IjsKICAgICAgICAgICAgY2Fz
ZSAiPCI6CiAgICAgICAgICAgICAgICByZXR1cm4gIiZsdDsiOwogICAgICAgICAgICBjYXNlICI+
IjoKICAgICAgICAgICAgICAgIHJldHVybiAiJmd0OyI7CiAgICAgICAgICAgIGNhc2UgJyInOgog
ICAgICAgICAgICAgICAgcmV0dXJuICImcXVvdDsiOwogICAgICAgICAgICBjYXNlICJcdTAwYTAi
OgogICAgICAgICAgICAgICAgcmV0dXJuICImbmJzcDsiCiAgICAgICAgfQogICAgfQoKICAgIGZ1
bmN0aW9uIGhiKGEpIHsKICAgICAgICBmb3IgKHZhciBiID0ge30sIGMgPSAwOyBjIDwgYS5sZW5n
dGg7IGMrKykgYlthW2NdXSA9ICEwOwogICAgICAgIHJldHVybiBiCiAgICB9CgogICAgdmFyIGli
ID0gaGIoImFyZWEgYmFzZSBiciBjb2wgY29tbWFuZCBlbWJlZCBociBpbWcgaW5wdXQga2V5Z2Vu
IGxpbmsgbWV0YSBwYXJhbSBzb3VyY2UgdHJhY2sgd2JyIi5zcGxpdCgiICIpKSwKICAgICAgICBq
YiA9IGhiKCJzdHlsZSBzY3JpcHQgeG1wIGlmcmFtZSBub2VtYmVkIG5vZnJhbWVzIHBsYWludGV4
dCBub3NjcmlwdCIuc3BsaXQoIiAiKSk7CgogICAgZnVuY3Rpb24ga2IoYSwgYikgewogICAgICAg
ICJ0ZW1wbGF0ZSIgPT09IGEubG9jYWxOYW1lICYmIChhID0gYS5jb250ZW50KTsKICAgICAgICBm
b3IgKHZhciBjID0gIiIsIGQgPSBiID8gYihhKSA6IGEuY2hpbGROb2RlcywgZSA9IDAsIGYgPSBk
Lmxlbmd0aCwgZyA9IHZvaWQgMDsgZSA8IGYgJiYgKGcgPSBkW2VdKTsgZSsrKSB7CiAgICAgICAg
ICAgIGE6ewogICAgICAgICAgICAgICAgdmFyIGggPSBnOwogICAgICAgICAgICAgICAgdmFyIGsg
PSBhLCBsID0gYjsKICAgICAgICAgICAgICAgIHN3aXRjaCAoaC5ub2RlVHlwZSkgewogICAgICAg
ICAgICAgICAgICAgIGNhc2UgTm9kZS5FTEVNRU5UX05PREU6CiAgICAgICAgICAgICAgICAgICAg
ICAgIGsgPSBoLmxvY2FsTmFtZTsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbSA9
ICI8IiArIGssIHEgPSBoLmF0dHJpYnV0ZXMsIHggPSAwLCBNOyBNID0gcVt4XTsgeCsrKSBtICs9
ICIgIiArIE0ubmFtZSArICc9IicgKyBNLnZhbHVlLnJlcGxhY2UoZWIsIGdiKSArICciJzsKICAg
ICAgICAgICAgICAgICAgICAgICAgbSArPSAiPiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGgg
PSBpYltrXSA/IG0gOiBtICsga2IoaCwgbCkgKyAiPC8iICsgayArICI+IjsKICAgICAgICAgICAg
ICAgICAgICAgICAgYnJlYWsgYTsKICAgICAgICAgICAgICAgICAgICBjYXNlIE5vZGUuVEVYVF9O
T0RFOgogICAgICAgICAgICAgICAgICAgICAgICBoID0gaC5kYXRhOwogICAgICAgICAgICAgICAg
ICAgICAgICBoID0gayAmJiBqYltrLmxvY2FsTmFtZV0gPyBoIDogaC5yZXBsYWNlKGZiLCBnYik7
CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7CiAgICAgICAgICAgICAgICAgICAgY2Fz
ZSBOb2RlLkNPTU1FTlRfTk9ERToKICAgICAgICAgICAgICAgICAgICAgICAgaCA9ICJceDNjIS0t
IiArIGguZGF0YSArICItLVx4M2UiOwogICAgICAgICAgICAgICAgICAgICAgICBicmVhayBhOwog
ICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93
IHdpbmRvdy5jb25zb2xlLmVycm9yKGgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgRXJy
b3IoIm5vdCBpbXBsZW1lbnRlZCIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAg
ICAgICAgICAgIGMgKz0gaAogICAgICAgIH0KICAgICAgICByZXR1cm4gYwogICAgfTt2YXIgcGIg
PSB3Lm0sIHFiID0gewogICAgICAgIHF1ZXJ5U2VsZWN0b3I6IGZ1bmN0aW9uIChhKSB7CiAgICAg
ICAgICAgIHJldHVybiB0aGlzLl9fc2hhZHlfbmF0aXZlX3F1ZXJ5U2VsZWN0b3IoYSkKICAgICAg
ICB9LCBxdWVyeVNlbGVjdG9yQWxsOiBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICByZXR1cm4g
dGhpcy5fX3NoYWR5X25hdGl2ZV9xdWVyeVNlbGVjdG9yQWxsKGEpCiAgICAgICAgfQogICAgfSwg
cmIgPSB7fTsKCiAgICBmdW5jdGlvbiBzYihhKSB7CiAgICAgICAgcmJbYV0gPSBmdW5jdGlvbiAo
YikgewogICAgICAgICAgICByZXR1cm4gYlsiX19zaGFkeV9uYXRpdmVfIiArIGFdCiAgICAgICAg
fQogICAgfQoKICAgIGZ1bmN0aW9uIHRiKGEsIGIpIHsKICAgICAgICBBKGEsIGIsICJfX3NoYWR5
X25hdGl2ZV8iKTsKICAgICAgICBmb3IgKHZhciBjIGluIGIpIHNiKGMpCiAgICB9CgogICAgZnVu
Y3Rpb24gRChhLCBiKSB7CiAgICAgICAgYiA9IHZvaWQgMCA9PT0gYiA/IFtdIDogYjsKICAgICAg
ICBmb3IgKHZhciBjID0gMDsgYyA8IGIubGVuZ3RoOyBjKyspIHsKICAgICAgICAgICAgdmFyIGQg
PSBiW2NdLCBlID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLCBkKTsKICAgICAg
ICAgICAgZSAmJiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsICJfX3NoYWR5X25hdGl2ZV8iICsg
ZCwgZSksIGUudmFsdWUgPyBxYltkXSB8fCAocWJbZF0gPSBlLnZhbHVlKSA6IHNiKGQpKQogICAg
ICAgIH0KICAgIH0KCiAgICB2YXIgRSA9IGRvY3VtZW50LmNyZWF0ZVRyZWVXYWxrZXIoZG9jdW1l
bnQsIE5vZGVGaWx0ZXIuU0hPV19BTEwsIG51bGwsICExKSwKICAgICAgICBGID0gZG9jdW1lbnQu
Y3JlYXRlVHJlZVdhbGtlcihkb2N1bWVudCwgTm9kZUZpbHRlci5TSE9XX0VMRU1FTlQsIG51bGws
ICExKSwKICAgICAgICB1YiA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1
bWVudCgiaW5lcnQiKTsKCiAgICBmdW5jdGlvbiB2YihhKSB7CiAgICAgICAgZm9yICh2YXIgYjsg
YiA9IGEuX19zaGFkeV9uYXRpdmVfZmlyc3RDaGlsZDspIGEuX19zaGFkeV9uYXRpdmVfcmVtb3Zl
Q2hpbGQoYikKICAgIH0KCiAgICA=</Default>
</Parameter>

<Parameter name="Frag7">
<Default>dmFyIHdiID0gWyJmaXJzdEVsZW1lbnRDaGlsZCIsICJsYXN0RWxlbWVudENoaWxkIiwgImNoaWxk
cmVuIiwgImNoaWxkRWxlbWVudENvdW50Il0sCiAgICAgICAgeGIgPSBbInF1ZXJ5U2VsZWN0b3Ii
LCAicXVlcnlTZWxlY3RvckFsbCJdOwoKICAgIGZ1bmN0aW9uIHliKCkgewogICAgICAgIHZhciBh
ID0gWyJkaXNwYXRjaEV2ZW50IiwgImFkZEV2ZW50TGlzdGVuZXIiLCAicmVtb3ZlRXZlbnRMaXN0
ZW5lciJdOwogICAgICAgIHdpbmRvdy5FdmVudFRhcmdldCA/IEQod2luZG93LkV2ZW50VGFyZ2V0
LnByb3RvdHlwZSwgYSkgOiAoRChOb2RlLnByb3RvdHlwZSwgYSksIEQoV2luZG93LnByb3RvdHlw
ZSwgYSkpOwogICAgICAgIHBiID8gRChOb2RlLnByb3RvdHlwZSwgInBhcmVudE5vZGUgZmlyc3RD
aGlsZCBsYXN0Q2hpbGQgcHJldmlvdXNTaWJsaW5nIG5leHRTaWJsaW5nIGNoaWxkTm9kZXMgcGFy
ZW50RWxlbWVudCB0ZXh0Q29udGVudCIuc3BsaXQoIiAiKSkgOiB0YihOb2RlLnByb3RvdHlwZSwg
ewogICAgICAgICAgICBwYXJlbnROb2RlOiB7CiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9u
ICgpIHsKICAgICAgICAgICAgICAgICAgICBFLmN1cnJlbnROb2RlID0gdGhpczsKICAgICAgICAg
ICAgICAgICAgICByZXR1cm4gRS5wYXJlbnROb2RlKCkKICAgICAgICAgICAgICAgIH0KICAgICAg
ICAgICAgfSwgZmlyc3RDaGlsZDogewogICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7
CiAgICAgICAgICAgICAgICAgICAgRS5jdXJyZW50Tm9kZSA9IHRoaXM7CiAgICAgICAgICAgICAg
ICAgICAgcmV0dXJuIEUuZmlyc3RDaGlsZCgpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAg
IH0sIGxhc3RDaGlsZDogewogICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAg
ICAgICAgICAgICAgICAgRS5jdXJyZW50Tm9kZSA9CiAgICAgICAgICAgICAgICAgICAgICAgIHRo
aXM7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEUubGFzdENoaWxkKCkKICAgICAgICAgICAg
ICAgIH0KICAgICAgICAgICAgfSwgcHJldmlvdXNTaWJsaW5nOiB7CiAgICAgICAgICAgICAgICBn
ZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBFLmN1cnJlbnROb2RlID0gdGhp
czsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRS5wcmV2aW91c1NpYmxpbmcoKQogICAgICAg
ICAgICAgICAgfQogICAgICAgICAgICB9LCBuZXh0U2libGluZzogewogICAgICAgICAgICAgICAg
Z2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgRS5jdXJyZW50Tm9kZSA9IHRo
aXM7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEUubmV4dFNpYmxpbmcoKQogICAgICAgICAg
ICAgICAgfQogICAgICAgICAgICB9LCBjaGlsZE5vZGVzOiB7CiAgICAgICAgICAgICAgICBnZXQ6
IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYSA9IFtdOwogICAgICAgICAg
ICAgICAgICAgIEUuY3VycmVudE5vZGUgPSB0aGlzOwogICAgICAgICAgICAgICAgICAgIGZvciAo
dmFyIGMgPSBFLmZpcnN0Q2hpbGQoKTsgYzspIGEucHVzaChjKSwgYyA9IEUubmV4dFNpYmxpbmco
KTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gYQogICAgICAgICAgICAgICAgfQogICAgICAg
ICAgICB9LCBwYXJlbnRFbGVtZW50OiB7CiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgp
IHsKICAgICAgICAgICAgICAgICAgICBGLmN1cnJlbnROb2RlID0gdGhpczsKICAgICAgICAgICAg
ICAgICAgICByZXR1cm4gRi5wYXJlbnROb2RlKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAg
ICAgfSwgdGV4dENvbnRlbnQ6IHsKICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgewog
ICAgICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5ub2RlVHlwZSkgewogICAgICAgICAgICAg
ICAgICAgICAgICBjYXNlIE5vZGUuRUxFTUVOVF9OT0RFOgogICAgICAgICAgICAgICAgICAgICAg
ICBjYXNlIE5vZGUuRE9DVU1FTlRfRlJBR01FTlRfTk9ERToKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIGZvciAodmFyIGEgPSBkb2N1bWVudC5jcmVhdGVUcmVlV2Fsa2VyKHRoaXMsCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9kZUZpbHRlci5TSE9XX1RFWFQsIG51bGwsICEx
KSwgYyA9ICIiLCBkOyBkID0gYS5uZXh0Tm9kZSgpOykgYyArPSBkLm5vZGVWYWx1ZTsKICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjOwogICAgICAgICAgICAgICAgICAgICAgICBk
ZWZhdWx0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZVZhbHVl
CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwgc2V0OiBmdW5jdGlvbiAo
YSkgewogICAgICAgICAgICAgICAgICAgIGlmICgidW5kZWZpbmVkIiA9PT0gdHlwZW9mIGEgfHwg
bnVsbCA9PT0gYSkgYSA9ICIiOwogICAgICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5ub2Rl
VHlwZSkgewogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIE5vZGUuRUxFTUVOVF9OT0RFOgog
ICAgICAgICAgICAgICAgICAgICAgICBjYXNlIE5vZGUuRE9DVU1FTlRfRlJBR01FTlRfTk9ERToK
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZiKHRoaXMpOwogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgKDAgPCBhLmxlbmd0aCB8fCB0aGlzLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRf
Tk9ERSkgJiYgdGhpcy5fX3NoYWR5X25hdGl2ZV9pbnNlcnRCZWZvcmUoZG9jdW1lbnQuY3JlYXRl
VGV4dE5vZGUoYSksIHZvaWQgMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsK
ICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIHRoaXMubm9kZVZhbHVlID0gYQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAg
ICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIEQoTm9kZS5wcm90b3R5cGUs
ICJhcHBlbmRDaGlsZCBpbnNlcnRCZWZvcmUgcmVtb3ZlQ2hpbGQgcmVwbGFjZUNoaWxkIGNsb25l
Tm9kZSBjb250YWlucyIuc3BsaXQoIiAiKSk7CiAgICAgICAgYSA9IHsKICAgICAgICAgICAgZmly
c3RFbGVtZW50Q2hpbGQ6IHsKICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgewogICAg
ICAgICAgICAgICAgICAgIEYuY3VycmVudE5vZGUgPSB0aGlzOwogICAgICAgICAgICAgICAgICAg
IHJldHVybiBGLmZpcnN0Q2hpbGQoKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBs
YXN0RWxlbWVudENoaWxkOiB7CiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAg
ICAgICAgICAgICAgICAgICBGLmN1cnJlbnROb2RlID0gdGhpczsKICAgICAgICAgICAgICAgICAg
ICByZXR1cm4gRi5sYXN0Q2hpbGQoKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBj
aGlsZHJlbjogewogICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAg
ICAgICAgICAgdmFyIGEgPSBbXTsKICAgICAgICAgICAgICAgICAgICBGLmN1cnJlbnROb2RlID0g
dGhpczsKICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBjID0gRi5maXJzdENoaWxkKCk7IGM7
KSBhLnB1c2goYyksIGMgPSBGLm5leHRTaWJsaW5nKCk7CiAgICAgICAgICAgICAgICAgICAgcmV0
dXJuIFZhKGEpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIGNoaWxkRWxlbWVudENv
dW50OiB7CiAgICAgICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAg
ICAgICByZXR1cm4gdGhpcy5jaGlsZHJlbiA/IHRoaXMuY2hpbGRyZW4ubGVuZ3RoIDogMAogICAg
ICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBwYiA/IChEKEVs
ZW1lbnQucHJvdG90eXBlLCB3YiksIEQoRWxlbWVudC5wcm90b3R5cGUsIFsicHJldmlvdXNFbGVt
ZW50U2libGluZyIsICJuZXh0RWxlbWVudFNpYmxpbmciLCAiaW5uZXJIVE1MIl0pLCBPYmplY3Qu
Z2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEhUTUxFbGVtZW50LnByb3RvdHlwZSwKICAgICAgICAg
ICAgImNoaWxkcmVuIikgJiYgRChIVE1MRWxlbWVudC5wcm90b3R5cGUsIFsiY2hpbGRyZW4iXSks
IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoSFRNTEVsZW1lbnQucHJvdG90eXBlLCAi
aW5uZXJIVE1MIikgJiYgRChIVE1MRWxlbWVudC5wcm90b3R5cGUsIFsiaW5uZXJIVE1MIl0pKSA6
ICh0YihFbGVtZW50LnByb3RvdHlwZSwgYSksIHRiKEVsZW1lbnQucHJvdG90eXBlLCB7CiAgICAg
ICAgICAgIHByZXZpb3VzRWxlbWVudFNpYmxpbmc6IHsKICAgICAgICAgICAgICAgIGdldDogZnVu
Y3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIEYuY3VycmVudE5vZGUgPSB0aGlzOwogICAg
ICAgICAgICAgICAgICAgIHJldHVybiBGLnByZXZpb3VzU2libGluZygpCiAgICAgICAgICAgICAg
ICB9CiAgICAgICAgICAgIH0sIG5leHRFbGVtZW50U2libGluZzogewogICAgICAgICAgICAgICAg
Z2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgRi5jdXJyZW50Tm9kZSA9IHRo
aXM7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEYubmV4dFNpYmxpbmcoKQogICAgICAgICAg
ICAgICAgfQogICAgICAgICAgICB9LCBpbm5lckhUTUw6IHsKICAgICAgICAgICAgICAgIGdldDog
ZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBrYih0aGlzLCBmdW5jdGlv
biAoYSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5fX3NoYWR5X25hdGl2ZV9j
aGlsZE5vZGVzCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0sIHNldDog
ZnVuY3Rpb24gKGEpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgYiA9ICJ0ZW1wbGF0ZSIgPT09
IHRoaXMubG9jYWxOYW1lID8KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZW50IDog
dGhpczsKICAgICAgICAgICAgICAgICAgICB2YihiKTsKICAgICAgICAgICAgICAgICAgICB2YXIg
ZCA9IHRoaXMubG9jYWxOYW1lIHx8ICJkaXYiOwogICAgICAgICAgICAgICAgICAgIGQgPSB0aGlz
Lm5hbWVzcGFjZVVSSSAmJiB0aGlzLm5hbWVzcGFjZVVSSSAhPT0gdWIubmFtZXNwYWNlVVJJID8g
dWIuY3JlYXRlRWxlbWVudE5TKHRoaXMubmFtZXNwYWNlVVJJLCBkKSA6IHViLmNyZWF0ZUVsZW1l
bnQoZCk7CiAgICAgICAgICAgICAgICAgICAgZC5pbm5lckhUTUwgPSBhOwogICAgICAgICAgICAg
ICAgICAgIGZvciAoYSA9ICJ0ZW1wbGF0ZSIgPT09IHRoaXMubG9jYWxOYW1lID8gZC5jb250ZW50
IDogZDsgZCA9IGEuX19zaGFkeV9uYXRpdmVfZmlyc3RDaGlsZDspIGIuX19zaGFkeV9uYXRpdmVf
aW5zZXJ0QmVmb3JlKGQsIHZvaWQgMCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQog
ICAgICAgIH0pKTsKICAgICAgICBEKEVsZW1lbnQucHJvdG90eXBlLCAic2V0QXR0cmlidXRlIGdl
dEF0dHJpYnV0ZSBoYXNBdHRyaWJ1dGUgcmVtb3ZlQXR0cmlidXRlIGZvY3VzIGJsdXIiLnNwbGl0
KCIgIikpOwogICAgICAgIEQoRWxlbWVudC5wcm90b3R5cGUsIHhiKTsKICAgICAgICBEKEhUTUxF
bGVtZW50LnByb3RvdHlwZSwgWyJmb2N1cyIsICJibHVyIiwgImNvbnRhaW5zIl0pOwogICAgICAg
IHBiICYmIEQoSFRNTEVsZW1lbnQucHJvdG90eXBlLAogICAgICAgICAgICBbInBhcmVudEVsZW1l
bnQiLCAiY2hpbGRyZW4iLCAiaW5uZXJIVE1MIl0pOwogICAgICAgIHdpbmRvdy5IVE1MVGVtcGxh
dGVFbGVtZW50ICYmIEQod2luZG93LkhUTUxUZW1wbGF0ZUVsZW1lbnQucHJvdG90eXBlLCBbImlu
bmVySFRNTCJdKTsKICAgICAgICBwYiA/IEQoRG9jdW1lbnRGcmFnbWVudC5wcm90b3R5cGUsIHdi
KSA6IHRiKERvY3VtZW50RnJhZ21lbnQucHJvdG90eXBlLCBhKTsKICAgICAgICBEKERvY3VtZW50
RnJhZ21lbnQucHJvdG90eXBlLCB4Yik7CiAgICAgICAgcGIgPyAoRChEb2N1bWVudC5wcm90b3R5
cGUsIHdiKSwgRChEb2N1bWVudC5wcm90b3R5cGUsIFsiYWN0aXZlRWxlbWVudCJdKSkgOiB0YihE
b2N1bWVudC5wcm90b3R5cGUsIGEpOwogICAgICAgIEQoRG9jdW1lbnQucHJvdG90eXBlLCBbImlt
cG9ydE5vZGUiLCAiZ2V0RWxlbWVudEJ5SWQiXSk7CiAgICAgICAgRChEb2N1bWVudC5wcm90b3R5
cGUsIHhiKQogICAgfTt2YXIgemIgPSBCKHsKICAgICAgICBnZXQgY2hpbGROb2RlcygpIHsKICAg
ICAgICAgICAgcmV0dXJuIHRoaXMuX19zaGFkeV9jaGlsZE5vZGVzCiAgICAgICAgfSwgZ2V0IGZp
cnN0Q2hpbGQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9fc2hhZHlfZmlyc3RDaGlsZAog
ICAgICAgIH0sIGdldCBsYXN0Q2hpbGQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9fc2hh
ZHlfbGFzdENoaWxkCiAgICAgICAgfSwgZ2V0IHRleHRDb250ZW50KCkgewogICAgICAgICAgICBy
ZXR1cm4gdGhpcy5fX3NoYWR5X3RleHRDb250ZW50CiAgICAgICAgfSwgc2V0IHRleHRDb250ZW50
KGEpIHsKICAgICAgICAgICAgdGhpcy5fX3NoYWR5X3RleHRDb250ZW50ID0gYQogICAgICAgIH0s
IGdldCBjaGlsZEVsZW1lbnRDb3VudCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX19zaGFk
eV9jaGlsZEVsZW1lbnRDb3VudAogICAgICAgIH0sIGdldCBjaGlsZHJlbigpIHsKICAgICAgICAg
ICAgcmV0dXJuIHRoaXMuX19zaGFkeV9jaGlsZHJlbgogICAgICAgIH0sIGdldCBmaXJzdEVsZW1l
bnRDaGlsZCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX19zaGFkeV9maXJzdEVsZW1lbnRD
aGlsZAogICAgICAgIH0sIGdldCBsYXN0RWxlbWVudENoaWxkKCkgewogICAgICAgICAgICByZXR1
cm4gdGhpcy5fX3NoYWR5X2xhc3RFbGVtZW50Q2hpbGQKICAgICAgICB9LCBnZXQgaW5uZXJIVE1M
KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5fX3NoYWR5X2lubmVySFRNTAogICAgICAgIH0s
CiAgICAgICAgc2V0IGlubmVySFRNTChhKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLl9fc2hh
ZHlfaW5uZXJIVE1MID0gYQogICAgICAgIH0sIGdldCBzaGFkb3dSb290KCkgewogICAgICAgICAg
ICByZXR1cm4gdGhpcy5fX3NoYWR5X3NoYWRvd1Jvb3QKICAgICAgICB9CiAgICB9KSwgQWIgPSBC
KHsKICAgICAgICBnZXQgcGFyZW50RWxlbWVudCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMu
X19zaGFkeV9wYXJlbnRFbGVtZW50CiAgICAgICAgfSwgZ2V0IHBhcmVudE5vZGUoKSB7CiAgICAg
ICAgICAgIHJldHVybiB0aGlzLl9fc2hhZHlfcGFyZW50Tm9kZQogICAgICAgIH0sIGdldCBuZXh0
U2libGluZygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX19zaGFkeV9uZXh0U2libGluZwog
ICAgICAgIH0sIGdldCBwcmV2aW91c1NpYmxpbmcoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlz
Ll9fc2hhZHlfcHJldmlvdXNTaWJsaW5nCiAgICAgICAgfSwgZ2V0IG5leHRFbGVtZW50U2libGlu
ZygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX19zaGFkeV9uZXh0RWxlbWVudFNpYmxpbmcK
ICAgICAgICB9LCBnZXQgcHJldmlvdXNFbGVtZW50U2libGluZygpIHsKICAgICAgICAgICAgcmV0
dXJuIHRoaXMuX19zaGFkeV9wcmV2aW91c0VsZW1lbnRTaWJsaW5nCiAgICAgICAgfSwgZ2V0IGNs
YXNzTmFtZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX19zaGFkeV9jbGFzc05hbWUKICAg
ICAgICB9LAogICAgICAgIHNldCBjbGFzc05hbWUoYSkgewogICAgICAgICAgICByZXR1cm4gdGhp
cy5fX3NoYWR5X2NsYXNzTmFtZSA9IGEKICAgICAgICB9CiAgICB9KSwgQmI7CiAgICBmb3IgKEJi
IGluIHpiKSB6YltCYl0uZW51bWVyYWJsZSA9ICExOwogICAgZm9yICh2YXIgQ2IgaW4gQWIpIEFi
W0NiXS5lbnVtZXJhYmxlID0gITE7CiAgICB2YXIgRGIgPSB3Lm0gfHwgdy5KLCBFYiA9IERiID8g
ZnVuY3Rpb24gKCkgewogICAgfSA=</Default>
</Parameter>

<Parameter name="Frag8">
<Default>OiBmdW5jdGlvbiAoYSkgewogICAgICAgIHZhciBiID0gdShhKTsKICAgICAgICBiLmxhIHx8IChi
LmxhID0gITAsIEEoYSwgQWIpKQogICAgfSwgRmIgPSBEYiA/IGZ1bmN0aW9uICgpIHsKICAgIH0g
OiBmdW5jdGlvbiAoYSkgewogICAgICAgIHZhciBiID0gdShhKTsKICAgICAgICBiLmthIHx8IChi
LmthID0gITAsIEEoYSwgemIpKQogICAgfTsKICAgIHZhciBHYiA9ICJfX2V2ZW50V3JhcHBlcnMi
ICsgRGF0ZS5ub3coKSwgSGIgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGEgPSBPYmplY3Qu
Z2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKEV2ZW50LnByb3RvdHlwZSwgImNvbXBvc2VkIik7CiAg
ICAgICAgcmV0dXJuIGEgPyBmdW5jdGlvbiAoYikgewogICAgICAgICAgICByZXR1cm4gYS5nZXQu
Y2FsbChiKQogICAgICAgIH0gOiBudWxsCiAgICB9KCksIEliID0gewogICAgICAgIGJsdXI6ICEw
LAogICAgICAgIGZvY3VzOiAhMCwKICAgICAgICBmb2N1c2luOiAhMCwKICAgICAgICBmb2N1c291
dDogITAsCiAgICAgICAgY2xpY2s6ICEwLAogICAgICAgIGRibGNsaWNrOiAhMCwKICAgICAgICBt
b3VzZWRvd246ICEwLAogICAgICAgIG1vdXNlZW50ZXI6ICEwLAogICAgICAgIG1vdXNlbGVhdmU6
ICEwLAogICAgICAgIG1vdXNlbW92ZTogITAsCiAgICAgICAgbW91c2VvdXQ6ICEwLAogICAgICAg
IG1vdXNlb3ZlcjogITAsCiAgICAgICAgbW91c2V1cDogITAsCiAgICAgICAgd2hlZWw6ICEwLAog
ICAgICAgIGJlZm9yZWlucHV0OiAhMCwKICAgICAgICBpbnB1dDogITAsCiAgICAgICAga2V5ZG93
bjogITAsCiAgICAgICAga2V5dXA6ICEwLAogICAgICAgIGNvbXBvc2l0aW9uc3RhcnQ6ICEwLAog
ICAgICAgIGNvbXBvc2l0aW9udXBkYXRlOiAhMCwKICAgICAgICBjb21wb3NpdGlvbmVuZDogITAs
CiAgICAgICAgdG91Y2hzdGFydDogITAsCiAgICAgICAgdG91Y2hlbmQ6ICEwLAogICAgICAgIHRv
dWNobW92ZTogITAsCiAgICAgICAgdG91Y2hjYW5jZWw6ICEwLAogICAgICAgIHBvaW50ZXJvdmVy
OiAhMCwKICAgICAgICBwb2ludGVyZW50ZXI6ICEwLAogICAgICAgIHBvaW50ZXJkb3duOiAhMCwK
ICAgICAgICBwb2ludGVybW92ZTogITAsCiAgICAgICAgcG9pbnRlcnVwOiAhMCwKICAgICAgICBw
b2ludGVyY2FuY2VsOiAhMCwKICAgICAgICBwb2ludGVyb3V0OiAhMCwKICAgICAgICBwb2ludGVy
bGVhdmU6ICEwLAogICAgICAgIGdvdHBvaW50ZXJjYXB0dXJlOiAhMCwKICAgICAgICBsb3N0cG9p
bnRlcmNhcHR1cmU6ICEwLAogICAgICAgIGRyYWdzdGFydDogITAsCiAgICAgICAgZHJhZzogITAs
CiAgICAgICAgZHJhZ2VudGVyOiAhMCwKICAgICAgICBkcmFnbGVhdmU6ICEwLAogICAgICAgIGRy
YWdvdmVyOiAhMCwKICAgICAgICBkcm9wOiAhMCwKICAgICAgICBkcmFnZW5kOiAhMCwKICAgICAg
ICBET01BY3RpdmF0ZTogITAsCiAgICAgICAgRE9NRm9jdXNJbjogITAsCiAgICAgICAgRE9NRm9j
dXNPdXQ6ICEwLAogICAgICAgIGtleXByZXNzOiAhMAogICAgfSwgSmIgPSB7CiAgICAgICAgRE9N
QXR0ck1vZGlmaWVkOiAhMCwKICAgICAgICBET01BdHRyaWJ1dGVOYW1lQ2hhbmdlZDogITAsCiAg
ICAgICAgRE9NQ2hhcmFjdGVyRGF0YU1vZGlmaWVkOiAhMCwKICAgICAgICBET01FbGVtZW50TmFt
ZUNoYW5nZWQ6ICEwLAogICAgICAgIERPTU5vZGVJbnNlcnRlZDogITAsCiAgICAgICAgRE9NTm9k
ZUluc2VydGVkSW50b0RvY3VtZW50OiAhMCwKICAgICAgICBET01Ob2RlUmVtb3ZlZDogITAsCiAg
ICAgICAgRE9NTm9kZVJlbW92ZWRGcm9tRG9jdW1lbnQ6ICEwLAogICAgICAgIERPTVN1YnRyZWVN
b2RpZmllZDogITAKICAgIH07CgogICAgZnVuY3Rpb24gS2IoYSkgewogICAgICAgIHJldHVybiBh
IGluc3RhbmNlb2YgTm9kZSA/IGEuX19zaGFkeV9nZXRSb290Tm9kZSgpIDogYQogICAgfQoKICAg
IGZ1bmN0aW9uIExiKGEsIGIpIHsKICAgICAgICB2YXIgYyA9IFtdLCBkID0gYTsKICAgICAgICBm
b3IgKGEgPSBLYihhKTsgZDspIGMucHVzaChkKSwgZC5fX3NoYWR5X2Fzc2lnbmVkU2xvdCA/IGQg
PSBkLl9fc2hhZHlfYXNzaWduZWRTbG90IDogZC5ub2RlVHlwZSA9PT0gTm9kZS5ET0NVTUVOVF9G
UkFHTUVOVF9OT0RFICYmIGQuaG9zdCAmJiAoYiB8fCBkICE9PSBhKSA/IGQgPSBkLmhvc3QgOiBk
ID0gZC5fX3NoYWR5X3BhcmVudE5vZGU7CiAgICAgICAgY1tjLmxlbmd0aCAtIDFdID09PSBkb2N1
bWVudCAmJiBjLnB1c2god2luZG93KTsKICAgICAgICByZXR1cm4gYwogICAgfQoKICAgIGZ1bmN0
aW9uIE1iKGEpIHsKICAgICAgICBhLl9fY29tcG9zZWRQYXRoIHx8IChhLl9fY29tcG9zZWRQYXRo
ID0gTGIoYS50YXJnZXQsICEwKSk7CiAgICAgICAgcmV0dXJuIGEuX19jb21wb3NlZFBhdGgKICAg
IH0KCiAgICBmdW5jdGlvbiBOYihhLCBiKSB7CiAgICAgICAgaWYgKCF6KSByZXR1cm4gYTsKICAg
ICAgICBhID0gTGIoYSwgITApOwogICAgICAgIGZvciAodmFyIGMgPSAwLCBkLCBlID0gdm9pZCAw
LCBmLCBnID0gdm9pZCAwOyBjIDwgYi5sZW5ndGg7IGMrKykgaWYgKGQgPSBiW2NdLCBmID0gS2Io
ZCksIGYgIT09IGUgJiYgKGcgPSBhLmluZGV4T2YoZiksIGUgPSBmKSwgIXooZikgfHwgLTEgPCBn
KSByZXR1cm4gZAogICAgfQoKICAgIGZ1bmN0aW9uIE9iKGEpIHsKICAgICAgICBmdW5jdGlvbiBi
KGIsIGQpIHsKICAgICAgICAgICAgYiA9IG5ldyBhKGIsIGQpOwogICAgICAgICAgICBiLl9fY29t
cG9zZWQgPSBkICYmICEhZC5jb21wb3NlZDsKICAgICAgICAgICAgcmV0dXJuIGIKICAgICAgICB9
CgogICAgICAgIGIuX19wcm90b19fID0gYTsKICAgICAgICBiLnByb3RvdHlwZSA9IGEucHJvdG90
eXBlOwogICAgICAgIHJldHVybiBiCiAgICB9CgogICAgdmFyIFBiID0ge2ZvY3VzOiAhMCwgYmx1
cjogITB9OwoKICAgIGZ1bmN0aW9uIFFiKGEpIHsKICAgICAgICByZXR1cm4gYS5fX3RhcmdldCAh
PT0gYS50YXJnZXQgfHwgYS5fX3JlbGF0ZWRUYXJnZXQgIT09IGEucmVsYXRlZFRhcmdldAogICAg
fQoKICAgIGZ1bmN0aW9uIFJiKGEsIGIsIGMpIHsKICAgICAgICBpZiAoYyA9IGIuX19oYW5kbGVy
cyAmJiBiLl9faGFuZGxlcnNbYS50eXBlXSAmJiBiLl9faGFuZGxlcnNbYS50eXBlXVtjXSkgZm9y
ICh2YXIgZCA9IDAsIGU7IChlID0gY1tkXSkgJiYgKCFRYihhKSB8fCBhLnRhcmdldCAhPT0gYS5y
ZWxhdGVkVGFyZ2V0KSAmJiAoZS5jYWxsKGIsIGEpLCAhYS5fX2ltbWVkaWF0ZVByb3BhZ2F0aW9u
U3RvcHBlZCk7IGQrKykgOwogICAgfQoKICAgIGZ1bmN0aW9uIFNiKGEpIHsKICAgICAgICB2YXIg
YiA9IGEuY29tcG9zZWRQYXRoKCk7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsICJj
dXJyZW50VGFyZ2V0IiwgewogICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAg
ICAgICAgIHJldHVybiBkCiAgICAgICAgICAgIH0sIGNvbmZpZ3VyYWJsZTogITAKICAgICAgICB9
KTsKICAgICAgICBmb3IgKHZhciBjID0gYi5sZW5ndGggLSAxOyAwIDw9IGM7IGMtLSkgewogICAg
ICAgICAgICB2YXIgZCA9IGJbY107CiAgICAgICAgICAgIFJiKGEsIGQsICJjYXB0dXJlIik7CiAg
ICAgICAgICAgIGlmIChhLlopIHJldHVybgogICAgICAgIH0KICAgICAgICBPYmplY3QuZGVmaW5l
UHJvcGVydHkoYSwgImV2ZW50UGhhc2UiLCB7CiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkg
ewogICAgICAgICAgICAgICAgcmV0dXJuIEV2ZW50LkFUX1RBUkdFVAogICAgICAgICAgICB9CiAg
ICAgICAgfSk7CiAgICAgICAgdmFyIGU7CiAgICAgICAgZm9yIChjID0gMDsgYyA8IGIubGVuZ3Ro
OyBjKyspIHsKICAgICAgICAgICAgZCA9IGJbY107CiAgICAgICAgICAgIHZhciBmID0gdihkKTsK
ICAgICAgICAgICAgZiA9IGYgJiYgZi5yb290OwogICAgICAgICAgICBpZiAoMCA9PT0gYyB8fCBm
ICYmIGYgPT09IGUpIGlmIChSYihhLCBkLCAiYnViYmxlIiksIGQgIT09IHdpbmRvdyAmJiAoZSA9
IGQuX19zaGFkeV9nZXRSb290Tm9kZSgpKSwgYS5aKSBicmVhawogICAgICAgIH0KICAgIH0KCiAg
ICBmdW5jdGlvbiBUYihhLCBiLCBjLCBkLCBlLCBmKSB7CiAgICAgICAgZm9yICh2YXIgZyA9IDA7
IGcgPCBhLmxlbmd0aDsgZysrKSB7CiAgICAgICAgICAgIHZhciBoID0gYVtnXSwgayA9IGgudHlw
ZSwgbCA9IGguY2FwdHVyZSwgbSA9IGgub25jZSwgcSA9IGgucGFzc2l2ZTsKICAgICAgICAgICAg
aWYgKGIgPT09IGgubm9kZSAmJiBjID09PSBrICYmIGQgPT09IGwgJiYgZSA9PT0gbSAmJiBmID09
PSBxKSByZXR1cm4gZwogICAgICAgIH0KICAgICAgICByZXR1cm4gLTEKICAgIH0KCiAgICBmdW5j
dGlvbiBVYihhLCBiLCBjKSB7CiAgICAgICAgaWYgKGIpIHsKICAgICAgICAgICAgdmFyIGQgPSB0
eXBlb2YgYjsKICAgICAgICAgICAgaWYgKCJmdW5jdGlvbiIgPT09IGQgfHwgIm9iamVjdCIgPT09
IGQpIGlmICgib2JqZWN0IiAhPT0gZCB8fCBiLmhhbmRsZUV2ZW50ICYmICJmdW5jdGlvbiIgPT09
IHR5cGVvZiBiLmhhbmRsZUV2ZW50KSB7CiAgICAgICAgICAgICAgICBpZiAoSmJbYV0pIHJldHVy
biB0aGlzLl9fc2hhZHlfbmF0aXZlX2FkZEV2ZW50TGlzdGVuZXIoYSwgYiwgYyk7CiAgICAgICAg
ICAgICAgICBpZiAoYyAmJiAib2JqZWN0IiA9PT0gdHlwZW9mIGMpIHsKICAgICAgICAgICAgICAg
ICAgICB2YXIgZSA9ICEhYy5jYXB0dXJlOwogICAgICAgICAgICAgICAgICAgIHZhciBmID0gISFj
Lm9uY2U7CiAgICAgICAgICAgICAgICAgICAgdmFyIGcgPSAhIWMucGFzc2l2ZQogICAgICAgICAg
ICAgICAgfSBlbHNlIGUgPSAhIWMsIGcgPSBmID0gITE7CiAgICAgICAgICAgICAgICB2YXIgaCA9
IGMgJiYgYy4kIHx8IHRoaXMsIGsgPSBiW0diXTsKICAgICAgICAgICAgICAgIGlmIChrKSB7CiAg
ICAgICAgICAgICAgICAgICAgaWYgKC0xIDwgVGIoaywgaCwgYSwgZSwgZiwgZykpIHJldHVybgog
ICAgICAgICAgICAgICAgfSBlbHNlIGJbR2JdID0gW107CiAgICAgICAgICAgICAgICBrID0gZnVu
Y3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgICBmICYmIHRoaXMuX19zaGFkeV9yZW1vdmVF
dmVudExpc3RlbmVyKGEsIGIsIGMpOwogICAgICAgICAgICAgICAgICAgIGUuX190YXJnZXQgfHwg
VmIoZSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKGggIT09IHRoaXMpIHsKICAgICAgICAgICAg
ICAgICAgICAgICAgdmFyIGcgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsICJj
dXJyZW50VGFyZ2V0Iik7CiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9w
ZXJ0eShlLCAiY3VycmVudFRhcmdldCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdl
dDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBo
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBjb25maWd1cmFibGU6ICEwCiAgICAgICAg
ICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAg
ICAgIGUuX19wcmV2aW91c0N1cnJlbnRUYXJnZXQgPSBlLmN1cnJlbnRUYXJnZXQ7CiAgICAgICAg
ICAgICAgICAgICAgaWYgKCF6KGgpIHx8IC0xICE9IGUuY29tcG9zZWRQYXRoKCkuaW5kZXhPZiho
KSkgaWYgKGUuY29tcG9zZWQgfHwgLTEgPCBlLmNvbXBvc2VkUGF0aCgpLmluZGV4T2YoaCkpIGlm
IChRYihlKSAmJiBlLnRhcmdldCA9PT0gZS5yZWxhdGVkVGFyZ2V0KSBlLmV2ZW50UGhhc2UgPT09
IEV2ZW50LkJVQkJMSU5HX1BIQVNFICYmIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7IGVs
c2UgaWYgKGUuZXZlbnRQaGFzZSA9PT0gRXZlbnQuQ0FQVFVSSU5HX1BIQVNFIHx8IGUuYnViYmxl
cyB8fCBlLnRhcmdldCA9PT0gaCB8fCBoIGluc3RhbmNlb2YgV2luZG93KSB7CiAgICAgICAgICAg
ICAgICAgICAgICAgIHZhciBrID0gImZ1bmN0aW9uIiA9PT0gZCA/IGIuY2FsbChoLCBlKSA6IGIu
aGFuZGxlRXZlbnQgJiYgYi5oYW5kbGVFdmVudChlKTsKICAgICAgICAgICAgICAgICAgICAgICAg
aCAhPT0gdGhpcyAmJiAoZyA/IChPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICJjdXJyZW50VGFyZ2V0IiwgZyksIGcgPSBudWxsKSA6IGRlbGV0ZSBl
LmN1cnJlbnRUYXJnZXQpOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gawogICAgICAg
ICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBiW0diXS5w
dXNoKHtub2RlOiBoLCB0eXBlOiBhLCBjYXB0dXJlOiBlLCBvbmNlOiBmLCBwYXNzaXZlOiBnLCBZ
YToga30pOwogICAgICAgICAgICAgICAgUGJbYV0gPyAodGhpcy5fX2hhbmRsZXJzID0gdGhpcy5f
X2hhbmRsZXJzIHx8IHt9LCB0aGlzLl9faGFuZGxlcnNbYV0gPSB0aGlzLl9faGFuZGxlcnNbYV0g
fHwgewogICAgICAgICAgICAgICAgICAgIGNhcHR1cmU6IFtdLAogICAgICAgICAgICAgICAgICAg
IGJ1YmJsZTogW10KICAgICAgICAgICAgICAgIH0sIHRoaXMuX19oYW5kbGVyc1thXVtlID8gImNh
cHR1cmUiIDogImJ1YmJsZSJdLnB1c2goaykpIDogdGhpcy5fX3NoYWR5X25hdGl2ZV9hZGRFdmVu
dExpc3RlbmVyKGEsIGssIGMpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CgogICAgZnVu
Y3Rpb24gV2IoYSwgYiwgYykgewogICAgICAgIGlmIChiKSB7CiAgICAgICAgICAgIGlmIChKYlth
XSkgcmV0dXJuIHRoaXMuX19zaGFkeV9uYXRpdmVfcmVtb3ZlRXZlbnRMaXN0ZW5lcihhLCBiLCBj
KTsKICAgICAgICAgICAgaWYgKGMgJiYgIm9iamVjdCIgPT09IHR5cGVvZiBjKSB7CiAgICAgICAg
ICAgICAgICB2YXIgZCA9ICEhYy5jYXB0dXJlOwogICAgICAgICAgICAgICAgdmFyIGUgPSAhIWMu
b25jZTsKICAgICAgICAgICAgICAgIHZhciBmID0gISFjLnBhc3NpdmUKICAgICAgICAgICAgfSBl
bHNlIGQgPSAhIWMsIGYgPSBlID0gITE7CiAgICAgICAgICAgIHZhciBnID0gYyAmJiBjLiQgfHwg
dGhpcywgaCA9IHZvaWQgMDsKICAgICAgICAgICAgdmFyIGsgPSBudWxsOwogICAgICAgICAgICB0
cnkgewogICAgICAgICAgICAgICAgayA9IGJbR2JdCiAgICAgICAgICAgIH0gY2F0Y2ggKGwpIHsK
ICAgICAgICAgICAgfQogICAgICAgICAgICBrICYmIChlID0gVGIoaywgZywgYSwgZCwgZSwgZiks
IC0xIDwgZSAmJiAoaCA9IGsuc3BsaWNlKGUsIDEpWzBdLllhLCBrLmxlbmd0aCB8fCAoYltHYl0g
PSB2b2lkIDApKSk7CiAgICAgICAgICAgIHRoaXMuX19zaGFkeV9uYXRpdmVfcmVtb3ZlRXZlbnRM
aXN0ZW5lcihhLCBoIHx8IGIsIGMpOwogICAgICAgICAgICBoICYmIFBiW2FdICYmIHRoaXMuX19o
YW5kbGVycyAmJiB0aGlzLl9faGFuZGxlcnNbYV0gJiYgKGEgPSB0aGlzLl9faGFuZGxlcnNbYV1b
ZCA/ICJjYXB0dXJlIiA6ICJidWJibGUiXSwgaCA9IGEuaW5kZXhPZihoKSwgLTEgPCBoICYmIGEu
c3BsaWNlKGgsIDEpKQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBYYigpIHsKICAgICAg
ICBmb3IgKHZhciBhIGluIFBiKSB3aW5kb3cuX19zaGFkeV9uYXRpdmVfYWRkRXZlbnRMaXN0ZW5l
cihhLCBmdW5jdGlvbiAoYSkgewogICAgICAgICAgICBhLl9fdGFyZ2V0IHx8IChWYihhKSwgU2Io
YSkpCiAgICAgICAgfSwgITApCiAgICB9CgogICAgdmFyIFliID0gQih7CiAgICAgICAgZ2V0IGNv
bXBvc2VkKCkgewogICAgICAgICAgICB2b2lkIDAgPT09IHRoaXMuX19jb21wb3NlZCAmJiAoSGIg
PyB0aGlzLl9fY29tcG9zZWQgPSAiZm9jdXNpbiIgPT09IHRoaXMudHlwZSB8fCAiZm9jdXNvdXQi
ID09PSB0aGlzLnR5cGUgfHwgSGIodGhpcykgOiAhMSAhPT0gdGhpcy5pc1RydXN0ZWQgJiYgKHRo
aXMuX19jb21wb3NlZCA9IEliW3RoaXMudHlwZV0pKTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMu
X19jb21wb3NlZCB8fCAhMQogICAgICAgIH0sIGNvbXBvc2VkUGF0aDogZnVuY3Rpb24gKCkgewog
ICAgICAgICAgICB0aGlzLl9fY28=</Default>
</Parameter>

<Parameter name="Frag9">
<Default>bXBvc2VkUGF0aCB8fCAodGhpcy5fX2NvbXBvc2VkUGF0aCA9IExiKHRoaXMuX190YXJnZXQsIHRo
aXMuY29tcG9zZWQpKTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuX19jb21wb3NlZFBhdGgKICAg
ICAgICB9LCBnZXQgdGFyZ2V0KCkgewogICAgICAgICAgICByZXR1cm4gTmIodGhpcy5jdXJyZW50
VGFyZ2V0IHx8IHRoaXMuX19wcmV2aW91c0N1cnJlbnRUYXJnZXQsIHRoaXMuY29tcG9zZWRQYXRo
KCkpCiAgICAgICAgfSwgZ2V0IHJlbGF0ZWRUYXJnZXQoKSB7CiAgICAgICAgICAgIGlmICghdGhp
cy5fX3JlbGF0ZWRUYXJnZXQpIHJldHVybiBudWxsOwogICAgICAgICAgICB0aGlzLl9fcmVsYXRl
ZFRhcmdldENvbXBvc2VkUGF0aCB8fAogICAgICAgICAgICAodGhpcy5fX3JlbGF0ZWRUYXJnZXRD
b21wb3NlZFBhdGggPSBMYih0aGlzLl9fcmVsYXRlZFRhcmdldCwgITApKTsKICAgICAgICAgICAg
cmV0dXJuIE5iKHRoaXMuY3VycmVudFRhcmdldCB8fCB0aGlzLl9fcHJldmlvdXNDdXJyZW50VGFy
Z2V0LCB0aGlzLl9fcmVsYXRlZFRhcmdldENvbXBvc2VkUGF0aCkKICAgICAgICB9LCBzdG9wUHJv
cGFnYXRpb246IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgRXZlbnQucHJvdG90eXBlLnN0b3BQ
cm9wYWdhdGlvbi5jYWxsKHRoaXMpOwogICAgICAgICAgICB0aGlzLlogPSAhMAogICAgICAgIH0s
IHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBFdmVu
dC5wcm90b3R5cGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uLmNhbGwodGhpcyk7CiAgICAgICAg
ICAgIHRoaXMuWiA9IHRoaXMuX19pbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQgPSAhMAogICAg
ICAgIH0KICAgIH0pOwoKICAgIGZ1bmN0aW9uIFZiKGEpIHsKICAgICAgICBhLl9fdGFyZ2V0ID0g
YS50YXJnZXQ7CiAgICAgICAgYS5fX3JlbGF0ZWRUYXJnZXQgPSBhLnJlbGF0ZWRUYXJnZXQ7CiAg
ICAgICAgaWYgKHcubSkgewogICAgICAgICAgICB2YXIgYiA9IE9iamVjdC5nZXRQcm90b3R5cGVP
ZihhKTsKICAgICAgICAgICAgaWYgKCFPYmplY3QuaGFzT3duUHJvcGVydHkoYiwgIl9fc2hhZHlf
cGF0Y2hlZFByb3RvIikpIHsKICAgICAgICAgICAgICAgIHZhciBjID0gT2JqZWN0LmNyZWF0ZShi
KTsKICAgICAgICAgICAgICAgIGMuX19zaGFkeV9zb3VyY2VQcm90byA9IGI7CiAgICAgICAgICAg
ICAgICBBKGMsIFliKTsKICAgICAgICAgICAgICAgIGIuX19zaGFkeV9wYXRjaGVkUHJvdG8gPSBj
CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYS5fX3Byb3RvX18gPSBiLl9fc2hhZHlfcGF0Y2hl
ZFByb3RvCiAgICAgICAgfSBlbHNlIEEoYSwgWWIpCiAgICB9CgogICAgdmFyIFpiID0gT2IoRXZl
bnQpLCAkYiA9IE9iKEN1c3RvbUV2ZW50KSwgYWMgPSBPYihNb3VzZUV2ZW50KTsKCiAgICBmdW5j
dGlvbiBiYygpIHsKICAgICAgICBpZiAoIUhiICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2Ny
aXB0b3IoRXZlbnQucHJvdG90eXBlLCAiaXNUcnVzdGVkIikpIHsKICAgICAgICAgICAgdmFyIGEg
PSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgYSA9IG5ldyBNb3VzZUV2ZW50KCJj
bGljayIsIHtidWJibGVzOiAhMCwgY2FuY2VsYWJsZTogITAsIGNvbXBvc2VkOiAhMH0pOwogICAg
ICAgICAgICAgICAgdGhpcy5fX3NoYWR5X2Rpc3BhdGNoRXZlbnQoYSkKICAgICAgICAgICAgfTsK
ICAgICAgICAgICAgRWxlbWVudC5wcm90b3R5cGUuY2xpY2sgPyBFbGVtZW50LnByb3RvdHlwZS5j
bGljayA9IGEgOiBIVE1MRWxlbWVudC5wcm90b3R5cGUuY2xpY2sgJiYgKEhUTUxFbGVtZW50LnBy
b3RvdHlwZS5jbGljayA9IGEpCiAgICAgICAgfQogICAgfQoKICAgIHZhciBjYyA9IE9iamVjdC5n
ZXRPd25Qcm9wZXJ0eU5hbWVzKERvY3VtZW50LnByb3RvdHlwZSkuZmlsdGVyKGZ1bmN0aW9uIChh
KSB7CiAgICAgICAgcmV0dXJuICJvbiIgPT09IGEuc3Vic3RyaW5nKDAsIDIpCiAgICB9KTsKCiAg
ICBmdW5jdGlvbiBkYyhhLCBiKSB7CiAgICAgICAgcmV0dXJuIHtpbmRleDogYSwgTDogW10sIFI6
IGJ9CiAgICB9CgogICAgZnVuY3Rpb24gZWMoYSwgYiwgYywgZCkgewogICAgICAgIHZhciBlID0g
MCwgZiA9IDAsIGcgPSAwLCBoID0gMCwgayA9IE1hdGgubWluKGIgLSBlLCBkIC0gZik7CiAgICAg
ICAgaWYgKDAgPT0gZSAmJiAwID09IGYpIGE6ewogICAgICAgICAgICBmb3IgKGcgPSAwOyBnIDwg
azsgZysrKSBpZiAoYVtnXSAhPT0gY1tnXSkgYnJlYWsgYTsKICAgICAgICAgICAgZyA9IGsKICAg
ICAgICB9CiAgICAgICAgaWYgKGIgPT0gYS5sZW5ndGggJiYgZCA9PSBjLmxlbmd0aCkgewogICAg
ICAgICAgICBoID0gYS5sZW5ndGg7CiAgICAgICAgICAgIGZvciAodmFyIGwgPSBjLmxlbmd0aCwg
bSA9IDA7IG0gPCBrIC0gZyAmJiBmYyhhWy0taF0sIGNbLS1sXSk7KSBtKys7CiAgICAgICAgICAg
IGggPSBtCiAgICAgICAgfQogICAgICAgIGUgKz0gZzsKICAgICAgICBmICs9IGc7CiAgICAgICAg
YiAtPSBoOwogICAgICAgIGQgLT0gaDsKICAgICAgICBpZiAoMCA9PSBiIC0gZSAmJiAwID09IGQg
LSBmKSByZXR1cm4gW107CiAgICAgICAgaWYgKGUgPT0gYikgewogICAgICAgICAgICBmb3IgKGIg
PSBkYyhlLCAwKTsgZiA8IGQ7KSBiLkwucHVzaChjW2YrK10pOwogICAgICAgICAgICByZXR1cm4g
W2JdCiAgICAgICAgfQogICAgICAgIGlmIChmID09IGQpIHJldHVybiBbZGMoZSwgYiAtIGUpXTsK
ICAgICAgICBrID0gZTsKICAgICAgICBnID0gZjsKICAgICAgICBkID0gZCAtIGcgKyAxOwogICAg
ICAgIGggPSBiIC0gayArIDE7CiAgICAgICAgYiA9IEFycmF5KGQpOwogICAgICAgIGZvciAobCA9
IDA7IGwgPCBkOyBsKyspIGJbbF0gPSBBcnJheShoKSwgYltsXVswXSA9IGw7CiAgICAgICAgZm9y
IChsID0gMDsgbCA8IGg7IGwrKykgYlswXVtsXSA9IGw7CiAgICAgICAgZm9yIChsID0gMTsgbCA8
IGQ7IGwrKykgZm9yIChtID0gMTsgbSA8IGg7IG0rKykgaWYgKGFbayArIG0gLSAxXSA9PT0gY1tn
ICsgbCAtIDFdKSBiW2xdW21dID0KICAgICAgICAgICAgYltsIC0gMV1bbSAtIDFdOyBlbHNlIHsK
ICAgICAgICAgICAgdmFyIHEgPSBiW2wgLSAxXVttXSArIDEsIHggPSBiW2xdW20gLSAxXSArIDE7
CiAgICAgICAgICAgIGJbbF1bbV0gPSBxIDwgeCA/IHEgOiB4CiAgICAgICAgfQogICAgICAgIGsg
PSBiLmxlbmd0aCAtIDE7CiAgICAgICAgZyA9IGJbMF0ubGVuZ3RoIC0gMTsKICAgICAgICBkID0g
YltrXVtnXTsKICAgICAgICBmb3IgKGEgPSBbXTsgMCA8IGsgfHwgMCA8IGc7KSAwID09IGsgPyAo
YS5wdXNoKDIpLCBnLS0pIDogMCA9PSBnID8gKGEucHVzaCgzKSwgay0tKSA6IChoID0gYltrIC0g
MV1bZyAtIDFdLCBsID0gYltrIC0gMV1bZ10sIG0gPSBiW2tdW2cgLSAxXSwgcSA9IGwgPCBtID8g
bCA8IGggPyBsIDogaCA6IG0gPCBoID8gbSA6IGgsIHEgPT0gaCA/IChoID09IGQgPyBhLnB1c2go
MCkgOiAoYS5wdXNoKDEpLCBkID0gaCksIGstLSwgZy0tKSA6IHEgPT0gbCA/IChhLnB1c2goMyks
IGstLSwgZCA9IGwpIDogKGEucHVzaCgyKSwgZy0tLCBkID0gbSkpOwogICAgICAgIGEucmV2ZXJz
ZSgpOwogICAgICAgIGIgPSB2b2lkIDA7CiAgICAgICAgayA9IFtdOwogICAgICAgIGZvciAoZyA9
IDA7IGcgPCBhLmxlbmd0aDsgZysrKSBzd2l0Y2ggKGFbZ10pIHsKICAgICAgICAgICAgY2FzZSAw
OgogICAgICAgICAgICAgICAgYiAmJiAoay5wdXNoKGIpLCBiID0gdm9pZCAwKTsKICAgICAgICAg
ICAgICAgIGUrKzsKICAgICAgICAgICAgICAgIGYrKzsKICAgICAgICAgICAgICAgIGJyZWFrOwog
ICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBiIHx8IChiID0gZGMoZSwgMCkpOwog
ICAgICAgICAgICAgICAgYi5SKys7CiAgICAgICAgICAgICAgICBlKys7CiAgICAgICAgICAgICAg
ICBiLkwucHVzaChjW2ZdKTsKICAgICAgICAgICAgICAgIGYrKzsKICAgICAgICAgICAgICAgIGJy
ZWFrOwogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBiIHx8IChiID0gZGMoZSwg
MCkpOwogICAgICAgICAgICAgICAgYi5SKys7CiAgICAgICAgICAgICAgICBlKys7CiAgICAgICAg
ICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgYiB8fCAo
YiA9IGRjKGUsIDApKSwgYi5MLnB1c2goY1tmXSksIGYrKwogICAgICAgIH0KICAgICAgICBiICYm
IGsucHVzaChiKTsKICAgICAgICByZXR1cm4gawogICAgfQoKICAgIGZ1bmN0aW9uIGZjKGEsIGIp
IHsKICAgICAgICByZXR1cm4gYSA9PT0gYgogICAgfTsKCiAgICBmdW5jdGlvbiBnYyhhLCBiLCBj
KSB7CiAgICAgICAgRWIoYSk7CiAgICAgICAgYyA9IGMgfHwgbnVsbDsKICAgICAgICB2YXIgZCA9
IHUoYSksIGUgPSB1KGIpLCBmID0gYyA/IHUoYykgOiBudWxsOwogICAgICAgIGQucHJldmlvdXNT
aWJsaW5nID0gYyA/IGYucHJldmlvdXNTaWJsaW5nIDogYi5fX3NoYWR5X2xhc3RDaGlsZDsKICAg
ICAgICBpZiAoZiA9IHYoZC5wcmV2aW91c1NpYmxpbmcpKSBmLm5leHRTaWJsaW5nID0gYTsKICAg
ICAgICBpZiAoZiA9IHYoZC5uZXh0U2libGluZyA9IGMpKSBmLnByZXZpb3VzU2libGluZyA9IGE7
CiAgICAgICAgZC5wYXJlbnROb2RlID0gYjsKICAgICAgICBjID8gYyA9PT0gZS5maXJzdENoaWxk
ICYmIChlLmZpcnN0Q2hpbGQgPSBhKSA6IChlLmxhc3RDaGlsZCA9IGEsIGUuZmlyc3RDaGlsZCB8
fCAoZS5maXJzdENoaWxkID0gYSkpOwogICAgICAgIGUuY2hpbGROb2RlcyA9IG51bGwKICAgIH0K
CiAgICBmdW5jdGlvbiBoYyhhLCBiLCBjKSB7CiAgICAgICAgRmIoYik7CiAgICAgICAgdmFyIGQg
PSB1KGIpOwogICAgICAgIHZvaWQgMCAhPT0gZC5maXJzdENoaWxkICYmIChkLmNoaWxkTm9kZXMg
PSBudWxsKTsKICAgICAgICBpZiAoYS5ub2RlVHlwZSA9PT0gTm9kZS5ET0NVTUVOVF9GUkFHTUVO
VF9OT0RFKSB7CiAgICAgICAgICAgIGQgPSBhLl9fc2hhZHlfY2hpbGROb2RlczsKICAgICAgICAg
ICAgZm9yICh2YXIgZSA9IDA7IGUgPCBkLmxlbmd0aDsgZSsrKSBnYyhkW2VdLCBiLCBjKTsKICAg
ICAgICAgICAgYSA9IHUoYSk7CiAgICAgICAgICAgIGIgPSB2b2lkIDAgIT09IGEuZmlyc3RDaGls
ZCA/IG51bGwgOiB2b2lkIDA7CiAgICAgICAgICAgIGEuZmlyc3RDaGlsZCA9IGEubGFzdENoaWxk
ID0gYjsKICAgICAgICAgICAgYS5jaGlsZE5vZGVzID0gYgogICAgICAgIH0gZWxzZSBnYyhhLCBi
LCBjKQogICAgfQoKICAgIGZ1bmN0aW9uIGljKGEsIGIpIHsKICAgICAgICB2YXIgYyA9IHUoYSk7
CiAgICAgICAgYiA9IHUoYik7CiAgICAgICAgYSA9PT0gYi5maXJzdENoaWxkICYmIChiLmZpcnN0
Q2hpbGQgPSBjLm5leHRTaWJsaW5nKTsKICAgICAgICBhID09PSBiLmxhc3RDaGlsZCAmJiAoYi5s
YXN0Q2hpbGQgPSBjLnByZXZpb3VzU2libGluZyk7CiAgICAgICAgYSA9IGMucHJldmlvdXNTaWJs
aW5nOwogICAgICAgIHZhciBkID0gYy5uZXh0U2libGluZzsKICAgICAgICBhICYmICh1KGEpLm5l
eHRTaWJsaW5nID0gZCk7CiAgICAgICAgZCAmJiAodShkKS5wcmV2aW91c1NpYmxpbmcgPSBhKTsK
ICAgICAgICBjLnBhcmVudE5vZGUgPSBjLnByZXZpb3VzU2libGluZyA9IGMubmV4dFNpYmxpbmcg
PSB2b2lkIDA7CiAgICAgICAgdm9pZCAwICE9PSBiLmNoaWxkTm9kZXMgJiYgKGIuY2hpbGROb2Rl
cyA9IG51bGwpCiAgICB9CgogICAgZnVuY3Rpb24gamMoYSkgewogICAgICAgIHZhciBiID0gdShh
KTsKICAgICAgICBpZiAodm9pZCAwID09PSBiLmZpcnN0Q2hpbGQpIHsKICAgICAgICAgICAgYi5j
aGlsZE5vZGVzID0gbnVsbDsKICAgICAgICAgICAgdmFyIGMgPSBiLmZpcnN0Q2hpbGQgPSBhLl9f
c2hhZHlfbmF0aXZlX2ZpcnN0Q2hpbGQgfHwgbnVsbDsKICAgICAgICAgICAgYi5sYXN0Q2hpbGQg
PSBhLl9fc2hhZHlfbmF0aXZlX2xhc3RDaGlsZCB8fCBudWxsOwogICAgICAgICAgICBGYihhKTsK
ICAgICAgICAgICAgYiA9IGM7CiAgICAgICAgICAgIGZvciAoYyA9IHZvaWQgMDsgYjsgYiA9IGIu
X19zaGFkeV9uYXRpdmVfbmV4dFNpYmxpbmcpIHsKICAgICAgICAgICAgICAgIHZhciBkID0gdShi
KTsKICAgICAgICAgICAgICAgIGQucGFyZW50Tm9kZSA9IGE7CiAgICAgICAgICAgICAgICBkLm5l
eHRTaWJsaW5nID0gYi5fX3NoYWR5X25hdGl2ZV9uZXh0U2libGluZyB8fCBudWxsOwogICAgICAg
ICAgICAgICAgZC5wcmV2aW91c1NpYmxpbmcgPSBjIHx8IG51bGw7CiAgICAgICAgICAgICAgICBj
ID0gYjsKICAgICAgICAgICAgICAgIEViKGIpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9
O3ZhciBrYyA9IG51bGw7CgogICAgZnVuY3Rpb24gRygpIHsKICAgICAgICBrYyB8fCAoa2MgPSB3
aW5kb3cuU2hhZHlDU1MgJiYgd2luZG93LlNoYWR5Q1NTLlNjb3BpbmdTaGltKTsKICAgICAgICBy
ZXR1cm4ga2MgfHwgbnVsbAogICAgfQoKICAgIGZ1bmN0aW9uIGxjKGEsIGIpIHsKICAgICAgICB2
YXIgYyA9IEcoKTsKICAgICAgICBjICYmIGMudW5zY29wZU5vZGUoYSwgYikKICAgIH0KCiAgICBm
dW5jdGlvbiBtYyhhLCBiKSB7CiAgICAgICAgdmFyIGMgPSBHKCk7CiAgICAgICAgaWYgKCFjKSBy
ZXR1cm4gITA7CiAgICAgICAgaWYgKGEubm9kZVR5cGUgPT09IE5vZGUuRE9DVU1FTlRfRlJBR01F
TlRfTk9ERSkgewogICAgICAgICAgICBjID0gITA7CiAgICAgICAgICAgIGEgPSBhLl9fc2hhZHlf
Y2hpbGROb2RlczsKICAgICAgICAgICAgZm9yICh2YXIgZCA9IDA7IGMgJiYgZCA8IGEubGVuZ3Ro
OyBkKyspIGMgPSBjICYmIG1jKGFbZF0sIGIpOwogICAgICAgICAgICByZXR1cm4gYwogICAgICAg
IH0KICAgICAgICByZXR1cm4gYS5ub2RlVHlwZSAhPT0gTm9kZS5FTEVNRU5UX05PREUgPyAhMCA6
IGMuY3VycmVudFNjb3BlRm9yTm9kZShhKSA9PT0gYgogICAgfQoKICAgIGZ1bmN0aW9uIG5jKGEp
IHsKICAgICAgICBpZiAoYS5ub2RlVHlwZSAhPT0gTm9kZS5FTEVNRU5UX05PREUpIHJldHVybiAi
IjsKICAgICAgICB2YXIgYiA9IEcoKTsKICAgICAgICByZXR1cm4gYiA/IGIuY3VycmVudFNjb3Bl
Rm9yTm9kZShhKSA6ICIiCiAgICB9CgogICAgZnVuY3Rpb24gb2MoYSwgYikgewogICAgICAgIGlm
IChhKSB7CiAgICAgICAgICAgIGEubm9kZVR5cGUgPT09IE5vZGUuRUxFTUVOVF9OT0RFICYmIGIo
YSk7CiAgICAgICAgICAgIGEgPSBhLl9fc2hhZHlfY2hpbGROb2RlczsKICAgICAgICAgICAgZm9y
ICh2YXIgYyA9IDAsIGQ7IGMgPCBhLmxlbmd0aDsgYysrKSBkID0gYVtjXSwgZC5ub2RlVHlwZSA9
PT0gTm9kZS5FTEVNRU5UX05PREUgJiYgb2MoZCwgYikKICAgICAgICB9CiAgICB9O3ZhciBwYyA9
IHdpbmRvdy5kb2N1bWVudCwgcWMgPSB3Lm9hLCByYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURl
c2NyaXB0b3IoTm9kZS5wcm90b3R5cGUsICJpc0Nvbm5lY3RlZCIpLAogICAgICAgIHNjID0gcmMg
JiYgcmMuZ2V0OwoKICAgIGZ1bmN0aW9uIHRjKGEpIHsKICAgICAgICBmb3IgKHZhciBiOyBiID0g
YS5fX3NoYWR5X2ZpcnN0Q2hpbGQ7KSBhLl9fc2hhZHlfcmVtb3ZlQ2hpbGQoYikKICAgIH0KCiAg
ICBmdW5jdGlvbiB1YyhhKSB7CiAgICAgICAgdmFyIGIgPSB2KGEpOwogICAgICAgIGlmIChiICYm
IHZvaWQgMCAhPT0gYi5LKSB7CiAgICAgICAgICAgIGIgPSBhLl9fc2hhZHlfY2hpbGROb2RlczsK
ICAgICAgICAgICAgZm9yICh2YXIgYyA9IDAsIGQgPSBiLmxlbmd0aCwgZSA9IHZvaWQgMDsgYyA8
IGQgJiYgKGUgPSBiW2NdKTsgYysrKSB1YyhlKQogICAgICAgIH0KICAgICAgICBpZiAoYSA9IHYo
YSkpIGEuSyA9IHZvaWQgMAogICAgfQoKICAgIGZ1bmN0aW9uIHZjKGEpIHsKICAgICAgICB2YXIg
YiA9IGE7CiAgICAgICAgYSAmJiAic2xvdCIgPT09IGEubG9jYWxOYW1lICYmIChiID0gKGIgPSAo
YiA9IHYoYSkpICYmIGIuRCkgJiYgYi5sZW5ndGggPyBiWzBdIDogdmMoYS5fX3NoYWR5X25leHRT
aWJsaW5nKSk7CiAgICAgICAgcmU=</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>webcomponents-lite.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/webcomponents-lite.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>1</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.webcomponents.loader">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.webcomponents.loader.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.webcomponents.loader.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53168.119092</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

(function () {
    'use strict';
    // global for (1) existence means `WebComponentsReady` will fire,
    // (2) WebComponents.ready == true means event has fired.
    window.WebComponents = window.WebComponents || {};
    var name = 'webcomponents-loader.js';
    // Feature detect which polyfill needs to be imported.
    var polyfills = [];
    if (!('import' in document.createElement('link'))) {
        polyfills.push('hi');
    }
    if (!('attachShadow' in Element.prototype && 'getRootNode' in Element.prototype) ||
        (window.ShadyDOM && window.ShadyDOM.force)) {
        polyfills.push('sd');
    }
    if (!window.customElements || window.customElements.forcePolyfill) {
        polyfills.push('ce');
    }

    var needsTemplate = (function () {
        // no real <template> because no `content` property (IE and older browsers)
        var t = document.createElement('template');
        if (!('content' in t)) {
            return true;
        }
        // broken doc fragment (older Edge)
        if (!(t.content.cloneNode() instanceof DocumentFragment)) {
            return true;
        }
        // broken <template> cloning (Edge up to at least version 17)
        var t2 = document.createElement('template');
        t2.content.appendChild(document.createElement('div'));
        t.content.appendChild(t2);
        var clone = t.cloneNode(true);
        return (clone.content.childNodes.length === 0 ||
            clone.content.firstChild.content.childNodes.length === 0);
    })();

    // NOTE: any browser that does not have template or ES6 features
    // must load the full suite (called `lite` for legacy reasons) of polyfills.
    if (!window.Promise || !Array.from || needsTemplate) {
        polyfills = ['lite'];
    }

    if (polyfills.length) {
        var script = document.querySelector('script[src*="' + name + '"]');
        var newScript = document.createElement('script');
        // Load it from the right place.
        var replacement = 'webcomponents-' + polyfills.join('-') + '.js';
        var url = script.src.replace(name, replacement);
        newScript.src = url;
        // NOTE: this is required to ensure the polyfills are loaded before
        // *native* html imports load on older Chrome versions. This *is* CSP
        // compliant since CSP rules must have allowed this script to run.
        // In all other cases, this can be async.
        if (document.readyState === 'loading' && ('import' in document.createElement('link'))) {
            document.write(newScript.outerHTML);
        } else {
            document.head.appendChild(newScript);
        }
    } else {
        // Ensure `WebComponentsReady` is fired also when there are no polyfills loaded.
        // however, we have to wait for the document to be in 'interactive' state,
        // otherwise a rAF may fire before scripts in <body>

        var fire = function () {
            requestAnimationFrame(function () {
                window.WebComponents.ready = true;
                document.dispatchEvent(new CustomEvent('WebComponentsReady', {bubbles: true}));
            });
        };

        if (document.readyState !== 'loading') {
            fire();
        } else {
            document.addEventListener('readystatechange', function wait() {
                fire();
                document.removeEventListener('readystatechange', wait);
            });
        }
    }
})();
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:08</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.webcomponents.loader" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\webcomponents-loader.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.webcomponents.loader.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\webcomponents-loader.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>webcomponents-loader.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/webcomponents-loader.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.webcomponents.sd">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.webcomponents.sd.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.webcomponents.sd.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53168.205832</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
 @license @nocompile
 Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 Code distributed by Google as part of the polymer project is also
 subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
(function () {/*

Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    'use strict';
    var m,
        n = "undefined" != typeof window && window === this ? this : "undefined" != typeof global && null != global ? global : this,
        ca = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
            a != Array.prototype && a != Object.prototype && (a[b] = c.value)
        };

    function da() {
        da = function () {
        };
        n.Symbol || (n.Symbol = ea)
    }

    var ea = function () {
        var a = 0;
        return function (b) {
            return "jscomp_symbol_" + (b || "") + a++
        }
    }();

    function fa() {
        da();
        var a = n.Symbol.iterator;
        a || (a = n.Symbol.iterator = n.Symbol("iterator"));
        "function" != typeof Array.prototype[a] && ca(Array.prototype, a, {
            configurable: !0,
            writable: !0,
            value: function () {
                return ha(this)
            }
        });
        fa = function () {
        }
    }

    function ha(a) {
        var b = 0;
        return ia(function () {
            return b < a.length ? {done: !1, value: a[b++]} : {done: !0}
        })
    }

    function ia(a) {
        fa();
        a = {next: a};
        a[n.Symbol.iterator] = function () {
            return this
        };
        return a
    }

    function ja(a) {
        fa();
        da();
        fa();
        var b = a[Symbol.iterator];
        return b ? b.call(a) : ha(a)
    }

    function ka(a) {
        for (var b, c = []; !(b = a.next()).done;) c.push(b.value);
        return c
    }

    function la() {
        this.aa = this.root = null;
        this.K = !1;
        this.v = this.H = this.R = this.assignedSlot = this.assignedNodes = this.w = null;
        this.childNodes = this.nextSibling = this.previousSibling = this.lastChild = this.firstChild = this.parentNode = this.B = void 0;
        this.W = this.X = !1;
        this.G = {}
    }

    la.prototype.toJSON = function () {
        return {}
    };

    function q(a) {
        a.__shady || (a.__shady = new la);
        return a.__shady
    }

    function r(a) {
        return a && a.__shady
    };var t = window.ShadyDOM || {};
    t.na = !(!Element.prototype.attachShadow || !Node.prototype.getRootNode);
    var ma = Object.getOwnPropertyDescriptor(Node.prototype, "firstChild");
    t.i = !!(ma && ma.configurable && ma.get);
    t.T = t.force || !t.na;
    t.A = t.noPatch || !1;
    t.$ = t.preferPerformance;

    function v(a) {
        return (a = r(a)) && void 0 !== a.firstChild
    }

    function w(a) {
        return "ShadyRoot" === a.ga
    }

    function na(a) {
        return (a = (a = r(a)) && a.root) && oa(a)
    }

    var x = Element.prototype,
        pa = x.matches || x.matchesSelector || x.mozMatchesSelector || x.msMatchesSelector || x.oMatchesSelector || x.webkitMatchesSelector,
        qa = document.createTextNode(""), ra = 0, sa = [];
    (new MutationObserver(function () {
        for (; sa.length;) try {
            sa.shift()()
        } catch (a) {
            throw qa.textContent = ra++, a;
        }
    })).observe(qa, {characterData: !0});

    function ta(a) {
        sa.push(a);
        qa.textContent = ra++
    }

    var ua = !!document.contains;

    function va(a, b) {
        for (; b;) {
            if (b == a) return !0;
            b = b.__shady_parentNode
        }
        return !1
    }

    function wa(a) {
        for (var b = a.length - 1; 0 <= b; b--) {
            var c = a[b], d = c.getAttribute("id") || c.getAttribute("name");
            d && "length" !== d && isNaN(d) && (a[d] = c)
        }
        a.item = function (b) {
            return a[b]
        };
        a.namedItem = function (b) {
            if ("length" !== b && isNaN(b) && a[b]) return a[b];
            for (var c = ja(a), d = c.next(); !d.done; d = c.next()) if (d = d.value, (d.getAttribute("id") || d.getAttribute("name")) == b) return d;
            return null
        };
        return a
    }

    function y(a, b, c, d) {
        c = void 0 === c ? "" : c;
        for (var e in b) {
            var f = b[e];
            if (!(d && 0 <= d.indexOf(e))) {
                f.configurable = !0;
                var g = c + e;
                if (f.value) a[g] = f.value; else try {
                    Object.defineProperty(a, g, f)
                } catch (h) {
                }
            }
        }
    }

    function z(a) {
        var b = {};
        Object.getOwnPropertyNames(a).forEach(function (c) {
            b[c] = Object.getOwnPropertyDescriptor(a, c)
        });
        return b
    };var A = [], xa;

    function ya(a) {
        xa || (xa = !0, ta(za));
        A.push(a)
    }

    function za() {
        xa = !1;
        for (var a = !!A.length; A.length;) A.shift()();
        return a
    }

    za.list = A;

    function Aa() {
        this.a = !1;
        this.addedNodes = [];
        this.removedNodes = [];
        this.J = new Set
    }

    function Ba(a) {
        a.a || (a.a = !0, ta(function () {
            a.flush()
        }))
    }

    Aa.prototype.flush = function () {
        if (this.a) {
            this.a = !1;
            var a = this.takeRecords();
            a.length && this.J.forEach(function (b) {
                b(a)
            })
        }
    };
    Aa.prototype.takeRecords = function () {
        if (this.addedNodes.length || this.removedNodes.length) {
            var a = [{addedNodes: this.addedNodes, removedNodes: this.removedNodes}];
            this.addedNodes = [];
            this.removedNodes = [];
            return a
        }
        return []
    };

    function Ca(a, b) {
        var c = q(a);
        c.w || (c.w = new Aa);
        c.w.J.add(b);
        var d = c.w;
        return {
            fa: b, ia: d, ha: a, takeRecords: function () {
                return d.takeRecords()
            }
        }
    }

    function Da(a) {
        var b = a && a.ia;
        b && (b.J.delete(a.fa), b.J.size || (q(a.ha).w = null))
    }

    function Ea(a, b) {
        var c = b.getRootNode();
        return a.map(function (a) {
            var b = c === a.target.getRootNode();
            if (b && a.addedNodes) {
                if (b = Array.from(a.addedNodes).filter(function (a) {
                    return c === a.getRootNode()
                }), b.length) return a = Object.create(a), Object.defineProperty(a, "addedNodes", {
                    value: b,
                    configurable: !0
                }), a
            } else if (b) return a
        }).filter(function (a) {
            return a
        })
    };var Ga = /[&\u00A0"]/g, Ha = /[&\u00A0<>]/g;

    function Ia(a) {
        switch (a) {
            case "&":
                return "&amp;";
            case "<":
                return "&lt;";
            case ">":
                return "&gt;";
            case '"':
                return "&quot;";
            case "\u00a0":
                return "&nbsp;"
        }
    }

    function Ja(a) {
        for (var b = {}, c = 0; c < a.length; c++) b[a[c]] = !0;
        return b
    }

    var Ka = Ja("area base br col command embed hr img input keygen link meta param source track wbr".split(" ")),
        La = Ja("style script xmp iframe noembed noframes plaintext noscript".split(" "));

    function Ma(a, b) {
        "template" === a.localName && (a = a.content);
        for (var c = "", d = b ? b(a) : a.childNodes, e = 0, f = d.length, g = void 0; e < f && (g = d[e]); e++) {
            a:{
                var h = g;
                var k = a, l = b;
                switch (h.nodeType) {
                    case Node.ELEMENT_NODE:
                        k = h.localName;
                        for (var p = "<" + k, u = h.attributes, aa = 0, ba; ba = u[aa]; aa++) p += " " + ba.name + '="' + ba.value.replace(Ga, Ia) + '"';
                        p += ">";
                        h = Ka[k] ? p : p + Ma(h, l) + "</" + k + ">";
                        break a;
                    case Node.TEXT_NODE:
                        h = h.data;
                        h = k && La[k.localName] ? h : h.replace(Ha, Ia);
                        break a;
                    case Node.COMMENT_NODE:
                        h = "\x3c!--" + h.data + "--\x3e";
                        break a;
                    default:
                        throw window.console.error(h),
                            Error("not implemented");
                }
            }
            c += h
        }
        return c
    };var Na = t.i, Oa = {
        querySelector: function (a) {
            return this.__shady_native_querySelector(a)
        }, querySelectorAll: function (a) {
            return this.__shady_native_querySelectorAll(a)
        }
    }, Pa = {};

    function Qa(a) {
        Pa[a] = function (b) {
            return b["__shady_native_" + a]
        }
    }

    function Ra(a, b) {
        y(a, b, "__shady_native_");
        for (var c in b) Qa(c)
    }

    function B(a, b) {
        b = void 0 === b ? [] : b;
        for (var c = 0; c < b.length; c++) {
            var d = b[c], e = Object.getOwnPropertyDescriptor(a, d);
            e && (Object.defineProperty(a, "__shady_native_" + d, e), e.value ? Oa[d] || (Oa[d] = e.value) : Qa(d))
        }
    }

    var C = document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, !1),
        D = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT, null, !1),
        Sa = document.implementation.createHTMLDocument("inert");

    function Ta(a) {
        for (var b; b = a.__shady_native_firstChild;) a.__shady_native_removeChild(b)
    }

    var Ua = ["firstElementChild", "lastElementChild", "children", "childElementCount"],
        Va = ["querySelector", "querySelectorAll"];

    function Wa() {
        var a = ["dispatchEvent", "addEventListener", "removeEventListener"];
        window.EventTarget ? B(window.EventTarget.prototype, a) : (B(Node.prototype, a), B(Window.prototype, a));
        Na ? B(Node.prototype, "parentNode firstChild lastChild previousSibling nextSibling childNodes parentElement textContent".split(" ")) : Ra(Node.prototype, {
            parentNode: {
                get: function () {
                    C.currentNode = this;
                    return C.parentNode()
                }
            }, firstChild: {
                get: function () {
                    C.currentNode = this;
                    return C.firstChild()
                }
            }, lastChild: {
                get: function () {
                    C.currentNode =
                        this;
                    return C.lastChild()
                }
            }, previousSibling: {
                get: function () {
                    C.currentNode = this;
                    return C.previousSibling()
                }
            }, nextSibling: {
                get: function () {
                    C.currentNode = this;
                    return C.nextSibling()
                }
            }, childNodes: {
                get: function () {
                    var a = [];
                    C.currentNode = this;
                    for (var c = C.firstChild(); c;) a.push(c), c = C.nextSibling();
                    return a
                }
            }, parentElement: {
                get: function () {
                    D.currentNode = this;
                    return D.parentNode()
                }
            }, textContent: {
                get: function () {
                    switch (this.nodeType) {
                        case Node.ELEMENT_NODE:
                        case Node.DOCUMENT_FRAGMENT_NODE:
                            for (var a = document.createTreeWalker(this,
                                NodeFilter.SHOW_TEXT, null, !1), c = "", d; d = a.nextNode();) c += d.nodeValue;
                            return c;
                        default:
                            return this.nodeValue
                    }
                }, set: function (a) {
                    if ("undefined" === typeof a || null === a) a = "";
                    switch (this.nodeType) {
                        case Node.ELEMENT_NODE:
                        case Node.DOCUMENT_FRAGMENT_NODE:
                            Ta(this);
                            (0 < a.length || this.nodeType === Node.ELEMENT_NODE) && this.__shady_native_insertBefore(document.createTextNode(a), void 0);
                            break;
                        default:
                            this.nodeValue = a
                    }
                }
            }
        });
        B(Node.prototype, "appendChild insertBefore removeChild replaceChild cloneNode contains".split(" "));
        a = {
            firstElementChild: {
                get: function () {
                    D.currentNode = this;
                    return D.firstChild()
                }
            }, lastElementChild: {
                get: function () {
                    D.currentNode = this;
                    return D.lastChild()
                }
            }, children: {
                get: function () {
                    var a = [];
                    D.currentNode = this;
                    for (var c = D.firstChild(); c;) a.push(c), c = D.nextSibling();
                    return wa(a)
                }
            }, childElementCount: {
                get: function () {
                    return this.children ? this.children.length : 0
                }
            }
        };
        Na ? (B(Element.prototype, Ua), B(Element.prototype, ["previousElementSibling", "nextElementSibling", "innerHTML"]), Object.getOwnPropertyDescriptor(HTMLElement.prototype,
            "children") && B(HTMLElement.prototype, ["children"]), Object.getOwnPropertyDescriptor(HTMLElement.prototype, "innerHTML") && B(HTMLElement.prototype, ["innerHTML"])) : (Ra(Element.prototype, a), Ra(Element.prototype, {
            previousElementSibling: {
                get: function () {
                    D.currentNode = this;
                    return D.previousSibling()
                }
            }, nextElementSibling: {
                get: function () {
                    D.currentNode = this;
                    return D.nextSibling()
                }
            }, innerHTML: {
                get: function () {
                    return Ma(this, function (a) {
                        return a.__shady_native_childNodes
                    })
                }, set: function (a) {
                    var b = "template" === this.localName ?
                        this.content : this;
                    Ta(b);
                    var d = this.localName || "div";
                    d = this.namespaceURI && this.namespaceURI !== Sa.namespaceURI ? Sa.createElementNS(this.namespaceURI, d) : Sa.createElement(d);
                    d.innerHTML = a;
                    for (a = "template" === this.localName ? d.content : d; d = a.__shady_native_firstChild;) b.__shady_native_insertBefore(d, void 0)
                }
            }
        }));
        B(Element.prototype, "setAttribute getAttribute hasAttribute removeAttribute focus blur".split(" "));
        B(Element.prototype, Va);
        B(HTMLElement.prototype, ["focus", "blur", "contains"]);
        Na && B(HTMLElement.prototype,
            ["parentElement", "children", "innerHTML"]);
        window.HTMLTemplateElement && B(window.HTMLTemplateElement.prototype, ["innerHTML"]);
        Na ? B(DocumentFragment.prototype, Ua) : Ra(DocumentFragment.prototype, a);
        B(DocumentFragment.prototype, Va);
        Na ? (B(Document.prototype, Ua), B(Document.prototype, ["activeElement"])) : Ra(Document.prototype, a);
        B(Document.prototype, ["importNode", "getElementById"]);
        B(Document.prototype, Va)
    };var Xa = z({
        get childNodes() {
            return this.__shady_childNodes
        }, get firstChild() {
            return this.__shady_firstChild
        }, get lastChild() {
            return this.__shady_lastChild
        }, get textContent() {
            return this.__shady_textContent
        }, set textContent(a) {
            this.__shady_textContent = a
        }, get childElementCount() {
            return this.__shady_childElementCount
        }, get children() {
            return this.__shady_children
        }, get firstElementChild() {
            return this.__shady_firstElementChild
        }, get lastElementChild() {
            return this.__shady_lastElementChild
        }, get innerHTML() {
            return this.__shady_innerHTML
        },
        set innerHTML(a) {
            return this.__shady_innerHTML = a
        }, get shadowRoot() {
            return this.__shady_shadowRoot
        }
    }), Ya = z({
        get parentElement() {
            return this.__shady_parentElement
        }, get parentNode() {
            return this.__shady_parentNode
        }, get nextSibling() {
            return this.__shady_nextSibling
        }, get previousSibling() {
            return this.__shady_previousSibling
        }, get nextElementSibling() {
            return this.__shady_nextElementSibling
        }, get previousElementSibling() {
            return this.__shady_previousElementSibling
        }, get className() {
            return this.__shady_className
        },
        set className(a) {
            return this.__shady_className = a
        }
    }), Za;
    for (Za in Xa) Xa[Za].enumerable = !1;
    for (var $a in Ya) Ya[$a].enumerable = !1;
    var ab = t.i || t.A, bb = ab ? function () {
    } : function (a) {
        var b = q(a);
        b.X || (b.X = !0, y(a, Ya))
    }, cb = ab ? function () {
    } : function (a) {
        var b = q(a);
        b.W || (b.W = !0, y(a, Xa))
    };
    var db = "__eventWrappers" + Date.now(), eb = function () {
        var a = Object.getOwnPropertyDescriptor(Event.prototype, "composed");
        return a ? function (b) {
            return a.get.call(b)
        } : null
    }(), fb = {
        blur: !0,
        focus: !0,
        focusin: !0,
        focusout: !0,
        click: !0,
        dblclick: !0,
        mousedown: !0,
        mouseenter: !0,
        mouseleave: !0,
        mousemove: !0,
        mouseout: !0,
        mouseover: !0,
        mouseup: !0,
        wheel: !0,
        beforeinput: !0,
        input: !0,
        keydown: !0,
        keyup: !0,
        compositionstart: !0,
        compositionupdate: !0,
        compositionend: !0,
        touchstart: !0,
        touchend: !0,
        touchmove: !0,
        touchcancel: !0,
        pointerover: !0,
        pointerenter: !0,
        pointerdown: !0,
        pointermove: !0,
        pointerup: !0,
        pointercancel: !0,
        pointerout: !0,
        pointerleave: !0,
        gotpointercapture: !0,
        lostpointercapture: !0,
        dragstart: !0,
        drag: !0,
        dragenter: !0,
        dragleave: !0,
        dragover: !0,
        drop: !0,
        dragend: !0,
        DOMActivate: !0,
        DOMFocusIn: !0,
        DOMFocusOut: !0,
        keypress: !0
    }, gb = {
        DOMAttrModified: !0,
        DOMAttributeNameChanged: !0,
        DOMCharacterDataModified: !0,
        DOMElementNameChanged: !0,
        DOMNodeInserted: !0,
        DOMNodeInsertedIntoDocument: !0,
        DOMNodeRemoved: !0,
        DOMNodeRemovedFromDocument: !0,
        DOMSubtreeModified: !0
    };

    function hb(a) {
        return a instanceof Node ? a.__shady_getRootNode() : a
    }

    function ib(a, b) {
        var c = [], d = a;
        for (a = hb(a); d;) c.push(d), d.__shady_assignedSlot ? d = d.__shady_assignedSlot : d.nodeType === Node.DOCUMENT_FRAGMENT_NODE && d.host && (b || d !== a) ? d = d.host : d = d.__shady_parentNode;
        c[c.length - 1] === document && c.push(window);
        return c
    }

    function jb(a) {
        a.__composedPath || (a.__composedPath = ib(a.target, !0));
        return a.__composedPath
    }

    function kb(a, b) {
        if (!w) return a;
        a = ib(a, !0);
        for (var c = 0, d, e = void 0, f, g = void 0; c < b.length; c++) if (d = b[c], f = hb(d), f !== e && (g = a.indexOf(f), e = f), !w(f) || -1 < g) return d
    }

    function lb(a) {
        function b(b, d) {
            b = new a(b, d);
            b.__composed = d && !!d.composed;
            return b
        }

        b.__proto__ = a;
        b.prototype = a.prototype;
        return b
    }

    var mb = {focus: !0, blur: !0};

    function nb(a) {
        return a.__target !== a.target || a.__relatedTarget !== a.relatedTarget
    }

    function ob(a, b, c) {
        if (c = b.__handlers && b.__handlers[a.type] && b.__handlers[a.type][c]) for (var d = 0, e; (e = c[d]) && (!nb(a) || a.target !== a.relatedTarget) && (e.call(b, a), !a.__immediatePropagationStopped); d++) ;
    }

    function pb(a) {
        var b = a.composedPath();
        Object.defineProperty(a, "currentTarget", {
            get: function () {
                return d
            }, configurable: !0
        });
        for (var c = b.length - 1; 0 <= c; c--) {
            var d = b[c];
            ob(a, d, "capture");
            if (a.N) return
        }
        Object.defineProperty(a, "eventPhase", {
            get: function () {
                return Event.AT_TARGET
            }
        });
        var e;
        for (c = 0; c < b.length; c++) {
            d = b[c];
            var f = r(d);
            f = f && f.root;
            if (0 === c || f && f === e) if (ob(a, d, "bubble"), d !== window && (e = d.__shady_getRootNode()), a.N) break
        }
    }

    function qb(a, b, c, d, e, f) {
        for (var g = 0; g < a.length; g++) {
            var h = a[g], k = h.type, l = h.capture, p = h.once, u = h.passive;
            if (b === h.node && c === k && d === l && e === p && f === u) return g
        }
        return -1
    }

    function rb(a, b, c) {
        if (b) {
            var d = typeof b;
            if ("function" === d || "object" === d) if ("object" !== d || b.handleEvent && "function" === typeof b.handleEvent) {
                if (gb[a]) return this.__shady_native_addEventListener(a, b, c);
                if (c && "object" === typeof c) {
                    var e = !!c.capture;
                    var f = !!c.once;
                    var g = !!c.passive
                } else e = !!c, g = f = !1;
                var h = c && c.O || this, k = b[db];
                if (k) {
                    if (-1 < qb(k, h, a, e, f, g)) return
                } else b[db] = [];
                k = function (e) {
                    f && this.__shady_removeEventListener(a, b, c);
                    e.__target || sb(e);
                    if (h !== this) {
                        var g = Object.getOwnPropertyDescriptor(e, "currentTarget");
                        Object.defineProperty(e, "currentTarget", {
                            get: function () {
                                return h
                            }, configurable: !0
                        })
                    }
                    e.__previousCurrentTarget = e.currentTarget;
                    if (!w(h) || -1 != e.composedPath().indexOf(h)) if (e.composed || -1 < e.composedPath().indexOf(h)) if (nb(e) && e.target === e.relatedTarget) e.eventPhase === Event.BUBBLING_PHASE && e.stopImmediatePropagation(); else if (e.eventPhase === Event.CAPTURING_PHASE || e.bubbles || e.target === h || h instanceof Window) {
                        var k = "function" === d ? b.call(h, e) : b.handleEvent && b.handleEvent(e);
                        h !== this && (g ? (Object.defineProperty(e,
                            "currentTarget", g), g = null) : delete e.currentTarget);
                        return k
                    }
                };
                b[db].push({node: h, type: a, capture: e, once: f, passive: g, xa: k});
                mb[a] ? (this.__handlers = this.__handlers || {}, this.__handlers[a] = this.__handlers[a] || {
                    capture: [],
                    bubble: []
                }, this.__handlers[a][e ? "capture" : "bubble"].push(k)) : this.__shady_native_addEventListener(a, k, c)
            }
        }
    }

    function tb(a, b, c) {
        if (b) {
            if (gb[a]) return this.__shady_native_removeEventListener(a, b, c);
            if (c && "object" === typeof c) {
                var d = !!c.capture;
                var e = !!c.once;
                var f = !!c.passive
            } else d = !!c, f = e = !1;
            var g = c && c.O || this, h = void 0;
            var k = null;
            try {
                k = b[db]
            } catch (l) {
            }
            k && (e = qb(k, g, a, d, e, f), -1 < e && (h = k.splice(e, 1)[0].xa, k.length || (b[db] = void 0)));
            this.__shady_native_removeEventListener(a, h || b, c);
            h && mb[a] && this.__handlers && this.__handlers[a] && (a = this.__handlers[a][d ? "capture" : "bubble"], h = a.indexOf(h), -1 < h && a.splice(h, 1))
        }
    }

    function ub() {
        for (var a in mb) window.__shady_native_addEventListener(a, function (a) {
            a.__target || (sb(a), pb(a))
        }, !0)
    }

    var vb = z({
        get composed() {
            void 0 === this.__composed && (eb ? this.__composed = "focusin" === this.type || "focusout" === this.type || eb(this) : !1 !== this.isTrusted && (this.__composed = fb[this.type]));
            return this.__composed || !1
        }, composedPath: function () {
            this.__composedPath || (this.__composedPath = ib(this.__target, this.composed));
            return this.__composedPath
        }, get target() {
            return kb(this.currentTarget || this.__previousCurrentTarget, this.composedPath())
        }, get relatedTarget() {
            if (!this.__relatedTarget) return null;
            this.__relatedTargetComposedPath ||
            (this.__relatedTargetComposedPath = ib(this.__relatedTarget, !0));
            return kb(this.currentTarget || this.__previousCurrentTarget, this.__relatedTargetComposedPath)
        }, stopPropagation: function () {
            Event.prototype.stopPropagation.call(this);
            this.N = !0
        }, stopImmediatePropagation: function () {
            Event.prototype.stopImmediatePropagation.call(this);
            this.N = this.__immediatePropagationStopped = !0
        }
    });

    function sb(a) {
        a.__target = a.target;
        a.__relatedTarget = a.relatedTarget;
        if (t.i) {
            var b = Object.getPrototypeOf(a);
            if (!Object.hasOwnProperty(b, "__shady_patchedProto")) {
                var c = Object.create(b);
                c.__shady_sourceProto = b;
                y(c, vb);
                b.__shady_patchedProto = c
            }
            a.__proto__ = b.__shady_patchedProto
        } else y(a, vb)
    }

    var wb = lb(Event), xb = lb(CustomEvent), yb = lb(MouseEvent);

    function zb() {
        if (!eb && Object.getOwnPropertyDescriptor(Event.prototype, "isTrusted")) {
            var a = function () {
                var a = new MouseEvent("click", {bubbles: !0, cancelable: !0, composed: !0});
                this.__shady_dispatchEvent(a)
            };
            Element.prototype.click ? Element.prototype.click = a : HTMLElement.prototype.click && (HTMLElement.prototype.click = a)
        }
    }

    var Ab = Object.getOwnPropertyNames(Document.prototype).filter(function (a) {
        return "on" === a.substring(0, 2)
    });

    function Bb(a, b) {
        return {index: a, C: [], I: b}
    }

    function Cb(a, b, c, d) {
        var e = 0, f = 0, g = 0, h = 0, k = Math.min(b - e, d - f);
        if (0 == e && 0 == f) a:{
            for (g = 0; g < k; g++) if (a[g] !== c[g]) break a;
            g = k
        }
        if (b == a.length && d == c.length) {
            h = a.length;
            for (var l = c.length, p = 0; p < k - g && Db(a[--h], c[--l]);) p++;
            h = p
        }
        e += g;
        f += g;
        b -= h;
        d -= h;
        if (0 == b - e && 0 == d - f) return [];
        if (e == b) {
            for (b = Bb(e, 0); f < d;) b.C.push(c[f++]);
            return [b]
        }
        if (f == d) return [Bb(e, b - e)];
        k = e;
        g = f;
        d = d - g + 1;
        h = b - k + 1;
        b = Array(d);
        for (l = 0; l < d; l++) b[l] = Array(h), b[l][0] = l;
        for (l = 0; l < h; l++) b[0][l] = l;
        for (l = 1; l < d; l++) for (p = 1; p < h; p++) if (a[k + p - 1] === c[g + l - 1]) b[l][p] =
            b[l - 1][p - 1]; else {
            var u = b[l - 1][p] + 1, aa = b[l][p - 1] + 1;
            b[l][p] = u < aa ? u : aa
        }
        k = b.length - 1;
        g = b[0].length - 1;
        d = b[k][g];
        for (a = []; 0 < k || 0 < g;) 0 == k ? (a.push(2), g--) : 0 == g ? (a.push(3), k--) : (h = b[k - 1][g - 1], l = b[k - 1][g], p = b[k][g - 1], u = l < p ? l < h ? l : h : p < h ? p : h, u == h ? (h == d ? a.push(0) : (a.push(1), d = h), k--, g--) : u == l ? (a.push(3), k--, d = l) : (a.push(2), g--, d = p));
        a.reverse();
        b = void 0;
        k = [];
        for (g = 0; g < a.length; g++) switch (a[g]) {
            case 0:
                b && (k.push(b), b = void 0);
                e++;
                f++;
                break;
            case 1:
                b || (b = Bb(e, 0));
                b.I++;
                e++;
                b.C.push(c[f]);
                f++;
                break;
            case 2:
                b || (b = Bb(e,
                    0));
                b.I++;
                e++;
                break;
            case 3:
                b || (b = Bb(e, 0)), b.C.push(c[f]), f++
        }
        b && k.push(b);
        return k
    }

    function Db(a, b) {
        return a === b
    };

    function Eb(a, b, c) {
        bb(a);
        c = c || null;
        var d = q(a), e = q(b), f = c ? q(c) : null;
        d.previousSibling = c ? f.previousSibling : b.__shady_lastChild;
        if (f = r(d.previousSibling)) f.nextSibling = a;
        if (f = r(d.nextSibling = c)) f.previousSibling = a;
        d.parentNode = b;
        c ? c === e.firstChild && (e.firstChild = a) : (e.lastChild = a, e.firstChild || (e.firstChild = a));
        e.childNodes = null
    }

    function Fb(a, b, c) {
        cb(b);
        var d = q(b);
        void 0 !== d.firstChild && (d.childNodes = null);
        if (a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
            d = a.__shady_childNodes;
            for (var e = 0; e < d.length; e++) Eb(d[e], b, c);
            a = q(a);
            b = void 0 !== a.firstChild ? null : void 0;
            a.firstChild = a.lastChild = b;
            a.childNodes = b
        } else Eb(a, b, c)
    }

    function Gb(a, b) {
        var c = q(a);
        b = q(b);
        a === b.firstChild && (b.firstChild = c.nextSibling);
        a === b.lastChild && (b.lastChild = c.previousSibling);
        a = c.previousSibling;
        var d = c.nextSibling;
        a && (q(a).nextSibling = d);
        d && (q(d).previousSibling = a);
        c.parentNode = c.previousSibling = c.nextSibling = void 0;
        void 0 !== b.childNodes && (b.childNodes = null)
    }

    function Hb(a) {
        var b = q(a);
        if (void 0 === b.firstChild) {
            b.childNodes = null;
            var c = b.firstChild = a.__shady_native_firstChild || null;
            b.lastChild = a.__shady_native_lastChild || null;
            cb(a);
            b = c;
            for (c = void 0; b; b = b.__shady_native_nextSibling) {
                var d = q(b);
                d.parentNode = a;
                d.nextSibling = b.__shady_native_nextSibling || null;
                d.previousSibling = c || null;
                c = b;
                bb(b)
            }
        }
    };var Ib = null;

    function E() {
        Ib || (Ib = window.ShadyCSS && window.ShadyCSS.ScopingShim);
        return Ib || null
    }

    function Jb(a, b) {
        var c = E();
        c && c.unscopeNode(a, b)
    }

    function Kb(a, b) {
        var c = E();
        if (!c) return !0;
        if (a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
            c = !0;
            a = a.__shady_childNodes;
            for (var d = 0; c && d < a.length; d++) c = c && Kb(a[d], b);
            return c
        }
        return a.nodeType !== Node.ELEMENT_NODE ? !0 : c.currentScopeForNode(a) === b
    }

    function Lb(a) {
        if (a.nodeType !== Node.ELEMENT_NODE) return "";
        var b = E();
        return b ? b.currentScopeForNode(a) : ""
    }

    function Mb(a, b) {
        if (a) {
            a.nodeType === Node.ELEMENT_NODE && b(a);
            a = a.__shady_childNodes;
            for (var c = 0, d; c < a.length; c++) d = a[c], d.nodeType === Node.ELEMENT_NODE && Mb(d, b)
        }
    };var Nb = window.document, Ob = t.$, Pb = Object.getOwnPropertyDescriptor(Node.prototype, "isConnected"),
        Qb = Pb && Pb.get;

    function Rb(a) {
        for (var b; b = a.__shady_firstChild;) a.__shady_removeChild(b)
    }

    function Sb(a) {
        var b = r(a);
        if (b && void 0 !== b.B) {
            b = a.__shady_childNodes;
            for (var c = 0, d = b.length, e = void 0; c < d && (e = b[c]); c++) Sb(e)
        }
        if (a = r(a)) a.B = void 0
    }

    function Tb(a) {
        var b = a;
        a && "slot" === a.localName && (b = (b = (b = r(a)) && b.v) && b.length ? b[0] : Tb(a.__shady_nextSibling));
        return b
    }

    function Ub(a, b, c) {
        if (a = (a = r(a)) && a.w) b && a.addedNodes.push(b), c && a.removedNodes.push(c), Ba(a)
    }

    var Wb = z({
        get parentNode() {
            var a = r(this);
            a = a && a.parentNode;
            return void 0 !== a ? a : this.__shady_native_parentNode
        }, get firstChild() {
            var a = r(this);
            a = a && a.firstChild;
            return void 0 !== a ? a : this.__shady_native_firstChild
        }, get lastChild() {
            var a = r(this);
            a = a && a.lastChild;
            return void 0 !== a ? a : this.__shady_native_lastChild
        }, get nextSibling() {
            var a = r(this);
            a = a && a.nextSibling;
            return void 0 !== a ? a : this.__shady_native_nextSibling
        }, get previousSibling() {
            var a = r(this);
            a = a && a.previousSibling;
            return void 0 !== a ? a : this.__shady_native_previousSibling
        },
        get childNodes() {
            if (v(this)) {
                var a = r(this);
                if (!a.childNodes) {
                    a.childNodes = [];
                    for (var b = this.__shady_firstChild; b; b = b.__shady_nextSibling) a.childNodes.push(b)
                }
                var c = a.childNodes
            } else c = this.__shady_native_childNodes;
            c.item = function (a) {
                return c[a]
            };
            return c
        }, get parentElement() {
            var a = r(this);
            (a = a && a.parentNode) && a.nodeType !== Node.ELEMENT_NODE && (a = null);
            return void 0 !== a ? a : this.__shady_native_parentElement
        }, get isConnected() {
            if (Qb && Qb.call(this)) return !0;
            if (this.nodeType == Node.DOCUMENT_FRAGMENT_NODE) return !1;
            var a = this.ownerDocument;
            if (ua) {
                if (a.__shady_native_contains(this)) return !0
            } else if (a.documentElement && a.documentElement.__shady_native_contains(this)) return !0;
            for (a = this; a && !(a instanceof Document);) a = a.__shady_parentNode || (w(a) ? a.host : void 0);
            return !!(a && a instanceof Document)
        }, get textContent() {
            if (v(this)) {
                for (var a = [], b = 0, c = this.__shady_childNodes, d; d = c[b]; b++) d.nodeType !== Node.COMMENT_NODE && a.push(d.__shady_textContent);
                return a.join("")
            }
            return this.__shady_native_textContent
        }, set textContent(a) {
            if ("undefined" ===
                typeof a || null === a) a = "";
            switch (this.nodeType) {
                case Node.ELEMENT_NODE:
                case Node.DOCUMENT_FRAGMENT_NODE:
                    if (!v(this) && t.i) {
                        var b = this.__shady_firstChild;
                        (b != this.__shady_lastChild || b && b.nodeType != Node.TEXT_NODE) && Rb(this);
                        this.__shady_native_textContent = a
                    } else Rb(this), (0 < a.length || this.nodeType === Node.ELEMENT_NODE) && this.__shady_insertBefore(document.createTextNode(a));
                    break;
                default:
                    this.nodeValue = a
            }
        }, insertBefore: function (a, b) {
            if (this.ownerDocument !== Nb && a.ownerDocument !== Nb) return this.__shady_native_insertBefore(a,
                b), a;
            if (a === this) throw Error("Failed to execute 'appendChild' on 'Node': The new child element contains the parent.");
            if (b) {
                var c = r(b);
                c = c && c.parentNode;
                if (void 0 !== c && c !== this || void 0 === c && b.__shady_native_parentNode !== this) throw Error("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");
            }
            if (b === a) return a;
            var d = [], e = (c = F(this)) ? c.host.localName : Lb(this), f = a.__shady_parentNode;
            if (f) {
                var g = Lb(a);
                f.__shady_removeChild(a, !!c ||
                    !F(a))
            }
            f = !0;
            var h = (!Ob || void 0 === a.__noInsertionPoint) && !Kb(a, e),
                k = c && !a.__noInsertionPoint && (!Ob || a.nodeType === Node.DOCUMENT_FRAGMENT_NODE);
            if (k || h) h && (g = g || Lb(a)), Mb(a, function (a) {
                k && "slot" === a.localName && d.push(a);
                if (h) {
                    var b = g;
                    E() && (b && Jb(a, b), (b = E()) && b.scopeNode(a, e))
                }
            });
            if ("slot" === this.localName || d.length) d.length && (c.c = c.c || [], c.a = c.a || [], c.b = c.b || {}, c.c.push.apply(c.c, d instanceof Array ? d : ka(ja(d)))), c && G(c);
            v(this) && (Fb(a, this, b), c = r(this), na(this) ? (G(c.root), f = !1) : c.root && (f = !1));
            f ? (c =
                w(this) ? this.host : this, b ? (b = Tb(b), c.__shady_native_insertBefore(a, b)) : c.__shady_native_appendChild(a)) : a.ownerDocument !== this.ownerDocument && this.ownerDocument.adoptNode(a);
            Ub(this, a);
            return a
        }, appendChild: function (a) {
            return this.__shady_insertBefore(a)
        }, removeChild: function (a, b) {
            b = void 0 === b ? !1 : b;
            if (this.ownerDocument !== Nb) return this.__shady_native_removeChild(a);
            if (a.__shady_parentNode !== this) throw Error("The node to be removed is not a child of this node: " + a);
            var c = F(a), d = c && Vb(c, a), e = r(this);
            if (v(this) && (Gb(a, this), na(this))) {
                G(e.root);
                var f = !0
            }
            if (E() && !b && c) {
                var g = Lb(a);
                Mb(a, function (a) {
                    Jb(a, g)
                })
            }
            Sb(a);
            c && ((b = this && "slot" === this.localName) && (f = !0), (d || b) && G(c));
            f || (f = w(this) ? this.host : this, (!e.root && "slot" !== a.localName || f === a.__shady_native_parentNode) && f.__shady_native_removeChild(a));
            Ub(this, null, a);
            return a
        }, replaceChild: function (a, b) {
            this.__shady_insertBefore(a, b);
            this.__shady_removeChild(b);
            return a
        }, cloneNode: function (a) {
            if ("template" == this.localName) return this.__shady_native_cloneNode(a);
            var b = this.__shady_native_cloneNode(!1);
            if (a && b.nodeType !== Node.ATTRIBUTE_NODE) {
                a = this.__shady_childNodes;
                for (var c = 0, d; c < a.length; c++) d = a[c].__shady_cloneNode(!0), b.__shady_appendChild(d)
            }
            return b
        }, getRootNode: function (a) {
            if (this && this.nodeType) {
                var b = q(this), c = b.B;
                void 0 === c && (w(this) ? (c = this, b.B = c) : (c = (c = this.__shady_parentNode) ? c.__shady_getRootNode(a) : this, document.documentElement.__shady_native_contains(this) && (b.B = c)));
                return c
            }
        }, contains: function (a) {
            return va(this, a)
        }
    });

    function Xb(a, b, c) {
        var d = [];
        Yb(a.__shady_childNodes, b, c, d);
        return d
    }

    function Yb(a, b, c, d) {
        for (var e = 0, f = a.length, g = void 0; e < f && (g = a[e]); e++) {
            var h;
            if (h = g.nodeType === Node.ELEMENT_NODE) {
                h = g;
                var k = b, l = c, p = d, u = k(h);
                u && p.push(h);
                l && l(u) ? h = u : (Yb(h.__shady_childNodes, k, l, p), h = void 0)
            }
            if (h) break
        }
    }

    var H = z({
        get firstElementChild() {
            var a = r(this);
            if (a && void 0 !== a.firstChild) {
                for (a = this.__shady_firstChild; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_nextSibling;
                return a
            }
            return this.__shady_native_firstElementChild
        }, get lastElementChild() {
            var a = r(this);
            if (a && void 0 !== a.lastChild) {
                for (a = this.__shady_lastChild; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_previousSibling;
                return a
            }
            return this.__shady_native_lastElementChild
        }, get children() {
            return v(this) ? wa(Array.prototype.filter.call(this.__shady_childNodes,
                function (a) {
                    return a.nodeType === Node.ELEMENT_NODE
                })) : this.__shady_native_children
        }, get childElementCount() {
            var a = this.__shady_children;
            return a ? a.length : 0
        }
    }), Zb = z({
        querySelector: function (a) {
            return Xb(this, function (b) {
                return pa.call(b, a)
            }, function (a) {
                return !!a
            })[0] || null
        }, querySelectorAll: function (a, b) {
            if (b) {
                b = Array.prototype.slice.call(this.__shady_native_querySelectorAll(a));
                var c = this.__shady_getRootNode();
                return b.filter(function (a) {
                    return a.__shady_getRootNode() == c
                })
            }
            return Xb(this, function (b) {
                return pa.call(b,
                    a)
            })
        }
    }), $b = t.$ ? Object.assign({}, H) : H;
    Object.assign(H, Zb);
    var ac = z({
        getElementById: function (a) {
            return "" === a ? null : Xb(this, function (b) {
                return b.id == a
            }, function (a) {
                return !!a
            })[0] || null
        }
    });
    var bc = z({
        get activeElement() {
            var a = t.i ? document.__shady_native_activeElement : document.activeElement;
            if (!a || !a.nodeType) return null;
            var b = !!w(this);
            if (!(this === document || b && this.host !== a && this.host.__shady_native_contains(a))) return null;
            for (b = F(a); b && b !== this;) a = b.host, b = F(a);
            return this === document ? b ? null : a : b === this ? a : null
        }
    });
    var cc = document.implementation.createHTMLDocument("inert"), dc = z({
        get innerHTML() {
            return v(this) ? Ma("template" === this.localName ? this.content : this, function (a) {
                return a.__shady_childNodes
            }) : this.__shady_native_innerHTML
        }, set innerHTML(a) {
            if ("template" === this.localName) this.__shady_native_innerHTML = a; else {
                Rb(this);
                var b = this.localName || "div";
                b = this.namespaceURI && this.namespaceURI !== cc.namespaceURI ? cc.createElementNS(this.namespaceURI, b) : cc.createElement(b);
                for (t.i ? b.__shady_native_innerHTML = a : b.innerHTML =
                    a; a = b.__shady_firstChild;) this.__shady_insertBefore(a)
            }
        }
    });
    var ec = z({
        addEventListener: function (a, b, c) {
            "object" !== typeof c && (c = {capture: !!c});
            c.O = this;
            this.host.__shady_addEventListener(a, b, c)
        }, removeEventListener: function (a, b, c) {
            "object" !== typeof c && (c = {capture: !!c});
            c.O = this;
            this.host.__shady_removeEventListener(a, b, c)
        }
    });

    function fc(a, b) {
        y(a, ec, b);
        y(a, bc, b);
        y(a, dc, b);
        y(a, H, b);
        t.A && !b ? (y(a, Wb, b), y(a, ac, b)) : t.i || (y(a, Ya), y(a, Xa))
    };var gc = {}, I = t.deferConnectionCallbacks && "loading" === document.readyState, hc;

    function ic(a) {
        var b = [];
        do b.unshift(a); while (a = a.__shady_parentNode);
        return b
    }

    function jc(a, b, c) {
        if (a !== gc) throw new TypeError("Illegal constructor");
        this.ga = "ShadyRoot";
        this.host = b;
        this.mode = c && c.mode;
        Hb(b);
        a = q(b);
        a.root = this;
        a.aa = "closed" !== this.mode ? this : null;
        a = q(this);
        a.firstChild = a.lastChild = a.parentNode = a.nextSibling = a.previousSibling = null;
        a.childNodes = [];
        this.P = this.u = !1;
        this.c = this.b = this.a = null;
        if (t.preferPerformance) for (; a = b.__shady_native_firstChild;) b.__shady_native_removeChild(a); else G(this)
    }

    function G(a) {
        a.u || (a.u = !0, ya(function () {
            return kc(a)
        }))
    }

    function kc(a) {
        var b;
        if (b = a.u) {
            for (var c; a;) a:{
                a.u && (c = a), b = a;
                a = b.host.__shady_getRootNode();
                if (w(a) && (b = r(b.host)) && 0 < b.F) break a;
                a = void 0
            }
            b = c
        }
        (c = b) && c._renderSelf()
    }

    jc.prototype._renderSelf = function () {
        var a = I;
        I = !0;
        this.u = !1;
        if (this.a) {
            lc(this);
            for (var b = 0, c; b < this.a.length; b++) {
                c = this.a[b];
                var d = r(c), e = d.assignedNodes;
                d.assignedNodes = [];
                d.v = [];
                if (d.R = e) for (d = 0; d < e.length; d++) {
                    var f = r(e[d]);
                    f.H = f.assignedSlot;
                    f.assignedSlot === c && (f.assignedSlot = null)
                }
            }
            for (b = this.host.__shady_firstChild; b; b = b.__shady_nextSibling) mc(this, b);
            for (b = 0; b < this.a.length; b++) {
                c = this.a[b];
                e = r(c);
                if (!e.assignedNodes.length) for (d = c.__shady_firstChild; d; d = d.__shady_nextSibling) mc(this, d, c);
                (d = (d = r(c.__shady_parentNode)) && d.root) && (oa(d) || d.u) && d._renderSelf();
                nc(this, e.v, e.assignedNodes);
                if (d = e.R) {
                    for (f = 0; f < d.length; f++) r(d[f]).H = null;
                    e.R = null;
                    d.length > e.assignedNodes.length && (e.K = !0)
                }
                e.K && (e.K = !1, oc(this, c))
            }
            c = this.a;
            b = [];
            for (e = 0; e < c.length; e++) d = c[e].__shady_parentNode, (f = r(d)) && f.root || !(0 > b.indexOf(d)) || b.push(d);
            for (c = 0; c < b.length; c++) {
                f = b[c];
                e = f === this ? this.host : f;
                d = [];
                f = f.__shady_childNodes;
                for (var g = 0; g < f.length; g++) {
                    var h = f[g];
                    if ("slot" == h.localName) {
                        h = r(h).v;
                        for (var k = 0; k <
                        h.length; k++) d.push(h[k])
                    } else d.push(h)
                }
                f = Array.prototype.slice.call(e.__shady_native_childNodes);
                g = Cb(d, d.length, f, f.length);
                k = h = 0;
                for (var l = void 0; h < g.length && (l = g[h]); h++) {
                    for (var p = 0, u = void 0; p < l.C.length && (u = l.C[p]); p++) u.__shady_native_parentNode === e && e.__shady_native_removeChild(u), f.splice(l.index + k, 1);
                    k -= l.I
                }
                k = 0;
                for (l = void 0; k < g.length && (l = g[k]); k++) for (h = f[l.index], p = l.index; p < l.index + l.I; p++) u = d[p], e.__shady_native_insertBefore(u, h), f.splice(p, 0, u)
            }
        }
        if (!t.preferPerformance && !this.P) for (b =
                                                      this.host.__shady_childNodes, c = 0, e = b.length; c < e; c++) d = b[c], f = r(d), d.__shady_native_parentNode !== this.host || "slot" !== d.localName && f.assignedSlot || this.host.__shady_native_removeChild(d);
        this.P = !0;
        I = a;
        hc && hc()
    };

    function mc(a, b, c) {
        var d = q(b), e = d.H;
        d.H = null;
        c || (c = (a = a.b[b.__shady_slot || "__catchall"]) && a[0]);
        c ? (q(c).assignedNodes.push(b), d.assignedSlot = c) : d.assignedSlot = void 0;
        e !== d.assignedSlot && d.assignedSlot && (q(d.assignedSlot).K = !0)
    }

    function nc(a, b, c) {
        for (var d = 0, e = void 0; d < c.length && (e = c[d]); d++) if ("slot" == e.localName) {
            var f = r(e).assignedNodes;
            f && f.length && nc(a, b, f)
        } else b.push(c[d])
    }

    function oc(a, b) {
        b.__shady_native_dispatchEvent(new Event("slotchange"));
        b = r(b);
        b.assignedSlot && oc(a, b.assignedSlot)
    }

    function lc(a) {
        if (a.c && a.c.length) {
            for (var b = a.c, c, d = 0; d < b.length; d++) {
                var e = b[d];
                Hb(e);
                var f = e.__shady_parentNode;
                Hb(f);
                f = r(f);
                f.F = (f.F || 0) + 1;
                f = pc(e);
                a.b[f] ? (c = c || {}, c[f] = !0, a.b[f].push(e)) : a.b[f] = [e];
                a.a.push(e)
            }
            if (c) for (var g in c) a.b[g] = qc(a.b[g]);
            a.c = []
        }
    }

    function pc(a) {
        var b = a.name || a.getAttribute("name") || "__catchall";
        return a.ea = b
    }

    function qc(a) {
        return a.sort(function (a, c) {
            a = ic(a);
            for (var b = ic(c), e = 0; e < a.length; e++) {
                c = a[e];
                var f = b[e];
                if (c !== f) return a = Array.from(c.__shady_parentNode.__shady_childNodes), a.indexOf(c) - a.indexOf(f)
            }
        })
    }

    function Vb(a, b) {
        if (a.a) {
            lc(a);
            var c = a.b, d;
            for (d in c) for (var e = c[d], f = 0; f < e.length; f++) {
                var g = e[f];
                if (va(b, g)) {
                    e.splice(f, 1);
                    var h = a.a.indexOf(g);
                    0 <= h && (a.a.splice(h, 1), (h = r(g.__shady_parentNode)) && h.F && h.F--);
                    f--;
                    g = r(g);
                    if (h = g.v) for (var k = 0; k < h.length; k++) {
                        var l = h[k], p = l.__shady_native_parentNode;
                        p && p.__shady_native_removeChild(l)
                    }
                    g.v = [];
                    g.assignedNodes = [];
                    h = !0
                }
            }
            return h
        }
    }

    function oa(a) {
        lc(a);
        return !(!a.a || !a.a.length)
    }

    (function (a) {
        a.__proto__ = DocumentFragment.prototype;
        fc(a, "__shady_");
        fc(a);
        Object.defineProperties(a, {
            nodeType: {value: Node.DOCUMENT_FRAGMENT_NODE, configurable: !0},
            nodeName: {value: "#document-fragment", configurable: !0},
            nodeValue: {value: null, configurable: !0}
        });
        ["localName", "namespaceURI", "prefix"].forEach(function (b) {
            Object.defineProperty(a, b, {value: void 0, configurable: !0})
        });
        ["ownerDocument", "baseURI", "isConnected"].forEach(function (b) {
            Object.defineProperty(a, b, {
                get: function () {
                    return this.host[b]
                },
                configurable: !0
            })
        })
    })(jc.prototype);
    if (window.customElements && t.T && !t.preferPerformance) {
        var rc = new Map;
        hc = function () {
            var a = [];
            rc.forEach(function (b, c) {
                a.push([c, b])
            });
            rc.clear();
            for (var b = 0; b < a.length; b++) {
                var c = a[b][0];
                a[b][1] ? c.ca() : c.da()
            }
        };
        I && document.addEventListener("readystatechange", function () {
            I = !1;
            hc()
        }, {once: !0});
        var sc = function (a, b, c) {
            var d = 0, e = "__isConnected" + d++;
            if (b || c) a.prototype.connectedCallback = a.prototype.ca = function () {
                I ? rc.set(this, !0) : this[e] || (this[e] = !0, b && b.call(this))
            }, a.prototype.disconnectedCallback = a.prototype.da =
                function () {
                    I ? this.isConnected || rc.set(this, !1) : this[e] && (this[e] = !1, c && c.call(this))
                };
            return a
        }, tc = window.customElements.define;
        Object.defineProperty(window.CustomElementRegistry.prototype, "define", {
            value: function (a, b) {
                var c = b.prototype.connectedCallback, d = b.prototype.disconnectedCallback;
                tc.call(window.customElements, a, sc(b, c, d));
                b.prototype.connectedCallback = c;
                b.prototype.disconnectedCallback = d
            }
        })
    }

    function F(a) {
        a = a.__shady_getRootNode();
        if (w(a)) return a
    };

    function J(a) {
        this.node = a
    }

    m = J.prototype;
    m.addEventListener = function (a, b, c) {
        return this.node.__shady_addEventListener(a, b, c)
    };
    m.removeEventListener = function (a, b, c) {
        return this.node.__shady_removeEventListener(a, b, c)
    };
    m.appendChild = function (a) {
        return this.node.__shady_appendChild(a)
    };
    m.insertBefore = function (a, b) {
        return this.node.__shady_insertBefore(a, b)
    };
    m.removeChild = function (a) {
        return this.node.__shady_removeChild(a)
    };
    m.replaceChild = function (a, b) {
        return this.node.__shady_replaceChild(a, b)
    };
    m.cloneNode = function (a) {
        return this.node.__shady_cloneNode(a)
    };
    m.getRootNode = function (a) {
        return this.node.__shady_getRootNode(a)
    };
    m.contains = function (a) {
        return this.node.__shady_contains(a)
    };
    m.dispatchEvent = function (a) {
        return this.node.__shady_dispatchEvent(a)
    };
    m.setAttribute = function (a, b) {
        this.node.__shady_setAttribute(a, b)
    };
    m.getAttribute = function (a) {
        return this.node.__shady_native_getAttribute(a)
    };
    m.removeAttribute = function (a) {
        this.node.__shady_removeAttribute(a)
    };
    m.attachShadow = function (a) {
        return this.node.__shady_attachShadow(a)
    };
    m.focus = function () {
        this.node.__shady_native_focus()
    };
    m.blur = function () {
        this.node.__shady_blur()
    };
    m.importNode = function (a, b) {
        if (this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_importNode(a, b)
    };
    m.getElementById = function (a) {
        if (this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_getElementById(a)
    };
    m.querySelector = function (a) {
        return this.node.__shady_querySelector(a)
    };
    m.querySelectorAll = function (a, b) {
        return this.node.__shady_querySelectorAll(a, b)
    };
    m.assignedNodes = function (a) {
        if ("slot" === this.node.localName) return this.node.__shady_assignedNodes(a)
    };
    n.Object.defineProperties(J.prototype, {
        activeElement: {
            configurable: !0, enumerable: !0, get: function () {
                if (w(this.node) || this.node.nodeType === Node.DOCUMENT_NODE) return this.node.__shady_activeElement
            }
        }, _activeElement: {
            configurable: !0, enumerable: !0, get: function () {
                return this.activeElement
            }
        }, host: {
            configurable: !0, enumerable: !0, get: function () {
                if (w(this.node)) return this.node.host
            }
        }, parentNode: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_parentNode
            }
        }, firstChild: {
            configurable: !0, enumerable: !0,
            get: function () {
                return this.node.__shady_firstChild
            }
        }, lastChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_lastChild
            }
        }, nextSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_nextSibling
            }
        }, previousSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_previousSibling
            }
        }, childNodes: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_childNodes
            }
        }, parentElement: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_parentElement
            }
        },
        firstElementChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_firstElementChild
            }
        }, lastElementChild: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_lastElementChild
            }
        }, nextElementSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_nextElementSibling
            }
        }, previousElementSibling: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_previousElementSibling
            }
        }, children: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_children
            }
        },
        childElementCount: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_childElementCount
            }
        }, shadowRoot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_shadowRoot
            }
        }, assignedSlot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_assignedSlot
            }
        }, isConnected: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_isConnected
            }
        }, innerHTML: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_innerHTML
            }, set: function (a) {
                this.node.__shady_innerHTML =
                    a
            }
        }, textContent: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_textContent
            }, set: function (a) {
                this.node.__shady_textContent = a
            }
        }, slot: {
            configurable: !0, enumerable: !0, get: function () {
                return this.node.__shady_slot
            }, set: function (a) {
                this.node.__shady_slot = a
            }
        }
    });
    Ab.forEach(function (a) {
        Object.defineProperty(J.prototype, a, {
            get: function () {
                return this.node["__shady_" + a]
            }, set: function (b) {
                this.node["__shady_" + a] = b
            }, configurable: !0
        })
    });
    var uc = new WeakMap;

    function vc(a) {
        if (w(a) || a instanceof J) return a;
        var b = uc.get(a);
        b || (b = new J(a), uc.set(a, b));
        return b
    };var wc = z({
        dispatchEvent: function (a) {
            za();
            return this.__shady_native_dispatchEvent(a)
        }, addEventListener: rb, removeEventListener: tb
    });
    var xc = z({
        get assignedSlot() {
            var a = this.__shady_parentNode;
            (a = a && a.__shady_shadowRoot) && kc(a);
            return (a = r(this)) && a.assignedSlot || null
        }
    });
    var yc = window.document;

    function zc(a, b) {
        if ("slot" === b) a = a.__shady_parentNode, na(a) && G(r(a).root); else if ("slot" === a.localName && "name" === b && (b = F(a))) {
            if (b.a) {
                lc(b);
                var c = a.ea, d = pc(a);
                if (d !== c) {
                    c = b.b[c];
                    var e = c.indexOf(a);
                    0 <= e && c.splice(e, 1);
                    c = b.b[d] || (b.b[d] = []);
                    c.push(a);
                    1 < c.length && (b.b[d] = qc(c))
                }
            }
            G(b)
        }
    }

    var Ac = z({
        get previousElementSibling() {
            var a = r(this);
            if (a && void 0 !== a.previousSibling) {
                for (a = this.__shady_previousSibling; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_previousSibling;
                return a
            }
            return this.__shady_native_previousElementSibling
        }, get nextElementSibling() {
            var a = r(this);
            if (a && void 0 !== a.nextSibling) {
                for (a = this.__shady_nextSibling; a && a.nodeType !== Node.ELEMENT_NODE;) a = a.__shady_nextSibling;
                return a
            }
            return this.__shady_native_nextElementSibling
        }, get slot() {
            return this.getAttribute("slot")
        },
        set slot(a) {
            this.__shady_setAttribute("slot", a)
        }, get shadowRoot() {
            var a = r(this);
            return a && a.aa || null
        }, get className() {
            return this.getAttribute("class") || ""
        }, set className(a) {
            this.__shady_setAttribute("class", a)
        }, setAttribute: function (a, b) {
            if (this.ownerDocument !== yc) this.__shady_native_setAttribute(a, b); else {
                var c;
                (c = E()) && "class" === a ? (c.setElementClass(this, b), c = !0) : c = !1;
                c || (this.__shady_native_setAttribute(a, b), zc(this, a))
            }
        }, removeAttribute: function (a) {
            this.__shady_native_removeAttribute(a);
            zc(this,
                a)
        }, attachShadow: function (a) {
            if (!this) throw Error("Must provide a host.");
            if (!a) throw Error("Not enough arguments.");
            return new jc(gc, this, a)
        }
    });
    var Bc = z({
        blur: function () {
            var a = r(this);
            (a = (a = a && a.root) && a.activeElement) ? a.__shady_blur() : this.__shady_native_blur()
        }
    });
    Ab.forEach(function (a) {
        Bc[a] = {
            set: function (b) {
                var c = q(this), d = a.substring(2);
                c.G[a] && this.removeEventListener(d, c.G[a]);
                this.__shady_addEventListener(d, b);
                c.G[a] = b
            }, get: function () {
                var b = r(this);
                return b && b.G[a]
            }, configurable: !0
        }
    });
    var Cc = z({
        assignedNodes: function (a) {
            if ("slot" === this.localName) {
                var b = this.__shady_getRootNode();
                b && w(b) && kc(b);
                return (b = r(this)) ? (a && a.flatten ? b.v : b.assignedNodes) || [] : []
            }
        }
    });
    var Dc = window.document, Ec = z({
        importNode: function (a, b) {
            if (a.ownerDocument !== Dc || "template" === a.localName) return this.__shady_native_importNode(a, b);
            var c = this.__shady_native_importNode(a, !1);
            if (b) {
                a = a.__shady_childNodes;
                b = 0;
                for (var d; b < a.length; b++) d = this.__shady_importNode(a[b], !0), c.__shady_appendChild(d)
            }
            return c
        }
    });
    var Fc = z({addEventListener: rb.bind(window), removeEventListener: tb.bind(window)});
    var K = {};
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "parentElement") && (K.parentElement = Wb.parentElement);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "contains") && (K.contains = Wb.contains);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "children") && (K.children = H.children);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "innerHTML") && (K.innerHTML = dc.innerHTML);
    Object.getOwnPropertyDescriptor(HTMLElement.prototype, "className") && (K.className = Ac.className);
    var Gc = {
        EventTarget: [wc],
        Node: [Wb, window.EventTarget ? null : wc],
        Text: [xc],
        Element: [Ac, H, xc, !t.i || "innerHTML" in Element.prototype ? dc : null, window.HTMLSlotElement ? null : Cc],
        HTMLElement: [Bc, K],
        HTMLSlotElement: [Cc],
        DocumentFragment: [$b, ac],
        Document: [Ec, $b, ac, bc],
        Window: [Fc]
    }, Hc = t.i ? null : ["innerHTML", "textContent"];

    function Ic(a) {
        var b = a ? null : Hc, c = {}, d;
        for (d in Gc) c.M = window[d] && window[d].prototype, Gc[d].forEach(function (c) {
            return function (d) {
                return c.M && d && y(c.M, d, a, b)
            }
        }(c)), c = {M: c.M}
    };
    if (t.T) {
        var ShadyDOM = {
            inUse: t.T,
            patch: function (a) {
                cb(a);
                bb(a);
                return a
            },
            isShadyRoot: w,
            enqueue: ya,
            flush: za,
            flushInitial: function (a) {
                !a.P && a.u && kc(a)
            },
            settings: t,
            filterMutations: Ea,
            observeChildren: Ca,
            unobserveChildren: Da,
            deferConnectionCallbacks: t.deferConnectionCallbacks,
            preferPerformance: t.preferPerformance,
            handlesDynamicScoping: !0,
            wrap: t.A ? vc : function (a) {
                return a
            },
            Wrapper: J,
            composedPath: jb,
            noPatch: t.A,
            nativeMethods: Oa,
            nativeTree: Pa
        };
        window.ShadyDOM = ShadyDOM;
        Wa();
        Ic("__shady_");
        Object.defineProperty(document,
            "_activeElement", bc.activeElement);
        y(Window.prototype, Fc, "__shady_");
        t.A || (Ic(), zb());
        ub();
        window.Event = wb;
        window.CustomEvent = xb;
        window.MouseEvent = yb;
        window.ShadowRoot = jc
    }
    ;/*

Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
    function Jc() {
        this.end = this.start = 0;
        this.rules = this.parent = this.previous = null;
        this.cssText = this.parsedCssText = "";
        this.atRule = !1;
        this.type = 0;
        this.parsedSelector = this.selector = this.keyframesName = ""
    }

    function Kc(a) {
        a = a.replace(Lc, "").replace(Mc, "");
        var b = Nc, c = a, d = new Jc;
        d.start = 0;
        d.end = c.length;
        for (var e = d, f = 0, g = c.length; f < g; f++) if ("{" === c[f]) {
            e.rules || (e.rules = []);
            var h = e, k = h.rules[h.rules.length - 1] || null;
            e = new Jc;
            e.start = f + 1;
            e.parent = h;
            e.previous = k;
            h.rules.push(e)
        } else "}" === c[f] && (e.end = f + 1, e = e.parent || d);
        return b(d, a)
    }

    function Nc(a, b) {
        var c = b.substring(a.start, a.end - 1);
        a.parsedCssText = a.cssText = c.trim();
        a.parent && (c = b.substring(a.previous ? a.previous.end : a.parent.start, a.start - 1), c = Oc(c), c = c.replace(Pc, " "), c = c.substring(c.lastIndexOf(";") + 1), c = a.parsedSelector = a.selector = c.trim(), a.atRule = 0 === c.indexOf("@"), a.atRule ? 0 === c.indexOf("@media") ? a.type = Qc : c.match(Rc) && (a.type = Sc, a.keyframesName = a.selector.split(Pc).pop()) : a.type = 0 === c.indexOf("--") ? Tc : Uc);
        if (c = a.rules) for (var d = 0, e = c.length, f = void 0; d < e && (f = c[d]); d++) Nc(f,
            b);
        return a
    }

    function Oc(a) {
        return a.replace(/\\([0-9a-f]{1,6})\s/gi, function (a, c) {
            a = c;
            for (c = 6 - a.length; c--;) a = "0" + a;
            return "\\" + a
        })
    }

    function Vc(a, b, c) {
        c = void 0 === c ? "" : c;
        var d = "";
        if (a.cssText || a.rules) {
            var e = a.rules, f;
            if (f = e) f = e[0], f = !(f && f.selector && 0 === f.selector.indexOf("--"));
            if (f) {
                f = 0;
                for (var g = e.length, h = void 0; f < g && (h = e[f]); f++) d = Vc(h, b, d)
            } else b ? b = a.cssText : (b = a.cssText, b = b.replace(Wc, "").replace(Xc, ""), b = b.replace(Yc, "").replace(Zc, "")), (d = b.trim()) && (d = "  " + d + "\n")
        }
        d && (a.selector && (c += a.selector + " {\n"), c += d, a.selector && (c += "}\n\n"));
        return c
    }

    var Uc = 1, Sc = 7, Qc = 4, Tc = 1E3, Lc = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim, Mc = /@import[^;]*;/gim,
        Wc = /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,
        Xc = /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,
        Yc = /@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim, Zc = /[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,
        Rc = /^@[^\s]*keyframes/, Pc = /\s+/g;
    var L = !(window.ShadyDOM && window.ShadyDOM.inUse), $c;

    function ad(a) {
        $c = a && a.shimcssproperties ? !1 : L || !(navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/) || !window.CSS || !CSS.supports || !CSS.supports("box-shadow", "0 0 0 var(--foo)"))
    }

    var bd;
    window.ShadyCSS && void 0 !== window.ShadyCSS.cssBuild && (bd = window.ShadyCSS.cssBuild);
    var M = !(!window.ShadyCSS || !window.ShadyCSS.disableRuntime);
    window.ShadyCSS && void 0 !== window.ShadyCSS.nativeCss ? $c = window.ShadyCSS.nativeCss : window.ShadyCSS ? (ad(window.ShadyCSS), window.ShadyCSS = void 0) : ad(window.WebComponents && window.WebComponents.flags);
    var N = $c, cd = bd;
    var dd = /(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};{])+)|\{([^}]*)\}(?:(?=[;\s}])|$))/gi,
        ed = /(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi, fd = /(--[\w-]+)\s*([:,;)]|$)/gi,
        gd = /(animation\s*:)|(animation-name\s*:)/, hd = /@media\s(.*)/, id = /\{[^}]*\}/g;
    var jd = new Set;

    function O(a, b) {
        if (!a) return "";
        "string" === typeof a && (a = Kc(a));
        b && P(a, b);
        return Vc(a, N)
    }

    function kd(a) {
        !a.__cssRules && a.textContent && (a.__cssRules = Kc(a.textContent));
        return a.__cssRules || null
    }

    function ld(a) {
        return !!a.parent && a.parent.type === Sc
    }

    function P(a, b, c, d) {
        if (a) {
            var e = !1, f = a.type;
            if (d && f === Qc) {
                var g = a.selector.match(hd);
                g && (window.matchMedia(g[1]).matches || (e = !0))
            }
            f === Uc ? b(a) : c && f === Sc ? c(a) : f === Tc && (e = !0);
            if ((a = a.rules) && !e) for (e = 0, f = a.length, g = void 0; e < f && (g = a[e]); e++) P(g, b, c, d)
        }
    }

    function md(a, b, c, d) {
        var e = document.createElement("style");
        b && e.setAttribute("scope", b);
        e.textContent = a;
        nd(e, c, d);
        return e
    }

    var Q = null;

    function od(a) {
        a = document.createComment(" Shady DOM styles for " + a + " ");
        var b = document.head;
        b.insertBefore(a, (Q ? Q.nextSibling : null) || b.firstChild);
        return Q = a
    }

    function nd(a, b, c) {
        b = b || document.head;
        b.insertBefore(a, c && c.nextSibling || b.firstChild);
        Q ? a.compareDocumentPosition(Q) === Node.DOCUMENT_POSITION_PRECEDING && (Q = a) : Q = a
    }

    function pd(a, b) {
        for (var c = 0, d = a.length; b < d; b++) if ("(" === a[b]) c++; else if (")" === a[b] && 0 === --c) return b;
        return -1
    }

    function qd(a, b) {
        var c = a.indexOf("var(");
        if (-1 === c) return b(a, "", "", "");
        var d = pd(a, c + 3), e = a.substring(c + 4, d);
        c = a.substring(0, c);
        a = qd(a.substring(d + 1), b);
        d = e.indexOf(",");
        return -1 === d ? b(c, e.trim(), "", a) : b(c, e.substring(0, d).trim(), e.substring(d + 1).trim(), a)
    }

    function rd(a, b) {
        L ? a.setAttribute("class", b) : window.ShadyDOM.nativeMethods.setAttribute.call(a, "class", b)
    }

    var sd = window.ShadyDOM && window.ShadyDOM.wrap || function (a) {
        return a
    };

    function R(a) {
        var b = a.localName, c = "";
        b ? -1 < b.indexOf("-") || (c = b, b = a.getAttribute && a.getAttribute("is") || "") : (b = a.is, c = a.extends);
        return {is: b, D: c}
    }

    function td(a) {
        for (var b = [], c = "", d = 0; 0 <= d && d < a.length; d++) if ("(" === a[d]) {
            var e = pd(a, d);
            c += a.slice(d, e + 1);
            d = e
        } else "," === a[d] ? (b.push(c), c = "") : c += a[d];
        c && b.push(c);
        return b
    }

    function S(a) {
        if (void 0 !== cd) return cd;
        if (void 0 === a.__cssBuild) {
            var b = a.getAttribute("css-build");
            if (b) a.__cssBuild = b; else {
                a:{
                    b = "template" === a.localName ? a.content.firstChild : a.firstChild;
                    if (b instanceof Comment && (b = b.textContent.trim().split(":"), "css-build" === b[0])) {
                        b = b[1];
                        break a
                    }
                    b = ""
                }
                if ("" !== b) {
                    var c = "template" === a.localName ? a.content.firstChild : a.firstChild;
                    c.parentNode.removeChild(c)
                }
                a.__cssBuild = b
            }
        }
        return a.__cssBuild || ""
    }

    function ud(a) {
        a = void 0 === a ? "" : a;
        return "" !== a && N ? L ? "shadow" === a : "shady" === a : !1
    };

    function vd() {
    }

    function wd(a, b) {
        xd(T, a, function (a) {
            U(a, b || "")
        })
    }

    function xd(a, b, c) {
        b.nodeType === Node.ELEMENT_NODE && c(b);
        var d;
        "template" === b.localName ? d = (b.content || b._content || b).childNodes : d = b.children || b.childNodes;
        if (d) for (b = 0; b < d.length; b++) xd(a, d[b], c)
    }

    function U(a, b, c) {
        if (b) if (a.classList) c ? (a.classList.remove("style-scope"), a.classList.remove(b)) : (a.classList.add("style-scope"), a.classList.add(b)); else if (a.getAttribute) {
            var d = a.getAttribute("class");
            c ? d && (b = d.replace("style-scope", "").replace(b, ""), rd(a, b)) : rd(a, (d ? d + " " : "") + "style-scope " + b)
        }
    }

    function yd(a, b, c) {
        xd(T, a, function (a) {
            U(a, b, !0);
            U(a, c)
        })
    }

    function zd(a, b) {
        xd(T, a, function (a) {
            U(a, b || "", !0)
        })
    }

    function Ad(a, b, c, d, e) {
        var f = T;
        e = void 0 === e ? "" : e;
        "" === e && (L || "shady" === (void 0 === d ? "" : d) ? e = O(b, c) : (a = R(a), e = Bd(f, b, a.is, a.D, c) + "\n\n"));
        return e.trim()
    }

    function Bd(a, b, c, d, e) {
        var f = Cd(c, d);
        c = c ? "." + c : "";
        return O(b, function (b) {
            b.c || (b.selector = b.g = Dd(a, b, a.b, c, f), b.c = !0);
            e && e(b, c, f)
        })
    }

    function Cd(a, b) {
        return b ? "[is=" + a + "]" : a
    }

    function Dd(a, b, c, d, e) {
        var f = td(b.selector);
        if (!ld(b)) {
            b = 0;
            for (var g = f.length, h = void 0; b < g && (h = f[b]); b++) f[b] = c.call(a, h, d, e)
        }
        return f.filter(function (a) {
            return !!a
        }).join(",")
    }

    function Ed(a) {
        return a.replace(Fd, function (a, c, d) {
            -1 < d.indexOf("+") ? d = d.replace(/\+/g, "___") : -1 < d.indexOf("___") && (d = d.replace(/___/g, "+"));
            return ":" + c + "(" + d + ")"
        })
    }

    function Gd(a) {
        for (var b = [], c; c = a.match(Hd);) {
            var d = c.index, e = pd(a, d);
            if (-1 === e) throw Error(c.input + " selector missing ')'");
            c = a.slice(d, e + 1);
            a = a.replace(c, "\ue000");
            b.push(c)
        }
        return {V: a, matches: b}
    }

    function Id(a, b) {
        var c = a.split("\ue000");
        return b.reduce(function (a, b, f) {
            return a + b + c[f + 1]
        }, c[0])
    }

    vd.prototype.b = function (a, b, c) {
        var d = !1;
        a = a.trim();
        var e = Fd.test(a);
        e && (a = a.replace(Fd, function (a, b, c) {
            return ":" + b + "(" + c.replace(/\s/g, "") + ")"
        }), a = Ed(a));
        var f = Hd.test(a);
        if (f) {
            var g = Gd(a);
            a = g.V;
            g = g.matches
        }
        a = a.replace(Jd, ":host $1");
        a = a.replace(Kd, function (a, e, f) {
            d || (a = Ld(f, e, b, c), d = d || a.stop, e = a.ka, f = a.value);
            return e + f
        });
        f && (a = Id(a, g));
        e && (a = Ed(a));
        return a
    };

    function Ld(a, b, c, d) {
        var e = a.indexOf("::slotted");
        0 <= a.indexOf(":host") ? a = Md(a, d) : 0 !== e && (a = c ? Nd(a, c) : a);
        c = !1;
        0 <= e && (b = "", c = !0);
        if (c) {
            var f = !0;
            c && (a = a.replace(Od, function (a, b) {
                return " > " + b
            }))
        }
        a = a.replace(Pd, function (a, b, c) {
            return '[dir="' + c + '"] ' + b + ", " + b + '[dir="' + c + '"]'
        });
        return {value: a, ka: b, stop: f}
    }

    function Nd(a, b) {
        a = a.split(/(\[.+?\])/);
        for (var c = [], d = 0; d < a.length; d++) if (1 === d % 2) c.push(a[d]); else {
            var e = a[d];
            if ("" !== e || d !== a.length - 1) e = e.split(":"), e[0] += b, c.push(e.join(":"))
        }
        return c.join("")
    }

    function Md(a, b) {
        var c = a.match(Qd);
        return (c = c && c[2].trim() || "") ? c[0].match(Rd) ? a.replace(Qd, function (a, c, f) {
            return b + f
        }) : c.split(Rd)[0] === b ? c : "should_not_match" : a.replace(":host", b)
    }

    function Sd(a) {
        ":root" === a.selector && (a.selector = "html")
    }

    vd.prototype.c = function (a) {
        return a.match(":host") ? "" : a.match("::slotted") ? this.b(a, ":not(.style-scope)") : Nd(a.trim(), ":not(.style-scope)")
    };
    n.Object.defineProperties(vd.prototype, {
        a: {
            configurable: !0, enumerable: !0, get: function () {
                return "style-scope"
            }
        }
    });
    var Fd = /:(nth[-\w]+)\(([^)]+)\)/, Kd = /(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=[])+)/g, Rd = /[[.:#*]/,
        Jd = /^(::slotted)/, Qd = /(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/,
        Od = /(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/, Pd = /(.*):dir\((?:(ltr|rtl))\)/,
        Hd = /:(?:matches|any|-(?:webkit|moz)-any)/, T = new vd;

    function V(a, b, c, d, e) {
        this.s = a || null;
        this.b = b || null;
        this.U = c || [];
        this.j = null;
        this.cssBuild = e || "";
        this.D = d || "";
        this.a = this.l = this.o = null
    }

    function W(a) {
        return a ? a.__styleInfo : null
    }

    function Td(a, b) {
        return a.__styleInfo = b
    }

    V.prototype.c = function () {
        return this.s
    };
    V.prototype._getStyleRules = V.prototype.c;

    function Ud(a) {
        var b = this.matches || this.matchesSelector || this.mozMatchesSelector || this.msMatchesSelector || this.oMatchesSelector || this.webkitMatchesSelector;
        return b && b.call(this, a)
    }

    var Vd = navigator.userAgent.match("Trident");

    function Wd() {
    }

    function Xd(a) {
        var b = {}, c = [], d = 0;
        P(a, function (a) {
            Yd(a);
            a.index = d++;
            a = a.f.cssText;
            for (var c; c = fd.exec(a);) {
                var e = c[1];
                ":" !== c[2] && (b[e] = !0)
            }
        }, function (a) {
            c.push(a)
        });
        a.b = c;
        a = [];
        for (var e in b) a.push(e);
        return a
    }

    function Yd(a) {
        if (!a.f) {
            var b = {}, c = {};
            Zd(a, c) && (b.m = c, a.rules = null);
            b.cssText = a.parsedCssText.replace(id, "").replace(dd, "");
            a.f = b
        }
    }

    function Zd(a, b) {
        var c = a.f;
        if (c) {
            if (c.m) return Object.assign(b, c.m), !0
        } else {
            c = a.parsedCssText;
            for (var d; a = dd.exec(c);) {
                d = (a[2] || a[3]).trim();
                if ("inherit" !== d || "unset" !== d) b[a[1].trim()] = d;
                d = !0
            }
            return d
        }
    }

    function $d(a, b, c) {
        b && (b = 0 <= b.indexOf(";") ? ae(a, b, c) : qd(b, function (b, e, f, g) {
            if (!e) return b + g;
            (e = $d(a, c[e], c)) && "initial" !== e ? "apply-shim-inherit" === e && (e = "inherit") : e = $d(a, c[f] || f, c) || f;
            return b + (e || "") + g
        }));
        return b && b.trim() || ""
    }

    function ae(a, b, c) {
        b = b.split(";");
        for (var d = 0, e, f; d < b.length; d++) if (e = b[d]) {
            ed.lastIndex = 0;
            if (f = ed.exec(e)) e = $d(a, c[f[1]], c); else if (f = e.indexOf(":"), -1 !== f) {
                var g = e.substring(f);
                g = g.trim();
                g = $d(a, g, c) || g;
                e = e.substring(0, f) + g
            }
            b[d] = e && e.lastIndexOf(";") === e.length - 1 ? e.slice(0, -1) : e || ""
        }
        return b.join(";")
    }

    function be(a, b) {
        var c = {}, d = [];
        P(a, function (a) {
            a.f || Yd(a);
            var e = a.g || a.parsedSelector;
            b && a.f.m && e && Ud.call(b, e) && (Zd(a, c), a = a.index, e = parseInt(a / 32, 10), d[e] = (d[e] || 0) | 1 << a % 32)
        }, null, !0);
        return {m: c, key: d}
    }

    function ce(a, b, c, d) {
        b.f || Yd(b);
        if (b.f.m) {
            var e = R(a);
            a = e.is;
            e = e.D;
            e = a ? Cd(a, e) : "html";
            var f = b.parsedSelector, g = ":host > *" === f || "html" === f, h = 0 === f.indexOf(":host") && !g;
            "shady" === c && (g = f === e + " > *." + e || -1 !== f.indexOf("html"), h = !g && 0 === f.indexOf(e));
            if (g || h) c = e, h && (b.g || (b.g = Dd(T, b, T.b, a ? "." + a : "", e)), c = b.g || e), d({
                V: c,
                pa: h,
                ya: g
            })
        }
    }

    function de(a, b, c) {
        var d = {}, e = {};
        P(b, function (b) {
            ce(a, b, c, function (c) {
                Ud.call(a._element || a, c.V) && (c.pa ? Zd(b, d) : Zd(b, e))
            })
        }, null, !0);
        return {ra: e, oa: d}
    }

    function ee(a, b, c, d) {
        var e = R(b), f = Cd(e.is, e.D),
            g = new RegExp("(?:^|[^.#[:])" + (b.extends ? "\\" + f.slice(0, -1) + "\\]" : f) + "($|[.:[\\s>+~])"),
            h = W(b);
        e = h.s;
        h = h.cssBuild;
        var k = fe(e, d);
        return Ad(b, e, function (b) {
            var e = "";
            b.f || Yd(b);
            b.f.cssText && (e = ae(a, b.f.cssText, c));
            b.cssText = e;
            if (!L && !ld(b) && b.cssText) {
                var h = e = b.cssText;
                null == b.Z && (b.Z = gd.test(e));
                if (b.Z) if (null == b.L) {
                    b.L = [];
                    for (var l in k) h = k[l], h = h(e), e !== h && (e = h, b.L.push(l))
                } else {
                    for (l = 0; l < b.L.length; ++l) h = k[b.L[l]], e = h(e);
                    h = e
                }
                b.cssText = h;
                b.g = b.g || b.selector;
                e = "." + d;
                l = td(b.g);
                h = 0;
                for (var ba = l.length, Fa = void 0; h < ba && (Fa = l[h]); h++) l[h] = Fa.match(g) ? Fa.replace(f, e) : e + " " + Fa;
                b.selector = l.join(",")
            }
        }, h)
    }

    function fe(a, b) {
        a = a.b;
        var c = {};
        if (!L && a) for (var d = 0, e = a[d]; d < a.length; e = a[++d]) {
            var f = e, g = b;
            f.h = new RegExp("\\b" + f.keyframesName + "(?!\\B|-)", "g");
            f.a = f.keyframesName + "-" + g;
            f.g = f.g || f.selector;
            f.selector = f.g.replace(f.keyframesName, f.a);
            c[e.keyframesName] = ge(e)
        }
        return c
    }

    function ge(a) {
        return function (b) {
            return b.replace(a.h, a.a)
        }
    }

    function he(a, b) {
        var c = ie, d = kd(a);
        a.textContent = O(d, function (a) {
            var d = a.cssText = a.parsedCssText;
            a.f && a.f.cssText && (d = d.replace(Wc, "").replace(Xc, ""), a.cssText = ae(c, d, b))
        })
    }

    n.Object.defineProperties(Wd.prototype, {
        a: {
            configurable: !0, enumerable: !0, get: function () {
                return "x-scope"
            }
        }
    });
    var ie = new Wd;
    var X = {}, je = window.customElements;
    if (je && !L && !M) {
        var ke = je.define;
        je.define = function (a, b, c) {
            X[a] || (X[a] = od(a));
            ke.call(je, a, b, c)
        }
    }
    ;

    function le() {
        this.cache = {}
    }

    le.prototype.store = function (a, b, c, d) {
        var e = this.cache[a] || [];
        e.push({m: b, styleElement: c, l: d});
        100 < e.length && e.shift();
        this.cache[a] = e
    };

    function me() {
    }

    var ne = new RegExp(T.a + "\\s*([^\\s]*)");

    function oe(a) {
        return (a = (a.classList && a.classList.value ? a.classList.value : a.getAttribute("class") || "").match(ne)) ? a[1] : ""
    }

    function pe(a) {
        var b = sd(a).getRootNode();
        return b === a || b === a.ownerDocument ? "" : (a = b.host) ? R(a).is : ""
    }

    function qe(a) {
        for (var b = 0; b < a.length; b++) {
            var c = a[b];
            if (c.target !== document.documentElement && c.target !== document.head) for (var d = 0; d < c.addedNodes.length; d++) {
                var e = c.addedNodes[d];
                if (e.nodeType === Node.ELEMENT_NODE) {
                    var f = e.getRootNode(), g = oe(e);
                    if (g && f === e.ownerDocument && ("style" !== e.localName && "template" !== e.localName || "" === S(e))) zd(e, g); else if (f instanceof ShadowRoot) for (f = pe(e), f !== g && yd(e, g, f), e = window.ShadyDOM.nativeMethods.querySelectorAll.call(e, ":not(." + T.a + ")"), g = 0; g < e.length; g++) {
                        f = e[g];
                        var h = pe(f);
                        h && U(f, h)
                    }
                }
            }
        }
    }

    if (!(L || window.ShadyDOM && window.ShadyDOM.handlesDynamicScoping)) {
        var re = new MutationObserver(qe), se = function (a) {
            re.observe(a, {childList: !0, subtree: !0})
        };
        if (window.customElements && !window.customElements.polyfillWrapFlushCallback) se(document); else {
            var te = function () {
                se(document.body)
            };
            window.HTMLImports ? window.HTMLImports.whenReady(te) : requestAnimationFrame(function () {
                if ("loading" === document.readyState) {
                    var a = function () {
                        te();
                        document.removeEventListener("readystatechange", a)
                    };
                    document.addEventListener("readystatechange",
                        a)
                } else te()
            })
        }
        me = function () {
            qe(re.takeRecords())
        }
    }
    var ue = me;
    var ve = {};
    var we = Promise.resolve();

    function xe(a) {
        if (a = ve[a]) a._applyShimCurrentVersion = a._applyShimCurrentVersion || 0, a._applyShimValidatingVersion = a._applyShimValidatingVersion || 0, a._applyShimNextVersion = (a._applyShimNextVersion || 0) + 1
    }

    function ye(a) {
        return a._applyShimCurrentVersion === a._applyShimNextVersion
    }

    function ze(a) {
        a._applyShimValidatingVersion = a._applyShimNextVersion;
        a._validating || (a._validating = !0, we.then(function () {
            a._applyShimCurrentVersion = a._applyShimNextVersion;
            a._validating = !1
        }))
    };var Ae = {}, Be = new le;

    function Y() {
        this.Y = {};
        this.c = document.documentElement;
        var a = new Jc;
        a.rules = [];
        this.h = Td(this.c, new V(a));
        this.S = !1;
        this.b = this.a = null
    }

    m = Y.prototype;
    m.flush = function () {
        ue()
    };
    m.ma = function (a) {
        return kd(a)
    };
    m.va = function (a) {
        return O(a)
    };
    m.prepareTemplate = function (a, b, c) {
        this.prepareTemplateDom(a, b);
        this.prepareTemplateStyles(a, b, c)
    };
    m.prepareTemplateStyles = function (a, b, c) {
        if (!a._prepared && !M) {
            L || X[b] || (X[b] = od(b));
            a._prepared = !0;
            a.name = b;
            a.extends = c;
            ve[b] = a;
            var d = S(a), e = ud(d);
            c = {is: b, extends: c};
            for (var f = [], g = a.content.querySelectorAll("style"), h = 0; h < g.length; h++) {
                var k = g[h];
                if (k.hasAttribute("shady-unscoped")) {
                    if (!L) {
                        var l = k.textContent;
                        jd.has(l) || (jd.add(l), l = k.cloneNode(!0), document.head.appendChild(l));
                        k.parentNode.removeChild(k)
                    }
                } else f.push(k.textContent), k.parentNode.removeChild(k)
            }
            f = f.join("").trim() + (Ae[b] || "");
            Ce(this);
            if (!e) {
                if (g = !d) g = ed.test(f) || dd.test(f), ed.lastIndex = 0, dd.lastIndex = 0;
                h = Kc(f);
                g && N && this.a && this.a.transformRules(h, b);
                a._styleAst = h
            }
            g = [];
            N || (g = Xd(a._styleAst));
            if (!g.length || N) h = L ? a.content : null, b = X[b] || null, d = Ad(c, a._styleAst, null, d, e ? f : ""), d = d.length ? md(d, c.is, h, b) : null, a._style = d;
            a.a = g
        }
    };
    m.qa = function (a, b) {
        Ae[b] = a.join(" ")
    };
    m.prepareTemplateDom = function (a, b) {
        if (!M) {
            var c = S(a);
            L || "shady" === c || a._domPrepared || (a._domPrepared = !0, wd(a.content, b))
        }
    };

    function De(a) {
        var b = R(a), c = b.is;
        b = b.D;
        var d = X[c] || null, e = ve[c];
        if (e) {
            c = e._styleAst;
            var f = e.a;
            e = S(e);
            b = new V(c, d, f, b, e);
            Td(a, b);
            return b
        }
    }

    function Ee(a) {
        !a.b && window.ShadyCSS && window.ShadyCSS.CustomStyleInterface && (a.b = window.ShadyCSS.CustomStyleInterface, a.b.transformCallback = function (b) {
            a.ba(b)
        }, a.b.validateCallback = function () {
            requestAnimationFrame(function () {
                (a.b.enqueued || a.S) && a.flushCustomStyles()
            })
        })
    }

    function Ce(a) {
        !a.a && window.ShadyCSS && window.ShadyCSS.ApplyShim && (a.a = window.ShadyCSS.ApplyShim, a.a.invalidCallback = xe);
        Ee(a)
    }

    m.flushCustomStyles = function () {
        if (!M && (Ce(this), this.b)) {
            var a = this.b.processStyles();
            if (this.b.enqueued && !ud(this.h.cssBuild)) {
                if (N) {
                    if (!this.h.cssBuild) for (var b = 0; b < a.length; b++) {
                        var c = this.b.getStyleForCustomStyle(a[b]);
                        if (c && N && this.a) {
                            var d = kd(c);
                            Ce(this);
                            this.a.transformRules(d);
                            c.textContent = O(d)
                        }
                    }
                } else {
                    Fe(this, this.c, this.h);
                    for (b = 0; b < a.length; b++) (c = this.b.getStyleForCustomStyle(a[b])) && he(c, this.h.o);
                    this.S && this.styleDocument()
                }
                this.b.enqueued = !1
            }
        }
    };
    m.styleElement = function (a, b) {
        if (M) {
            if (b) {
                W(a) || Td(a, new V(null));
                var c = W(a);
                c.j = c.j || {};
                Object.assign(c.j, b);
                Ge(this, a, c)
            }
        } else if (c = W(a) || De(a)) if (a !== this.c && (this.S = !0), b && (c.j = c.j || {}, Object.assign(c.j, b)), N) Ge(this, a, c); else if (this.flush(), Fe(this, a, c), c.U && c.U.length) {
            b = R(a).is;
            var d;
            a:{
                if (d = Be.cache[b]) for (var e = d.length - 1; 0 <= e; e--) {
                    var f = d[e];
                    b:{
                        var g = c.U;
                        for (var h = 0; h < g.length; h++) {
                            var k = g[h];
                            if (f.m[k] !== c.o[k]) {
                                g = !1;
                                break b
                            }
                        }
                        g = !0
                    }
                    if (g) {
                        d = f;
                        break a
                    }
                }
                d = void 0
            }
            g = d ? d.styleElement : null;
            e = c.l;
            (f = d && d.l) || (f = this.Y[b] = (this.Y[b] || 0) + 1, f = b + "-" + f);
            c.l = f;
            f = c.l;
            h = ie;
            h = g ? g.textContent || "" : ee(h, a, c.o, f);
            k = W(a);
            var l = k.a;
            l && !L && l !== g && (l._useCount--, 0 >= l._useCount && l.parentNode && l.parentNode.removeChild(l));
            L ? k.a ? (k.a.textContent = h, g = k.a) : h && (g = md(h, f, a.shadowRoot, k.b)) : g ? g.parentNode || (Vd && -1 < h.indexOf("@media") && (g.textContent = h), nd(g, null, k.b)) : h && (g = md(h, f, null, k.b));
            g && (g._useCount = g._useCount || 0, k.a != g && g._useCount++, k.a = g);
            f = g;
            L || (g = c.l, k = h = a.getAttribute("class") || "", e && (k = h.replace(new RegExp("\\s*x-scope\\s*" +
                e + "\\s*", "g"), " ")), k += (k ? " " : "") + "x-scope " + g, h !== k && rd(a, k));
            d || Be.store(b, c.o, f, c.l)
        }
    };

    function Ge(a, b, c) {
        var d = R(b).is;
        if (c.j) {
            var e = c.j, f;
            for (f in e) null === f ? b.style.removeProperty(f) : b.style.setProperty(f, e[f])
        }
        e = ve[d];
        if (!(!e && b !== a.c || e && "" !== S(e)) && e && e._style && !ye(e)) {
            if (ye(e) || e._applyShimValidatingVersion !== e._applyShimNextVersion) Ce(a), a.a && a.a.transformRules(e._styleAst, d), e._style.textContent = Ad(b, c.s), ze(e);
            L && (a = b.shadowRoot) && (a = a.querySelector("style")) && (a.textContent = Ad(b, c.s));
            c.s = e._styleAst
        }
    }

    function He(a, b) {
        return (b = sd(b).getRootNode().host) ? W(b) || De(b) ? b : He(a, b) : a.c
    }

    function Fe(a, b, c) {
        var d = He(a, b), e = W(d), f = e.o;
        d === a.c || f || (Fe(a, d, e), f = e.o);
        a = Object.create(f || null);
        d = de(b, c.s, c.cssBuild);
        b = be(e.s, b).m;
        Object.assign(a, d.oa, b, d.ra);
        b = c.j;
        for (var g in b) if ((e = b[g]) || 0 === e) a[g] = e;
        g = ie;
        b = Object.getOwnPropertyNames(a);
        for (e = 0; e < b.length; e++) d = b[e], a[d] = $d(g, a[d], a);
        c.o = a
    }

    m.styleDocument = function (a) {
        this.styleSubtree(this.c, a)
    };
    m.styleSubtree = function (a, b) {
        var c = sd(a), d = c.shadowRoot;
        (d || a === this.c) && this.styleElement(a, b);
        if (a = d && (d.children || d.childNodes)) for (c = 0; c < a.length; c++) this.styleSubtree(a[c]); else if (c = c.children || c.childNodes) for (a = 0; a < c.length; a++) this.styleSubtree(c[a])
    };
    m.ba = function (a) {
        var b = this, c = S(a);
        c !== this.h.cssBuild && (this.h.cssBuild = c);
        if (!ud(c)) {
            var d = kd(a);
            P(d, function (a) {
                if (L) Sd(a); else {
                    var d = T;
                    a.selector = a.parsedSelector;
                    Sd(a);
                    a.selector = a.g = Dd(d, a, d.c, void 0, void 0)
                }
                N && "" === c && (Ce(b), b.a && b.a.transformRule(a))
            });
            N ? a.textContent = O(d) : this.h.s.rules.push(d)
        }
    };
    m.getComputedStyleValue = function (a, b) {
        var c;
        N || (c = (W(a) || W(He(this, a))).o[b]);
        return (c = c || window.getComputedStyle(a).getPropertyValue(b)) ? c.trim() : ""
    };
    m.ua = function (a, b) {
        var c = sd(a).getRootNode();
        b = b ? b.split(/\s/) : [];
        c = c.host && c.host.localName;
        if (!c) {
            var d = a.getAttribute("class");
            if (d) {
                d = d.split(/\s/);
                for (var e = 0; e < d.length; e++) if (d[e] === T.a) {
                    c = d[e + 1];
                    break
                }
            }
        }
        c && b.push(T.a, c);
        N || (c = W(a)) && c.l && b.push(ie.a, c.l);
        rd(a, b.join(" "))
    };
    m.ja = function (a) {
        return W(a)
    };
    m.ta = function (a, b) {
        U(a, b)
    };
    m.wa = function (a, b) {
        U(a, b, !0)
    };
    m.sa = function (a) {
        return pe(a)
    };
    m.la = function (a) {
        return oe(a)
    };
    Y.prototype.flush = Y.prototype.flush;
    Y.prototype.prepareTemplate = Y.prototype.prepareTemplate;
    Y.prototype.styleElement = Y.prototype.styleElement;
    Y.prototype.styleDocument = Y.prototype.styleDocument;
    Y.prototype.styleSubtree = Y.prototype.styleSubtree;
    Y.prototype.getComputedStyleValue = Y.prototype.getComputedStyleValue;
    Y.prototype.setElementClass = Y.prototype.ua;
    Y.prototype._styleInfoForNode = Y.prototype.ja;
    Y.prototype.transformCustomStyleForDocument = Y.prototype.ba;
    Y.prototype.getStyleAst = Y.prototype.ma;
    Y.prototype.styleAstToString = Y.prototype.va;
    Y.prototype.flushCustomStyles = Y.prototype.flushCustomStyles;
    Y.prototype.scopeNode = Y.prototype.ta;
    Y.prototype.unscopeNode = Y.prototype.wa;
    Y.prototype.scopeForNode = Y.prototype.sa;
    Y.prototype.currentScopeForNode = Y.prototype.la;
    Y.prototype.prepareAdoptedCssText = Y.prototype.qa;
    Object.defineProperties(Y.prototype, {
        nativeShadow: {
            get: function () {
                return L
            }
        }, nativeCss: {
            get: function () {
                return N
            }
        }
    });
    var Z = new Y, Ie, Je;
    window.ShadyCSS && (Ie = window.ShadyCSS.ApplyShim, Je = window.ShadyCSS.CustomStyleInterface);
    window.ShadyCSS = {
        ScopingShim: Z, prepareTemplate: function (a, b, c) {
            Z.flushCustomStyles();
            Z.prepareTemplate(a, b, c)
        }, prepareTemplateDom: function (a, b) {
            Z.prepareTemplateDom(a, b)
        }, prepareTemplateStyles: function (a, b, c) {
            Z.flushCustomStyles();
            Z.prepareTemplateStyles(a, b, c)
        }, styleSubtree: function (a, b) {
            Z.flushCustomStyles();
            Z.styleSubtree(a, b)
        }, styleElement: function (a) {
            Z.flushCustomStyles();
            Z.styleElement(a)
        }, styleDocument: function (a) {
            Z.flushCustomStyles();
            Z.styleDocument(a)
        }, flushCustomStyles: function () {
            Z.flushCustomStyles()
        },
        getComputedStyleValue: function (a, b) {
            return Z.getComputedStyleValue(a, b)
        }, nativeCss: N, nativeShadow: L, cssBuild: cd, disableRuntime: M
    };
    Ie && (window.ShadyCSS.ApplyShim = Ie);
    Je && (window.ShadyCSS.CustomStyleInterface = Je);
    var Ke = window.document;
    window.WebComponents = window.WebComponents || {};

    function Le() {
        window.WebComponents.ready = !0;
        window.document.dispatchEvent(new CustomEvent("WebComponentsReady", {bubbles: !0}))
    }

    function Me() {
        Le();
        Ke.removeEventListener("readystatechange", Me)
    }

    "loading" !== Ke.readyState ? Le() : Ke.addEventListener("readystatechange", Me);
}).call(this);

//# sourceMappingURL=webcomponents-sd.js.map
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:08</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.webcomponents.sd" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\webcomponents-sd.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.webcomponents.sd.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\webcomponents-sd.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>webcomponents-sd.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/webcomponents-sd.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.Polymer.v3.wrap">
<Description><![CDATA[

///<br>Скрипт(JS):
///<br> &lt;script src='%ZWebNode.Lib.Polymer.v3.wrap.cls'&gt;&lt;/script&gt; 
///<br> <!--  <script src='%ZWebNode.Lib.Polymer.v3.wrap.cls'></script>   -->]]></Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>65261,53169.00655</TimeCreated>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>

<Method name="JSContet">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[

/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/

/* eslint-disable valid-jsdoc */

/**
 * Node wrapper to ensure ShadowDOM safe operation regardless of polyfill
 * presence or mode. Note that with the introduction of `ShadyDOM.noPatch`,
 * a node wrapper must be used to access ShadowDOM API.
 * This is similar to using `Polymer.dom` but relies exclusively
 * on the presence of the ShadyDOM polyfill rather than requiring the loading
 * of legacy (Polymer.dom) API.
 * @type {function(Node):Node}
 */
export const wrap = window['ShadyDOM'] && window['ShadyDOM']['noPatch'] && window['ShadyDOM']['wrap'] ? window['ShadyDOM']['wrap'] : window['ShadyDOM'] ? n => ShadyDOM['patch'](n) : n => n;
]]></Implementation>
</Method>

<Method name="OnPage">
<Description>
05/09/2019  14:46:09</Description>
<ClassMethod>1</ClassMethod>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
     s MethodName="JSContet" 
     s ParentClassName1="%ZWebNode.Lib.Polymer.v3.wrap" 
     for ind=1:1:^oddDEF(ParentClassName1,"m",MethodName,30) {   
        d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")  
        w $c(13,10)  
     }               
     Quit $$$OK 
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
    Do %response.SetHeader("Content-Type","application/x-javascript") 
    if $d(%request.Data("download",1))
    {
       Do %response.SetHeader("Content-Disposition: attachment; filename=","D:\AppServ\www\v3\v3\wrap.js") 
    }
    q 1  
]]></Implementation>
</Method>

<Parameter name="DstName">
<Default>%ZWebNode.Lib.Polymer.v3.wrap.cls</Default>
</Parameter>

<Parameter name="FileName">
<Default>D:\AppServ\www\v3\v3\wrap.js</Default>
</Parameter>

<Parameter name="LongPath">
<Default>v3\</Default>
</Parameter>

<Parameter name="NameOnly">
<Default>wrap.js</Default>
</Parameter>

<Parameter name="PathApp">
<Default>D:\AppServ\www\v3\</Default>
</Parameter>

<Parameter name="PathOnly">
<Default>D:\AppServ\www\v3\v3\</Default>
</Parameter>

<Parameter name="Rashirenie">
<Default>js</Default>
</Parameter>

<Parameter name="SrcName">
<Default>v3/wrap.js</Default>
</Parameter>

<Parameter name="isBinFile">
<Default>0</Default>
</Parameter>
</Class>


<Class name="%ZWebNode.Lib.js">
<Description><![CDATA[
 <script type="text/javascript" src="%25ZWebDev.Lib.js.cls"></script>]]></Description>
<Super>%CSP.Page</Super>
<TimeCreated>65258,48277.793912</TimeCreated>

<Parameter name="CodePage">
<Description><![CDATA[
<br>   s %response.CharSet="CP1251" 
<br>   "CP1251" или "UTF-8"
Parameter CodePage = "UTF-8";]]></Description>
<Default>UTF-8</Default>
</Parameter>

<Parameter name="GlobalMessage">
<Default>^mtempZFastReport.js</Default>
</Parameter>

<Parameter name="intervalQueryStatus">
<Default>1500</Default>
</Parameter>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<ReturnType>%Library.Boolean</ReturnType>
<Implementation><![CDATA[
     if ##this'="%ZWebNode.Lib.js"{ 
        Do %response.SetHeader("Content-Type","text/html")   
        q 1 
      }
      s isUnicode=$SYSTEM.Version.IsUnicode()
      s %response.CharSet="UTF-8"  
	  ; s %response.CharSet="CP1251"  
     /*
     if $l(%request.GetCgiEnv("Cache port",""))=0{ // Запуск из %ZWeb.Server
        
         if $p($replace($$GetVersion^%apiOBJ(),"Cache Objects Version ",""),".",1)="2013"{;
	 	   s %response.CharSet="UTF-8"  
	     }else{
	       s %response.CharSet="CP1251"  
         }
        
     }
     */
     if %request.Get("cspIntRunMethod",0)=1 {
	     if %response.ContentType="text/html" {
            Do %response.SetHeader("Content-Type","text/plain")   
	     }
         q 1   
     }
     Do %response.SetHeader("Content-Type","application/javascript")   
     q 1
]]></Implementation>
</Method>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    /// Подключение класса и интерпритация его как JS библиотек
    if %request.Get("include","")'=""{
	    d ..IncludeJsFun()
	    q 1   
    }
	
	if %request.Get("GetStatusJob","")'=""{	
	   s LastJobId=%request.Get("GetStatusJob","")
	   if '$DATA(^$JOB(LastJobId)) {
          w "Process Is Close" 
	   }else {
          w "Process Is Worc"    
	   }
	  q 1
	}
	
	if %request.Get("GetBufferJob","")'=""{	
	  s LastJobId=%request.Get("GetBufferJob","")
	  if $d(^mtempBufferZWebNodeLibjsDrawConsole(LastJobId,"BUFF")){
	     s ind=""
	     for {
	 	    s ind=$o(^mtempBufferZWebNodeLibjsDrawConsole(LastJobId,"BUFF",ind)) 
 		    q:ind=""
	        s line=^mtempBufferZWebNodeLibjsDrawConsole(LastJobId,"BUFF",ind)
	        ; s line=$zcvt(line,"I","UTF8")
	        ; s line=$zcvt(line,"o","CP1251")
	        w line
	        k ^mtempBufferZWebNodeLibjsDrawConsole(LastJobId,"BUFF",ind) 
         } 
	  }
      q 1
	}
	
	if %request.Get("GetResultJob","")'=""{	
	  s LastJobId=%request.Get("GetResultJob","")
	  if $d(^mtempBufferZWebNodeLibjsDrawConsole(LastJobId,"RESULT")){
 		  s line=^mtempBufferZWebNodeLibjsDrawConsole(LastJobId,"RESULT")
		  ; s line=$zcvt(line,"I","UTF8")
		  ; s line=$zcvt(line,"o","CP1251")
		  w line
		  k ^mtempBufferZWebNodeLibjsDrawConsole(LastJobId,"RESULT")
	      k ^mtempBufferZWebNodeLibjsDrawConsole(LastJobId)
	  }
      q 1
	}
	
	
	
    /// Вычитываем тело POST запроса
	s json=""
	if $isobject(%request.Content){
	   for {
		  q:%request.Content.AtEnd
		  s line=%request.Content.Read(32000)	     
	      s line=$zcvt(line,"I","UTF8")
		  ; s line=$zcvt(line,"o","CP1251")
	      s json=json_line	     
	   }	
	}
	s ParentClass=""
    s:$d(%request.CgiEnvs("HTTP_REFERER")) ParentClass= $SYSTEM.CSP.GetClassName(%request.CgiEnvs("HTTP_REFERER"))
    s:ParentClass="" ParentClass=%request.Get("ParentClass","")
	s:ParentClass="" ParentClass=##THIS
	do ##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(json,,.%override,1)
	
	if %override'="" {
   	    s TestWebMethod=0
	    s ^||WEVENT=%override.GetAt(1)
	    ; k ^%deb
	    ; s ^%deb=^||WEVENT
        if $l(^||WEVENT,".")'=1  { 
           S TestWebMethod=1
        }else{
            s ^||WEVENT=$lg($$$cspDecode(%session.Key,^||WEVENT),1) 
            s ^||WEVENT=$p(^||WEVENT,":",1) ; ????
        }
    	   s objTmp=%override.GetAt(2)
    	   if $isObject(objTmp){
               k %override.Data(2)	    	   
	    	   s indInData=1
	    	   s subnd="" 
	    	   for {
		    	   s subnd=$o(objTmp.%data(subnd))
		    	   q:subnd=""
		    	   ; s ^%deb1("subnd:"_subnd)=subnd
		    	   s indInData=indInData+1
		    	   s %override.Data(indInData)=objTmp.%data(subnd)
		    	   k objTmp.%data(subnd)
	    	   }
    	   }
        s %method=$p(^||WEVENT,".",$l(^||WEVENT,"."))
        s %class=$e(^||WEVENT,1,$l(^||WEVENT)-$l(%method)-1)
        IF TestWebMethod=1 {
           q:'$d(^oddDEF(%class,"m",%method,51)) 1
           q:^oddDEF(%class,"m",%method,51)'=1 1
        }
        if %class="."{ s %class=ParentClass }
	    if %request.Get("RunJob")=""{
           d ..ExecRunMethod(%override)
	    }else{
		   s gl=..#GlobalMessage_"("_$job_")"
		   s @gl@("%class")=%class
		   s @gl@("%method")=%method
		   for ind=2:1:%override.Size {
             s @gl@(ind)=%override.GetAt(ind)
		   }
		   job ..ExecRunJobMethod(gl)
		   w $zchild
		   q 1
	    }
        q 1
    }
	
	
	 if ##this'="%ZWebNode.Lib.js"{	 
	     &html<
	       <script language="JavaScript" type="text/javascript" src="%25ZFastReport.js.cls"></script> 
           <script language="JavaScript" type="text/javascript" src="%25ZFastReport.js.cls?include=#(##this)#"></script> 
         >
         ; Поиск Xdata с формой DFM 
         s ClassName=##This,XdataName="Form"
         s GL="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
         if $d(@GL){  
            w ##class(%ZWebNode.Lib.js).ParseDFM(ClassName_":"_XdataName) 
         }
	     d ..main()
	     q 1
	 }
	
     s ParentClassName1=##this
     // zw ^oddDEF(ParentClassName1)
     s MethodName=""
     for {
	     s MethodName=$o(^oddDEF(ParentClassName1,"m",MethodName))
         q:MethodName=""
         continue:MethodName="init"
         
         if $d(^oddDEF(ParentClassName1,"m",MethodName,70)) {
             if $d(^oddDEF(ParentClassName1,"m",MethodName,4)){
	           w !,"/*",!
	           w ^oddDEF(ParentClassName1,"m",MethodName,4)
	           w "*/"
             }
	         w !,"  "_MethodName_" = function(" 
	         if $d(^oddDEF(ParentClassName1,"m",MethodName,27)){
		         w ^oddDEF(ParentClassName1,"m",MethodName,27)
	         }
	         w "){"
	         
             s ind=""
             for {
	            s ind=$o(^oddDEF(ParentClassName1,"m",MethodName,30,ind) )
                q:ind=""
                d ..ExecFrag(^oddDEF(ParentClassName1,"m",MethodName,30,ind),"/*(",")*/")
	            w $c(13,10)
                 // w ^oddDEF(ParentClassName1,"m",MethodName,30,ind)_$c(13,10)
             }
             w "}"
         }
     }
      
     s MethodName="init"
     s ind=""
     for {
	    s ind=$o(^oddDEF(ParentClassName1,"m",MethodName,30,ind) )
        q:ind=""
        w ^oddDEF(ParentClassName1,"m",MethodName,30,ind)_$c(13,10)
     }
      &js<   
           var cspHttpServerMethod=SendServerWebWeb;   
       >
       s ClassCSP=ParentClass
       k filtr
	   for ind=1:1:$l(ClassCSP,","){
	      d $system.OBJ.GetDependencies($p(ClassCSP,",",ind),.included)
          s ClassParentTmp=""
          for {
            s ClassParentTmp=$o(included(ClassParentTmp))
            q:ClassParentTmp=""
            continue:$d(filtr(ClassParentTmp))
            d ..readJSFunctionFromCacheClass(ClassParentTmp)
            s filtr(ClassParentTmp)=1
          } 
	   }
     Quit $$$OK
]]></Implementation>
</Method>

<Method name="main">
<ClassMethod>1</ClassMethod>
</Method>

<Method name="GetType">
<Description>
w ##class(%ZWebNode.Lib.js).GetType("Address.ESettle","ARegion")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ClassName="",propertyName=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	 if $d(^oddDEF(ClassName,"a",propertyName,5)){
		 s typ=^oddDEF(ClassName,"a",propertyName,5)
		 if $l(typ,".")=1 {
			 if $l(typ,"%")=2 {
			    s typ=$replace(typ,"%","%Library.")	 
			 }else{
			   s typ="User."_typ	 
			 }
		 }
		 q typ
	 }else{
	    if $d(^oddDEF(ClassName,60)){
	       w ..GetType(^oddDEF(ClassName,60),propertyName)
	    }else{
		 q ""   
	    }
	 }
     q ""
]]></Implementation>
</Method>

<Method name="init">
<Description>
Функция инициализации</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
 
 // ""
]]></Implementation>
</Method>

<Method name="SendServerWeb">
<FormalSpec>MethodName</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
    var FunCallBack=null;
    var FunProgress=null;
    var arr=new Array();
   //  console.log('*----'+SendServerWeb.arguments[0]);
       for(var ind in SendServerWeb.arguments){
	     if (SendServerWeb.arguments[ind]==undefined){continue;}
	     if ((FunCallBack==null)&&(typeof SendServerWeb.arguments[ind] === 'function')){
	        FunCallBack=SendServerWeb.arguments[ind];
	        continue;
	     }  
	     if ((FunProgress==null)&&(typeof SendServerWeb.arguments[ind] === 'function')){
	          FunProgress=SendServerWeb.arguments[ind];
	          continue;
	     }  
	     arr.push(SendServerWeb.arguments[ind]); 
	   }   
    
    
   // console.log( arr );
    
   if (FunCallBack==null){
      var requestSendServerWeb = new XMLHttpRequest();
      requestSendServerWeb.open('POST', '/*(   w $zcvt("%ZWebNode.Lib.js","O","URL")_".cls"  )*/', false);
      requestSendServerWeb.send(JSON.stringify(arr));  
      requestSendServerWeb.ontimeout = function (e) {
          alert('Время ожидания ответа вышло!!!!');
      }
      if (requestSendServerWeb.status !== 200) {
          return {"error":requestSendServerWeb.status}
      }
      return requestSendServerWeb.responseText;
   }
      if (FunProgress==null){ FunProgress=function(){} };
      var requestSendServerWeb = new XMLHttpRequest();
      requestSendServerWeb.open('POST', '/*(   w $zcvt("%ZWebNode.Lib.js","O","URL")_".cls/?RunJob=1"  )*/', false);
      requestSendServerWeb.send(JSON.stringify(arr));  
      requestSendServerWeb.ontimeout = function (e) {
          alert('Время ожидания ответа вышло!!!!');
      }
      if (requestSendServerWeb.status !== 200) {
          return {"error":requestSendServerWeb.status}
      }
      var ProcessJob=requestSendServerWeb.responseText;
      // console.log(ProcessJob);
      var isBreck=false;
      var FastReportTimerId = setTimeout(function tick() {
           var requestSendServerWebStatus = new XMLHttpRequest();
           requestSendServerWebStatus.open('GET','/*(   w $zcvt("%ZWebNode.Lib.js","O","URL")_".cls/?GetStatusJob="  )*/'+ProcessJob, false);
           requestSendServerWebStatus.ontimeout = function (e) { 
               isBreck=true; alert('Error:TimeOut'); 
           }
           requestSendServerWebStatus.send();  
           if (requestSendServerWebStatus.status !== 200) {   isBreck=true; alert('Error');  }
           // console.log(requestSendServerWebStatus.responseText);
           if (typeof FunProgress === 'function'){
	           var requestSendServerWebStatusSub = new XMLHttpRequest();
               requestSendServerWebStatusSub.open('GET','/*(   w $zcvt("%ZWebNode.Lib.js","O","URL")_".cls/?GetBufferJob="  )*/'+ProcessJob, false);
               requestSendServerWebStatusSub.ontimeout = function (e) {  alert('Error:TimeOut'); }
               requestSendServerWebStatusSub.send();  
               FunProgress(requestSendServerWebStatusSub.responseText); 
               // console.log(requestSendServerWebStatusSub.responseText);
           }
           if (requestSendServerWebStatus.responseText=="Process Is Close"){  
                if (typeof FunCallBack === 'function'){ 
                   var requestSendServerWebStatusSub = new XMLHttpRequest();
                   requestSendServerWebStatusSub.open('GET','/*(   w $zcvt("%ZWebNode.Lib.js","O","URL")_".cls/?GetResultJob="  )*/'+ProcessJob, false);
                   requestSendServerWebStatusSub.ontimeout = function (e) {  alert('Error:TimeOut'); }
                   requestSendServerWebStatusSub.send();  
                   FunCallBack(requestSendServerWebStatusSub.responseText); 
                }
                clearInterval(FastReportTimerId);  
                return; 
           } 
           // console.log(requestSendServerWebStatus.responseText);
           FastReportTimerId = setTimeout(tick, /*(  if $l(##class(%ZWebNode.Lib.js).#intervalQueryStatus)>0 { w ##class(%ZWebNode.Lib.js).#intervalQueryStatus}else{ w 1000 } )*/+0 );
       }, /*(  if $l(##class(%ZWebNode.Lib.js).#intervalQueryStatus)>0 { w ##class(%ZWebNode.Lib.js).#intervalQueryStatus}else{ w 1000 } )*/+0 );
]]></Implementation>
</Method>

<Method name="ExecRunJobMethod">
<ClassMethod>1</ClassMethod>
<FormalSpec>gl=""</FormalSpec>
<Implementation><![CDATA[
	 s %class=@gl@("%class")
	 k @gl@("%class")
	 s %method=@gl@("%method")
	 k @gl@("%method")
     s numArg=0,ind=""
     for {
	    s ind=$o(@gl@(ind))
	    q:ind=""
 	    s numArg=numArg+1
        // set args(numArg) = $zcvt(override.GetAt(j),"i","UTF8")
        set args(numArg) = @gl@(ind)
        k @gl@(ind)
     }
	 s args=numArg
     d ..DrawBegin($job)	 
	 if '$d(^oddDEF(%class,"m",%method,70)) {
	    if $System.CLS.IsMthd(%class,%method)=1,'$d(^oddDEF(%class,"m",%method)){
		   s ^mtempBufferZWebNodeLibjsDrawConsole($job,"RESULT")= $classmethod(%class, %method, args...)
		   q
	    }
	    if '$d(^oddDEF(%class,"m",%method,42)) {
	       do $classmethod(%class, %method, args...)
        } Else {
           s ^mtempBufferZWebNodeLibjsDrawConsole($job,"RESULT")= $classmethod(%class, %method, args...)
        }
     }else{
        if $d(^oddDEF(%class,"m",%method,30)){
          for ind=1:1:^oddDEF(%class,"m",%method,30){
             w:ind'=1 $c(13,10)
             d ..ExecFrag(^oddDEF(%class,"m",%method,30,ind),"/*(",")*/")
          }
        }
     }
     d ..DrawEnd($job)
]]></Implementation>
</Method>

<Method name="ExecRunMethod">
<ClassMethod>1</ClassMethod>
<FormalSpec>override:%Library.ListOfDataTypes</FormalSpec>
<Implementation><![CDATA[
    s numArg=0
    s ind=""
    for {
	   s ind=$o(override.Data(ind))   
	   q:ind=""
	   continue:ind=1
	   s numArg=numArg+1
       set args(numArg) =$zcvt( override.Data(ind),"i","UTF8")
       ; s ^%deb(numArg)=$zcvt(override.Data(ind),"i","UTF8")
    }
    set args=numArg
     
   ;  d ..DrawBegin()
   ;  zw args
   ;  d ..DrawEnd()     
   ;  m ^%deb("BUFF")=^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF")
     
     s len="",IsWrite=0
     if '$d(^oddDEF(%class,"m",%method,70)) {
	    if $System.CLS.IsMthd(%class,%method)=1,'$d(^oddDEF(%class,"m",%method)){
	      w $classmethod(%class, %method, args...)
          q
	    }
	    if '$d(^oddDEF(%class,"m",%method,42)) {
	       do $classmethod(%class, %method, args...)
        } Else {
           w $classmethod(%class, %method, args...)
        }
     }else{
        if $d(^oddDEF(%class,"m",%method,30)){
          for ind=1:1:^oddDEF(%class,"m",%method,30){
             w:ind'=1 $c(13,10)
              d ..ExecFrag(^oddDEF(%class,"m",%method,30,ind),"/*(",")*/")
          }
        }
     }
     q
]]></Implementation>
</Method>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[    q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="readJSFunctionFromCacheClass">
<Description><![CDATA[
<pre>

Варианты параметров классов 
 1) [ Language = cache, WebMethod ]
 2) [ Language = javascript, WebMethod ]

Пример классов , которые будут интерпритированы в JS функции:
    ClassMethod test2()as %String [ Language = cache, WebMethod ]{ zw  q ""}
    ClientMethod test3() [ Language = javascript, WebMethod ]{    alert('test3()');}
    Property cspXMLHttp As %String [ ServerOnly = 1 ];
    Property cspUseGetMethod As %Boolean [ InitialExpression = 0, ServerOnly = 1 ];
    Property cspMozilla As %Boolean [ InitialExpression = "nill", ServerOnly = 1 ];
   
</pre>
 <h2>Переписать  %Library.ClassDefinition на  <h2>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ParentClassName="",MethodName="",DrawDescript=1</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
     s onEventFun=",onblur,onerror,onfocus,onload,onresize,onscroll,onbeforeunload,onhashchange,onlanguagechange,onmessage,onoffline,ononline,onpagehide,onpageshow,onpopstate,onrejectionhandled,onstorage,onunhandledrejection,onunload,onabort,oncancel,oncanplay,oncanplaythrough,onchange,onclick,onclose,oncontextmenu,oncuechange,ondblclick,ondrag,ondragend,ondragenter,ondragleave,ondragover,ondragstart,ondrop,ondurationchange,onemptied,onended,oninput,oninvalid,onkeydown,onkeypress,onkeyup,onloadeddata,onloadedmetadata,onloadstart,onmousedown,onmouseenter,onmouseleave,onmousemove,onmouseout,onmouseover,onmouseup,onmousewheel,onpause,onplay,onplaying,onprogress,onratechange,onreset,onseeked,onseeking,onselect,onshow,onstalled,onsubmit,onsuspend,ontimeupdate,ontoggle,onvolumechange,onwaiting,onauxclick,ongotpointercapture,onlostpointercapture,onpointercancel,onpointerdown,onpointerenter,onpointerleave,onpointermove,onpointerout,onpointerover,onpointerup,onbeforecopy,onbeforecut,onbeforepaste,oncopy,oncut,onpaste,onsearch,onselectstart,onwheel,onwebkitfullscreenchange,onwebkitfullscreenerror"
     s ClassOref=##class(%ClassDefinition).%OpenId(ParentClassName)
     if ClassOref {
       s ConstructMethod=$p(ParentClassName,".",$l(ParentClassName,"."))
       s count=ClassOref.Properties.Count() 
       for i=1:1:count {
            s nam=ClassOref.Properties.GetAt(i).Name
            continue:'$d(^oddDEF(ParentClassName,"a",nam,57))
            continue:^oddDEF(ParentClassName,"a",nam,57)'=1
            w "  var "_ClassOref.Properties.GetAt(i).Name_" "
            if $d(^oddDEF(ParentClassName,"a",nam,31)) {
                 s val=^oddDEF(ParentClassName,"a",nam,31)
                 if val="""null""" w "=null;"_$c(13,10)  continue
                 s typ=""
                 if $d(^oddDEF(ParentClassName,"a",nam,5)) {
                    s typ=^oddDEF(ParentClassName,"a",nam,5)
                    if $e(typ,1,1)="%",$l(typ,".")=1 {
                       s typ=$REPLACE(typ,"%","%Library.")
                    }
                 }   
                 if typ="" {
                     if $l(typ ," ")=1 { w "="_$e(val,2,$l(val)-1)_";"_$c(13,10)  continue }
                    try {   x "w "_val   }catch(e){  w "="_$e(val,2,$l(val)-1)_";"_$c(13,10)  continue }
                 }
                 
                 if typ="%Library.Boolean" {
                      if $e(val,1,1)="""" {
                         w "=" 
                         try {   x "w "_val   }catch(e){  if +val=1 { w "=true"  }else     { w "=false" }   }
                      }else {
                        if val=1 { w "=true"  }else     { w "=false" }
                      }
                 }elseif  typ="%Library.Integer" {
                     if $e(val,1,1)="""" {
                         w "=" 
                         try {   x "w "_val   }catch(e){  s val=+val  w val }
                      } else {
                          s val=+val  w val
                      } 
                 }else{
	                 
                     if $e(val,1,1)'="""" {
                           w "=""" 
                           try {   x "w "_val   }catch(e){  w val   }
                           w """"
                      }else {
                         w "="_val
                      } 
                 }
            }
            w ";"_$c(13,10) 
       }
       s ConstructMethodIndex=""
       s count=ClassOref.Methods.Count()
       for i=1:1:count {
            if (MethodName=""){
               continue:$l(ClassOref.Methods.GetAt(i).Name,"OnPage")'=1
               continue:ClassOref.Methods.GetAt(i).Name="OnPreHTTP"
               continue:ClassOref.Methods.GetAt(i).Name="OnPostHTTP"
               continue:ClassOref.Methods.GetAt(i).Name="getLibOne"
               continue:ClassOref.Methods.GetAt(i).Name="GetJSMethodFromClientMethod"
               continue:ClassOref.Methods.GetAt(i).Name="readJSFunctionFromCacheClass"
            }else{
                continue:ClassOref.Methods.GetAt(i).Name'=MethodName   
            }
           /// [ ServerOnly = 1 ]
           // continue:'$d(^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,59))
           // continue:^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,59)'=1
           
           /// [ WebMethod ]
           continue:'$d(^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,51))
           continue:^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,51)'=1
          
          if $ZCVT(ClassOref.Methods.GetAt(i).Name,"L")=$ZCVT(ConstructMethod,"L"){
             s ConstructMethodIndex=i
             continue    
          }
          
          if DrawDescript=1 {
             if $l(ClassOref.Methods.GetAt(i).Description)>0,ParentClassName'=##this{
                w !,"/*",!
                w $replace(ClassOref.Methods.GetAt(i).Description,"*/","-/-")
                w !,"*/"
             }
          }
          // Получаем JS представление Cache клиент метода
           if ClassOref.Methods.GetAt(i).Language="javascript" {
               w !,"var "_ClassOref.Methods.GetAt(i).Name_"=function("
               s param=ClassOref.Methods.GetAt(i).FormalSpec
               for ind=1:1:$l(param,","){
                   s subParam=$p(param,",",ind)
                   s subParam=$p(subParam,":",1)
                   s subParam=$p(subParam,"=",1)
                   w:ind'=1 ","
                   w subParam
               }
               w "){",!
                 d ..ExecFrag(ClassOref.Methods.GetAt(i).Code,"/*(",")*/")
                 // w ClassOref.Methods.GetAt(i).Code
                 w !,"};"
                
            }
           // Получаем JS представление Cache класс метода
           if ClassOref.Methods.GetAt(i).Language="cache" {
                   w !,"var "_ClassOref.Methods.GetAt(i).Name_"=function(){",!
                   ; if $d(^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,42)){ w "return "}
                   ; s WEVENT=$$$cspEncode(%session.Key,$lb(ParentClassName_"."_ClassOref.Methods.GetAt(i).Name))
                   s WEVENT=ParentClassName_"."_ClassOref.Methods.GetAt(i).Name
                  if '$d(^oddDEF(ParentClassName,"m",ClassOref.Methods.GetAt(i).Name,42)) {
                        &js< try { var res=cspHttpServerMethod('#(WEVENT)#',arguments); eval(res); }catch (e) { return res}>
                  } Else {
                     w "   return cspHttpServerMethod('"_WEVENT_"',arguments);"
                  }
                  w !,"};"
           }
                
         }
         // После отрисовки функций, создаем конструктор( если конечно он встретился ранее)
         if ConstructMethodIndex'="" {
           s i=ConstructMethodIndex
           if ClassOref.Methods.GetAt(i).Language="javascript" {
              d ..ExecFrag(ClassOref.Methods.GetAt(i).Code,"/*(",")*/")
           }
           if ClassOref.Methods.GetAt(i).Language="cache" {
              ; s WEVENT=$$$cspEncode(%session.Key,$lb(ParentClassName_"."_ClassOref.Methods.GetAt(i).Name))
              s WEVENT=ParentClassName_"."_ClassOref.Methods.GetAt(i).Name
              w " cspHttpServerMethod('"_WEVENT_"',arguments);"
           }
         }
       }
       q ""
]]></Implementation>
</Method>

<Method name="IncludeJsFun">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	   s ClassCSP=%request.Get("include","")
  	   s ClassCSP=$tr(ClassCSP," ","")
       k filtr
	   for ind=1:1:$l(ClassCSP,","){
          // Если класс есть, тогда интерпритируем 
	      if $zObjClassMethod("%CompiledClass","%ExistsId",$p(ClassCSP,",",ind))=1 {
	             d $system.OBJ.GetDependencies($p(ClassCSP,",",ind),.included)
                 s ClassParentTmp=""
                 for {
                    s ClassParentTmp=$o(included(ClassParentTmp))
                    q:ClassParentTmp=""
                    continue:$d(filtr(ClassParentTmp))
                    d ..readJSFunctionFromCacheClass(ClassParentTmp)
                    s filtr(ClassParentTmp)=1
                } 
	     }else{
		    // иначе проверяем есть ли такой пакет, и добавляем весь пакет
		    s ClassTmpPacket=""
		    for {
		         s ClassTmpPacket=$o(^oddDEF(ClassTmpPacket))
		         q:ClassTmpPacket=""  
		         if $e(ClassTmpPacket,1,$l($p(ClassCSP,",",ind)))=$p(ClassCSP,",",ind){
 	                 d $system.OBJ.GetDependencies(ClassTmpPacket,.included)
                     s ClassParentTmp=""
                     for {
                        s ClassParentTmp=$o(included(ClassParentTmp))
                        q:ClassParentTmp=""
                        continue:$d(filtrObj(ClassParentTmp))
                        d ..readJSFunctionFromCacheClass(ClassParentTmp)
                        s filtrObj(ClassParentTmp)=1
                     } 
		         }

	     }}
	   }
]]></Implementation>
</Method>

<Method name="redirects">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[
wstr(s)  s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF")=$get(^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF"),0)  s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF",$i( ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF") ))=s          q
wchr(c)  s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF")=$get(^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF"),0)  s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF",$i( ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF") ))=$c(c)      q
wnl      s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF")=$get(^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF"),0)  s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF",$i( ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF") ))=$$$NL      q
wff      s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF")=$get(^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF"),0)  s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF",$i( ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF") ))=$c(12)     q
wtab(s)  s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF")=$get(^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF"),0)  s ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF",$i( ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF") ))=s          q
]]></Implementation>
</Method>

<Method name="DrawBegin">
<ClassMethod>1</ClassMethod>
<FormalSpec>JobId=$job</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<Implementation><![CDATA[
	k ^mtempBufferZWebNodeLibjsDrawConsole($job,"BUFF")
	s %LastIO=$IO
    u %LastIO::("^"_$zn)
    d ##class(%Device).ReDirectIO($$$YES)
]]></Implementation>
</Method>

<Method name="DrawEnd">
<ClassMethod>1</ClassMethod>
<FormalSpec>JobId=$job</FormalSpec>
<Implementation><![CDATA[
 	d ##class(%Device).ReDirectIO($$$NO)
    u %LastIO
]]></Implementation>
</Method>

<Method name="GetSlash">
<Description>
 w ##class(%ZWebNode.Lib.js).GetSlash()</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  s ver=$zv
  s ver=$p(ver,"for ",2)
  s ver=$p(ver," ",1)
  if $l(ver,"UNIX")>1 q "/"
  q "\"
]]></Implementation>
</Method>
</Class>


<Class name="%ZWebNode.Server">
<Description><![CDATA[
<example>


  <meta charset="windows-1251"> - это не ошибка , так надо для русских букв во всех браузерах 
  d ##class(%ZWebNode.Server).Start(6010,"D:\AppServ\www\v3","index.html","UTF8")
 
  ---------------------------------
  <meta charset="windows-1251">
  d ##class(%ZWebNode.Server).Start(6010,"D:\AppServ\www","index.html","CP1251")
  ---------------------------------
  d ##class(%ZWebNode.Server).Stop(6010)
  d ##class(%ZWebNode.Server).Stop()
</example>]]></Description>
<Super>%RegisteredObject</Super>
<TimeCreated>65255,57088.000835</TimeCreated>

<Method name="ExportUDL">
<Description>
d ##class(%ZWebNode.Server).ExportUDL()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>path=""</FormalSpec>
<Implementation><![CDATA[
   if $l(path)=0  d $system.OBJ.ExportUDL(##this_".CLS", "C:\TMP\"_##this_".CLS","/diffexport")
   e  d $system.OBJ.ExportUDL(##this_".CLS", path,"/diffexport")
]]></Implementation>
</Method>

<Method name="Stop">
<Description>
Остановить работу сервера</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>port:%Integer=6010</FormalSpec>
<Implementation><![CDATA[
      s ^%ZWebNodeServerKill(port)=1
      S httprequest=##class(%Net.HttpRequest).%New()
      s httprequest.Server="127.0.0.1"
      s httprequest.Port=port
      s httprequest.Timeout=1
      d httprequest.Get("/")
      s httprequest=""
      h 1
      w !,"Server "_port_" stoped"
      q
]]></Implementation>
</Method>

<Method name="Start">
<ClassMethod>1</ClassMethod>
<FormalSpec>port:%Integer=6010,StaticPath="",startPage:%String="index.html",CharSet=""</FormalSpec>
<Implementation><![CDATA[
	 ; s ^%SYS("WebServer","Port")=port
     s methodDefault = "OnPage"
     k ^%ZWebNodeServerKill(port)
     w !,"Автор: Мясников Иван Александрович"
     w !,"Email: Miacom@mail.ru"
     w !
     s port = $G(port)  
     s TimeOut=3200
     s startPage=$g(startPage)
     s methodDefault=$g(methodDefault )
          if $d(^%ZWebNodeServerCfg(port)) d
          .    d ..Stop(port)
          .    k ^%ZWebNodeServerCfg(port)
          s ^%ZWebNodeServerCfg(port)=$lb(port,TimeOut,StaticPath,"", startPage,methodDefault,CharSet)
     s cmd="cmd /c  start ""explorer.exe""  ""http://127.0.0.1:"_port_"/"_startPage_""""
     ; d $zf(-1,cmd,1)
     job ..startJob(port)
     w !,"Start server:"_port
     q
]]></Implementation>
</Method>

<Method name="startJob">
<Description>
Работа сокет сервера в паралельном потоке.
Ожидание подключения и создание обработчика клиента в паралельном потоке</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>port</FormalSpec>
<Implementation><![CDATA[
     s port = $lg(^%ZWebNodeServerCfg(port),1)  
     SET dev="|TCP|1"
     OPEN dev:(:port:"MA"):200
     s inData=""
     s indSrv=0
     s isEnd=0
     k ^%ZWebNodeServerKill(port)
     For  USE dev  READ inData q:isEnd=1  Do:$T
     .  if $d(^%ZWebNodeServerKill(port))   s isEnd=1
     .  USE dev  
     .  Job ..childVar(port):(:17::)  ; Concurrent server bit is on
     .  If $ZCHILD=0 w " Server can't create new JOB!"
     Close dev   
     k ^%ZWebNodeServerKill(port)
     Quit
]]></Implementation>
</Method>

<Method name="childVar">
<Description>

Процедура обработки клиентского запроса
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>port</FormalSpec>
<Implementation><![CDATA[

   s TimeOut=$lg(^%ZWebNodeServerCfg(port),2)
   s %CacheStaticPath=$lg(^%ZWebNodeServerCfg(port),3)
   s startPage=$lg(^%ZWebNodeServerCfg(port),5)
   s methodDefault=$lg(^%ZWebNodeServerCfg(port),6)
   s CharSet=$lg(^%ZWebNodeServerCfg(port),7)
   
   zn "%SYS" ; переключаем область имен
   s %CacheClassLibCSP= "%ZWebNode.Lib.js"
   s numPac=0
   s isCloseChaild=0 
   s SocketTempIndex=0
   USE $ZUTIL(53):(::"M")
   s I=$ZU(111,0)
   s ipOne=$A(I,1)_"."_$A(I,2)_"."_$A(I,3)_"."_$A(I,4)
   s ip=ipOne_":"_($A(I,5)*256+$A(I,6))
   ; s ip=$ZU(67, 15, $job)
   s countEnter=0
   s numPack=0
   s isEndTitle=0 
   ; Инициализируем переменную для работы в CSP классах
   s %request=##class(%CSP.Request).%New()
   s %response=##class(%CSP.Response).%New()
   Do %response.SetHeader("Content-Type","text/html")   
   d %request.InsertCgiEnv("Cache version",$$GetVersion^%apiOBJ())
   d %request.InsertCgiEnv("Cache port",port)
   d %request.InsertCgiEnv("QUERY_PAGE",startPage)
   d %request.InsertCgiEnv("CLIENT_IP",ip)
   d %request.InsertCgiEnv("REMOTE_ADDR",$ZU(67, 15, $job))
   d %request.InsertCgiEnv("CONTENT_TYP","html") 
   d %request.InsertCgiEnv( "SERVER_NAME",$zu(110))
   if CharSet'=""{ 
       s %response.CharSet=CharSet
	   ; s %response.CharSet="UTF8"
	   ; s %response.CharSet="CP1251"
   }else{
	  // if $SYSTEM.Version.IsUnicode()'=1  s %response.CharSet="UTF8"
   }
   s %SYSLOG=1
   s %CSPsc=1
   ; Set %session.AppTimeout = 3600 
   s isTerminal=0
   s isWebSocket=0
   s isWebSocketKey=""
   s WebSocketVer=-1
   s FallLoad=0
   s %FallLoadRunJob=0
   s DebInf=""
   s RefererUrl=""
   For  Q:((isCloseChaild=1)||($T=1)||(isTerminal=1) )  d
   .  If $T=1 s isCloseChaild=1 
   .   // Если терминальный запрос, тогда уничтожаем этот процесс
   .   // if isTerminal=1 d $zu(4,$job)
   .  if isEndTitle=0 {
   .     S dev=$ZUTIL(53)  
   .     USE dev:(::"M")  
   .     READ inData:1
   .     s DebInf=DebInf_$c(13,10)_inData
   .     ; s ^debug($job,numPack)=inData
   .     s numPack=numPack+1
   .        ; Если в первой строке нет слов GET или POST , тогда запрос произведен из терминала
   .        if numPack=1  if $l(inData,"GET /")=1  ,$l(inData,"POST /")=1    s isTerminal=1 q
   .        ; Меняем кодировку входных данных(разкоментируется при необходимости, в зовисимости от версии cache')
   .        ; s inData= $ZCVT(inData,"I","URL")
   .        ; s inData=$zcvt($zcvt(inData,"I","URL"),"I","UTF8")
   .        ; s inData= $ZCVT(inData,"I","UTF8")
   .
   .      if numPack=1 d ; обработка первой строки HTML запроса
   .      .   if $l(inData,"GET /")=2   d 
   .      .   .  s zapros=$p(inData,"GET /",2)
   .      .   .  d %request.InsertCgiEnv("REQUEST_METHOD","GET")
   .      .   .  s zapros=$p(zapros," HTTP/",1)   , isGet=1 ,TypeZapros="GET"  
   .      .   if $l(inData,"POST /")=2  d 
   .      .   .  s zapros=$p(inData,"POST /",2)   
   .      .   .  d %request.InsertCgiEnv("REQUEST_METHOD","POST")
   .      .   .  s zapros=$p(zapros," HTTP/",1)   , isPost=1 ,TypeZapros="POST" 
   .      .  
   .      .   if $l(zapros)=0 s zapros=startPage
   .      .   if $l($p(zapros,"?",1))=0   s zapros=startPage_"/"_zapros
   .      .    ; если GET запрос и присутствует один символ "?" тогда заменяем его на "/?"
   .      .   if $l(zapros,"/?")=1 , $l(zapros,"?")'=1 , $e(zapros, $l( $p(zapros,"?",1)),$l( $p(zapros,"?",1)))'="/"   s zapros=$e(zapros,1,$l( $p(zapros,"?",1)))_"/?"_$e(zapros,$l( $p(zapros,"?",1))+2,$l(zapros))
   .      .
   .      .       if $l(zapros,"csp/broker/cspxmlhttp.js")=2 {
   .      .   	      s FallLoad=1
   .      .        }
   .      .        if $l(zapros,"csp/broker/cspbroker.js")=2 {
   .      .           s %FallLoadRunJob=1
   .      .           s zapros=$replace(zapros,"cspbroker.js", %CacheClassLibCSP_".cls")
   .      .        }
   .      .   
   .      .   Do %request.InsertCgiEnv("QUERY_STRING",zapros)
   .      .   Do %request.InsertCgiEnv("PATH_TRANSLATED",$SYSTEM.CSP.GetFileName("/"_zapros))
   .      .   Do %request.InsertCgiEnv("LOCAL_PATH",$SYSTEM.CSP.GetFileName("/"_zapros))   
   .      .   Do %request.InsertCgiEnv("SERVER_ADDR",$p(ip,":",1))   
   .      .   Do %request.InsertCgiEnv("REMOTE_PORT",$p(ip,":",2))   
   .      .   Do %request.Set("clientip",ip) 
   .      .   Do:$l(zapros)=0 %request.InsertCgiEnv("REQUEST_URI",zapros)   
   .      .   q
   .   
   . 
   .     if $l(inData,":") >1 d
   .     .  s nam=$p(inData,": ",1)
   .     .  s val=$p(inData,": ",2)
   .     .  Do %request.Set(nam,val)    
   .     .  do %request.InsertCgiEnv($ZCVT(nam,"U"),val)
   .     .  if nam="Referer"   s RefererUrl=val ; d %request.InsertCgiEnv("HTTP_REFERER",val)
   .   
   .     ; проверяем наличие трех Enter (это признак окончания заголовка html запроса)
   .       if $l(inData)=0 s countEnter=countEnter+1
   .       if countEnter=2 s isEndTitle=1 
   .       if $l(inData)>0 s countEnter=0
   .       q
   .  }
   .
   .  ; читаем тело POST запроса 
   .  if $l(%request.GetCgiEnv("CONTENT-LENGTH"))'=0 {
   .       s lenPost=%request.GetCgiEnv("CONTENT-LENGTH")
   .       d %request.InsertCgiEnv("CONTENT_LENGTH",lenPost)
   .       ; s BodyPost=##class(%CSP.BinaryStream).%New()
   .       ; s %request.Content=##class(%CSP.BinaryStream).%New()
   .       Set %request.Content=##class(%GlobalCharacterStream).%New()
   .       s indPostTeloZaprosa=0
   .       s isCloseChaildPost=0
   .       ;  while (isCloseChaildPost=0&&lenPost>0) {
   .       while (lenPost>0) {  
   .          If $T=1 s isCloseChaildPost=1
   .          USE $ZUTIL(53):(::"M")  
   .          READ inData:1 ; 0.01  
   .          s lenPost=lenPost-$l(inData)
   .          s indPostTeloZaprosa=indPostTeloZaprosa+1
   .          s ^mtempWebNodeServerPost($JOB,indPostTeloZaprosa)=inData
   .          ; s ^debug("POST",indPostTeloZaprosa)=inData
   .          ; s ^debug("POST",indPostTeloZaprosa,0)=$l(inData)
   .          d %request.Content.Write(inData)
   .          ; s inData= $ZCVT(inData,"I","URL")
   .          ; Разбираем параметры из первой строки тела post запроса
   .          if $l(inData,"=")>1 {
   .          for  {
   .               s nam=$e(inData,1,$l($p(inData,"=",1)))
   .               s inData=$e(inData,$l(nam)+1,$l(inData))
   .               s val=$e(inData,2,$l($p(inData,"&",1)))
   .               s inData=$e(inData,$l(val)+3,$l(inData))
   .               if $l(val)>32760 {
   .                  s obj=##class(%CSP.CharacterStream).%New()
   .                  d obj.Write(val)
   .                  Do %request.Set(nam,obj)
   .               } else {
   .                  Do %request.Set(nam,val)
   .               }
   .               q:$l(inData)=0
   .               q:$l(inData,"=")=1
   .            }
   .          }
   .       }
   .       d %request.Content.Rewind()
   .       ;   for  {
   .       ;     q:%request.Content.AtEnd;
   .       ;     s ^deb=%request.Content.Read(32000)
   .       ;   }
   .       s isCloseChaild=1  
   .       q
   .    }
   .    s isCloseChaild=1 
   .    q
   q:ip=""
 
   if RefererUrl'="" {   d %request.InsertCgiEnv("HTTP_REFERER",RefererUrl)}
   if FallLoad=1{
	   w "HTTP/1.1 200",$c(13,10)
       w "Content-type: application/x-javascript",$c(13,10)
       w "Connection: close"_$c(13,10,13,10)
	   d ..clsConnect() q   
   }
   ;  если обрабатываем  терминальный запрос , тогда выходим
   q:isTerminal=1
   // установить область имен по URL запросу
   d ..SelectNameSpace()
  ; Разбираем Куки в параметры
   d ..ParseСookie()
  ; Разбираем параметры из URL строки 
   d ..ParseParam(zapros)
   ; Инициируем сесию ---
   d ..InitSession()
   s %LastIO=$IO  u %LastIO::("^"_$zn) d ##class(%Device).ReDirectIO($$$YES)   
   ;  Запрашиваемый ресурс не найден
   if ..GerUrlContent(zapros)=1{
   }else{
	  d ..GetNoPage()
   }
   d ##class(%Device).ReDirectIO($$$NO)  u %LastIO
   s ind="" , count=0
   for {
     s ind=$o(^||mteTEST(ind))   
     q:ind=""
     if $l(%response.CharSet)>0 { 
       w $zcvt(^||mteTEST(ind),"o",%response.CharSet)
     }else{
       w ^||mteTEST(ind)
     }
   } 
   k ^||mteTEST  
   d ..clsConnect()
   q
]]></Implementation>
</Method>

<Method name="GerUrlContent">
<ClassMethod>1</ClassMethod>
<FormalSpec>zapros</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
  ;
  ; Запоминаем расширение файла как тип содержимого
    s typ=$p(zapros ,".", $l(zapros,"."))
    s typ=$p(typ,"/?",1)
    s typ=$p(typ,"/",1)
    d %request.InsertCgiEnv("CONTENT_TYP",typ)
       if $l(%request.Get("typ",""))>0  d %request.InsertCgiEnv("CONTENT_TYP",%request.Get("typ","")) 
       ; Имя класса
       s ClassNameCsp=$SYSTEM.CSP.GetClassName("/"_%request.CgiEnvs("QUERY_PAGE"))
       if ..GetClsHtml(ClassNameCsp,0,0)=1     q 1 
       s PathFileLocal=$SYSTEM.CSP.GetFileName("/"_%request.CgiEnvs("QUERY_PAGE"))
       if ..GetRawHtml(PathFileLocal)=1   q 1
       if $d(%CacheStaticPath),$l(%CacheStaticPath)>0{ 
          s PathFileLocal=%CacheStaticPath_"/"_%request.CgiEnvs("QUERY_PAGE")
          s PathFileLocal=$replace(PathFileLocal,"/","\")
          if ..GetRawHtml(PathFileLocal)=1   q 1
       }
       ; s ShortPage=$e(%request.CgiEnvs("QUERY_PAGE"),$l(app),$l(%request.CgiEnvs("QUERY_PAGE")))
       ; // w $SYSTEM.CSP.GetFileName("/csp/user/Untitled1.CSP")
       ; s PathFileLocal=$tr(Path_ShortPage,"/","\")
       ; if ..GetRawHtml(PathFileLocal)=1  d ..clsConnect() q 1
       q 0
]]></Implementation>
</Method>

<Method name="GetClsHtml">
<Description>
Метод запуска класса</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ClassName="",addLib=0,ReadFromBuff=1</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
   if $l(ClassName)'=0 {
      ; if $zcvt($e(ClassName,$l(ClassName)-$l("cls"),$l(ClassName)) ,"L")=".cls" {
      ;    s ClassName=$e(ClassName,1,$l(ClassName)-$l(".cls"))          
      ; }
     if $zObjClassMethod("%CompiledClass","%ExistsId",ClassName)=1 {
       If $System.CLS.IsMthd(ClassName,"OnPreHTTP") {
                ; try{  }CATCH err{  zw err           }
                s %response.Redirect=""
                d $zObjClassMethod(ClassName,"OnPreHTTP")    
                if $l(%response.Redirect)>0{
	                if $e(%response.Redirect,1,1)="/"  s %response.Redirect=$e(%response.Redirect,2,$l(%response.Redirect))
	                d %request.InsertCgiEnv("QUERY_PAGE",$p(%response.Redirect,"/?",1))
                    s %request.URL="/"_%request.CgiEnvs("QUERY_PAGE")
                    d %request.InsertCgiEnv("PATH_TRANSLATED",$tr(%request.GetCgiEnv("LOCAL_PATH")_"/"_$p(%response.Redirect,"/?",1),"/","\"))
	                q ..GerUrlContent(%response.Redirect)   
                }
             }
           
            w "HTTP/1.1 200",$c(13,10)
            w "Content-type: "_%response.ContentType
            if $l(%response.CharSet)>0   w "; charset="_%response.CharSet
            w $c(13,10)
            if $d(%response.Headers("CONTENT-DISPOSITION")){
	            w "Content-Disposition: "_%response.Headers("CONTENT-DISPOSITION")_$c(13,10)
            }
            if $d(%response.Headers("PRAGMA")){
	            w "PRAGMA: "_%response.Headers("PRAGMA")_$c(13,10)
            }
            if $l(%response.ContentLength)>0 {
               w "Content-Length: "_%response.ContentLength_$c(13,10)
            }
             w "Connection: close"_$c(13,10,13,10)
             try{ 
                if %response.ContentType["html" {
                  ;   <script  type='text/javascript' src='/csp/broker/cspxmlhttp.js'></script>
                  ;   <script  type='text/javascript' src='/csp/broker/cspbroker.js'></script>
                  ;  if $zObjClassMethod("%CompiledClass","%ExistsId",%CacheClassLibCSP)=1 {
                  ;    &html<<script language="JavaScript" type="text/javascript" src="#($SYSTEM.CSP.GetDefaultApp($ZU(5)))#/#($zcvt(%CacheClassLibCSP,"O","URL"))#.cls"></script> >
                  ;  }
                }
                d $zObjClassMethod(ClassName,"OnPage")   
             }CATCH err{ zw err }
             q 1
          }
    }   
    q 0
]]></Implementation>
</Method>

<Method name="GetRawHtml">
<ClassMethod>1</ClassMethod>
<FormalSpec>rawFileName</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
      if ##class(%File).Exists(rawFileName)'=1 q 0
      ; старый вариант получения расширения
      s rashirenie=$ZCVT($p(rawFileName ,".", $l(rawFileName,".")),"L")   
      s typ=..ContentType("."_rashirenie) 
      w "HTTP/1.1 200",$c(13,10)
      w "Content-type: "_typ
      if $l(%response.CharSet)>0   w "; charset="_%response.CharSet
      w $c(13,10)
      w "Connection: close"_$c(13,10,13,10)
      s isBin=1
      s:typ="application/x-javascript" isBin=0
      s:typ="text/plain" isBin=0
      s:typ="text/html" isBin=0
      s:typ="text/css" isBin=0
      if (isBin=0){ 
         d ..parseHtmlPage(rawFileName,1)
         q 1
      }
      S stream=##class(%FileBinaryStream).%New()
      S stream.Filename=rawFileName 
      While 'stream.AtEnd  {
	      s html=stream.Read(32000)
          w html
      }
      d stream.%Close()
      s stream=""
      s file =""
      q 1
]]></Implementation>
</Method>

<Method name="parseHtmlPage">
<Description>
Парсим HTML текст заменяя системные тэги !!!</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>rawFileName,isHtmlFile=1</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
     ; if isHtmlFile=1,$zObjClassMethod("%CompiledClass","%ExistsId",%CacheClassLibCSP)=1 {
     ;    s app=$SYSTEM.CSP.GetAppName(%request.CgiEnvs("QUERY_PAGE")_"/")
     ;    &html<<script language="JavaScript" type="text/javascript" src="#(app)#/#($zcvt(%CacheClassLibCSP,"O","URL"))#.cls"></script> >
     ; }
      S stream=##class(%FileBinaryStream).%New()
      S stream.Filename=rawFileName 
      While 'stream.AtEnd  {
	      s html=stream.Read(32000)
	      s html=..ExecFragVar(html,"<server>","</server>","")
	      s html=..ExecFragVar(html,"#(",")#"," w """",")
	      s html=..ReplaceFragVar(html,"#server(",")#","cspHttpServerMethod")
	      s html=..ReplaceFragVar(html,"#call(",")#","cspCallHttpServerMethod")
	      w html
	  }
      d stream.%Close()
      s stream=""
      q ""
]]></Implementation>
</Method>

<Method name="ExecFragVar">
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End="",AddCode=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
      q:SrcCode="" ""   q:Beg="" SrcCode     q:End="" SrcCode
      if $l(SrcCode,Beg)=1   q SrcCode
      s ResultText=""
      k ^||tmpLocal
      s %LastIO=$IO  u %LastIO::("^"_$zn) d ##class(%Device).ReDirectIO($$$YES)   
      s ResultText=""
      s html=SrcCode
      for {
          s HtmlFrag=$e(SrcCode,1,$l($p(SrcCode,Beg,1)) ) 
          w HtmlFrag
          s SrcCode=$e(SrcCode,$l(HtmlFrag)+1+$l(Beg),$l(SrcCode) ) 
          s CodeFrag=$e(SrcCode,1, $l($p(SrcCode,End,1)) ) 
          s SrcCode=$e(SrcCode,$l(CodeFrag)+1+$l(End),$l(SrcCode) ) 
          if $l(CodeFrag)>0{
             TRY {  x AddCode_"  "_$tr(CodeFrag,$c(13,10),"   ")   } CATCH ErrorHandle {  w !,"SRC:"_CodeFrag,!  zw ErrorHandle  }
          }
        q:SrcCode=""
      }
      d ##class(%Device).ReDirectIO($$$NO)  u %LastIO
      s ind="" , count=0
      for {
	     s ind=$o(^||tmpLocal(ind))   
	     q:ind=""
	     ; s count=count+1
	     ; s:count'=1 ResultText=ResultText_$c(13,10)
	     s ResultText=ResultText_^||tmpLocal(ind)
	  } 
      k ^||tmpLocal
      q ResultText
]]></Implementation>
</Method>

<Method name="ReplaceFragVar">
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End="",AddCode=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
      q:SrcCode="" ""   q:Beg="" SrcCode     q:End="" SrcCode
      if $l(SrcCode,Beg)=1   q SrcCode
      s ResultText=""
      k ^||tmpLocal
      s %LastIO=$IO  u %LastIO::("^"_$zn) d ##class(%Device).ReDirectIO($$$YES)   
      s ResultText=""
      s html=SrcCode
      for {
          s HtmlFrag=$e(SrcCode,1,$l($p(SrcCode,Beg,1)) ) 
          w HtmlFrag
          s SrcCode=$e(SrcCode,$l(HtmlFrag)+1+$l(Beg),$l(SrcCode) ) 
          s CodeFrag=$e(SrcCode,1, $l($p(SrcCode,End,1)) ) 
          s SrcCode=$e(SrcCode,$l(CodeFrag)+1+$l(End),$l(SrcCode) ) 
          if $l(CodeFrag)>0{
	         w ..ParseServerFun(CodeFrag,AddCode) 
          }
        q:SrcCode=""
      }
      d ##class(%Device).ReDirectIO($$$NO)  u %LastIO
      s ind="" , count=0
      for {
	     s ind=$o(^||tmpLocal(ind))   
	     q:ind=""
	     ; s count=count+1
	     ; s:count'=1 ResultText=ResultText_$c(13,10)
	     s ResultText=ResultText_^||tmpLocal(ind)
	  } 
      k ^||tmpLocal
      q ResultText
]]></Implementation>
</Method>

<Method name="ParseServerFun">
<Description>
Заменить содержимое #server( )# или #call( )#  на JS  функцию</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>CodeFrag="",JsFunName="cspHttpServerMethod"</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	S funName=$p(CodeFrag,"(",1)
    s args=$e(CodeFrag,$l(funName)+2,$l(CodeFrag)-1)
    if $d(%session){
      s funName=$$$cspEncode(%session.Key,$lb(funName))
    }             
    if $l(args)>0 {
	   w JsFunName_"('"_funName_"',"_args_")"
    }else{
	   w JsFunName_"('"_funName_"')"
    }
	q ""
]]></Implementation>
</Method>

<Method name="GetNoPage">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
        USE $ZUTIL(53):(::"M") w "HTTP/1.1 200",$c(13,10)
        w "Content-type: text/plain"
        if $l(%response.CharSet)>0   w "; charset="_%response.CharSet
        w $c(13,10)
        w "Connection: close"_$c(13,10,13,10)
        w !," ================================= " 
        w !," =      Ресурс не найден         = "  
        w !," ================================= "
        w !
        zw %request
        w !,!
        zw %response
        w !,!
        zw %session
        w !,!
        w !,%response.CharSet
        q
]]></Implementation>
</Method>

<Method name="redirects">
<Description>
Публичные точки входа, использующиеся при перенаправлении ввода/вывода</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Private>1</Private>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[
wstr(s) s ^||mteTEST($i(^||mteTEST))=s        q
wchr(c) s ^||mteTEST($i(^||mteTEST))=$c(c)    q
wnl s ^||mteTEST($i(^||mteTEST))=$$$NL        q
wff s ^||mteTEST($i(^||mteTEST))=$c(12)       q
wtab(s) s ^||mteTEST($i(^||mteTEST))=s        q
]]></Implementation>
</Method>

<Method name="InitSession">
<Description>
инициализации сесии</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
   s ip=%request.GetCgiEnv("CLIENT_IP")
   s zapros=%request.GetCgiEnv("QUERY_PAGE")
   s ipKey="%ZWebNode.Server@"_$p(ip,":",1)
   ; Шифрование ключа (если конечно есть желание)
   ; s pass=ipKey,HashPwd="" 
   ; F ix489=1:1:7 { S HashPwd=HashPwd_$ZCRC(pass,ix489)}  
   ; s ipKey=HashPwd
  
   if ##class(%ZWebNode.Session).%ExistsId(ipKey)=1{
       s %session=##class(%ZWebNode.Session).%OpenId(ipKey)
   } else {
       s %session=##class(%ZWebNode.Session).%New(ipKey)
   }
   s %session.ProcessId="|"_$zu(5)_"|"_zapros ;  "%ZWebNode.Server: job"_$job_" "
   S %session.AppTimeout = %request.GetCgiEnv("TIME_OUT")
   ; d %session.Login("_SYSTEM")
    
   S %session.BrowserPlatform="Windows" 
   S %session.BrowserName = "Safari" 
   S %session.Namespace=%request.GetCgiEnv("NAMESPACE")
   S %session.UserAgent=%request.GetCgiEnv("HTTP_USER_AGENT","")
   d %session.%Save()
   d %session.Unlock()
   d %session.%Save()
   q
]]></Implementation>
</Method>

<Method name="SelectNameSpace">
<Description>
Метод для установки области имен по URL запросу</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
   ; Переключаем область имен по Вэб приложению
   d $zu(5,"%SYS") 
   s app=$SYSTEM.CSP.GetAppName(%request.CgiEnvs("QUERY_PAGE"))
   s app="/"_$e(app,1,$l(app)-1)
   s SqlStrTmp=" select TOP 1 NameLowerCase,NameSpace,Path,NameLowerCase from Security.Applications where id=?"
   s SQLobj=##class(%SQL.Statement).%New()
   d SQLobj.%Prepare(SqlStrTmp)
   s DataSet=SQLobj.%Execute(app)
   s CountApp=0
   s Path=""
   while DataSet.%Next() { s CountApp=CountApp+1 s Path=DataSet.Path d $zu(5,DataSet.NameSpace) } 
   d %request.InsertCgiEnv("NAMESPACE",$zu(5)) ; Запоминаем имя области имен
   k SQLobj  
   q $ZU(5)
]]></Implementation>
</Method>

<Method name="ParseСookie">
<Description>

 разбираем Сookie</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
   q:$l(%request.GetCgiEnv("COOKIE"))=0
   s arg=%request.GetCgiEnv("COOKIE")
   do %request.InsertCookie("COOKIE",arg)
   for ind=1:1:$l(arg,"; ")  d
   .    s tmp= $p(arg,"; ",1)
   .    if $l(tmp,"=")=2  d
   .    .  s ParamName=$p(tmp,"=",1)
   .    .  s zndch=$p(tmp,"=",2)
   .    e  d
   .    .   s ParamName=$p(tmp,"=",1)
   .    .   s zndch=""
   .    do %request.InsertCgiEnv(ParamName,zndch) 
   .    ; do %request.InsertCookie(ParamName,zndch)
   .    ; s ^deb($job,ParamName)=zndch
   s ParamName=""
]]></Implementation>
</Method>

<Method name="ParseParam">
<Description>

разбираем Параметры в строке URL запроса </Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>zapros</FormalSpec>
<Implementation><![CDATA[
   ;
   ;  разбираем Параметры в строке запроса
   if $l(zapros)'=0 d
   .     s arg=zapros
   .     d %request.InsertCgiEnv("QUERY_PAGE",$p(arg,"/?",1))
   .     s %request.URL="/"_%request.CgiEnvs("QUERY_PAGE")
   .     d %request.InsertCgiEnv("PATH_TRANSLATED",$tr(%request.GetCgiEnv("LOCAL_PATH")_"/"_$p(arg,"/?",1),"/","\"))
   .     if $l(arg,"?")>1  d
   .     .  if $l($p(arg,"?",1))=0  d
   .     .  .  s arg="/"_arg
   .     s arg=$p(arg,"/?",2) 
   .     if $l(arg)>0  d
   .     .  s indParam=0
   .     .  for   q:arg=""   d
   .     .  .    s tmp= $p(arg,"&",1)
   .     .  .    if $l(tmp,"=")=2  d
   .     .  .    .  s ParamName=$p(tmp,"=",1)
   .     .  .    .  s zndch=$p(tmp,"=",2)
   .     .  .    e  d
   .     .  .    .  ; s indParam=indParam+1
   .     .  .    .  ; s ParamName="param"_indParam
   .     .  .    .  ; s zndch=$p(tmp,"=",1)
   .     .  .    .  s ParamName=$p(tmp,"=",1)
   .     .  .    .  s zndch=""
   .     .  .    s arg=$p(arg ,tmp,2)
   .     .  .    if $l(arg)>1 s arg=$e( arg,2,$l(arg))
   .     .  .    q:ParamName=""
   .     .  .    ; s ParamName = $ZCVT(ParamName,"L")
   .     .  .    ; d %request.Set(ParamName,zndch)
   .     .  .    Do %request.Set(ParamName,zndch) 
   .     .  .    ; d %request.InsertCgiEnv(ParamName,zndch)
   .     .  .    s ParamName=""
   q
]]></Implementation>
</Method>

<Method name="KillFeature">
<Description>
Удаление механизме, который сливает информацию  Intersystems</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
      w !,"kill DeepSee.FeatureGetter",!
	  d $system.OBJ.Delete("DeepSee.FeatureGetter") 
	  w !,"kill FT.Atelier.v1",!
	  d $system.OBJ.Delete("FT.Atelier.v1") 
	  w !,"kill FT.OSTypeGetter",!
	  d $system.OBJ.Delete("FT.OSTypeGetter") 
	  w !,"kill FT.MirrorGetter",!
	  d $system.OBJ.Delete("FT.MirrorGetter") 
	  w !,"kill FT.LicenseGetter",!
	  d $system.OBJ.Delete("FT.LicenseGetter") 
	  w !,"kill FT.IdentifyingInfoGetter",!
	  d $system.OBJ.Delete("FT.IdentifyingInfoGetter") 
	  w !,"kill FT.EncDBGetter",!
	  d $system.OBJ.Delete("FT.EncDBGetter") 
	  w !,"kill FT.OSTypeGetter",!
	  d $system.OBJ.Delete("FT.OSTypeGetter") 
	  w !,"kill FT.EMSGetter",!
	  d $system.OBJ.Delete("FT.EMSGetter") 
	  d $system.OBJ.Delete("FT.Collector") 
	  d $system.OBJ.Delete("%SYS.Task.FeatureTracker") 
	  w !,"kill ^ISC.FTSnapshot",!
	  k ^ISC.FTSnapshot
]]></Implementation>
</Method>

<Method name="ContentType">
<Description>
Определить MIME тип по имени файла</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>FileName</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
     s rashirenie=$p(FileName ,".", $l(FileName,"."))
     s rashirenie= $ZCVT(rashirenie,"l")
     q:rashirenie="css" "text/css"
     q:rashirenie="js" "application/x-javascript"
     q:rashirenie="xml" "text/xml"
     q:rashirenie="dtd" "text/xml"
   ; -------------------------------------
     q:rashirenie="txt" "text/plain"
     q:rashirenie="inf" "text/plain"
     q:rashirenie="nfo" "text/plain"
     q:rashirenie="php" "text/plain"
   ; -------------------------------------
     q:rashirenie="html" "text/html"
     q:rashirenie="csp" "text/html"
     q:rashirenie="htm" "text/html"
     q:rashirenie="shtml" "text/html"
     q:rashirenie="shtm" "text/html"
     q:rashirenie="stm" "text/html"
     q:rashirenie="sht" "text/html"
     q:rashirenie="sht" "text/html"
     q:rashirenie="csp" "text/html"
     q:rashirenie="mac" "text/html"
     q:rashirenie="cls" "text/html"
     q:rashirenie="jpg" "image/jpeg"

     ; q:rashirenie="cos" "text/html" ; каше обжект скрипт
   ; -------------------------------------
     q:rashirenie="mpeg" "video/mpeg"
     q:rashirenie="mpg" "video/mpeg"
     q:rashirenie="mpe" "video/mpeg"
   ; -------------------------------------
     q:rashirenie="ai" "application/postscript"
     q:rashirenie="zip" "application/zip"
                  q:rashirenie="zsh" "text/x-script.zsh"
                  q:rashirenie="x-png" "image/png"
                  q:rashirenie="xls" "application/x-excel"
                  q:rashirenie="xlm" "application/excel"
                  q:rashirenie="wav" "audio/x-wav"
                  q:rashirenie="txt" "text/plain"
                  q:rashirenie="tiff" "image/tiff"
                  q:rashirenie="tif" "image/x-tiff"
                  q:rashirenie="text" "text/plain"
                  q:rashirenie="swf" "application/x-shockwave-flash"
                  q:rashirenie="sprite" "application/x-sprite"
                  q:rashirenie="smil" "application/smil"
                  q:rashirenie="sh" "text/x-script.sh"
                  q:rashirenie="rtx" "text/richtext"
                  q:rashirenie="rtf" "text/richtext"
                  q:rashirenie="pyc" "application/x-bytecode.python"
                  q:rashirenie="py" "text/x-script.phyton"
                  q:rashirenie="png" "image/png"
                  q:rashirenie="pic" "image/pict"
                  q:rashirenie="mp3" "video/mpeg"
                  q:rashirenie="mp2" "video/mpeg"
                  q:rashirenie="movie" "video/x-sgi-movie"
                  q:rashirenie="mov" "video/quicktime"
                  q:rashirenie="mjpg" "video/x-motion-jpeg"
                  q:rashirenie="mime" "www/mime"
                  q:rashirenie="mif" "application/x-mif"
                  q:rashirenie="midi" "audio/midi"
                  q:rashirenie="js" "application/javascript"
                  q:rashirenie="jpeg" "image/jpeg"
                  q:rashirenie="jps" "image/x-jps"
                  q:rashirenie="jam" "audio/x-jam"
                  q:rashirenie="jav" "text/plain"
                  q:rashirenie="java" "text/x-java-source"
                  q:rashirenie="htm" "text/html"
                  q:rashirenie="html" "text/html"
                  q:rashirenie="gzip" "application/x-gzip"
                  q:rashirenie="gif" "image/gif"
                  q:rashirenie="gl" "video/gl"
                  q:rashirenie="csh" "text/x-script.csh"
                  q:rashirenie="css" "text/css"
                  q:rashirenie="bsh" "application/x-bsh"
                  q:rashirenie="bz" "application/x-bzip"
                  q:rashirenie="bz2" "application/x-bzip2"
                  q:rashirenie="c" "text/plain"
                  q:rashirenie="c++" "text/plain"
                  q:rashirenie="cat" "application/vnd.ms-pki.seccat"
                  q:rashirenie="cc" "text/plain"
                  q:rashirenie="htmls" "text/html"
                  q:rashirenie="bmp" "image/bmp"
                  q:rashirenie="bm" "image/bmp"
                  q:rashirenie="avi" "video/avi"
                  q:rashirenie="avs" "video/avs-video"
                  q:rashirenie="au" "audio/basic"
                  q:rashirenie="arj" "application/arj"
                  q:rashirenie="art" "image/x-jg"
                  q:rashirenie="asf" "video/x-ms-asf"
                  q:rashirenie="asm" "text/x-asm"
                  q:rashirenie="asp" "text/asp"
     q "application/octet-stream"
]]></Implementation>
</Method>

<Method name="clsConnect">
<Description>
Закрытие соединения , очистка переменных (глобалов)</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
   ; Close dev  
   ; w *-1,!
   w *-2,$c(13,10)
   s isCloseChaild=0   
   k ^mtempWebNodeServerPost($JOB)
   TRY { d %session.%Save()   } CATCH {}
   q
]]></Implementation>
</Method>
</Class>


<Class name="%ZWebNode.Session">
<Super>%Persistent</Super>
<TimeCreated>65250,56030.76801</TimeCreated>

<Property name="SessionId">
<Description><![CDATA[
The session id value for this session.
<P>The session id is a system-assigned unique value that 
identifies this session.]]></Description>
<Type>%String</Type>
</Property>

<Property name="Key">
<Description>
Stores the encryption key used to validate and secure the communication with the browser.
This key never leaves Cache.</Description>
<Type>%String</Type>
</Property>

<Property name="CreateTime">
<Description>
The data/time the session was created in UTC</Description>
<Type>%TimeStamp</Type>
</Property>

<Property name="ProcessId">
<Type>%String</Type>
</Property>

<Property name="AppTimeout">
<Type>%Integer</Type>
</Property>

<Property name="BrowserPlatform">
<Type>%String</Type>
</Property>

<Property name="BrowserName">
<Type>%String</Type>
</Property>

<Property name="Namespace">
<Type>%String</Type>
</Property>

<Property name="UserAgent">
<Type>%String</Type>
</Property>

<Method name="%OnNew">
<Description>
Initialize CSP session object.</Description>
<Internal>1</Internal>
<FormalSpec>initvalue,lock=1</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If $get(initvalue)="" Quit 0
	Set i%SessionId=initvalue Do ..%IdSet(initvalue)
	// Set i%Key=$select($get(^%SYS("CSP","NoEncrypt")):"notencrypted",1:$system.Encryption.GenCryptRand(32))
	Set i%Key=$system.Encryption.GenCryptRand(32)
	Set i%CreateTime=$zdatetime($ztimestamp,3)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnClose">
<Description>
Cleanup CSP session object.</Description>
<Internal>1</Internal>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
   // удалиьть запись
   Quit $$$OK
]]></Implementation>
</Method>

<Method name="Unlock">
<FormalSpec>save:%Boolean=1</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim sc As %Status
	Set sc=$$$OK
	Lock -^ZWebServerNodeSessionD(i%SessionId)
	Set i%%Concurrency=0
	Do $system.CLS.SetModified(0)
	Quit sc
]]></Implementation>
</Method>

<Method name="Lock">
<FormalSpec>timeout:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim data
	If i%%Concurrency Quit $$$OK
	Lock +^ZWebServerNodeSessionD(i%SessionId):+$get(timeout)
	Set i%%Concurrency=1
	Quit $$$OK
]]></Implementation>
</Method>

<Property name="Data">
<Description><![CDATA[
The place users can preserve any data within a session. You can set values into this
multidimensional property using:
<example>
Set %session.Data(1,2,"string")="value"
Write %session.Data("Key1","Key2"),!
Merge %session.Data(5)=array
</example>
This is faster than using the <method>Get</method> and <method>Set</method> ]]></Description>
<Type>%String</Type>
<MultiDimensional>1</MultiDimensional>
</Property>

<Method name="Get">
<Description><![CDATA[
Get the value of the user data at <var>index</var>. This is equivalent to:
<example>
Write $Get(%session.Data(index),default)
</example>
It is faster to access the property directly rather than use the <method>Get</method>
and <method>Set</method> methods. These are kept for backward compatibility.]]></Description>
<Final>1</Final>
<CodeMode>expression</CodeMode>
<FormalSpec>index:%String,default:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[$get(i%Data(index),default)
]]></Implementation>
</Method>

<Method name="Set">
<Description><![CDATA[
Set the value of the user data at <var>index</var> to <var>value</var>. This is
equivalent to:
<example>
Set %session.Data(index)=value
</example>
It is faster to access the property directly rather than use the <method>Get</method>
and <method>Set</method> methods. These are kept for backward compatibility.]]></Description>
<Final>1</Final>
<FormalSpec>index:%String,value:%String</FormalSpec>
<Implementation><![CDATA[	Set i%Data(index)=value Quit
]]></Implementation>
</Method>

<Method name="Next">
<Description><![CDATA[
Return the next <var>index</var> in the user data <property>Data</property>. This
has been deprecated in favour of the faster syntax:
<example>
Write $Order(%session.Data(index))
</example>]]></Description>
<Final>1</Final>
<CodeMode>expression</CodeMode>
<FormalSpec>index:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[$order(i%Data(index))
]]></Implementation>
</Method>

<Method name="Kill">
<Description><![CDATA[
Remove the <var>index</var> from the user data <property>Data</property>. This
has been deprecated in favour of the faster syntax:
<example>
Kill %session.Data(index)
; Or if index=""
Kill %session.Data
</example>]]></Description>
<Final>1</Final>
<FormalSpec>index:%String=""</FormalSpec>
<Implementation><![CDATA[
	If index'="" { Kill i%Data(index) } Else { Kill i%Data }
	Quit
]]></Implementation>
</Method>

<Method name="IsDefined">
<Description><![CDATA[
Tests if a name-value pair <VAR>name</VAR> is defined in the user data.
This has been deprecated in favour of the faster syntax:
<example>
Write $Data(%session.Data(index))
</example>]]></Description>
<Final>1</Final>
<CodeMode>expression</CodeMode>
<FormalSpec>index:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[$data(i%Data(index))
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^ZWebServerNodeSessionD</DataLocation>
<DefaultData>SessionDefaultData</DefaultData>
<IdLocation>^ZWebServerNodeSessionD</IdLocation>
<IndexLocation>^ZWebServerNodeSessionI</IndexLocation>
<StreamLocation>^ZWebServerNodeSessionS</StreamLocation>
<Data name="SessionDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>SessionId</Value>
</Value>
<Value name="3">
<Value>Key</Value>
</Value>
<Value name="4">
<Value>CreateTime</Value>
</Value>
<Value name="5">
<Value>ProcessId</Value>
</Value>
<Value name="6">
<Value>AppTimeout</Value>
</Value>
<Value name="7">
<Value>BrowserPlatform</Value>
</Value>
<Value name="8">
<Value>BrowserName</Value>
</Value>
<Value name="9">
<Value>Namespace</Value>
</Value>
<Value name="10">
<Value>UserAgent</Value>
</Value>
</Data>
</Storage>
</Class>




<Class name="%ZWebNode.project">
<Super>%RegisteredObject</Super>
<TimeCreated>65259,37741.811087</TimeCreated>

<Method name="ExportProject">
<Description>
 d ##class(%ZWebNode.project).ExportProject("D:\%ZWebNode.xml")
 d ##class(%ZWebNode.project).ExportProject()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>FileName=""</FormalSpec>
<Implementation><![CDATA[
   s oldNS=$zu(5)
   d $zu(5,"%SYS")		
   if FileName =""{
	  s FileName=$$GetFilename^%apiCSP("/csp/sys/bower_components/")_"/%ZWebNode.xml"
   }
   k all                                                                                              
   s ClassName="" 
   f   s ClassName=$o(^oddDEF(ClassName))   q:ClassName=""    d  
   .   q:$l(ClassName,"%ZWebNode.")=1     
   .   s all(ClassName_".cls")=""     
   ; k ^rMAP(classname)
   ; k ^rOBJ(classname)
    /// получаем список CSP файлов
    s gl=..GetCSPFiles()
    s file=""
    for {
  	   s file=$o(@gl@(file))
  	   q:file=""
  	   s url=$lg(@gl@(file),1)
  	   s urlTxt=$zcvt(url,"L")
  	   continue:$l(url,"%ZWebNode.xml")=2
  	   continue:$l(urlTxt,".git")=2
  	   s all(url)=""
    }
   d $system.OBJ.Export(.all,FileName,,,"CP1251")
   d $zu(5,oldNS)	
   q
]]></Implementation>
</Method>

<Method name="GetCSPFiles">
<Description>
 s gl=##class(Demo.ExportAllClass).GetCSPFiles()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>gl="mtempGetCSPFiles("_$JOB_")"</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[
 #define CSPAppDirDoesNotExist 5956
 s num=0
 s url="/csp/sys/bower_components" 
 i $e(url,$L(url))="/"!($e(url,$L(url))="\") s url=$e(url,1,$l(url)-1)
 s recurse=1
 s dir=##class(%File).NormalizeDirectory($$GetFilename^%apiCSP(url))
 d ..GetDirCspExport(gl,dir)
 q gl
]]></Implementation>
</Method>

<Method name="GetDirCspExport">
<Description>
Метод создает глобал сосписком файлов в каталоге ( и подкаталогах)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>gl="mtempGetCSPApplications("_$JOB_")",Dir=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 s filter=""
 s rs = ##class(%Library.ResultSet).%New("%Library.File:FileSet")
 s sc = rs.Execute(Dir,filter,"Name")
 k files
 while rs.Next()
 {
     s name = rs.Get("Name")
     if (rs.Get("Type") = "D")
     {
        d ..GetDirCspExport(gl,name)
     }else{
        if (($l(name,".git")=1)){
          s @gl@(name)=$SYSTEM.CSP.FilenameToUrls(name)
        }
     }
  }
]]></Implementation>
</Method>
</Class>
</Export>
